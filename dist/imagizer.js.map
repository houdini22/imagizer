{"version":3,"file":"imagizer.js","mappings":"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","sources":["webpack://imagizer/external \"canvas\"","webpack://imagizer/external \"fs\"","webpack://imagizer/webpack/bootstrap","webpack://imagizer/webpack/runtime/define property getters","webpack://imagizer/webpack/runtime/hasOwnProperty shorthand","webpack://imagizer/webpack/runtime/make namespace object","webpack://imagizer/./src/helpers/common.tsx","webpack://imagizer/./src/classes/CanvasWrapper.tsx","webpack://imagizer/./src/classes/effects/Base.tsx","webpack://imagizer/./src/classes/effects/BasePoint.tsx","webpack://imagizer/./src/classes/effects/point/GrayScale.tsx","webpack://imagizer/./src/classes/effects/point/Sepia.tsx","webpack://imagizer/./src/classes/effects/point/Contrast.tsx","webpack://imagizer/./src/classes/effects/point/Brightness.tsx","webpack://imagizer/./src/classes/effects/point/Diffusion.tsx","webpack://imagizer/./src/classes/effects/point/Dither.tsx","webpack://imagizer/./src/classes/effects/point/Exposure.tsx","webpack://imagizer/./src/classes/effects/point/Gain.tsx","webpack://imagizer/./src/classes/effects/point/Gamma.tsx","webpack://imagizer/./src/helpers/color.tsx","webpack://imagizer/./src/classes/effects/point/HSBAdjust.tsx","webpack://imagizer/./src/classes/effects/point/InvertAlpha.tsx","webpack://imagizer/./src/classes/effects/point/Invert.tsx","webpack://imagizer/./src/classes/effects/point/Levels.tsx","webpack://imagizer/./src/classes/effects/point/Rescale.tsx","webpack://imagizer/./src/classes/effects/point/Solarize.tsx","webpack://imagizer/./src/classes/effects/point/Threshold.tsx","webpack://imagizer/./src/classes/effects/point/Tritone.tsx","webpack://imagizer/./src/classes/effects/point/Dissolve.tsx","webpack://imagizer/./src/classes/effects/point/Edge.tsx","webpack://imagizer/./src/classes/effects/point/ChannelMix.tsx","webpack://imagizer/./src/classes/effects/point/AutoContrast.tsx","webpack://imagizer/./src/classes/effects/BaseTransform.tsx","webpack://imagizer/./src/classes/effects/transform/Diffuse.tsx","webpack://imagizer/./src/classes/effects/transform/Kaleidoscope.tsx","webpack://imagizer/./src/helpers/noise.tsx","webpack://imagizer/./src/classes/effects/transform/Marble.tsx","webpack://imagizer/./src/classes/effects/transform/Pinch.tsx","webpack://imagizer/./src/classes/effects/transform/Ripple.tsx","webpack://imagizer/./src/classes/effects/transform/Shear.tsx","webpack://imagizer/./src/classes/effects/transform/Sphere.tsx","webpack://imagizer/./src/classes/effects/transform/Swim.tsx","webpack://imagizer/./src/classes/effects/transform/Twirl.tsx","webpack://imagizer/./src/classes/effects/transform/Water.tsx","webpack://imagizer/./src/classes/effects/transform/Circle.tsx","webpack://imagizer/./src/classes/effects/transform/Rotate.tsx","webpack://imagizer/./src/classes/effects/transform/Offset.tsx","webpack://imagizer/./src/classes/effects/transform/Polar.tsx","webpack://imagizer/./src/classes/effects/transform/Perspective.tsx","webpack://imagizer/./src/classes/effects/BaseCustom.tsx","webpack://imagizer/./src/classes/effects/custom/AutoWhiteBalance.tsx","webpack://imagizer/./src/classes/effects/custom/FillColor.tsx","webpack://imagizer/./src/classes/effects/custom/Flip.tsx","webpack://imagizer/./src/classes/effects/custom/Block.tsx","webpack://imagizer/./src/classes/effects/custom/Border.tsx","webpack://imagizer/./src/classes/effects/custom/Emboss.tsx","webpack://imagizer/./src/classes/effects/custom/ComponentStretching.tsx","webpack://imagizer/./src/classes/EffectsRepository.tsx","webpack://imagizer/./src/classes/LayerObject.tsx","webpack://imagizer/./src/classes/Layer.tsx","webpack://imagizer/./src/classes/Project.tsx","webpack://imagizer/./src/helpers/resize.tsx","webpack://imagizer/./src/classes/Image.tsx","webpack://imagizer/./src/classes/BaseOnLayer.tsx"],"sourcesContent":["module.exports = require(\"canvas\");","module.exports = require(\"fs\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","let blendingModes = {\n  lighten: function (bottomPixel, topPixel) {\n    return topPixel > bottomPixel ? topPixel : bottomPixel\n  },\n  darken: function (bottomPixel, topPixel) {\n    return topPixel > bottomPixel ? bottomPixel : topPixel\n  },\n  multiply: function (bottomPixel, topPixel) {\n    return bottomPixel * topPixel / 255\n  },\n  average: function (bottomPixel, topPixel) {\n    return bottomPixel + topPixel / 2\n  },\n  add: function (bottomPixel, topPixel) {\n    return Math.min(255, bottomPixel + topPixel)\n  },\n  subtract: function (bottomPixel, topPixel) {\n    return bottomPixel + topPixel < 255 ? 0 : bottomPixel + topPixel - 255\n  },\n  difference: function (bottomPixel, topPixel) {\n    return Math.abs(bottomPixel - topPixel)\n  },\n  negation: function (bottomPixel, topPixel) {\n    return 255 - Math.abs(255 - bottomPixel - topPixel)\n  },\n  screen: function (bottomPixel, topPixel) {\n    return 255 - (((255 - bottomPixel) * (255 - topPixel)) >> 8)\n  },\n  exclusion: function (bottomPixel, topPixel) {\n    return bottomPixel + topPixel - 2 * bottomPixel * topPixel / 255\n  },\n  overlay: function (bottomPixel, topPixel) {\n    return topPixel < 128 ? (2 * bottomPixel * topPixel / 255) : (255 - 2 * (255 - bottomPixel) * (255 - topPixel) / 255)\n  },\n  softLight: function (bottomPixel, topPixel) {\n    return topPixel < 128 ? (2 * ((bottomPixel >> 1) + 64)) * (topPixel / 255) : 255 - (2 * (255 - ((bottomPixel >> 1) + 64)) * (255 - topPixel) / 255)\n  },\n  hardLight: function (bottomPixel, topPixel) {\n    return blendingModes.softLight(topPixel, bottomPixel)\n  },\n  colorDodge: function (bottomPixel, topPixel) {\n    return topPixel === 255 ? topPixel : Math.min(255, ((bottomPixel << 8) / (255 - topPixel)))\n  },\n  colorBurn: function (bottomPixel, topPixel) {\n    return topPixel === 0 ? topPixel : Math.max(0, (255 - ((255 - bottomPixel) << 8) / topPixel))\n  },\n  linearDodge: function (bottomPixel, topPixel) {\n    return blendingModes.add(bottomPixel, topPixel)\n  },\n  linearBurn: function (bottomPixel, topPixel) {\n    return blendingModes.subtract(bottomPixel, topPixel)\n  },\n  linearLight: function (bottomPixel, topPixel) {\n    return topPixel < 128 ? blendingModes.linearBurn(bottomPixel, 2 * topPixel) : blendingModes.linearDodge(bottomPixel, (2 * (topPixel - 128)))\n  },\n  vividLight: function (bottomPixel, topPixel) {\n    return topPixel < 128 ? blendingModes.colorBurn(bottomPixel, 2 * topPixel) : blendingModes.colorDodge(bottomPixel, (2 * (topPixel - 128)))\n  },\n  pinLight: function (bottomPixel, topPixel) {\n    return topPixel < 128 ? blendingModes.darken(bottomPixel, 2 * topPixel) : blendingModes.lighten(bottomPixel, (2 * (topPixel - 128)))\n  },\n  hardMix: function (bottomPixel, topPixel) {\n    return blendingModes.vividLight(bottomPixel, topPixel) < 128 ? 0 : 255\n  },\n  reflect: function (bottomPixel, topPixel) {\n    return topPixel === 255 ? topPixel : Math.min(255, (bottomPixel * bottomPixel / (255 - topPixel)))\n  },\n  glow: function (bottomPixel, topPixel) {\n    return blendingModes.reflect(topPixel, bottomPixel)\n  },\n  phoenix: function (bottomPixel, topPixel) {\n    return Math.min(bottomPixel, topPixel) - Math.max(bottomPixel, topPixel) + 255\n  }\n}\n\nexport function mergeImageData (bottom, top, pixelCallback) {\n  let x, y,\n    xx, yy,\n    firstOldPixelIndex, firstNewPixelIndex,\n    pixelResult\n\n  for (y = top.y, yy = 0; y < bottom.height && yy < top.height; y += 1, yy += 1) {\n    for (x = top.x, xx = 0; x < bottom.width && xx < top.width; x += 1, xx += 1) {\n      if (xx < top.width && yy < top.height) // overwrite only rect-size of current layer\n      {\n        firstOldPixelIndex = y * bottom.width * 4 + x * 4\n        firstNewPixelIndex = yy * top.width * 4 + xx * 4\n\n        pixelResult = pixelCallback({\n          r: bottom.imageData.data[firstOldPixelIndex + 0],\n          g: bottom.imageData.data[firstOldPixelIndex + 1],\n          b: bottom.imageData.data[firstOldPixelIndex + 2],\n          a: bottom.imageData.data[firstOldPixelIndex + 3]\n        }, {\n          r: top.imageData.data[firstNewPixelIndex + 0],\n          g: top.imageData.data[firstNewPixelIndex + 1],\n          b: top.imageData.data[firstNewPixelIndex + 2],\n          a: top.imageData.data[firstNewPixelIndex + 3]\n        }, x, y, {\n          blendingMode: top.blendingMode\n        })\n\n        if (pixelResult !== false) // if skip change\n        {\n          bottom.imageData.data[firstOldPixelIndex + 0] = pixelResult.r\n          bottom.imageData.data[firstOldPixelIndex + 1] = pixelResult.g\n          bottom.imageData.data[firstOldPixelIndex + 2] = pixelResult.b\n          bottom.imageData.data[firstOldPixelIndex + 3] = pixelResult.a\n        }\n      }\n    }\n  }\n  return bottom.imageData\n}\n\nexport function mergePixelCallback (bottomPixel, topPixel, x, y, parameters) {\n  if (topPixel.a === 0) {\n    return false // skip change - opacity is full\n  }\n\n  // alpha compositing\n  let mergedR,\n    mergedG,\n    mergedB,\n    mergedA = topPixel.a / 255,\n    rootA = bottomPixel.a / 255 * (1 - mergedA),\n    outA = (mergedA + bottomPixel.a * (1 - mergedA) / 255)\n\n  switch (parameters.blendingMode) {\n    case 'lighten':\n    case 'darken':\n    case 'multiply':\n    case 'average':\n    case 'add':\n    case 'subtract':\n    case 'difference':\n    case 'negation':\n    case 'screen':\n    case 'exclusion':\n    case 'overlay':\n    case 'softLight':\n    case 'hardLight':\n    case 'colorDodge':\n    case 'colorBurn':\n    case 'linearDodge':\n    case 'linearBurn':\n    case 'linearLight':\n    case 'vividLight':\n    case 'pinLight':\n    case 'hardMix':\n    case 'reflect':\n    case 'glow':\n    case 'phoenix':\n      topPixel.r = blendingModes[parameters.blendingMode](bottomPixel.r, topPixel.r)\n      topPixel.g = blendingModes[parameters.blendingMode](bottomPixel.g, topPixel.g)\n      topPixel.b = blendingModes[parameters.blendingMode](bottomPixel.b, topPixel.b)\n      break\n\n    default:\n      break\n  }\n\n  let rootR = bottomPixel.r\n  let rootG = bottomPixel.g\n  let rootB = bottomPixel.b\n\n  mergedR = topPixel.r * mergedA + rootR * rootA\n  mergedG = topPixel.g * mergedA + rootG * rootA\n  mergedB = topPixel.b * mergedA + rootB * rootA\n\n  mergedR = outA === 0 ? 0 : mergedR / outA\n  mergedG = outA === 0 ? 0 : mergedG / outA\n  mergedB = outA === 0 ? 0 : mergedB / outA\n\n  return {\n    r: Math.min(Math.max(0, mergedR), 255) | 0,\n    g: Math.min(Math.max(0, mergedG), 255) | 0,\n    b: Math.min(Math.max(0, mergedB), 255) | 0,\n    a: (255 * outA) | 0\n  }\n}\n\nexport function cropImageData (oldImageData, newImageData, startX, startY, width, height) {\n  let oldWidth = oldImageData.width,\n    newWidth = newImageData.width,\n    x, y, xx, yy,\n    firstOldPixelIndex, firstNewPixelIndex\n\n  for (y = startY, yy = 0; y < startY + height && yy < height; y += 1, yy += 1) {\n    for (x = startX, xx = 0; x < startX + width && xx < width; x += 1, xx += 1) {\n      firstOldPixelIndex = y * oldWidth * 4 + x * 4\n      firstNewPixelIndex = yy * newWidth * 4 + xx * 4\n\n      newImageData.data[firstNewPixelIndex] = oldImageData.data[firstOldPixelIndex]\n      newImageData.data[firstNewPixelIndex + 1] = oldImageData.data[firstOldPixelIndex + 1]\n      newImageData.data[firstNewPixelIndex + 2] = oldImageData.data[firstOldPixelIndex + 2]\n      newImageData.data[firstNewPixelIndex + 3] = oldImageData.data[firstOldPixelIndex + 3]\n    }\n  }\n\n  return newImageData\n}\n\nexport function mod (a, b) {\n  let n = Math.floor(a / b)\n  a -= n * b\n  if (a < 0) {\n    return a + b\n  }\n  return a\n}\n\nexport function triangle (x) {\n  let r = mod(x, 1)\n  return 2 * (r < 0.5 ? r : 1 - r)\n}\n\nexport function smoothStep (a, b, x) {\n  if (x < a) {\n    return 0\n  }\n  if (x >= b) {\n    return 1\n  }\n  x = (x - a) / (b - a)\n  return x * x * (3 - 2 * x)\n}\n\nexport function brightness (pixel) {\n  return (pixel.r + pixel.g + pixel.b) / 3\n}\n\nexport function isBrowser () {\n  return typeof window !== 'undefined'\n}\n","import { isBrowser } from '../helpers/common'\n\nclass CanvasWrapper {\n  constructor (width, height) {\n    this.canvas = null\n    this.context = null\n    this.width = 0\n    this.height = 0\n    this.initialize(width, height)\n  }\n\n  initialize (width = 0, height = 0) {\n    if (!isBrowser()) {\n      let Canvas = require('canvas')\n      this.canvas = new Canvas(width, height)\n    } else {\n      this.canvas = document.createElement('canvas')\n\n      // hide from viewport\n      this.canvas.style.position = 'absolute'\n      this.canvas.style.left = '-99999px'\n      this.canvas.style.top = '-99999px'\n\n      this.setWidth(width)\n      this.setHeight(height)\n\n      document.body.appendChild(this.canvas)\n    }\n  }\n\n  setWidth (value) {\n    this.canvas.setAttribute('width', '' + value)\n    this.width = value\n    return this\n  }\n\n  setHeight (value) {\n    this.canvas.setAttribute('height', '' + value)\n    this.height = value\n    return this\n  }\n\n  getContext () {\n    if (!this.context) {\n      this.context = this.canvas.getContext('2d')\n    }\n    return this.context\n  }\n\n  getCanvas () {\n    return this.canvas\n  }\n\n  toDataURL (type) {\n    return this.canvas.toDataURL(type)\n  }\n\n  destroy () {\n    if (isBrowser()) {\n      document.body.removeChild(this.canvas)\n    }\n    this.canvas = null\n    this.context = null\n  }\n}\n\nexport default CanvasWrapper","class BaseEffect {\n  constructor (opts = {}) {\n    this.opts = opts\n  }\n\n  getDefaultParameters () {\n    return {}\n  }\n\n  before (parameters, width, height, imageData) {\n    return {}\n  }\n\n  static getName () {\n    throw 'Extend it.'\n  }\n}\n\nexport default BaseEffect","import BaseEffect from './Base'\n\nclass BasePointEffect extends BaseEffect {\n  callback (pixel, x, y, parameters, width, height) {\n    throw 'Extend it.'\n  }\n\n  run (imageData, parameters) {\n\n    parameters = parameters = {\n      ...this.getDefaultParameters(),\n      ...parameters\n    }\n\n    let x, y,\n      firstPixelIndex,\n      result,\n      imageDataCopy = new Uint8ClampedArray(imageData.data), // copy image data\n      /**\n       * Get ImageData array index from x and y position\n       * @param x\n       * @param y\n       * @returns {number}\n       */\n      getIndex = function getIndex (x, y) {\n        return y * imageData.width * 4 + x * 4\n      },\n      normalizePixelValue = function (value) {\n        return Math.min(Math.max(value, 0), 255) | 0\n      },\n      sandbox = { // object invoked as this in effect callback\n        /**\n         * Get changed pixel\n         * @param {int} x\n         * @param {int} y\n         * @returns {{r: *, g: *, b: *, a: *}}\n         */\n        getPixel: function (x, y) {\n          let index = getIndex(x, y)\n          return {\n            r: imageDataCopy[index + 0],\n            g: imageDataCopy[index + 1],\n            b: imageDataCopy[index + 2],\n            a: imageDataCopy[index + 3]\n          }\n        },\n        /**\n         * Get original pixel.\n         * @param {int} x\n         * @param {int} y\n         * @returns {{r: *, g: *, b: *, a: *}}\n         */\n        getOriginalPixel: function (x, y) {\n          let index = getIndex(x, y)\n          return {\n            r: imageData.data[index + 0],\n            g: imageData.data[index + 1],\n            b: imageData.data[index + 2],\n            a: imageData.data[index + 3]\n          }\n        },\n        /**\n         * Set new pixel\n         * @param {int} x\n         * @param {int} y\n         * @param {object} rgba\n         */\n        setPixel: function (x, y, rgba) {\n          let index = getIndex(x, y)\n          imageDataCopy[index + 0] = normalizePixelValue(rgba.r)\n          imageDataCopy[index + 1] = normalizePixelValue(rgba.g)\n          imageDataCopy[index + 2] = normalizePixelValue(rgba.b)\n          imageDataCopy[index + 3] = normalizePixelValue(rgba.a)\n        },\n        /**\n         * Data created by effect init function\n         */\n        data: null,\n        /**\n         * ImageData width\n         */\n        width: imageData.width,\n        /**\n         * ImageData height\n         */\n        height: imageData.height\n      }\n\n    sandbox.data = this.before.call(sandbox, parameters, imageData.width, imageData.height, imageData)\n\n    for (y = 0; y < imageData.height; y += 1) {\n      for (x = 0; x < imageData.width; x += 1) {\n        firstPixelIndex = getIndex(x, y)\n\n        result = this.callback.call(sandbox,\n          {\n            r: imageDataCopy[firstPixelIndex + 0],\n            g: imageDataCopy[firstPixelIndex + 1],\n            b: imageDataCopy[firstPixelIndex + 2],\n            a: imageDataCopy[firstPixelIndex + 3]\n          },\n          x,\n          y,\n          parameters,\n          imageData.width,\n          imageData.height\n        )\n\n        if (typeof result === 'object') {\n          imageDataCopy[firstPixelIndex + 0] = normalizePixelValue(result.r)\n          imageDataCopy[firstPixelIndex + 1] = normalizePixelValue(result.g)\n          imageDataCopy[firstPixelIndex + 2] = normalizePixelValue(result.b)\n          imageDataCopy[firstPixelIndex + 3] = normalizePixelValue(result.a)\n        }\n      }\n    }\n\n    imageData.data.set(imageDataCopy)\n    return imageData\n  }\n}\n\nexport default BasePointEffect\n","import BasePointEffect from '../BasePoint'\n\nclass GrayScaleEffect extends BasePointEffect {\n  static getName () {\n    return 'gray-scale'\n  }\n\n  callback (pixel, x, y, parameters, width, height) {\n    let newRGB = 0.299 * pixel.r + 0.587 * pixel.g + 0.114 * pixel.b\n    return {\n      r: newRGB,\n      g: newRGB,\n      b: newRGB,\n      a: pixel.a\n    }\n  }\n}\n\nexport default GrayScaleEffect","import BasePointEffect from '../BasePoint'\n\nclass GrayScaleEffect extends BasePointEffect {\n  static getName () {\n    return 'sepia'\n  }\n\n  getDefaultParameters () {\n    return {\n      sepiaValue: 1\n    }\n  }\n\n  callback (pixel, x, y, parameters, width, height) {\n    let tmp = 0.299 * pixel.r + 0.587 * pixel.g + 0.114 * pixel.b\n\n    pixel.r = tmp + 2 * parameters.sepiaValue\n    pixel.g = tmp + parameters.sepiaValue\n    pixel.b = tmp\n\n    return pixel\n  }\n}\n\nexport default GrayScaleEffect","import BasePointEffect from '../BasePoint'\n\nclass ContrastEffect extends BasePointEffect {\n  static getName () {\n    return 'contrast'\n  }\n\n  getDefaultParameters () {\n    return {\n      contrast: 0.5\n    }\n  }\n\n  before (parameters) {\n    return {\n      factor: (259 * ((parameters.contrast * 255) + 255)) / (255 * (259 - (parameters.contrast * 255)))\n    }\n  }\n\n  callback (pixel, x, y, parameters, width, height) {\n    pixel.r = this.data.factor * (pixel.r - 128) + 128\n    pixel.g = this.data.factor * (pixel.g - 128) + 128\n    pixel.b = this.data.factor * (pixel.b - 128) + 128\n\n    return pixel\n  }\n}\n\nexport default ContrastEffect","import BasePointEffect from '../BasePoint'\n\nclass BrightnessEffect extends BasePointEffect {\n  static getName () {\n    return 'brightness'\n  }\n\n  getDefaultParameters () {\n    return {\n      brightness: 0.5\n    }\n  }\n\n  before (parameters) {\n    return {\n      brightness: 255 * parameters.brightness\n    }\n  }\n\n  callback (pixel, x, y, parameters, width, height) {\n    pixel.r = pixel.r + this.data.brightness\n    pixel.g = pixel.g + this.data.brightness\n    pixel.b = pixel.b + this.data.brightness\n\n    return pixel\n  }\n}\n\nexport default BrightnessEffect","import BasePointEffect from '../BasePoint'\n\nclass DiffusionEffect extends BasePointEffect {\n  static getName () {\n    return 'diffusion'\n  }\n\n  getDefaultParameters () {\n    return {\n      matrix: [0, 0, 0, 0, 0, 7, 3, 5, 1],\n      levels: 6,\n      colorDither: true,\n      granulate: true\n    }\n  }\n\n  before (parameters, width, height, imageData) {\n    let i, sum = 0, map = [], div = []\n\n    for (i = 0; i < parameters.matrix.length; i += 1) {\n      sum += parameters.matrix[i]\n    }\n\n    for (i = 0; i < parameters.levels; i += 1) {\n      map[i] = parseInt(255 * i / (parameters.levels - 1))\n    }\n\n    for (i = 0; i < 256; i += 1) {\n      div[i] = parseInt(parameters.levels * i / 256)\n    }\n\n    return {\n      sum: sum,\n      map: map,\n      div: div\n    }\n  }\n\n  callback (pixel, x, y, parameters, width, height) {\n    let red1 = pixel.r,\n      green1 = pixel.g,\n      blue1 = pixel.b,\n      red2, green2, blue2,\n      data = this.data,\n      tmpPixel,\n      tmpRed, tmpGreen, tmpBlue,\n      i, j,\n      iy, jx,\n      w,\n      grayScale\n\n    if (!parameters.colorDither) {\n      grayScale = (red1 + green1 + blue1) / 3\n      red1 = grayScale\n      green1 = grayScale\n      blue1 = grayScale\n    }\n\n    red2 = data.map[data.div[red1]]\n    green2 = data.map[data.div[green1]]\n    blue2 = data.map[data.div[blue1]]\n\n    tmpRed = red1 - red2\n    tmpGreen = green1 - green2\n    tmpBlue = blue1 - blue2\n\n    if (parameters.granulate) {\n      for (i = -1; i <= 1; i += 1) {\n        iy = i + y\n        if (iy < 0 || iy >= height) {\n          continue\n        }\n        for (j = -1; j <= 1; j += 1) {\n          jx = j + x\n          if (jx < 0 || jx >= width) {\n            continue\n          }\n          w = parameters.matrix[(i + 1) * 3 + j + 1]\n          if (w !== 0) {\n            tmpPixel = this.getPixel(jx, iy)\n            tmpPixel.r += (tmpRed * w / data.sum)\n            tmpPixel.g += (tmpGreen * w / data.sum)\n            tmpPixel.b += (tmpBlue * w / data.sum)\n            this.setPixel(jx, iy, tmpPixel)\n          }\n        }\n      }\n    }\n\n    return {\n      r: red2,\n      g: green2,\n      b: blue2,\n      a: pixel.a\n    }\n  }\n}\n\nexport default DiffusionEffect","import BasePointEffect from '../BasePoint'\n\nclass DitherEffect extends BasePointEffect {\n  static getName () {\n    return 'dither'\n  }\n\n  getDefaultParameters () {\n    return {\n      matrices: {\n        ditherMagic4x4Matrix: [\n          0, 14, 3, 13,\n          11, 5, 8, 6,\n          12, 2, 15, 1,\n          7, 9, 4, 10\n        ],\n        ditherOrdered4x4Matrix: [\n          0, 8, 2, 10,\n          12, 4, 14, 6,\n          3, 11, 1, 9,\n          15, 7, 13, 5\n        ],\n        ditherLines4x4Matrix: [\n          0, 1, 2, 3,\n          4, 5, 6, 7,\n          8, 9, 10, 11,\n          12, 13, 14, 15\n        ],\n        dither90Halftone6x6Matrix: [\n          29, 18, 12, 19, 30, 34,\n          17, 7, 4, 8, 20, 28,\n          11, 3, 0, 1, 9, 27,\n          16, 6, 2, 5, 13, 26,\n          25, 15, 10, 14, 21, 31,\n          33, 25, 24, 23, 33, 36\n        ],\n        ditherOrdered6x6Matrix: [\n          1, 59, 15, 55, 2, 56, 12, 52,\n          33, 17, 47, 31, 34, 18, 44, 28,\n          9, 49, 5, 63, 10, 50, 6, 60,\n          41, 25, 37, 21, 42, 26, 38, 22,\n          3, 57, 13, 53, 0, 58, 14, 54,\n          35, 19, 45, 29, 32, 16, 46, 30,\n          11, 51, 7, 61, 8, 48, 4, 62,\n          43, 27, 39, 23, 40, 24, 36, 20\n        ],\n        ditherOrdered8x8Matrix: [\n          1, 235, 59, 219, 15, 231, 55, 215, 2, 232, 56, 216, 12, 228, 52, 212,\n          129, 65, 187, 123, 143, 79, 183, 119, 130, 66, 184, 120, 140, 76, 180, 116,\n          33, 193, 17, 251, 47, 207, 31, 247, 34, 194, 18, 248, 44, 204, 28, 244,\n          161, 97, 145, 81, 175, 111, 159, 95, 162, 98, 146, 82, 172, 108, 156, 92,\n          9, 225, 49, 209, 5, 239, 63, 223, 10, 226, 50, 210, 6, 236, 60, 220,\n          137, 73, 177, 113, 133, 69, 191, 127, 138, 74, 178, 114, 134, 70, 188, 124,\n          41, 201, 25, 241, 37, 197, 21, 255, 42, 202, 26, 242, 38, 198, 22, 252,\n          169, 105, 153, 89, 165, 101, 149, 85, 170, 106, 154, 90, 166, 102, 150, 86,\n          3, 233, 57, 217, 13, 229, 53, 213, 0, 234, 58, 218, 14, 230, 54, 214,\n          131, 67, 185, 121, 141, 77, 181, 117, 128, 64, 186, 122, 142, 78, 182, 118,\n          35, 195, 19, 249, 45, 205, 29, 245, 32, 192, 16, 250, 46, 206, 30, 246,\n          163, 99, 147, 83, 173, 109, 157, 93, 160, 96, 144, 80, 174, 110, 158, 94,\n          11, 227, 51, 211, 7, 237, 61, 221, 8, 224, 48, 208, 4, 238, 62, 222,\n          139, 75, 179, 115, 135, 71, 189, 125, 136, 72, 176, 112, 132, 68, 190, 126,\n          43, 203, 27, 243, 39, 199, 23, 253, 40, 200, 24, 240, 36, 196, 20, 254,\n          171, 107, 155, 91, 167, 103, 151, 87, 168, 104, 152, 88, 164, 100, 148, 84\n        ],\n        ditherCluster3Matrix: [\n          9, 11, 10, 8, 6, 7,\n          12, 17, 16, 5, 0, 1,\n          13, 14, 15, 4, 3, 2,\n          8, 6, 7, 9, 11, 10,\n          5, 0, 1, 12, 17, 16,\n          4, 3, 2, 13, 14, 15\n        ],\n        ditherCluster4Matrix: [\n          18, 20, 19, 16, 13, 11, 12, 15,\n          27, 28, 29, 22, 4, 3, 2, 9,\n          26, 31, 30, 21, 5, 0, 1, 10,\n          23, 25, 24, 17, 8, 6, 7, 14,\n          13, 11, 12, 15, 18, 20, 19, 16,\n          4, 3, 2, 9, 27, 28, 29, 22,\n          5, 0, 1, 10, 26, 31, 30, 21,\n          8, 6, 7, 14, 23, 25, 24, 17\n        ],\n        ditherCluster8Matrix: [\n          64, 69, 77, 87, 86, 76, 68, 67, 63, 58, 50, 40, 41, 51, 59, 60,\n          70, 94, 100, 109, 108, 99, 93, 75, 57, 33, 27, 18, 19, 28, 34, 52,\n          78, 101, 114, 116, 115, 112, 98, 83, 49, 26, 13, 11, 12, 15, 29, 44,\n          88, 110, 123, 124, 125, 118, 107, 85, 39, 17, 4, 3, 2, 9, 20, 42,\n          89, 111, 122, 127, 126, 117, 106, 84, 38, 16, 5, 0, 1, 10, 21, 43,\n          79, 102, 119, 121, 120, 113, 97, 82, 48, 25, 8, 6, 7, 14, 30, 45,\n          71, 95, 103, 104, 105, 96, 92, 74, 56, 32, 24, 23, 22, 31, 35, 53,\n          65, 72, 80, 90, 91, 81, 73, 66, 62, 55, 47, 37, 36, 46, 54, 61,\n          63, 58, 50, 40, 41, 51, 59, 60, 64, 69, 77, 87, 86, 76, 68, 67,\n          57, 33, 27, 18, 19, 28, 34, 52, 70, 94, 100, 109, 108, 99, 93, 75,\n          49, 26, 13, 11, 12, 15, 29, 44, 78, 101, 114, 116, 115, 112, 98, 83,\n          39, 17, 4, 3, 2, 9, 20, 42, 88, 110, 123, 124, 125, 118, 107, 85,\n          38, 16, 5, 0, 1, 10, 21, 43, 89, 111, 122, 127, 126, 117, 106, 84,\n          48, 25, 8, 6, 7, 14, 30, 45, 79, 102, 119, 121, 120, 113, 97, 82,\n          56, 32, 24, 23, 22, 31, 35, 53, 71, 95, 103, 104, 105, 96, 92, 74,\n          62, 55, 47, 37, 36, 46, 54, 61, 65, 72, 80, 90, 91, 81, 73, 66\n        ]\n      },\n      levels: 6,\n      matrix: 'ditherMagic4x4Matrix',\n      colorDither: true\n    }\n  }\n\n  before (parameters, width, height, imageData) {\n    let matrix = parameters.matrix,\n      rows, cols,\n      map = [], div = [], mod = [],\n      i\n\n    if (typeof matrix === 'string') {\n      matrix = parameters.matrices[matrix]\n    }\n\n    rows = Math.sqrt(matrix.length)\n    cols = Math.sqrt(matrix.length)\n\n    for (i = 0; i < parameters.levels; i += 1) {\n      map[i] = 255 * i / (parameters.levels - 1)\n    }\n\n    for (i = 0; i < 256; i += 1) {\n      div[i] = parseInt((parameters.levels - 1) * i / 256)\n      mod[i] = parseInt(i * (rows * cols + 1) / 256)\n    }\n\n    return {\n      matrix: matrix,\n      map: map,\n      div: div,\n      mod: mod,\n      cols: cols,\n      rows: rows\n    }\n  }\n\n  callback (pixel, x, y, parameters, width, height) {\n    let col = x % this.data.cols,\n      row = y % this.data.rows,\n      v = parameters.matrix[row * this.data.cols + col],\n      red = pixel.r, green = pixel.g, blue = pixel.b,\n      result = { a: pixel.a },\n      value\n\n    if (parameters.colorDither) {\n      result.r = this.data.map[this.data.mod[red] > v ? this.data.div[red] + 1 : this.data.div[red]]\n      result.g = this.data.map[this.data.mod[green] > v ? this.data.div[green] + 1 : this.data.div[green]]\n      result.b = this.data.map[this.data.mod[blue] > v ? this.data.div[blue] + 1 : this.data.div[blue]]\n    }\n    else {\n      value = (red + green + blue) / 3\n      result.r = result.g = result.b = this.data.map[this.data.mod[value] > v ? this.data.div[value] + 1 : this.data.div[value]]\n    }\n\n    return result\n  }\n}\n\nexport default DitherEffect","import BasePointEffect from '../BasePoint'\n\nclass ExposureEffect extends BasePointEffect {\n  static getName () {\n    return 'exposure'\n  }\n\n  getDefaultParameters () {\n    return {\n      exposure: 1\n    }\n  }\n\n  callback (pixel, x, y, parameters, width, height) {\n    pixel.r = (1 - Math.exp(-pixel.r / 255 * parameters.exposure)) * 255\n    pixel.g = (1 - Math.exp(-pixel.g / 255 * parameters.exposure)) * 255\n    pixel.b = (1 - Math.exp(-pixel.b / 255 * parameters.exposure)) * 255\n\n    return pixel\n  }\n}\n\nexport default ExposureEffect","import BasePointEffect from '../BasePoint'\n\nclass GainEffect extends BasePointEffect {\n  static getName () {\n    return 'gain'\n  }\n\n  getDefaultParameters () {\n    return {\n      gain: 1,\n      bias: 1\n    }\n  }\n\n  callback (pixel, x, y, parameters, width, height) {\n    let red = (1 / parameters.gain - 2) * (1 - 2 * pixel.r / 255),\n      green = (1 / parameters.gain - 2) * (1 - 2 * pixel.g / 255),\n      blue = (1 / parameters.gain - 2) * (1 - 2 * pixel.b / 255)\n\n    if (pixel.r / 255 < 0.5) {\n      red = (pixel.r / 255) / red + 1\n    }\n    else {\n      red = (red - (pixel.r / 255)) / (red - 1)\n    }\n\n    if (pixel.g / 255 < 0.5) {\n      green = (pixel.g / 255) / green + 1\n    }\n    else {\n      green = (green - (pixel.g / 255)) / (green - 1)\n    }\n\n    if (pixel.b / 255 < 0.5) {\n      blue = (pixel.b / 255) / blue + 1\n    }\n    else {\n      blue = (blue - (pixel.b / 255)) / (blue - 1)\n    }\n\n    red = red / ((1 / parameters.bias - 2) * (1 - red) + 1)\n    green = green / ((1 / parameters.bias - 2) * (1 - green) + 1)\n    blue = blue / ((1 / parameters.bias - 2) * (1 - blue) + 1)\n\n    pixel.r = red * 255\n    pixel.g = green * 255\n    pixel.b = blue * 255\n\n    return pixel\n  }\n}\n\nexport default GainEffect","import BasePointEffect from '../BasePoint'\n\nclass GammaEffect extends BasePointEffect {\n  static getName () {\n    return 'gamma'\n  }\n\n  getDefaultParameters () {\n    return {\n      gammaRed: 1,\n      gammaGreen: 1,\n      gammaBlue: 1\n    }\n  }\n\n  before (parameters, width, height, imageData) {\n    let table = {\n      r: [],\n      g: [],\n      b: []\n    }, i\n\n    for (i = 0; i < 256; i += 1) {\n      table.r[i] = parseInt(((255 * Math.pow(i / 255, 1 / parameters.gammaRed)) + 0.5))\n      table.g[i] = parseInt(((255 * Math.pow(i / 255, 1 / parameters.gammaGreen)) + 0.5))\n      table.b[i] = parseInt(((255 * Math.pow(i / 255, 1 / parameters.gammaBlue)) + 0.5))\n    }\n\n    return {\n      table: table\n    }\n  }\n\n  callback (pixel, x, y, parameters, width, height) {\n    return {\n      r: this.data.table.r[pixel.r],\n      g: this.data.table.g[pixel.g],\n      b: this.data.table.b[pixel.b],\n      a: pixel.a\n    }\n  }\n}\n\nexport default GammaEffect","/**\n * RGB to HSB color convert.\n * @param r\n * @param g\n * @param b\n * @returns {{h: number, s: number, b: number}}\n */\nexport function RGBtoHSB (r, g, b) {\n  let hue, saturation, brightness,\n    cmax = Math.max(r, g, b),\n    cmin = Math.min(r, g, b)\n\n  brightness = cmax / 255\n  if (cmax !== 0) {\n    saturation = (cmax - cmin) / cmax\n  }\n  else {\n    saturation = 0\n  }\n\n  if (saturation === 0) {\n    hue = 0\n  }\n  else {\n    let redc = (cmax - r) / (cmax - cmin),\n      greenc = (cmax - g) / (cmax - cmin),\n      bluec = (cmax - b) / (cmax - cmin)\n\n    if (r === cmax) {\n      hue = bluec - greenc\n    }\n    else {\n      if (g === cmax) {\n        hue = 2 + redc - bluec\n      }\n      else {\n        hue = 4 + greenc - redc\n      }\n    }\n\n    hue /= 6\n    if (hue < 0) {\n      hue += 1\n    }\n  }\n\n  return {\n    h: hue,\n    s: saturation,\n    b: brightness\n  }\n}\n\n/**\n * HSB to RGB color convert.\n * @param hue\n * @param saturation\n * @param brightness\n * @returns {{r: Number, g: Number, b: Number}}\n */\nexport function HSBtoRGB (hue, saturation, brightness) {\n  let red, green, blue\n  if (saturation === 0) {\n    red = brightness * 255 + 0.5\n    green = brightness * 255 + 0.5\n    blue = brightness * 255 + 0.5\n  }\n  else {\n    let h = (hue - Math.floor(hue)) * 6,\n      f = h - Math.floor(h),\n      p = brightness * (1 - saturation),\n      q = brightness * (1 - saturation * f),\n      t = brightness * (1 - (saturation * (1 - f)))\n\n    switch (parseInt(h)) {\n      case 0:\n        red = (brightness * 255 + 0.5)\n        green = (t * 255 + 0.5)\n        blue = (p * 255 + 0.5)\n        break\n\n      case 1:\n        red = (q * 255 + 0.5)\n        green = (brightness * 255 + 0.5)\n        blue = (p * 255 + 0.5)\n        break\n\n      case 2:\n        red = (p * 255 + 0.5)\n        green = (brightness * 255 + 0.5)\n        blue = (t * 255 + 0.5)\n        break\n\n      case 3:\n        red = (p * 255 + 0.5)\n        green = (q * 255 + 0.5)\n        blue = (brightness * 255 + 0.5)\n        break\n\n      case 4:\n        red = (t * 255 + 0.5)\n        green = (p * 255 + 0.5)\n        blue = (brightness * 255 + 0.5)\n        break\n\n      case 5:\n        red = (brightness * 255 + 0.5)\n        green = (p * 255 + 0.5)\n        blue = (q * 255 + 0.5)\n        break\n\n      default:\n        red = 0\n        green = 0\n        blue = 0\n        break\n    }\n  }\n  return {\n    r: parseInt(red),\n    g: parseInt(green),\n    b: parseInt(blue)\n  }\n}\n\nexport function mixColors (t, rgb1, rgb2) {\n  return {\n    r: rgb1.r + t * (rgb2.r - rgb1.r),\n    g: rgb1.g + t * (rgb2.g - rgb1.g),\n    b: rgb1.b + t * (rgb2.b - rgb1.b),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  }\n}\n\nexport function hexToRGB (hex) {\n  hex = parseInt(hex.replace('#', ''), 16)\n  let r = hex >> 16\n  let g = hex >> 8 & 0xFF\n  let b = hex & 0xFF\n  return {\n    r: r,\n    g: g,\n    b: b\n  }\n}\n\nexport function RGBtoHex (pixel) {\n  let bin = pixel.r << 16 | pixel.g << 8 | pixel.b\n  return (function (h) {\n    return new Array(7 - h.length).join('0') + h\n  })(bin.toString(16).toUpperCase())\n}\n\nexport function RGBtoXYZ (r, g, b) {\n  let let_R = ( r / 255 )\n  let let_G = ( g / 255 )\n  let let_B = ( b / 255 )\n\n  if (let_R > 0.04045) {\n    let_R = Math.pow(( let_R + 0.055 ) / 1.055, 2.4)\n  }\n  else {\n    let_R = let_R / 12.92\n  }\n\n  if (let_G > 0.04045) {\n    let_G = Math.pow(( let_G + 0.055 ) / 1.055, 2.4)\n  }\n  else {\n    let_G = let_G / 12.92\n  }\n\n  if (let_B > 0.04045) {\n    let_B = Math.pow(( let_B + 0.055 ) / 1.055, 2.4)\n  }\n  else {\n    let_B = let_B / 12.92\n  }\n\n  let_R = let_R * 100\n  let_G = let_G * 100\n  let_B = let_B * 100\n\n  return {\n    x: let_R * 0.4124 + let_G * 0.3576 + let_B * 0.1805,\n    y: let_R * 0.2126 + let_G * 0.7152 + let_B * 0.0722,\n    z: let_R * 0.0193 + let_G * 0.1192 + let_B * 0.9505\n  }\n}\n\nexport function RGBtoCIELab (r, g, b) {\n  let xyz = RGBtoXYZ(r, g, b)\n\n  let let_X = xyz.x / 95.047 // ref\n  let let_Y = xyz.y / 100 // ref\n  let let_Z = xyz.z / 108.883 // ref\n\n  if (let_X > 0.008856) {\n    let_X = Math.pow(let_X, ( 1 / 3 ))\n  }\n  else {\n    let_X = ( 7.787 * let_X ) + ( 16 / 116 )\n  }\n\n  if (let_Y > 0.008856) {\n    let_Y = Math.pow(let_Y, ( 1 / 3 ))\n  }\n  else {\n    let_Y = ( 7.787 * let_Y ) + ( 16 / 116 )\n  }\n\n  if (let_Z > 0.008856) {\n    let_Z = Math.pow(let_Z, ( 1 / 3 ))\n  }\n  else {\n    let_Z = ( 7.787 * let_Z ) + ( 16 / 116 )\n  }\n\n  return {\n    l: ( 116 * let_Y ) - 16,\n    a: 500 * ( let_X - let_Y ),\n    b: 200 * ( let_Y - let_Z )\n  }\n}\n\nexport function CIELabToXYZ (l, a, b) {\n  let let_Y = ( l + 16 ) / 116\n  let let_X = a / 500 + let_Y\n  let let_Z = let_Y - b / 200\n\n  if (Math.pow(let_Y, 3) > 0.008856) {\n    let_Y = Math.pow(let_Y, 3)\n  }\n  else {\n    let_Y = ( let_Y - 16 / 116 ) / 7.787\n  }\n\n  if (Math.pow(let_X, 3) > 0.008856) {\n    let_X = Math.pow(let_X, 3)\n  }\n  else {\n    let_X = ( let_X - 16 / 116 ) / 7.787\n  }\n\n  if (Math.pow(let_Z, 3) > 0.008856) {\n    let_Z = Math.pow(let_Z, 3)\n  }\n  else {\n    let_Z = ( let_Z - 16 / 116 ) / 7.787\n  }\n\n  return {\n    x: 95.047 * let_X, // ref\n    y: 100 * let_Y, // ref\n    z: 108.883 * let_Z // ref\n  }\n}\n\nexport function CIELabToRGB (l, a, b) {\n  let xyz = CIELabToXYZ(l, a, b)\n\n  let let_X = xyz.x / 100\n  let let_Y = xyz.y / 100\n  let let_Z = xyz.z / 100\n\n  let let_R = let_X * 3.2406 + let_Y * -1.5372 + let_Z * -0.4986\n  let let_G = let_X * -0.9689 + let_Y * 1.8758 + let_Z * 0.0415\n  let let_B = let_X * 0.0557 + let_Y * -0.2040 + let_Z * 1.0570\n\n  if (let_R > 0.0031308) {\n    let_R = 1.055 * ( Math.pow(let_R, ( 1 / 2.4 )) ) - 0.055\n  }\n  else {\n    let_R = 12.92 * let_R\n  }\n\n  if (let_G > 0.0031308) {\n    let_G = 1.055 * ( Math.pow(let_G, ( 1 / 2.4 )) ) - 0.055\n  }\n  else {\n    let_G = 12.92 * let_G\n  }\n\n  if (let_B > 0.0031308) {\n    let_B = 1.055 * ( Math.pow(let_B, ( 1 / 2.4 )) ) - 0.055\n  }\n  else {\n    let_B = 12.92 * let_B\n  }\n\n  return {\n    r: let_R * 255,\n    g: let_G * 255,\n    b: let_B * 255\n  }\n}","import BasePointEffect from '../BasePoint'\nimport {\n  RGBtoHSB,\n  HSBtoRGB\n} from '../../../helpers/color'\n\nclass HSBAdjustEffect extends BasePointEffect {\n  static getName () {\n    return 'hsb-adjust'\n  }\n\n  getDefaultParameters () {\n    return {\n      h: 1,\n      s: 1,\n      b: 1\n    }\n  }\n\n  callback (pixel, x, y, parameters, width, height) {\n    let hsb = RGBtoHSB(pixel.r, pixel.g, pixel.b)\n\n    hsb.h += parameters.h\n    while (hsb.h < 0) {\n      hsb.h += Math.PI * 2\n    }\n\n    hsb.s += parameters.s\n    hsb.s = Math.max(Math.min(hsb.s, 1), 0)\n\n    hsb.b += parameters.b\n    hsb.b = Math.max(Math.min(hsb.b, 1), 0)\n\n    let result = HSBtoRGB(hsb.h, hsb.s, hsb.b)\n    pixel.r = result.r\n    pixel.g = result.g\n    pixel.b = result.b\n\n    return pixel\n  }\n}\n\nexport default HSBAdjustEffect","import BasePointEffect from '../BasePoint'\n\nclass InvertAlphaEffect extends BasePointEffect {\n  static getName () {\n    return 'invert-alpha'\n  }\n\n  callback (pixel, x, y, parameters, width, height) {\n    pixel.a = 255 - pixel.a\n    return pixel\n  }\n}\n\nexport default InvertAlphaEffect","import BasePointEffect from '../BasePoint'\n\nclass InvertEffect extends BasePointEffect {\n  static getName () {\n    return 'invert'\n  }\n\n  callback (pixel, x, y, parameters, width, height) {\n    pixel.r = 255 - pixel.r\n    pixel.g = 255 - pixel.g\n    pixel.b = 255 - pixel.b\n    return pixel\n  }\n}\n\nexport default InvertEffect","import BasePointEffect from '../BasePoint'\n\nclass LevelsEffect extends BasePointEffect {\n  static getName () {\n    return 'levels'\n  }\n\n  getDefaultParameters () {\n    return {\n      low: 0,\n      high: 1,\n      lowOutput: 0,\n      highOutput: 1\n    }\n  }\n\n  before (parameters, width, height, imageData) {\n    let Histogram = function (imageData, width, height, offset, stride) {\n      let i, j, index,\n        x, y,\n        histogram = new Array(3),\n        minValue = new Array(4),\n        maxValue = new Array(4),\n        minFrequency = new Array(3),\n        maxFrequency = new Array(3),\n        mean = new Array(3),\n        numSamples = width * height,\n        isGray = true,\n        RED = 0,\n        GREEN = 1,\n        BLUE = 2,\n        GRAY = 3\n\n      for (i = 0; i < histogram.length; i += 1) {\n        histogram[i] = new Array(256)\n        for (j = 0; j < 256; j += 1) {\n          histogram[i][j] = 0\n        }\n      }\n\n      for (y = 0; y < height; y += 1) {\n        for (x = 0; x < width; x += 1) {\n          index = y * width * 4 + x * 4\n          histogram[RED][imageData.data[index]]++\n          histogram[GREEN][imageData.data[index + 1]]++\n          histogram[BLUE][imageData.data[index + 2]]++\n        }\n      }\n\n      for (i = 0; i < 256; i += 1) {\n        if (histogram[RED][i] !== histogram[GREEN][i] || histogram[GREEN][i] !== histogram[BLUE][i]) {\n          isGray = false\n          break\n        }\n      }\n\n      for (i = 0; i < 3; i += 1) {\n        for (j = 0; j < 256; j += 1) {\n          if (histogram[i][j] > 0) {\n            minValue[i] = j\n            break\n          }\n        }\n        for (j = 255; j >= 0; j -= 1) {\n          if (histogram[i][j] > 0) {\n            maxValue[i] = j\n            break\n          }\n        }\n        minFrequency[i] = Infinity\n        maxFrequency[i] = 0\n        for (j = 0; j < 256; j += 1) {\n          minFrequency[i] = Math.min(minFrequency[i], histogram[i][j])\n          maxFrequency[i] = Math.max(maxFrequency[i], histogram[i][j])\n          mean[i] += j * histogram[i][j]\n        }\n        mean[i] /= numSamples\n        minValue[GRAY] = Math.min(minValue[RED], minValue[GREEN], minValue[BLUE])\n        maxValue[GRAY] = Math.max(maxValue[RED], maxValue[GREEN], maxValue[BLUE])\n      }\n\n      this.getNumSamples = function () {\n        return numSamples\n      }\n\n      this.isGray = function () {\n        return isGray\n      }\n\n      this.getFrequency = function (channel, value) {\n        if (!value) {\n          if (numSamples > 0 && isGray && value >= 0 && value <= 255) {\n            return histogram[0][value]\n          }\n          return -1\n        }\n        if (numSamples < 1 || channel < 0 || channel > 2 || value < 0 || value > 255) {\n          return -1\n        }\n        return histogram[channel][value]\n      }\n\n      this.getMinFrequency = function (channel) {\n        if (!channel) {\n          if (numSamples > 0 && isGray) {\n            return minFrequency[0]\n          }\n          return -1\n        }\n        if (numSamples < 1 || channel < 0 || channel > 2) {\n          return -1\n        }\n        return minFrequency[channel]\n      }\n\n      this.getMaxFrequency = function (channel) {\n        if (!channel) {\n          if (numSamples > 0 && isGray) {\n            return maxFrequency[0]\n          }\n          return -1\n        }\n        if (numSamples < 1 || channel < 0 || channel > 2) {\n          return -1\n        }\n        return maxFrequency[channel]\n      }\n\n      this.getMinValue = function (channel) {\n        if (!channel) {\n          if (numSamples > 0 && isGray) {\n            return minValue[0]\n          }\n          return -1\n        }\n        return minValue[channel]\n      }\n\n      this.getMaxValue = function (channel) {\n        if (!channel) {\n          if (numSamples > 0 && isGray) {\n            return maxValue[0]\n          }\n          return -1\n        }\n        return maxValue[channel]\n      }\n\n      this.getMeanValue = function (channel) {\n        if (!channel) {\n          if (numSamples > 0 && isGray) {\n            return mean[0]\n          }\n          return -1\n        }\n        return mean[channel]\n      }\n    }\n\n    let histogram = new Histogram(imageData, width, height, 0, width),\n      lut = new Array(3),\n      low = parameters.low * 255,\n      high = parameters.high * 255,\n      i, j\n\n    for (i = 0; i < lut.length; i += 1) {\n      lut[i] = new Array(256)\n    }\n    if (low === high) {\n      high++\n    }\n\n    for (i = 0; i < 3; i += 1) {\n      for (j = 0; j < 256; j += 1) {\n        lut[i][j] = (255 * (parameters.lowOutput + (parameters.highOutput - parameters.lowOutput) * (j - low) / (high - low)))\n      }\n    }\n\n    histogram.isGray() // uglify fix - \"Side effects in initialization of unused letiable histogram\" warning\n\n    return {\n      lut: lut\n    }\n  }\n\n  callback (pixel, x, y, parameters, width, height) {\n    return {\n      r: this.data.lut[0][pixel.r],\n      g: this.data.lut[1][pixel.g],\n      b: this.data.lut[2][pixel.b],\n      a: pixel.a\n    }\n  }\n}\n\nexport default LevelsEffect","import BasePointEffect from '../BasePoint'\n\nclass RescaleEffect extends BasePointEffect {\n  static getName () {\n    return 'rescale'\n  }\n\n  getDefaultParameters () {\n    return {\n      scale: 1\n    }\n  }\n\n  callback (pixel, x, y, parameters, width, height) {\n    pixel.r = parameters.scale * pixel.r\n    pixel.g = parameters.scale * pixel.g\n    pixel.b = parameters.scale * pixel.b\n\n    return pixel\n  }\n}\n\nexport default RescaleEffect","import BasePointEffect from '../BasePoint'\n\nclass SolarizeEffect extends BasePointEffect {\n  static getName () {\n    return 'solarize'\n  }\n\n  callback (pixel, x, y, parameters, width, height) {\n    let red = pixel.r / 255 > 0.5 ? 2 * ((pixel.r / 255) - 0.5) : 2 * (0.5 - (pixel.r / 255)),\n      green = pixel.g / 255 > 0.5 ? 2 * ((pixel.g / 255) - 0.5) : 2 * (0.5 - (pixel.g / 255)),\n      blue = pixel.b / 255 > 0.5 ? 2 * ((pixel.b / 255) - 0.5) : 2 * (0.5 - (pixel.b / 255))\n\n    return {\n      r: red * 255,\n      g: green * 255,\n      b: blue * 255,\n      a: pixel.a\n    }\n  }\n}\n\nexport default SolarizeEffect","import BasePointEffect from '../BasePoint'\n\nclass ThresholdEffect extends BasePointEffect {\n  static getName () {\n    return 'threshold'\n  }\n\n  callback (pixel, x, y, parameters, width, height) {\n    let grayscale = (pixel.r + pixel.g + pixel.b) / 3\n\n    if (grayscale >= 127) {\n      return {\n        r: 255,\n        g: 255,\n        b: 255,\n        a: pixel.a\n      }\n    }\n\n    return {\n      r: 0,\n      g: 0,\n      b: 0,\n      a: pixel.a\n    }\n  }\n}\n\nexport default ThresholdEffect","import BasePointEffect from '../BasePoint'\nimport { mixColors } from '../../../helpers/color'\n\nclass TritoneEffect extends BasePointEffect {\n  static getName () {\n    return 'tritone'\n  }\n\n  getDefaultParameters () {\n    return {\n      shadowColor: {\n        r: 0,\n        g: 0,\n        b: 0,\n        a: 255\n      },\n      midColor: {\n        r: 136,\n        g: 136,\n        b: 136,\n        a: 255\n      },\n      highColor: {\n        r: 255,\n        g: 255,\n        b: 255,\n        a: 255\n      }\n    }\n  }\n\n  before (parameters) {\n    let lut = [],\n      i, t\n\n    for (i = 0; i < 128; i += 1) {\n      t = i / 127\n      lut[i] = mixColors(t, parameters.shadowColor, parameters.midColor)\n    }\n    for (i = 128; i < 256; i += 1) {\n      t = (i - 127) / 128\n      lut[i] = mixColors(t, parameters.midColor, parameters.highColor)\n    }\n    return {\n      lut: lut\n    }\n  }\n\n  callback (pixel, x, y, parameters, width, height) {\n    let brightness = Math.floor((pixel.r + pixel.g + pixel.b) / 3)\n    return this.data.lut[brightness]\n  }\n}\n\nexport default TritoneEffect","import BasePointEffect from '../BasePoint'\nimport { smoothStep } from '../../../helpers/common'\n\nclass DissolveEffect extends BasePointEffect {\n  static getName () {\n    return 'dissolve'\n  }\n\n  getDefaultParameters () {\n    return {\n      density: 1,\n      softness: 0\n    }\n  }\n\n  before (parameters, width, height, imageData) {\n    let d = (1 - parameters.density) * (1 + parameters.softness)\n    return {\n      minDensity: d - parameters.softness,\n      maxDensity: d\n    }\n  }\n\n  callback (pixel, x, y, parameters, width, height) {\n    let v = Math.random(),\n      f = smoothStep(this.data.minDensity, this.data.maxDensity, v)\n    pixel.a = pixel.a * f\n    return pixel\n  }\n}\n\nexport default DissolveEffect","import BasePointEffect from '../BasePoint'\n\nclass EdgeEffect extends BasePointEffect {\n  static getName () {\n    return 'edge'\n  }\n\n  getDefaultParameters () {\n    return {\n      matrixes: {\n        robertsV: [\n          0, 0, -1,\n          0, 1, 0,\n          0, 0, 0\n        ],\n        robertsH: [\n          -1, 0, 0,\n          0, 1, 0,\n          0, 0, 0\n        ],\n        prewittV: [\n          -1, 0, 1,\n          -1, 0, 1,\n          -1, 0, 1\n        ],\n        prewittH: [\n          -1, -1, -1,\n          0, 0, 0,\n          1, 1, 1\n        ],\n        sobelV: [\n          -1, 0, 1,\n          -2, 0, 2,\n          -1, 0, 1\n        ],\n        sobelH: [\n          -1, -2, -1,\n          0, 0, 0,\n          1, 2, 1\n        ],\n        freiChenV: [\n          -1, 0, 1,\n          -Math.sqrt(2), 0, Math.sqrt(2),\n          -1, 0, 1\n        ],\n        freiChenH: [\n          -1, -Math.sqrt(2), -1,\n          0, 0, 0,\n          1, Math.sqrt(2), 1\n        ]\n      },\n      hEdgeMatrix: 'sobelV',\n      vEdgeMatrix: 'sobelH'\n    }\n  }\n\n  before (parameters, width, height, imageData) {\n    let hEdgeMatrix = parameters.hEdgeMatrix,\n      vEdgeMatrix = parameters.vEdgeMatrix\n\n    if (typeof hEdgeMatrix === 'string') {\n      hEdgeMatrix = parameters.matrixes[parameters.hEdgeMatrix]\n    }\n    if (typeof vEdgeMatrix === 'string') {\n      vEdgeMatrix = parameters.matrixes[parameters.vEdgeMatrix]\n    }\n    return {\n      hEdgeMatrix: hEdgeMatrix,\n      vEdgeMatrix: vEdgeMatrix\n    }\n  }\n\n  callback (pixel, x, y, parameters, width, height) {\n    let r = 0, g = 0, b = 0,\n      rh = 0, gh = 0, bh = 0,\n      rv = 0, gv = 0, bv = 0,\n      row, iy, col, ix, mOffset,\n      pixel2, h, v\n\n    for (row = -1; row <= 1; row += 1) {\n      iy = y + row\n      if (!(0 <= iy && iy < height)) {\n        iy = y\n      }\n      mOffset = 3 * (row + 1) + 1\n      for (col = -1; col <= 1; col += 1) {\n        ix = x + col\n        if (!(0 <= ix && ix < width)) {\n          ix = x\n        }\n        pixel2 = this.getOriginalPixel(ix, iy)\n        h = this.data.hEdgeMatrix[mOffset + col]\n        v = this.data.vEdgeMatrix[mOffset + col]\n\n        r = pixel2.r\n        g = pixel2.g\n        b = pixel2.b\n\n        rh += Math.floor(h * r)\n        gh += Math.floor(h * g)\n        bh += Math.floor(h * b)\n\n        rv += Math.floor(v * r)\n        gv += Math.floor(v * g)\n        bv += Math.floor(v + b)\n      }\n    }\n    r = Math.floor(Math.sqrt(rh * rh + rv * rv) / 1.8)\n    g = Math.floor(Math.sqrt(gh * gh + gv * gv) / 1.8)\n    b = Math.floor(Math.sqrt(bh * bh + bv * bv) / 1.8)\n    return {\n      r: r,\n      g: g,\n      b: b,\n      a: pixel.a\n    }\n  }\n}\n\nexport default EdgeEffect","import BasePointEffect from '../BasePoint'\n\nclass ChannelMixEffect extends BasePointEffect {\n  static getName () {\n    return 'channel-mix'\n  }\n\n  getDefaultParameters () {\n    return {\n      blueGreen: 1,\n      redBlue: 1,\n      greenRed: 1,\n      intoR: 1,\n      intoG: 1,\n      intoB: 1\n    }\n  }\n\n  callback (pixel, x, y, parameters, width, height) {\n    let r = pixel.r,\n      g = pixel.g,\n      b = pixel.b\n\n    return {\n      r: ((parameters.intoR * (parameters.blueGreen * g + (255 - parameters.blueGreen) * b) / 255 + (255 - parameters.intoR) * r) / 255),\n      g: ((parameters.intoG * (parameters.redBlue * g + (255 - parameters.redBlue) * r) / 255 + (255 - parameters.intoG) * g) / 255),\n      b: ((parameters.intoB * (parameters.greenRed * g + (255 - parameters.greenRed) * g) / 255 + (255 - parameters.intoB) * b) / 255),\n      a: pixel.a\n    }\n  }\n}\n\nexport default ChannelMixEffect","import BasePointEffect from '../BasePoint'\n\nclass AutoContrastEffect extends BasePointEffect {\n  static getName () {\n    return 'auto-contrast'\n  }\n\n  before (parameters, width, height) {\n    let x, y,\n      pixel,\n      min = Infinity, max = -1\n\n    for (y = 0; y < height; y += 1) {\n      for (x = 0; x < width; x += 1) {\n        pixel = this.getPixel(x, y)\n\n        min = Math.min((pixel.r + pixel.g + pixel.b) / 3, min)\n        max = Math.max((pixel.r + pixel.g + pixel.b) / 3, max)\n      }\n    }\n\n    return {\n      min: min,\n      max: max,\n      remap: function (value) {\n        return ((value) - min) * 255 / (max - min)\n      }\n    }\n  }\n\n  callback (pixel, x, y, parameters, width, height) {\n    pixel.r = this.data.remap(pixel.r, this.data.min, this.data.max)\n    pixel.g = this.data.remap(pixel.g, this.data.min, this.data.max)\n    pixel.b = this.data.remap(pixel.b, this.data.min, this.data.max)\n\n    return pixel\n  }\n}\n\nexport default AutoContrastEffect","import BaseEffect from './Base'\n\nclass BaseTransformEffect extends BaseEffect {\n  callback (pixel, x, y, parameters, width, height) {\n    throw 'Extend it.'\n  }\n\n  run (imageData, parameters) {\n\n    parameters = {\n      ...this.getDefaultParameters(),\n      ...parameters\n    }\n\n    let x, y,\n      normalizePixelValue = function (value) {\n        return Math.min(Math.max(value, 0), 255) | 0\n      },\n      sandbox = {\n        data: null\n      },\n      imageDataCopy = new Uint8ClampedArray(imageData.data)\n\n    sandbox.data = this.before.call(sandbox, parameters, imageData.width, imageData.height, imageData)\n\n    for (y = 0; y < imageData.height; y += 1) {\n      for (x = 0; x < imageData.width; x += 1) {\n        let newXY = this.callback.call(sandbox, x, y, parameters, imageData.width, imageData.height),\n          newX = normalizePixelValue(newXY[0]),\n          newY = normalizePixelValue(newXY[1]),\n          oldPixelIndex = y * imageData.width * 4 + x * 4,\n          newPixelIndex = newY * imageData.width * 4 + newX * 4\n\n        imageDataCopy[oldPixelIndex + 0] = imageData.data[newPixelIndex + 0]\n        imageDataCopy[oldPixelIndex + 1] = imageData.data[newPixelIndex + 1]\n        imageDataCopy[oldPixelIndex + 2] = imageData.data[newPixelIndex + 2]\n        imageDataCopy[oldPixelIndex + 3] = imageData.data[newPixelIndex + 3]\n      }\n    }\n\n    imageData.data.set(imageDataCopy)\n    return imageData\n  }\n}\n\nexport default BaseTransformEffect\n","import BaseTransformEffect from '../BaseTransform'\n\nclass DiffuseEffect extends BaseTransformEffect {\n  static getName () {\n    return 'diffuse'\n  }\n\n  data = {\n    sinTable: {},\n    cosTable: {}\n  }\n\n  getDefaultParameters () {\n    return {\n      scale: 4\n    }\n  }\n\n  before (parameters, width, height, imageData) {\n    let sinTable = new Array(256),\n      cosTable = new Array(256),\n      i,\n      angle\n    for (i = 0; i < 256; i += 1) {\n      angle = Math.PI * 2 * i / 256\n      sinTable[i] = parameters.scale * Math.sin(angle)\n      cosTable[i] = parameters.scale * Math.cos(angle)\n    }\n    return {\n      sinTable: sinTable,\n      cosTable: cosTable\n    }\n  }\n\n  callback (x, y, parameters) {\n    let angle = (Math.random() * 255) | 0,\n      distance = Math.random()\n\n    return [\n      x + distance * this.data.sinTable[angle],\n      y + distance * this.data.cosTable[angle]\n    ]\n  }\n}\n\nexport default DiffuseEffect\n","import BaseTransformEffect from '../BaseTransform'\nimport { triangle } from '../../../helpers/common'\n\nclass KaleidoscopeEffect extends BaseTransformEffect {\n  static getName () {\n    return 'kaleidoscope'\n  }\n\n  getDefaultParameters () {\n    return {\n      centreX: 0.5,\n      centreY: 0.5,\n      angle: 0,\n      angle2: 0,\n      sides: 3,\n      radius: 0\n    }\n  }\n\n  before (parameters, width, height, imageData) {\n    return {\n      icentreX: width * parameters.centreX,\n      icentreY: height * parameters.centreY\n    }\n  }\n\n  callback (x, y, parameters) {\n    let dx = x - this.data.icentreX,\n      dy = y - this.data.icentreY,\n      r = Math.sqrt(dx * dx + dy * dy),\n      theta = Math.atan2(dy, dx) - parameters.angle - parameters.angle2\n\n    theta = triangle(theta / Math.PI * parameters.sides * 0.5)\n\n    if (parameters.radius !== 0) {\n      let c = Math.cos(theta),\n        radiusC = parameters.radius / c\n      r = radiusC * triangle(r / radiusC)\n    }\n\n    theta += parameters.angle\n\n    return [\n      this.data.icentreX + r * Math.cos(theta),\n      this.data.icentreY + r * Math.sin(theta)\n    ]\n  }\n}\n\nexport default KaleidoscopeEffect","let parameters = {},\n  isInit = false\n\nlet noise = {\n  init: function () {\n    if (isInit) {\n      return false\n    }\n    isInit = true\n\n    parameters.B = 0x100\n    parameters.BM = 0xff\n    parameters.N = 0x1000\n\n    parameters.P = new Array(parameters.B + parameters.B + 2)\n    parameters.G1 = new Array(parameters.B + parameters.B + 2)\n    parameters.G2 = new Array(parameters.B + parameters.B + 2)\n    for (i = 0; i < parameters.G2.length; i += 1) {\n      parameters.G2[i] = new Array(2)\n    }\n    parameters.G3 = new Array(parameters.B + parameters.B + 2)\n    for (i = 0; i < parameters.G3.length; i += 1) {\n      parameters.G3[i] = new Array(3)\n    }\n    let i, j, k\n\n    for (i = 0; i < parameters.B; i += 1) {\n      parameters.P[i] = i\n      parameters.G1[i] = ((this.random() % (parameters.B + parameters.B)) - parameters.B) / parameters.B\n      parameters.G2[i] = []\n      for (j = 0; j < 2; j += 1) {\n        parameters.G2[i][j] = ((this.random() % (parameters.B + parameters.B)) - parameters.B) / parameters.B\n      }\n      parameters.G2[i] = this.normalize2(parameters.G2[i])\n\n      parameters.G3[i] = []\n      for (j = 0; j < 3; j += 1) {\n        parameters.G3[i][j] = ((this.random() % (parameters.B + parameters.B)) - parameters.B) / parameters.B\n      }\n      parameters.G3[i] = this.normalize3(parameters.G3[i])\n    }\n\n    for (i = parameters.B - 1; i >= 0; i -= 1) {\n      k = parameters.P[i]\n      parameters.P[i] = parameters.P[j = this.random() % parameters.B]\n      parameters.P[j] = k\n    }\n\n    for (i = 0; i < parameters.B + 2; i += 1) {\n      parameters.P[parameters.B + i] = parameters.P[i]\n      parameters.G1[parameters.B + i] = parameters.G1[i]\n      for (j = 0; j < 2; j += 1) {\n        parameters.G2[parameters.B + i][j] = parameters.G2[i][j]\n      }\n      for (j = 0; j < 3; j++) {\n        parameters.G3[parameters.B + i][j] = parameters.G3[i][j]\n      }\n    }\n  },\n  random: function () {\n    return parseInt(Math.random() * 256 * 256) & 0x7fffffff\n  },\n  normalize2: function (arr) {\n    let s = Math.sqrt(arr[0] * arr[0] + arr[1] * arr[1] + arr[2] * arr[2])\n    arr[0] = arr[0] / s\n    arr[1] = arr[1] / s\n    arr[2] = arr[2] / s\n    return arr\n  },\n  normalize3: function (arr) {\n    let s = Math.sqrt(arr[0] * arr[0] + arr[1] * arr[1])\n    arr[0] = arr[0] / s\n    arr[1] = arr[1] / s\n    return arr\n  },\n  sCurve: function (t) {\n    return t * t * (3.0 - 2.0 * t)\n  },\n  lerp: function (t, a, b) {\n    return a + t * (b - a)\n  },\n  /**\n   * Compute 1-dimensional Perlin noise.\n   * @param x\n   */\n  noise1: function (x) {\n    let bx0, bx1,\n      rx0, rx1, sx, t, u, v\n\n    this.init()\n\n    t = x + parameters.N\n    bx0 = parseInt(t) & parameters.BM\n    bx1 = (bx0 + 1) & parameters.BM\n    rx0 = t - parseInt(t)\n    rx1 = rx0 - 1\n\n    sx = this.sCurve(rx0)\n\n    u = rx0 * parameters.G1[parameters.P[bx0]]\n    v = rx1 * parameters.G1[parameters.P[bx1]]\n\n    return 2.3 * this.lerp(sx, u, v)\n  },\n  /**\n   * Compute 2-dimensional Perlin noise\n   * @param x\n   * @param y\n   * @returns {number}\n   */\n  noise2: function (x, y) {\n    let bx0, bx1, by0, by1, b00, b10, b01, b11,\n      rx0, rx1, ry0, ry1, q = [], sx, sy, a, b, t, u, v,\n      i, j\n\n    this.init()\n\n    t = x + parameters.N\n    bx0 = parseInt(t) & parameters.BM\n    bx1 = (bx0 + 1) & parameters.BM\n    rx0 = t - parseInt(t)\n    rx1 = rx0 - 1\n\n    t = y + parameters.N\n    by0 = parseInt(t) & parameters.BM\n    by1 = (by0 + 1) & parameters.BM\n    ry0 = t - parseInt(t)\n    ry1 = ry0 - 1\n\n    i = parameters.P[bx0]\n    j = parameters.P[bx1]\n\n    b00 = parameters.P[i + by0]\n    b10 = parameters.P[j + by0]\n    b01 = parameters.P[i + by1]\n    b11 = parameters.P[j + by1]\n\n    sx = this.sCurve(rx0)\n    sy = this.sCurve(ry0)\n\n    q = parameters.G2[b00]\n    u = rx0 * q[0] + ry0 * q[1]\n    q = parameters.G2[b10]\n    v = rx1 * q[0] + ry0 * q[1]\n    a = this.lerp(sx, u, v)\n\n    q = parameters.G2[b01]\n    u = rx0 * q[0] + ry1 * q[1]\n    q = parameters.G2[b11]\n    v = rx1 * q[0] + ry1 * q[1]\n    b = this.lerp(sx, u, v)\n\n    return 1.5 * this.lerp(sy, a, b)\n  },\n  /**\n   * Compute 3-dimensional Perlin noise.\n   * @param x\n   * @param y\n   * @param z\n   */\n  noise3: function (x, y, z) {\n    let bx0, bx1, by0, by1, bz0, bz1, b00, b10, b01, b11,\n      rx0, rx1, ry0, ry1, rz0, rz1, q, sy, sz, a, b, c, d, t, u, v,\n      i, j\n\n    this.init()\n\n    t = x + parameters.N\n    bx0 = parseInt(t) & parameters.BM\n    bx1 = (bx0 + 1) & parameters.BM\n    rx0 = t - parseInt(t)\n    rx1 = rx0 - 1\n\n    t = y + parameters.N\n    by0 = parseInt(t) & parameters.BM\n    by1 = (by0 + 1) & parameters.BM\n    ry0 = t - parseInt(t)\n    ry1 = ry0 - 1\n\n    t = z + parameters.N\n    bz0 = parseInt(t) & parameters.BM\n    bz1 = (bz0 + 1) & parameters.BM\n    rz0 = t - parseInt(t)\n    rz1 = rz0 - 1\n\n    i = parameters.P[bx0]\n    j = parameters.P[bx1]\n\n    b00 = parameters.P[i + by0]\n    b10 = parameters.P[j + by0]\n    b01 = parameters.P[i + by1]\n    b11 = parameters.P[j + by1]\n\n    t = this.sCurve(rx0)\n    sy = this.sCurve(ry0)\n    sz = this.sCurve(rz0)\n\n    q = parameters.G3[b00 + bz0]\n    u = rx0 * q[0] + ry0 * q[1] + rz0 * q[2]\n    q = parameters.G3[b10 + bz0]\n    v = rx1 * q[0] + ry0 * q[1] + rz0 * q[2]\n    a = this.lerp(t, u, v)\n\n    q = parameters.G3[b01 + bz0]\n    u = rx0 * q[0] + ry1 * q[1] + rz0 * q[2]\n    q = parameters.G3[b11 + bz0]\n    v = rx1 * q[0] + ry1 * q[1] + rz0 * q[2]\n    b = this.lerp(t, u, v)\n\n    c = this.lerp(sy, a, b)\n\n    q = parameters.G3[b00 + bz1]\n    u = rx0 * q[0] + ry0 * q[1] + rz1 * q[2]\n    q = parameters.G3[b10 + bz1]\n    v = rx1 * q[0] + ry0 * q[1] + rz1 * q[2]\n    a = this.lerp(t, u, v)\n\n    q = parameters.G3[b01 + bz1]\n    u = rx0 * q[0] + ry1 * q[1] + rz1 * q[2]\n    q = parameters.G3[b11 + bz1]\n    v = rx1 * q[0] + ry1 * q[1] + rz1 * q[2]\n    b = this.lerp(t, u, v)\n\n    d = this.lerp(sy, a, b)\n\n    return 1.5 * this.lerp(sz, c, d)\n  },\n  /**\n   * Compute turbulence using Perlin noise.\n   * @param x\n   * @param y\n   * @param z\n   * @param octaves\n   * @returns {*}\n   */\n  turbulence3: function (x, y, z, octaves) {\n    let t = 0,\n      i\n    for (i = 1; i <= octaves; i *= 2) {\n      t += Math.abs(this.noise3(i * x, i * y, i * z)) / i\n    }\n    return t\n  }\n}\n\nexport default noise","import BaseTransformEffect from '../BaseTransform'\nimport noiseHelper from '../../../helpers/noise'\n\nclass MarbleEffect extends BaseTransformEffect {\n  static getName () {\n    return 'marble'\n  }\n\n  getDefaultParameters () {\n    return {\n      xScale: 4,\n      yScale: 4,\n      amount: 1,\n      turbulence: 1\n    }\n  }\n\n  before (parameters, width, height, imageData) {\n    let sinTable = new Array(256),\n      cosTable = new Array(256),\n      i = 0,\n      angle\n\n    for (i = 0; i < 256; i += 1) {\n      angle = Math.PI * 2 * i / 256 * parameters.turbulence\n      sinTable[i] = -parameters.yScale * Math.sin(angle)\n      cosTable[i] = parameters.yScale * Math.cos(angle)\n    }\n    return {\n      sinTable: sinTable,\n      cosTable: cosTable,\n      displacementMap: function (x, y) {\n        let result = 127 * (1 + noiseHelper.noise2(x / parameters.xScale, y / parameters.yScale))\n        return Math.min(255, Math.max(0, result))\n      }\n    }\n  }\n\n  callback (x, y, parameters) {\n    let displacement = Math.floor(this.data.displacementMap(x, y))\n    return [\n      x + this.data.sinTable[displacement],\n      y + this.data.cosTable[displacement]\n    ]\n  }\n}\n\nexport default MarbleEffect","import BaseTransformEffect from '../BaseTransform'\n\nclass PinchEffect extends BaseTransformEffect {\n  static getName () {\n    return 'pinch'\n  }\n\n  getDefaultParameters () {\n    return {\n      angle: 0,\n      centreX: 0.5,\n      centreY: 0.5,\n      radius: 100,\n      amount: 0.5\n    }\n  }\n\n  before (parameters, width, height, imageData) {\n    let icentreX = width * parameters.centreX,\n      icentreY = height * parameters.centreY,\n      radius = parameters.radius,\n      radius2\n    if (radius === 0) {\n      radius = Math.min(icentreX, icentreY)\n    }\n    radius2 = radius * radius\n    return {\n      icentreX: icentreX,\n      icentreY: icentreY,\n      radius: radius,\n      radius2: radius2\n    }\n  }\n\n  callback (x, y, parameters) {\n    let dx = x - this.data.icentreX,\n      dy = y - this.data.icentreY,\n      distance = dx * dx + dy * dy,\n      d, t, e, a, s, c\n\n    if (distance > this.data.radius2 || distance === 0) {\n      return [x, y]\n    }\n    d = Math.sqrt(distance / this.data.radius2)\n    t = Math.pow(Math.sin(Math.PI * 0.5 * d), -parameters.amount)\n\n    dx *= t\n    dy *= t\n\n    e = 1 - d\n    a = parameters.angle * e * e\n\n    s = Math.sin(a)\n    c = Math.cos(a)\n\n    return [\n      this.data.icentreX + c * dx - s * dy,\n      this.data.icentreY + s * dx + c * dy\n    ]\n  }\n}\n\nexport default PinchEffect","import BaseTransformEffect from '../BaseTransform'\nimport {\n  triangle,\n  mod\n} from '../../../helpers/common'\nimport noise from '../../../helpers/noise'\n\nclass RippleEffect extends BaseTransformEffect {\n  static getName () {\n    return 'ripple'\n  }\n\n  getDefaultParameters () {\n    return {\n      xAmplitude: 5,\n      yAmplitute: 0,\n      xWaveLength: 16,\n      yWaveLength: 16,\n      waveType: 'SINE' // SAWTOOTH TRIANGLE NOISE\n    }\n  }\n\n  callback (x, y, parameters) {\n    let nx = y / parameters.xWaveLength,\n      ny = x / parameters.yWaveLength,\n      fx, fy\n\n    switch (parameters.waveType) {\n      case 'SINE':\n      default:\n        fx = Math.sin(nx)\n        fy = Math.sin(ny)\n        break\n\n      case 'SAWTOOTH':\n        fx = mod(nx, 1)\n        fy = mod(ny, 1)\n        break\n\n      case 'TRIANGLE':\n        fx = triangle(nx)\n        fy = triangle(ny)\n        break\n\n      case 'NOISE':\n        fx = noise.noise1(nx)\n        fy = noise.noise1(ny)\n        break\n    }\n\n    return [\n      x + parameters.xAmplitude * fx,\n      y + parameters.yAmplitute * fy\n    ]\n  }\n}\n\nexport default RippleEffect","import BaseTransformEffect from '../BaseTransform'\n\nclass ShearEffect extends BaseTransformEffect {\n  static getName () {\n    return 'shear'\n  }\n\n  getDefaultParameters () {\n    return {\n      xAngle: 0,\n      yAngle: 0,\n      xOffset: 0,\n      yOffset: 0\n    }\n  }\n\n  before (parameters, width, height) {\n    return {\n      shx: Math.sin(parameters.xAngle),\n      shy: Math.sin(parameters.yAngle)\n    }\n  }\n\n  callback (x, y, parameters) {\n    return [\n      x + parameters.xOffset + (y * this.data.shx),\n      y + parameters.yOffset + (x * this.data.shy)\n    ]\n  }\n}\n\nexport default ShearEffect","import BaseTransformEffect from '../BaseTransform'\n\nclass SphereEffect extends BaseTransformEffect {\n  static getName () {\n    return 'sphere'\n  }\n\n  getDefaultParameters () {\n    return {\n      a: 0,\n      b: 0,\n      centreX: 0.5,\n      centreY: 0.5,\n      refractionIndex: 1.5\n    }\n  }\n\n  before (parameters, width, height) {\n    let icentreX = width * parameters.centreX,\n      icentreY = height * parameters.centreY,\n      a = parameters.a,\n      b = parameters.b,\n      a2, b2\n    if (a === 0) {\n      a = width / 2\n    }\n    if (b === 0) {\n      b = height / 2\n    }\n    a2 = a * a\n    b2 = b * b\n\n    return {\n      icentreX: icentreX,\n      icentreY: icentreY,\n      a: a,\n      b: b,\n      a2: a2,\n      b2: b2\n    }\n  }\n\n  callback (x, y, parameters) {\n    let dx = x - this.data.icentreX,\n      dy = y - this.data.icentreY,\n      x2 = dx * dx,\n      y2 = dy * dy,\n      rRefraction = 1 / parameters.refractionIndex,\n      z = Math.sqrt((1 - x2 / this.data.a2 - y2 / this.data.b2) * (this.data.a * this.data.b)),\n      z2 = z * z,\n      xAngle = Math.acos(dx / Math.sqrt(x2 + z2)),\n      angle1 = Math.PI / 2 - xAngle,\n      angle2 = Math.asin(Math.sin(angle1) * rRefraction),\n      yAngle = Math.acos(dy / Math.sqrt(y2 + z2)),\n      ret = new Array(2)\n\n    if (y2 >= (this.data.b2 - (this.data.b2 / x2) / this.data.a2)) {\n      return [x, y]\n    }\n\n    angle2 = (Math.PI / 2) - xAngle - angle2\n    ret[0] = x - Math.tan(angle2) * z\n\n    angle1 = (Math.PI / 2) - yAngle\n    angle2 = Math.asin(Math.sin(angle1) * rRefraction)\n    angle2 = (Math.PI / 2) - yAngle - angle2\n    ret[1] = y - Math.tan(angle2) * z\n    return ret\n  }\n}\n\nexport default SphereEffect","import BaseTransformEffect from '../BaseTransform'\nimport noise from '../../../helpers/noise'\n\nclass SwimEffect extends BaseTransformEffect {\n  static getName () {\n    return 'swim'\n  }\n\n  getDefaultParameters () {\n    return {\n      scale: 32,\n      turbulence: 0,\n      amount: 1,\n      time: 0,\n      angle: 0,\n      stretch: 1\n    }\n  }\n\n  before (parameters, width, height) {\n    let cos = Math.cos(parameters.angle),\n      sin = Math.sin(parameters.angle)\n\n    return {\n      m00: cos,\n      m01: sin,\n      m10: -sin,\n      m11: cos\n    }\n  }\n\n  callback (x, y, parameters) {\n    let nx = this.data.m00 * x + this.data.m01 * y,\n      ny = this.data.m10 * x + this.data.m11 * y\n\n    nx /= parameters.scale\n    ny /= parameters.scale * parameters.stretch\n\n    if (parameters.turbulence === 1) {\n      return [\n        x + parameters.amount * noise.noise3(nx + 0.5, ny, parameters.time),\n        y + parameters.amount * noise.noise3(nx, ny + 0.5, parameters.time)\n      ]\n    }\n    return [\n      x + parameters.amount * noise.turbulence3(nx + 0.5, ny, parameters.turbulence, parameters.time),\n      y + parameters.amount * noise.turbulence3(nx, ny + 0.5, parameters.turbulence, parameters.time)\n    ]\n  }\n}\n\nexport default SwimEffect","import BaseTransformEffect from '../BaseTransform'\nimport noise from '../../../helpers/noise'\n\nclass TwirlEffect extends BaseTransformEffect {\n  static getName () {\n    return 'twirl'\n  }\n\n  getDefaultParameters () {\n    return {\n      angle: 0,\n      centreX: 0.5,\n      centreY: 0.5,\n      radius: 100\n    }\n  }\n\n  before (parameters, width, height) {\n    let iCentreX = width * parameters.centreX,\n      iCentreY = height * parameters.centreY,\n      radius = parameters.radius,\n      radius2\n\n    if (radius === 0) {\n      radius = Math.min(iCentreX, iCentreY)\n    }\n    radius2 = radius * radius\n\n    return {\n      iCentreX: iCentreX,\n      iCentreY: iCentreY,\n      radius: radius,\n      radius2: radius2\n    }\n  }\n\n  callback (x, y, parameters) {\n    let dx = x - this.data.iCentreX,\n      dy = y - this.data.iCentreY,\n      distance = dx * dx + dy * dy,\n      a\n\n    if (distance > parameters.radius2) {\n      return [x, y]\n    }\n\n    distance = Math.sqrt(distance)\n    a = Math.atan2(dy, dx) + parameters.angle * (parameters.radius - distance) / parameters.radius\n\n    return [\n      this.data.iCentreX + distance * Math.cos(a),\n      this.data.iCentreY + distance * Math.sin(a)\n    ]\n  }\n}\n\nexport default TwirlEffect","import BaseTransformEffect from '../BaseTransform'\nimport noise from '../../../helpers/noise'\n\nclass WaterEffect extends BaseTransformEffect {\n  static getName () {\n    return 'water'\n  }\n\n  getDefaultParameters () {\n    return {\n      waveLength: 16,\n      amplitude: 10,\n      phase: 0,\n      centreX: 0.5,\n      centreY: 0.5,\n      radius: 50\n    }\n  }\n\n  before (parameters, width, height) {\n    let iCentreX = width * parameters.centreX,\n      iCentreY = height * parameters.centreY,\n      radius = parameters.radius,\n      radius2\n\n    if (radius === 0) {\n      radius = Math.min(iCentreX, iCentreY)\n    }\n    radius2 = radius * radius\n\n    return {\n      iCentreX: iCentreX,\n      iCentreY: iCentreY,\n      radius: radius,\n      radius2: radius2\n    }\n  }\n\n  callback (x, y, parameters) {\n    let dx = x - this.data.iCentreX,\n      dy = y - this.data.iCentreY,\n      distance2 = dx * dx + dy * dy,\n      distance,\n      amount\n\n    if (distance2 > this.data.radius2) {\n      return [x, y]\n    }\n    distance = Math.sqrt(distance2)\n    amount = parameters.amplitude * Math.sin(distance / parameters.waveLength * Math.PI * 2 - parameters.phase)\n    amount *= (parameters.radius - distance) / parameters.radius\n    if (distance !== 0) {\n      amount *= parameters.waveLength / distance\n    }\n    return [x + dx * amount, y + dy * amount]\n  }\n}\n\nexport default WaterEffect","import BaseTransformEffect from '../BaseTransform'\nimport { mod } from '../../../helpers/common'\n\nclass CircleEffect extends BaseTransformEffect {\n  static getName () {\n    return 'circle'\n  }\n\n  data = {\n    icentreX: 0,\n    width: 0,\n  }\n\n  getDefaultParameters () {\n    return {\n      radius: 10,\n      height: 20,\n      angle: 0,\n      spreadAngle: Math.PI,\n      centreX: 0.5,\n      centreY: 0.5\n    }\n  }\n\n  before (parameters, width, height, imageData) {\n    return {\n      icentreX: width * parameters.centreX,\n      icentreY: height * parameters.centreY,\n      width: --width\n    }\n  }\n\n  callback (x, y, parameters, width, height) {\n    let dx = x - this.data.icentreX,\n      dy = y - this.data.icentreX,\n      theta = Math.atan2(-dy, -dx) + parameters.angle,\n      r = Math.sqrt(dx * dx + dy * dy)\n\n    theta = mod(theta, 2 * Math.PI)\n\n    return [\n      this.data.width * theta / parameters.spreadAngle + 0.00001,\n      height * (1 - (r - parameters.radius) / (height + 0.00001))\n    ]\n  }\n}\n\nexport default CircleEffect\n","import BaseTransformEffect from '../BaseTransform'\n\nclass RotateEffect extends BaseTransformEffect {\n  static getName () {\n    return 'rotate'\n  }\n\n  getDefaultParameters () {\n    return {\n      angle: Math.PI\n    }\n  }\n\n  before (parameters, width, height, imageData) {\n    return {\n      cos: Math.cos(parameters.angle),\n      sin: Math.sin(parameters.angle),\n      icentreX: width / 2,\n      icentreY: height / 2\n    }\n  }\n\n  callback (x, y, parameters, width, height) {\n    return [\n      ((this.data.cos * (x - this.data.icentreX)) - (this.data.sin * (y - this.data.icentreY)) + this.data.icentreY),\n      ((this.data.sin * (x - this.data.icentreX)) - (this.data.cos * (y - this.data.icentreY)) + this.data.icentreY)\n    ]\n  }\n}\n\nexport default RotateEffect","import BaseTransformEffect from '../BaseTransform'\n\nclass RotateEffect extends BaseTransformEffect {\n  static getName () {\n    return 'offset'\n  }\n\n  getDefaultParameters () {\n    return {\n      xOffset: 100,\n      yOffset: 100,\n      wrap: true\n    }\n  }\n\n  callback (x, y, parameters, width, height) {\n    if (parameters.wrap) {\n      return [\n        (x + width - parameters.xOffset) % width,\n        (y + height - parameters.yOffset) % height\n      ]\n    }\n    else {\n      return [\n        x - parameters.xOffset,\n        y - parameters.yOffset\n      ]\n    }\n  }\n}\n\nexport default RotateEffect","import BaseTransformEffect from '../BaseTransform'\n\nclass PolarEffect extends BaseTransformEffect {\n  static getName () {\n    return 'polar'\n  }\n\n  getDefaultParameters () {\n    return {\n      type: 'RECT_TO_POLAR' // RECT_TO_POLAR, POLAR_TO_RECT, INVERT_IN_CIRCLE\n    }\n  }\n\n  before (parameters, width, height, imageData) {\n    return {\n      centreX: width / 2,\n      centreY: height / 2,\n      radius: Math.max(width / 2, height / 2),\n      sqr: function (x) {\n        return x * x\n      }\n    }\n  }\n\n  callback (x, y, parameters, width, height) {\n    let theta, theta2, t,\n      m, xMax, yMax, nx, ny, xmax, ymax,\n      dx, dy, distance,\n      r = 0\n\n    switch (parameters.type) {\n      case 'RECT_TO_POLAR':\n        if (x >= this.data.centreX) {\n          if (y > this.data.centreY) {\n            theta = Math.PI - Math.atan(((x - this.data.centreX)) / ((y - this.data.centreY)))\n            r = Math.sqrt(this.data.sqr(x - this.data.centreX) + this.data.sqr(y - this.data.centreY))\n          }\n          else {\n            if (y < this.data.centreY) {\n              theta = Math.atan(((x - this.data.centreX)) / ((this.data.centreY - y)))\n              r = Math.sqrt(this.data.sqr(x - this.data.centreX) + this.data.sqr(this.data.centreY - y))\n            }\n            else {\n              theta = Math.PI / 2\n              r = x - this.data.centreX\n            }\n          }\n        }\n        else {\n          if (x < this.data.centreX) {\n            if (y < this.data.centreY) {\n              theta = (Math.PI * 2) - Math.atan(((this.data.centreX - x)) / ((this.data.centreY - y)))\n              r = Math.sqrt(this.data.sqr(this.data.centreX - x) + this.data.sqr(this.data.centreY - y))\n            }\n            else {\n              if (y > this.data.centreY) {\n                theta = Math.PI + Math.atan(((this.data.centreX - x)) / ((y - this.data.centreY)))\n                r = Math.sqrt(this.data.sqr(this.data.centreX - x) + this.data.sqr(y - this.data.centreY))\n              }\n              else {\n                theta = 1.5 * Math.PI\n                r = this.data.centreX - x\n              }\n            }\n          }\n        }\n        if (x != this.data.centreX) {\n          m = Math.abs(((y - this.data.centreY)) / ((x - this.data.centreX)))\n        }\n        else {\n          m = 0\n        }\n\n        if (m <= ((height / width))) {\n          if (x == this.data.centreX) {\n            xMax = 0\n            yMax = this.data.centreY\n          }\n          else {\n            xMax = this.data.centreX\n            yMax = m * xMax\n          }\n        }\n        else {\n          yMax = this.data.centreY\n          xMax = yMax / m\n        }\n\n        return [\n          (width - 1) - (width - 1) / (Math.PI * 2 * theta),\n          height * r / this.data.radius\n        ]\n\n      case 'POLAR_TO_RECT':\n\n        theta = x / width * Math.PI * 2\n\n        if (theta >= 1.5 * Math.PI) {\n          theta2 = Math.PI * 2 - theta\n        }\n        else {\n          if (theta >= Math.PI) {\n            theta2 = theta - Math.PI\n          }\n          else {\n            if (theta >= 0.5 * Math.PI\n            ) {\n              theta2 = Math.PI - theta\n            }\n            else {\n              theta2 = theta\n            }\n          }\n        }\n\n        t = Math.tan(theta2)\n        if (t != 0) {\n          m = 1.0 / t\n        }\n        else {\n          m = 0\n        }\n\n        if (m <= ((height) / (width))) {\n          if (theta2 == 0) {\n            xmax = 0\n            ymax = this.data.centreY\n          }\n          else {\n            xmax = this.data.centreX\n            ymax = m * xmax\n          }\n        }\n        else {\n          ymax = this.data.centreY\n          xmax = ymax / m\n        }\n\n        r = this.data.radius * (y / (height))\n\n        nx = -r * Math.sin(theta2)\n        ny = r * Math.cos(theta2)\n\n        if (theta >= 1.5 * Math.PI) {\n          return [\n            this.data.centreX - nx,\n            this.data.centreY - ny\n          ]\n        }\n        else {\n          if (theta >= Math.PI) {\n            return [\n              this.data.centreX - nx,\n              this.data.centreY + ny\n            ]\n          }\n          else {\n            if (theta >= 0.5 * Math.PI) {\n              return [\n                this.data.centreX + nx,\n                this.data.centreY + ny\n              ]\n            }\n            else {\n              return [\n                this.data.centreX + nx,\n                this.data.centreY - ny\n              ]\n            }\n          }\n        }\n        break // TODO: ???\n\n      case 'INVERT_IN_CIRCLE':\n        dx = x - this.data.centreX\n        dy = y - this.data.centreY\n        distance = dx * dx + dy * dy\n\n        return [\n          this.data.centreX + this.data.centreX * this.data.centreX * dx / distance,\n          this.data.centreY + this.data.centreY * this.data.centreY * dy / distance\n        ]\n    }\n  }\n}\n\nexport default PolarEffect","import BaseTransformEffect from '../BaseTransform'\nimport noiseHelper from '../../../helpers/noise'\n\nclass PerspectiveEffect extends BaseTransformEffect {\n  static getName () {\n    return 'perspective'\n  }\n\n  getDefaultParameters () {\n    return {\n      x0: 0,\n      y0: 0,\n      x1: 1,\n      y1: 0,\n      x2: 1,\n      y2: 1,\n      x3: 0,\n      y3: 1\n    }\n  }\n\n  before (parameters, width, height, imageData) {\n    function unitSquareToQuad () {\n      let result = {},\n        x0 = Math.floor(width * parameters.x0),\n        y0 = Math.floor(height * parameters.y0),\n        x1 = Math.floor(width * parameters.x1),\n        y1 = Math.floor(height * parameters.y1),\n        x2 = Math.floor(width * parameters.x2),\n        y2 = Math.floor(height * parameters.y2),\n        x3 = Math.floor(width * parameters.x3),\n        y3 = Math.floor(height * parameters.y3),\n        dx1 = x1 - x2,\n        dy1 = y1 - y2,\n        dx2 = x3 - x2,\n        dy2 = y3 - y2,\n        dx3 = x0 - x1 + x2 - x3,\n        dy3 = y0 - y1 + y2 - y3\n\n      if (dx3 == 0 && dy3 == 0) {\n        result.a11 = x1 - x0\n        result.a21 = x2 - x1\n        result.a31 = x0\n        result.a12 = y1 - y0\n        result.a22 = y2 - y1\n        result.a32 = y0\n        result.a13 = result.a23 = 0\n      }\n      else {\n        result.a13 = (dx3 * dy2 - dx2 * dy3) / (dx1 * dy2 - dy1 * dx2)\n        result.a23 = (dx1 * dy3 - dy1 * dx3) / (dx1 * dy2 - dy1 * dx2)\n        result.a11 = x1 - x0 + result.a13 * x1\n        result.a21 = x3 - x0 + result.a23 * x3\n        result.a31 = x0\n        result.a12 = y1 - y0 + result.a13 * y1\n        result.a22 = y3 - y0 + result.a23 * y3\n        result.a32 = y0\n      }\n\n      result.a33 = 1\n\n      return result\n    }\n\n    let result = unitSquareToQuad()\n\n    result.A = result.a22 * result.a33 - result.a32 * result.a23\n    result.B = result.a31 * result.a23 - result.a21 * result.a33\n    result.C = result.a21 * result.a32 - result.a31 * result.a22\n    result.D = result.a32 * result.a13 - result.a12 * result.a33\n    result.E = result.a11 * result.a33 - result.a31 * result.a13\n    result.F = result.a31 * result.a12 - result.a11 * result.a32\n    result.G = result.a12 * result.a23 - result.a22 * result.a13\n    result.H = result.a21 * result.a13 - result.a11 * result.a23\n    result.I = result.a11 * result.a22 - result.a21 * result.a12\n\n    return result\n  }\n\n  callback (x, y, parameters, width, height) {\n    return [\n      width * (this.data.A * x + this.data.B * y + this.data.C) / (this.data.G * x + this.data.H * y + this.data.I),\n      height * (this.data.D * x + this.data.E * y + this.data.F) / (this.data.G * x + this.data.H * y + this.data.I)\n    ]\n  }\n}\n\nexport default PerspectiveEffect","import BaseEffect from './Base'\n\nclass BaseCustomEffect extends BaseEffect {\n  callback (pixel, x, y, parameters, width, height) {\n    throw 'Extend it.'\n  }\n\n  run (imageData, parameters) {\n\n    parameters = {\n      ...this.getDefaultParameters(),\n      ...parameters\n    }\n\n    let imageDataCopy = new Uint8ClampedArray(imageData.data), // copy image data\n      /**\n       * Get ImageData array index from x and y position\n       * @param x\n       * @param y\n       * @returns {number}\n       */\n      getIndex = function getIndex (x, y) {\n        return y * imageData.width * 4 + x * 4\n      },\n      normalizePixelValue = function (value) {\n        return Math.min(Math.max(value, 0), 255) | 0\n      },\n      sandbox = { // object invoked as this in effect callback\n        /**\n         * Get changed pixel\n         * @param {int} x\n         * @param {int} y\n         * @returns {{r: *, g: *, b: *, a: *}}\n         */\n        getPixel: function (x, y) {\n          let index = getIndex(x, y)\n          return {\n            r: imageDataCopy[index + 0],\n            g: imageDataCopy[index + 1],\n            b: imageDataCopy[index + 2],\n            a: imageDataCopy[index + 3]\n          }\n        },\n        /**\n         * Get pixel by its index\n         * @param index\n         */\n        getOriginalPixelByIndex: function (index) {\n          index *= 4\n          return {\n            r: imageData.data[index],\n            g: imageData.data[index + 1],\n            b: imageData.data[index + 2],\n            a: imageData.data[index + 3]\n          }\n        },\n        /**\n         * Get original pixel.\n         * @param {int} x\n         * @param {int} y\n         * @returns {{r: *, g: *, b: *, a: *}}\n         */\n        getOriginalPixel: function (x, y) {\n          let index = getIndex(x, y)\n          return {\n            r: imageData.data[index + 0],\n            g: imageData.data[index + 1],\n            b: imageData.data[index + 2],\n            a: imageData.data[index + 3]\n          }\n        },\n        /**\n         * Set new pixel\n         * @param {int} x\n         * @param {int} y\n         * @param {object} rgba\n         */\n        setPixel: function (x, y, rgba) {\n          let index = getIndex(x, y)\n          imageDataCopy[index + 0] = normalizePixelValue(rgba.r)\n          imageDataCopy[index + 1] = normalizePixelValue(rgba.g)\n          imageDataCopy[index + 2] = normalizePixelValue(rgba.b)\n          imageDataCopy[index + 3] = normalizePixelValue(rgba.a)\n        },\n        /**\n         * Set pixel by index.\n         * @param index\n         * @param rgba\n         */\n        setPixelByIndex: function (index, rgba) {\n          index *= 4\n          imageDataCopy[index + 0] = normalizePixelValue(rgba.r)\n          imageDataCopy[index + 1] = normalizePixelValue(rgba.g)\n          imageDataCopy[index + 2] = normalizePixelValue(rgba.b)\n          imageDataCopy[index + 3] = normalizePixelValue(rgba.a)\n        },\n        /**\n         * Data created by effect init function\n         */\n        data: null,\n        /**\n         * ImageData width\n         */\n        width: imageData.width,\n        /**\n         * ImageData height\n         */\n        height: imageData.height\n      }\n\n    sandbox.data = this.before.call(sandbox, parameters, imageData.width, imageData.height, imageData)\n\n    this.callback.call(sandbox, imageData.width, imageData.height, parameters)\n\n    imageData.data.set(imageDataCopy)\n\n    return imageData\n  }\n}\n\nexport default BaseCustomEffect\n","import BaseCustomEffect from '../BaseCustom'\nimport {\n  RGBtoCIELab,\n  CIELabToRGB\n} from '../../../helpers/color'\n\nclass AutoWhiteBalanceEffect extends BaseCustomEffect {\n  static getName () {\n    return 'auto-white-balance'\n  }\n\n  getDefaultParameters () {\n    return {\n      intensity: 50\n    }\n  }\n\n  callback (width, height, parameters) {\n    let x, y,\n      sumA = 0, sumB = 0,\n      pixel,\n      lab,\n      avgSumA, avgSumB,\n      aDelta, bDelta\n\n    for (y = 0; y < height; y += 1) {\n      for (x = 0; x < width; x += 1) {\n        pixel = this.getPixel(x, y)\n        lab = RGBtoCIELab(pixel.r, pixel.g, pixel.b)\n        sumA += lab.a\n        sumB += lab.b\n      }\n    }\n\n    avgSumA = 0 - (sumA / (width * height))\n    avgSumB = 0 - (sumB / (width * height))\n\n    aDelta = avgSumA * (parameters.intensity / 100) * 1.1\n    bDelta = avgSumB * (parameters.intensity / 100) * 1.1\n\n    for (y = 0; y < height; y += 1) {\n      for (x = 0; x < width; x += 1) {\n        pixel = this.getPixel(x, y)\n\n        lab = RGBtoCIELab(pixel.r, pixel.g, pixel.b)\n\n        lab.a += aDelta\n        lab.b += bDelta\n\n        pixel = CIELabToRGB(lab.l, lab.a, lab.b)\n        pixel.a = this.getPixel(x, y).a\n\n        this.setPixel(x, y, pixel)\n      }\n    }\n  }\n}\n\nexport default AutoWhiteBalanceEffect","import BaseCustomEffect from '../BaseCustom'\nimport {\n  hexToRGB,\n} from '../../../helpers/color'\n\nclass FillColorEffect extends BaseCustomEffect {\n  static getName () {\n    return 'fill-color'\n  }\n\n  getDefaultParameters () {\n    return {\n      color: 'transparent'\n    }\n  }\n\n  callback (width, height, parameters) {\n    let x, y, color\n\n    if (parameters.color === 'transparent') {\n      color = {\n        r: 0,\n        g: 0,\n        b: 0,\n        a: 0\n      }\n    }\n    else {\n      color = hexToRGB(parameters.color)\n      color.a = 255\n    }\n\n    for (y = 0; y < height; y += 1) {\n      for (x = 0; x < width; x += 1) {\n        this.setPixel(x, y, color)\n      }\n    }\n  }\n}\n\nexport default FillColorEffect","import BaseCustomEffect from '../BaseCustom'\n\nclass FlipEffect extends BaseCustomEffect {\n  static getName () {\n    return 'flip'\n  }\n\n  getDefaultParameters () {\n    return {\n      operation: 'FLIP_H' // FLIP_H, FLIP_V, FLIP_HV, FLIP_90CW, FLIP_90CCW, FLIP_180\n    }\n  }\n\n  callback (width, height, parameters) {\n    let x = 0, y = 0,\n      w = width,\n      h = height,\n      newX = 0,\n      newY = 0,\n      newW = w,\n      newH = h,\n      newRow, newCol\n\n    switch (parameters.operation) {\n      case 'FLIP_H':\n        newX = width - (x + w)\n        break\n      case 'FLIP_V':\n        newY = height - (y + h)\n        break\n      case 'FLIP_HV':\n        newW = h\n        newH = w\n        newX = y\n        newY = x\n        break\n      case 'FLIP_90CW':\n        newW = h\n        newH = w\n        newX = height - (y + h)\n        newY = x\n        break\n      case 'FLIP_90CCW':\n        newW = h\n        newH = w\n        newX = y\n        newY = width - (x + w)\n        break\n      case 'FLIP_180':\n        newX = width - (x + w)\n        newY = height - (y + h)\n        break\n    }\n\n    for (y = 0; y < height; y += 1) {\n      for (x = 0; x < width; x += 1) {\n        newRow = y\n        newCol = x\n\n        switch (parameters.operation) {\n          case 'FLIP_H':\n            newCol = w - x - 1\n            break\n          case 'FLIP_V':\n            newRow = h - y - 1\n            break\n          case 'FLIP_HV':\n            newRow = x\n            newCol = y\n            break\n          case 'FLIP_90CW':\n            newRow = x\n            newCol = h - y - 1\n            break\n          case 'FLIP_90CCW':\n            newRow = w - x - 1\n            newCol = y\n            break\n          case 'FLIP_180':\n            newRow = h - y - 1\n            newCol = w - x - 1\n            break\n        }\n\n        this.setPixel(newCol, newRow, this.getOriginalPixel(x, y))\n      }\n    }\n  }\n}\n\nexport default FlipEffect","import BaseCustomEffect from '../BaseCustom'\n\nclass BlockEffect extends BaseCustomEffect {\n  static getName () {\n    return 'block'\n  }\n\n  getDefaultParameters () {\n    return {\n      blockSize: 5\n    }\n  }\n\n  callback (width, height, parameters) {\n    let x, y,\n      w, h,\n      t,\n      r, g, b,\n      pixel,\n      by, bx\n\n    for (y = 0; y < height; y += parameters.blockSize) {\n      for (x = 0; x < width; x += parameters.blockSize) {\n        w = Math.min(parameters.blockSize, width - x)\n        h = Math.min(parameters.blockSize, height - y)\n        t = w * h\n\n        r = 0\n        g = 0\n        b = 0\n\n        for (by = 0; by < h; by += 1) {\n          for (bx = 0; bx < w; bx += 1) {\n            pixel = this.getOriginalPixel(x + bx, y + by)\n\n            r += pixel.r & 0xFF\n            g += pixel.g & 0XFF\n            b += pixel.b & 0xFF\n          }\n        }\n\n        r = r / t\n        g = g / t\n        b = b / t\n\n        for (by = 0; by < h; by += 1) {\n          for (bx = 0; bx < w; bx += 1) {\n            this.setPixel(x + bx, y + by, {\n              r: r,\n              g: g,\n              b: b,\n              a: 255\n            })\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default BlockEffect","import BaseCustomEffect from '../BaseCustom'\n\nclass BorderEffect extends BaseCustomEffect {\n  static getName () {\n    return 'border'\n  }\n\n  getDefaultParameters () {\n    return {\n      leftBorder: 10,\n      rightBorder: 10,\n      topBorder: 10,\n      bottomBorder: 10,\n      borderColor: {\n        r: 0,\n        b: 0,\n        g: 0,\n        a: 255\n      }\n    }\n  }\n\n  before (parameters, width, height, imageData) {\n    return {\n      leftBorder: parameters.leftBorder | 0,\n      rightBorder: parameters.rightBorder | 0,\n      topBorder: parameters.rightBorder | 0,\n      bottomBorder: parameters.bottomBorder | 0\n    }\n  }\n\n  callback (width, height, parameters) {\n    let x, y\n\n    for (y = 0; y < height; y += 1) {\n      for (x = 0; x < width; x += 1) {\n        if (this.data.leftBorder > 0 && x < this.data.leftBorder) {\n          this.setPixel(x, y, parameters.borderColor)\n        }\n        if (this.data.rightBorder > 0 && width - this.data.rightBorder < x) {\n          this.setPixel(x, y, parameters.borderColor)\n        }\n        if (this.data.topBorder > 0 && y < this.data.topBorder) {\n          this.setPixel(x, y, parameters.borderColor)\n        }\n        if (this.data.bottomBorder > 0 && height - this.data.bottomBorder < y) {\n          this.setPixel(x, y, parameters.borderColor)\n        }\n      }\n    }\n  }\n}\n\nexport default BorderEffect","import BaseCustomEffect from '../BaseCustom'\nimport {\n  brightness,\n} from '../../../helpers/common'\n\nclass EmbossEffect extends BaseCustomEffect {\n  static getName () {\n    return 'emboss'\n  }\n\n  getDefaultParameters () {\n    return {\n      azimuth: 135 * Math.PI / 180,\n      elevation: 30 * Math.PI / 180,\n      width45: 3,\n      emboss: true\n    }\n  }\n\n  callback (width, height, parameters) {\n    let x, y,\n      bumpMapWidth = width,\n      bumpPixels = [],\n      Nx, Ny, Nz, Lx, Ly, Lz, Nz2, NzLz, NdotL,\n      s1, s2, s3,\n      shade, background,\n      pixelScale = 255.9,\n      bumpIndex = 0,\n      index = 0,\n      pixel,\n      r, g, b\n\n    Lx = (Math.cos(parameters.azimuth) * Math.cos(parameters.elevation) * pixelScale) | 0\n    Ly = (Math.sin(parameters.azimuth) * Math.cos(parameters.elevation) * pixelScale) | 0\n    Lz = (Math.sin(parameters.elevation) * pixelScale) | 0\n\n    Nz = (6 * 255 / parameters.width45) | 0\n    Nz2 = Nz * Nz\n    NzLz = Nz * Lz\n\n    background = Lz\n\n    for (y = 0; y < height; y += 1) {\n      for (x = 0; x < width; x += 1) {\n        bumpPixels.push(brightness(this.getOriginalPixel(x, y)) | 0)\n      }\n    }\n\n    for (y = 0; y < height; y += 1, bumpIndex += bumpMapWidth) {\n      s1 = bumpIndex\n      s2 = s1 + bumpMapWidth\n      s3 = s2 + bumpMapWidth\n\n      for (x = 0; x < width; x += 1, s1 += 1, s2 += 1, s3 += 1) {\n        if (y != 0 && y < height - 2 && x != 0 && x < width - 2) {\n          Nx = bumpPixels[s1 - 1] + bumpPixels[s2 - 1] + bumpPixels[s3 - 1] - bumpPixels[s1 + 1] - bumpPixels[s2 + 1] - bumpPixels[s3 + 1]\n          Ny = bumpPixels[s3 - 1] + bumpPixels[s3] + bumpPixels[s3 + 1] - bumpPixels[s1 - 1] - bumpPixels[s1] - bumpPixels[s1 + 1]\n\n          if (Nx == 0 && Ny == 0) {\n            shade = background\n          }\n          else {\n            if ((NdotL = Nx * Lx + Ny * Ly + NzLz) < 0) {\n              shade = 0\n            }\n            else {\n              shade = (NdotL / Math.sqrt(Nx * Nx + Ny * Ny + Nz2))\n            }\n          }\n        }\n        else {\n          shade = background\n        }\n\n        if (parameters.emboss) {\n          pixel = this.getOriginalPixelByIndex(index)\n          r = (pixel.r * shade) >> 8\n          g = (pixel.g * shade) >> 8\n          b = (pixel.b * shade) >> 8\n          this.setPixelByIndex(index++, {\n            r: r,\n            g: g,\n            b: b,\n            a: pixel.a\n          })\n        }\n        else {\n          this.setPixelByIndex(index++, {\n            r: shade,\n            g: shade << 8,\n            b: shade << 16,\n            a: 255\n          })\n        }\n      }\n    }\n  }\n}\n\nexport default EmbossEffect","import BaseCustomEffect from '../BaseCustom'\n\nclass ComponentStretchingEffect extends BaseCustomEffect {\n  static getName () {\n    return 'component-stretching'\n  }\n\n  callback (width, height, parameters) {\n    let x, y,\n      minR = Infinity, minG = Infinity, minB = Infinity,\n      maxR = -1, maxG = -1, maxB = -1,\n      pixel,\n      remap = function remap (value, min, max) {\n        return (value - min) * 255 / (max - min)\n      }\n\n    for (y = 0; y < height; y += 1) {\n      for (x = 0; x < width; x += 1) {\n        pixel = this.getPixel(x, y)\n\n        minR = Math.min(pixel.r, minR)\n        minG = Math.min(pixel.g, minG)\n        minB = Math.min(pixel.b, minB)\n\n        maxR = Math.max(pixel.r, maxR)\n        maxG = Math.max(pixel.g, maxG)\n        maxB = Math.max(pixel.b, maxB)\n      }\n    }\n\n    for (y = 0; y < height; y += 1) {\n      for (x = 0; x < width; x += 1) {\n        pixel = this.getPixel(x, y)\n\n        pixel.r = remap(pixel.r, minR, maxR)\n        pixel.g = remap(pixel.g, minG, maxG)\n        pixel.b = remap(pixel.b, minB, maxB)\n\n        this.setPixel(x, y, pixel)\n      }\n    }\n  }\n}\n\nexport default ComponentStretchingEffect","import GrayScale from './effects/point/GrayScale'\nimport Sepia from './effects/point/Sepia'\nimport Contrast from './effects/point/Contrast'\nimport Brightness from './effects/point/Brightness'\nimport Diffusion from './effects/point/Diffusion'\nimport Dither from './effects/point/Dither'\nimport Exposure from './effects/point/Exposure'\nimport Gain from './effects/point/Gain'\nimport Gamma from './effects/point/Gamma'\nimport HSBAdjust from './effects/point/HSBAdjust'\nimport InvertAlpha from './effects/point/InvertAlpha'\nimport Invert from './effects/point/Invert'\nimport Levels from './effects/point/Levels'\nimport Rescale from './effects/point/Rescale'\nimport Solarize from './effects/point/Solarize'\nimport Threshold from './effects/point/Threshold'\nimport Tritone from './effects/point/Tritone'\nimport Dissolve from './effects/point/Dissolve'\nimport Edge from './effects/point/Edge'\nimport ChannelMix from './effects/point/ChannelMix'\nimport AutoContrast from './effects/point/AutoContrast'\n\nimport Diffuse from './effects/transform/Diffuse'\nimport Kaleidoscope from './effects/transform/Kaleidoscope'\nimport Marble from './effects/transform/Marble'\nimport Pinch from './effects/transform/Pinch'\nimport Ripple from './effects/transform/Ripple'\nimport Shear from './effects/transform/Shear'\nimport Sphere from './effects/transform/Sphere'\nimport Swim from './effects/transform/Swim'\nimport Twirl from './effects/transform/Twirl'\nimport Water from './effects/transform/Water'\nimport Circle from './effects/transform/Circle'\nimport Rotate from './effects/transform/Rotate'\nimport Offset from './effects/transform/Offset'\nimport Polar from './effects/transform/Polar'\nimport Perspective from './effects/transform/Perspective'\n\nimport AutoWhiteBalance from './effects/custom/AutoWhiteBalance'\nimport FillColor from './effects/custom/FillColor'\nimport Flip from './effects/custom/Flip'\nimport Block from './effects/custom/Block'\nimport Border from './effects/custom/Border'\nimport Emboss from './effects/custom/Emboss'\nimport ComponentStretching from './effects/custom/ComponentStretching'\n\nlet availableEffects = {}\n\nfunction add (_class) {\n  if (availableEffects[_class.getName()]) {\n    throw `Effect: ${_class.getName()} exists already!`\n  }\n  availableEffects[_class.getName()] = _class\n}\n\nadd(GrayScale)\nadd(Sepia)\nadd(Contrast)\nadd(Brightness)\nadd(Diffusion)\nadd(Dither)\nadd(Exposure)\nadd(Gain)\nadd(Gamma)\nadd(HSBAdjust)\nadd(InvertAlpha)\nadd(Invert)\nadd(Levels)\nadd(Rescale)\nadd(Solarize)\nadd(Threshold)\nadd(Tritone)\nadd(Diffuse)\nadd(Dissolve)\nadd(Kaleidoscope)\nadd(Marble)\nadd(Pinch)\nadd(Ripple)\nadd(Shear)\nadd(Sphere)\nadd(Swim)\nadd(Twirl)\nadd(Water)\nadd(Edge)\nadd(ChannelMix)\nadd(Circle)\nadd(Rotate)\nadd(Offset)\nadd(Polar)\nadd(Perspective)\nadd(AutoContrast)\nadd(AutoWhiteBalance)\nadd(FillColor)\nadd(Flip)\nadd(Block)\nadd(Border)\nadd(Emboss)\nadd(ComponentStretching)\n\nclass EffectsRepository {\n  static get (name) {\n    return availableEffects[name]\n  }\n}\n\nexport default EffectsRepository","import CanvasWrapper from './CanvasWrapper'\nimport { cropImageData } from '../helpers/common'\nimport EffectsRepository from './EffectsRepository'\n\nclass LayerObject {\n  constructor (obj, layer, x, y, opts) {\n    this.obj = obj\n    this.layer = this\n    this.x = x\n    this.y = y\n    this.opts = opts\n    this.effects = []\n  }\n\n  getObject () {\n    return this.obj\n  }\n\n  getX () {\n    return this.x\n  }\n\n  getY () {\n    return this.y\n  }\n\n  getWidth () {\n    return this.obj.getWidth()\n  }\n\n  getHeight () {\n    return this.obj.getHeight()\n  }\n\n  exportObject () {\n    let imageData = this.obj.getImageData()\n    for (let i = 0; i < this.effects.length; i += 1) {\n      imageData = this.effects[i].effect.run(imageData, this.effects[i].params)\n    }\n    return imageData\n  }\n\n  applyEffect (name, parameters) {\n    this.effects.push({\n      name,\n      effect: new (EffectsRepository.get(name)),\n      parameters\n    })\n  }\n\n  moveXY (x, y) {\n    this.moveX(x)\n    this.moveY(y)\n    return this\n  }\n\n  moveX (x) {\n    this.x += (x | 0)\n    return this\n  }\n\n  moveY (y) {\n    this.y += (y | 0)\n    return this\n  }\n\n  setXY (x, y) {\n    this.setX(x)\n    this.setY(y)\n    return this\n  }\n\n  setX (x) {\n    this.x = x\n    return this\n  }\n\n  setY (y) {\n    this.y = y\n    return this\n  }\n\n  resize (newWidth, newHeight, mode, isLayerResize) {\n    let oldWidth = this.getWidth(),\n      oldHeight = this.getHeight(),\n      ratioX = newWidth / oldWidth,\n      ratioY = newHeight / oldHeight\n\n    if (isLayerResize) {\n      this.moveXY(-this.getX() * ratioX, -this.getY() * ratioY)\n    }\n\n    this.getObject().resize(newWidth, newHeight, mode)\n\n    return this\n  }\n\n  crop (startX, startY, width, height) {\n    let object = this.getObject(),\n      oldImageData = object.getImageData(),\n      canvas = new CanvasWrapper(width, height),\n      newImageData = canvas.getContext().createImageData(width, height)\n\n    newImageData = cropImageData(oldImageData, newImageData, startX, startY, width, height)\n\n    object\n      .setImageData(newImageData)\n      .setWidth(width)\n      .setHeight(height)\n\n    this.setXY(startX, startY)\n\n    return this\n  };\n}\n\nexport default LayerObject","import CanvasWrapper from './CanvasWrapper'\nimport LayerObject from './LayerObject'\nimport {\n  mergeImageData,\n  mergePixelCallback\n} from '../helpers/common'\nimport EffectsRepository from './EffectsRepository'\n\nclass Layer {\n  constructor (width, height, parameters = {}) {\n    this.objects = []\n    this.effects = []\n    this.x = 0\n    this.y = 0\n    this.initialize(width, height, parameters)\n\n    if (parameters.background_color && parameters.background_color !== 'transparent') {\n      this.applyEffect('fill-color', {\n        color: parameters.background_color\n      })\n    }\n  }\n\n  initialize (width, height, parameters) {\n    this.canvas = new CanvasWrapper(width, height)\n    this.imageData = this.canvas.getContext().createImageData(width, height)\n    this.width = width\n    this.height = height\n    this.parameters = parameters\n  }\n\n  put (obj, x, y) {\n    let put = new LayerObject(obj, this, x, y, {})\n    this.objects.push(put)\n    return put\n  }\n\n  exportTo (selector, imageType = 'image/png') {\n    this.exportLayer()\n\n    let container = document.querySelector(selector),\n      exportedImage = new Image()\n\n    exportedImage.src = canvas.toDataURL(imageType)\n    container.appendChild(exportedImage)\n  }\n\n  exportLayer () {\n    let i,\n      layerObject\n\n    for (i = 0; i < this.objects.length; i += 1) {\n      layerObject = this.objects[i]\n      this.imageData = mergeImageData({\n        width: this.width,\n        height: this.height,\n        imageData: this.imageData\n      }, {\n        x: layerObject.getX(),\n        y: layerObject.getY(),\n        width: layerObject.getWidth(),\n        height: layerObject.getHeight(),\n        imageData: layerObject.exportObject()\n      }, mergePixelCallback)\n    }\n\n    for (i = 0; i < this.effects.length; i++) {\n      this.imageData = this.effects[i].effect.run(this.imageData, this.effects[i].params)\n    }\n\n    return this.imageData\n  }\n\n  applyEffect (name, parameters) {\n    this.effects.push({\n      name,\n      effect: new (EffectsRepository.get(name)),\n      parameters\n    })\n  }\n\n  resize (newWidth, newHeight, mode) {\n    let i\n\n    this.canvas.destroy()\n    this.canvas = null\n    this.imageData = null\n\n    this.initialize(newWidth, newHeight, this.parameters)\n\n    for (i = 0; i < this.objects.length; i += 1) {\n      this.objects[i].resize(newWidth, newHeight, mode, true)\n    }\n\n    return this\n  }\n\n  crop (startX, startY, width, height) {\n    let i\n\n    for (i = 0; i < this.objects.length; i += 1) {\n      this.objects[i].crop(startX, startY, width, height)\n    }\n\n    return this\n  }\n\n  moveXY (x, y) {\n    this.moveX(x)\n    this.moveY(y)\n    return this\n  }\n\n  moveX (x) {\n    this.x += (x | 0)\n    return this\n  }\n\n  moveY (y) {\n    this.y += (y | 0)\n    return this\n  }\n\n  setX (x) {\n    this.x = x\n    return this\n  }\n\n  setY (y) {\n    this.y = y\n    return this\n  }\n\n  setBlendingMode (blendingMode) {\n    this.parameters.blendingMode = blendingMode\n  }\n\n  getX () {\n    return this.x\n  }\n\n  getY () {\n    return this.y\n  }\n\n  getWidth () {\n    return this.width\n  }\n\n  getHeight () {\n    return this.height\n  }\n\n  getParameter (name) {\n    return this.parameters[name]\n  }\n}\n\nexport default Layer","import CanvasWrapper from './CanvasWrapper'\nimport Layer from './Layer'\nimport {\n  mergeImageData,\n  mergePixelCallback,\n  isBrowser\n} from '../helpers/common'\nimport EffectsRepository from './EffectsRepository'\n\nclass Project {\n  constructor (width, height, parameters = {}) {\n    this.imageData = null\n    this.effects = []\n    this.layers = []\n    this.startTime = new Date()\n    this.initialize(width, height, parameters)\n  }\n\n  initialize (width, height, parameters) {\n    this.parameters = parameters\n    this.width = width\n    this.height = height\n    this.canvas = new CanvasWrapper(width, height)\n    this.imageData = this.canvas.getContext().getImageData(0, 0, width, height)\n  }\n\n  createLayer (parameters) {\n    let layer = new Layer(this.width, this.height, parameters)\n    this.layers.push(layer)\n    return layer\n  }\n\n  getTime () {\n    let end = new Date()\n    return end.getTime() - this.startTime.getTime()\n  }\n\n  save (selector, imageType = 'image/png') {\n    if (isBrowser()) {\n      throw new Error('Available only in node.js environment')\n    }\n\n    for (let i = 0; i < this.layers.length; i++) {\n      this.imageData = mergeImageData({\n        width: this.width,\n        height: this.height,\n        imageData: this.imageData\n      }, {\n        x: this.layers[i].getX(),\n        y: this.layers[i].getY(),\n        width: this.layers[i].getWidth(),\n        height: this.layers[i].getHeight(),\n        imageData: this.layers[i].exportLayer(),\n        blendingMode: this.layers[i].getParameter('blendingMode')\n      }, mergePixelCallback)\n    }\n\n    for (let i = 0; i < this.effects.length; i++) {\n      this.imageData = this.effects[i].effect.run(this.imageData, this.effects[i].parameters)\n    }\n\n    this.canvas.getContext().putImageData(this.imageData, 0, 0)\n\n    let fs = require('fs'),\n      img = this.canvas.toDataURL(),\n      data = img.replace(/^data:image\\/\\w+;base64,/, ''),\n      buff = new Buffer(data, 'base64')\n\n    fs.writeFile(selector, buff)\n  }\n\n  render (imageType = 'image/png') {\n    if (!isBrowser()) {\n      throw new Error('Available only in browser environment')\n    }\n\n    let i,\n      exportedImage = new window.Image()\n\n    for (i = 0; i < this.layers.length; i++) {\n      this.imageData = mergeImageData({\n        width: this.width,\n        height: this.height,\n        imageData: this.imageData\n      }, {\n        x: this.layers[i].getX(),\n        y: this.layers[i].getY(),\n        width: this.layers[i].getWidth(),\n        height: this.layers[i].getHeight(),\n        imageData: this.layers[i].exportLayer(),\n        blendingMode: this.layers[i].getParameter('blendingMode')\n      }, mergePixelCallback)\n    }\n\n    for (i = 0; i < this.effects.length; i++) {\n      this.imageData = this.effects[i].effect.run(this.imageData, this.effects[i].parameters)\n    }\n\n    this.canvas.getContext().putImageData(this.imageData, 0, 0)\n\n    exportedImage.src = this.canvas.toDataURL(imageType)\n    return exportedImage\n  }\n\n  applyEffect (name, parameters = {}) {\n    this.effects.push({\n      name,\n      effect: new (EffectsRepository.get(name)),\n      parameters\n    })\n  }\n\n  resize (newWidth, newHeight, mode) {\n    this.canvas.destroy()\n    this.canvas = null\n    this.imageData = null\n    this.initialize(newWidth, newHeight, mode)\n\n    for (let i = 0; i < this.layers.length; i += 1) {\n      this.layers[i].resize(newWidth, newHeight, mode)\n    }\n\n    return this\n  }\n}\n\nexport default Project","export function resizeNearestNeighbour (oldImageData, newImageData, newWidth, newHeight) {\n  let oldWidth = oldImageData.width,\n    oldHeight = oldImageData.height,\n    ratioX = oldWidth / newWidth,\n    ratioY = oldHeight / newHeight,\n    oldPixelIndex,\n    newPixelIndex,\n    x, y\n\n  for (y = 0; y < newHeight; y += 1) {\n    for (x = 0; x < newWidth; x += 1) {\n      oldPixelIndex = Math.floor(y * ratioY) * oldWidth * 4 + Math.floor(x * ratioX) * 4\n      newPixelIndex = y * newWidth * 4 + x * 4\n\n      newImageData.data[newPixelIndex + 0] = oldImageData.data[oldPixelIndex + 0]\n      newImageData.data[newPixelIndex + 1] = oldImageData.data[oldPixelIndex + 1]\n      newImageData.data[newPixelIndex + 2] = oldImageData.data[oldPixelIndex + 2]\n      newImageData.data[newPixelIndex + 3] = oldImageData.data[oldPixelIndex + 3]\n    }\n  }\n\n  return newImageData\n}\n\nexport function resizeBilinearInterpolation (oldImageData, newImageData, newWidth, newHeight) {\n  let oldWidth = oldImageData.width,\n    oldHeight = oldImageData.height,\n    ratioX = oldWidth / newWidth,\n    ratioY = oldHeight / newHeight,\n    newPixelIndex,\n    x, y,\n    x0, y0,\n    dx, dy,\n    x1, y1,\n    oldPixelIndex00, oldPixelIndex01, oldPixelIndex10, oldPixelIndex11,\n    i, j\n\n  for (i = 0; i < newHeight; i += 1) {\n    for (j = 0; j < newWidth; j += 1) {\n      x = j * ratioX\n      y = i * ratioY\n      x0 = Math.floor(x)\n      y0 = Math.floor(y)\n      dx = x - x0\n      dy = y - y0\n      x1 = x0 + 1\n      y1 = y0 + 1\n\n      if (x1 >= oldWidth) {\n        x1 = x0\n      }\n      if (y1 >= oldHeight) {\n        y1 = y0\n      }\n\n      oldPixelIndex00 = (y0 * oldWidth + x0) * 4\n      oldPixelIndex01 = (y0 * oldWidth + x1) * 4\n      oldPixelIndex10 = (y1 * oldWidth + x0) * 4\n      oldPixelIndex11 = (y1 * oldWidth + x1) * 4\n      newPixelIndex = (i * newWidth + j) * 4\n\n      newImageData.data[newPixelIndex] =\n        (1.0 - dy) * ((1.0 - dx) * oldImageData.data[oldPixelIndex00] + dx * oldImageData.data[oldPixelIndex01]) +\n        dy * ((1.0 - dx) * oldImageData.data[oldPixelIndex10] + dx * oldImageData.data[oldPixelIndex11])\n      newImageData.data[newPixelIndex + 1] =\n        (1.0 - dy) * ((1.0 - dx) * oldImageData.data[oldPixelIndex00 + 1] + dx * oldImageData.data[oldPixelIndex01 + 1]) +\n        dy * ((1.0 - dx) * oldImageData.data[oldPixelIndex10 + 1] + dx * oldImageData.data[oldPixelIndex11 + 1])\n      newImageData.data[newPixelIndex + 2] =\n        (1.0 - dy) * ((1.0 - dx) * oldImageData.data[oldPixelIndex00 + 2] + dx * oldImageData.data[oldPixelIndex01 + 2]) +\n        dy * ((1.0 - dx) * oldImageData.data[oldPixelIndex10 + 2] + dx * oldImageData.data[oldPixelIndex11 + 2])\n      newImageData.data[newPixelIndex + 3] =\n        (1.0 - dy) * ((1.0 - dx) * oldImageData.data[oldPixelIndex00 + 3] + dx * oldImageData.data[oldPixelIndex01 + 3]) +\n        dy * ((1.0 - dx) * oldImageData.data[oldPixelIndex10 + 3] + dx * oldImageData.data[oldPixelIndex11 + 3])\n    }\n  }\n\n  return newImageData\n}\n\nexport function resizeBiquadraticInterpolation (oldImageData, newImageData, newWidth, newHeight) {\n  let interpolate = function interpolate (f1, f2, f3, d) {\n      return (f2 + (f3 - f1) * d + (f1 - 2 * f2 + f3) * d * d)\n    },\n    interpolateNormalize = function interpolateNormalize (f1, f2, f3, d) {\n      let result = interpolate(f1, f2, f3, d)\n      if (result > 255) {\n        return 255\n      }\n      if (result < 0) {\n        return 0\n      }\n      return Math.floor(result)\n    },\n    oldWidth = oldImageData.width,\n    oldHeight = oldImageData.height,\n    ratioX = oldWidth / newWidth,\n    ratioY = oldHeight / newHeight,\n    x, y,\n    x0, y0, x1, y1, x2, y2,\n    dx, dy,\n    oldPixelIndex00, oldPixelIndex01, oldPixelIndex02,\n    oldPixelIndex10, oldPixelIndex11, oldPixelIndex12,\n    oldPixelIndex20, oldPixelIndex21, oldPixelIndex22,\n    newPixelIndex,\n    i, j\n\n  for (i = 0; i < newHeight; i += 1) {\n    for (j = 0; j < newWidth; j += 1) {\n      x = j * ratioX\n      y = i * ratioY\n\n      x1 = Math.floor(x)\n      y1 = Math.floor(y)\n      dx = (x - x1) * 0.5\n      dy = (y - y1) * 0.5\n\n      if (x1 - 1 >= 0) {\n        x0 = x1 - 1\n      }\n      else {\n        x0 = x1\n      }\n\n      if (y1 - 1 >= 0) {\n        y0 = y1 - 1\n      }\n      else {\n        y0 = y1\n      }\n\n      if (x1 + 1 >= oldWidth) {\n        x2 = x1\n      }\n      else {\n        x2 = x1 + 1\n      }\n\n      if (y1 + 1 >= oldWidth) {\n        y2 = y1\n      }\n      else {\n        y2 = y1 + 1\n      }\n\n      oldPixelIndex00 = (y0 * oldWidth + x0) * 4\n      oldPixelIndex01 = (y0 * oldWidth + x1) * 4\n      oldPixelIndex02 = (y0 * oldWidth + x2) * 4\n      oldPixelIndex10 = (y1 * oldWidth + x0) * 4\n      oldPixelIndex11 = (y1 * oldWidth + x1) * 4\n      oldPixelIndex12 = (y1 * oldWidth + x2) * 4\n      oldPixelIndex20 = (y2 * oldWidth + x0) * 4\n      oldPixelIndex21 = (y2 * oldWidth + x1) * 4\n      oldPixelIndex22 = (y2 * oldWidth + x2) * 4\n\n      newPixelIndex = (i * newWidth + j) * 4\n\n      newImageData.data[newPixelIndex] = (\n        interpolateNormalize(\n          interpolate(oldImageData.data[oldPixelIndex00], oldImageData.data[oldPixelIndex01], oldImageData.data[oldPixelIndex02], dx),\n          interpolate(oldImageData.data[oldPixelIndex10], oldImageData.data[oldPixelIndex11], oldImageData.data[oldPixelIndex12], dx),\n          interpolate(oldImageData.data[oldPixelIndex20], oldImageData.data[oldPixelIndex21], oldImageData.data[oldPixelIndex22], dx),\n          dy)\n      )\n\n      newImageData.data[newPixelIndex + 1] = (\n        interpolateNormalize(\n          interpolate(oldImageData.data[oldPixelIndex00 + 1], oldImageData.data[oldPixelIndex01 + 1], oldImageData.data[oldPixelIndex02 + 1], dx),\n          interpolate(oldImageData.data[oldPixelIndex10 + 1], oldImageData.data[oldPixelIndex11 + 1], oldImageData.data[oldPixelIndex12 + 1], dx),\n          interpolate(oldImageData.data[oldPixelIndex20 + 1], oldImageData.data[oldPixelIndex21 + 1], oldImageData.data[oldPixelIndex22 + 1], dx),\n          dy)\n      )\n\n      newImageData.data[newPixelIndex + 2] = (\n        interpolateNormalize(\n          interpolate(oldImageData.data[oldPixelIndex00 + 2], oldImageData.data[oldPixelIndex01 + 2], oldImageData.data[oldPixelIndex02 + 2], dx),\n          interpolate(oldImageData.data[oldPixelIndex10 + 2], oldImageData.data[oldPixelIndex11 + 2], oldImageData.data[oldPixelIndex12 + 2], dx),\n          interpolate(oldImageData.data[oldPixelIndex20 + 2], oldImageData.data[oldPixelIndex21 + 2], oldImageData.data[oldPixelIndex22 + 2], dx),\n          dy)\n      )\n\n      newImageData.data[newPixelIndex + 3] = (\n        interpolateNormalize(\n          interpolate(oldImageData.data[oldPixelIndex00 + 3], oldImageData.data[oldPixelIndex01 + 3], oldImageData.data[oldPixelIndex02 + 3], dx),\n          interpolate(oldImageData.data[oldPixelIndex10 + 3], oldImageData.data[oldPixelIndex11 + 3], oldImageData.data[oldPixelIndex12 + 3], dx),\n          interpolate(oldImageData.data[oldPixelIndex20 + 3], oldImageData.data[oldPixelIndex21 + 3], oldImageData.data[oldPixelIndex22 + 3], dx),\n          dy)\n      )\n    }\n  }\n\n  return newImageData\n}","import BaseOnLayerObject from './BaseOnLayer'\nimport CanvasWrapper from './CanvasWrapper'\nimport { isBrowser } from '../helpers/common'\n\nclass Image extends BaseOnLayerObject {\n  url = null;\n\n  image = null;\n\n  constructor () {\n    super()\n\n    if (!isBrowser()) {\n      let canvas = require('canvas')\n      this.image = new canvas.Image()\n    }\n    else {\n      this.image = new window.Image()\n\n      // hide from viewport\n      this.image.style.position = 'absolute'\n      this.image.style.left = '-99999px'\n      this.image.style.top = '-99999px'\n    }\n  }\n\n  load (url, callback) {\n    let load = () => {\n      this.setWidth(!isBrowser() ? this.image.width : this.image.clientWidth)\n      this.setHeight(!isBrowser() ? this.image.height : this.image.clientHeight)\n\n      // get image data\n      this.canvas = new CanvasWrapper(this.getWidth(), this.getHeight())\n      this.canvas.getContext().drawImage(this.image, 0, 0, this.getWidth(), this.getHeight())\n\n      if (isBrowser()) {\n        document.body.removeChild(this.image)\n      }\n\n      if (typeof callback === 'function') {\n        callback.call(this)\n      }\n    }\n\n    this.url = url\n\n    if (isBrowser()) {\n      document.body.appendChild(this.image)\n      this.image.onload = function () {\n        load()\n      }\n      this.image.src = url\n    }\n    else {\n      let fs = require('fs')\n      this.image.src = fs.readFileSync(url)\n      load()\n    }\n  }\n}\n\nexport default Image\n","import CanvasWrapper from './CanvasWrapper'\nimport {\n  resizeNearestNeighbour,\n  resizeBilinearInterpolation,\n  resizeBiquadraticInterpolation\n} from '../helpers/resize'\n\nclass BaseOnLayerObject {\n  imageData = null\n\n  canvas = null\n\n  width = 0\n\n  height = 0\n\n  getWidth () {\n    return this.width\n  }\n\n  getHeight () {\n    return this.height\n  }\n\n  setWidth (value) {\n    this.width = value\n    return this\n  }\n\n  setHeight (value) {\n    this.height = value\n    return this\n  }\n\n  getImageData () {\n    if (!this.imageData) {\n      this.imageData = this.canvas.getContext().getImageData(0, 0, this.getWidth(), this.getHeight())\n    }\n    return this.imageData\n  }\n\n  setImageData (value) {\n    this.imageData = value\n    return this\n  }\n\n  resize (newWidth, newHeight, mode = 'nearest-neighbour') {\n    let oldImageData = this.getImageData(),\n      canvas = new CanvasWrapper(newWidth, newHeight),\n      newImageData = canvas.getContext().createImageData(newWidth, newHeight)\n\n    switch (mode) {\n      case 'nearest-neighbour':\n        newImageData = resizeNearestNeighbour(oldImageData, newImageData, newWidth, newHeight)\n        break\n\n      case 'bilinear-interpolation':\n        newImageData = resizeBilinearInterpolation(oldImageData, newImageData, newWidth, newHeight)\n        break\n\n      case 'biquadratic-interpolation':\n        newImageData = resizeBiquadraticInterpolation(oldImageData, newImageData, newWidth, newHeight)\n        break\n\n      default:\n        canvas.destroy()\n        return this\n    }\n\n    canvas.destroy()\n\n    return this.setWidth(newWidth)\n      .setHeight(newHeight)\n      .setImageData(newImageData)\n  }\n}\n\nexport default BaseOnLayerObject\n"],"names":["module","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","blendingModes","lighten","bottomPixel","topPixel","darken","multiply","average","add","Math","min","subtract","difference","abs","negation","screen","exclusion","overlay","softLight","hardLight","colorDodge","colorBurn","max","linearDodge","linearBurn","linearLight","vividLight","pinLight","hardMix","reflect","glow","phoenix","mergeImageData","bottom","top","pixelCallback","x","y","xx","yy","firstOldPixelIndex","firstNewPixelIndex","pixelResult","height","width","imageData","data","g","b","a","blendingMode","mergePixelCallback","parameters","mergedR","mergedG","mergedB","mergedA","rootA","outA","rootR","rootG","rootB","mod","floor","triangle","brightness","pixel","isBrowser","window","CanvasWrapper","this","canvas","context","initialize","document","createElement","style","position","left","setWidth","setHeight","body","appendChild","Canvas","setAttribute","getContext","type","toDataURL","removeChild","BaseEffect","opts","BasePointEffect","getDefaultParameters","firstPixelIndex","result","imageDataCopy","Uint8ClampedArray","getIndex","normalizePixelValue","sandbox","getPixel","index","getOriginalPixel","setPixel","rgba","before","callback","set","GrayScaleEffect","newRGB","sepiaValue","tmp","ContrastEffect","contrast","factor","BrightnessEffect","DiffusionEffect","matrix","levels","colorDither","granulate","i","sum","map","div","length","parseInt","red2","green2","blue2","tmpPixel","tmpRed","tmpGreen","tmpBlue","j","iy","jx","w","grayScale","red1","green1","blue1","DitherEffect","matrices","ditherMagic4x4Matrix","ditherOrdered4x4Matrix","ditherLines4x4Matrix","dither90Halftone6x6Matrix","ditherOrdered6x6Matrix","ditherOrdered8x8Matrix","ditherCluster3Matrix","ditherCluster4Matrix","ditherCluster8Matrix","rows","cols","sqrt","col","row","v","red","green","blue","ExposureEffect","exposure","exp","GainEffect","gain","bias","GammaEffect","gammaRed","gammaGreen","gammaBlue","table","pow","mixColors","t","rgb1","rgb2","RGBtoCIELab","xyz","let_R","let_G","let_B","z","RGBtoXYZ","let_X","let_Y","let_Z","l","HSBAdjustEffect","h","s","hsb","hue","saturation","cmax","cmin","redc","greenc","bluec","RGBtoHSB","PI","f","p","q","HSBtoRGB","InvertAlphaEffect","InvertEffect","LevelsEffect","low","high","lowOutput","highOutput","histogram","offset","stride","Array","minValue","maxValue","minFrequency","maxFrequency","mean","numSamples","isGray","Infinity","getNumSamples","getFrequency","channel","getMinFrequency","getMaxFrequency","getMinValue","getMaxValue","getMeanValue","lut","RescaleEffect","scale","SolarizeEffect","ThresholdEffect","TritoneEffect","shadowColor","midColor","highColor","DissolveEffect","density","softness","minDensity","maxDensity","random","smoothStep","EdgeEffect","matrixes","robertsV","robertsH","prewittV","prewittH","sobelV","sobelH","freiChenV","freiChenH","hEdgeMatrix","vEdgeMatrix","ix","mOffset","pixel2","rh","gh","bh","rv","gv","bv","ChannelMixEffect","blueGreen","redBlue","greenRed","intoR","intoG","intoB","AutoContrastEffect","remap","BaseTransformEffect","newXY","newX","newY","oldPixelIndex","newPixelIndex","DiffuseEffect","sinTable","cosTable","angle","sin","cos","distance","KaleidoscopeEffect","centreX","centreY","angle2","sides","radius","icentreX","icentreY","dx","dy","theta","atan2","c","radiusC","isInit","init","B","BM","N","P","G1","G2","G3","k","normalize2","normalize3","arr","sCurve","lerp","noise1","bx0","bx1","rx0","rx1","sx","u","noise2","by0","by1","b00","b10","b01","b11","ry0","ry1","sy","noise3","bz0","bz1","rz0","rz1","sz","turbulence3","octaves","MarbleEffect","xScale","yScale","amount","turbulence","displacementMap","noiseHelper","displacement","PinchEffect","radius2","e","RippleEffect","xAmplitude","yAmplitute","xWaveLength","yWaveLength","waveType","fx","fy","nx","ny","noise","ShearEffect","xAngle","yAngle","xOffset","yOffset","shx","shy","SphereEffect","refractionIndex","a2","b2","x2","y2","rRefraction","z2","acos","angle1","asin","ret","tan","SwimEffect","time","stretch","m00","m01","m10","m11","TwirlEffect","iCentreX","iCentreY","WaterEffect","waveLength","amplitude","phase","distance2","CircleEffect","spreadAngle","RotateEffect","wrap","PolarEffect","sqr","theta2","atan","PerspectiveEffect","x0","y0","x1","y1","x3","y3","dx1","dy1","dx2","dy2","dx3","dy3","a11","a21","a31","a12","a22","a32","a13","a23","a33","unitSquareToQuad","A","C","D","E","F","G","H","I","BaseCustomEffect","getOriginalPixelByIndex","setPixelByIndex","AutoWhiteBalanceEffect","intensity","lab","avgSumB","aDelta","bDelta","sumA","sumB","CIELabToXYZ","FillColorEffect","color","hex","replace","FlipEffect","operation","newRow","newCol","BlockEffect","blockSize","by","bx","BorderEffect","leftBorder","rightBorder","topBorder","bottomBorder","borderColor","EmbossEffect","azimuth","elevation","width45","emboss","Nx","Ny","Nz","Lx","Ly","Lz","Nz2","NzLz","NdotL","s1","s2","s3","shade","background","bumpMapWidth","bumpPixels","pixelScale","bumpIndex","push","ComponentStretchingEffect","minR","minG","minB","maxR","maxG","maxB","availableEffects","_class","getName","GrayScale","Sepia","Contrast","Brightness","Diffusion","Dither","Exposure","Gain","Gamma","HSBAdjust","InvertAlpha","Invert","Levels","Rescale","Solarize","Threshold","Tritone","Diffuse","Dissolve","Kaleidoscope","Marble","Pinch","Ripple","Shear","Sphere","Swim","Twirl","Water","Edge","ChannelMix","Circle","Rotate","Offset","Polar","Perspective","AutoContrast","AutoWhiteBalance","FillColor","Flip","Block","Border","Emboss","ComponentStretching","EffectsRepository","name","LayerObject","layer","effects","getWidth","getHeight","getImageData","effect","run","params","moveX","moveY","setX","setY","newWidth","newHeight","mode","isLayerResize","ratioX","ratioY","moveXY","getX","getY","getObject","resize","startX","startY","object","oldImageData","newImageData","createImageData","oldWidth","cropImageData","setImageData","setXY","Layer","objects","background_color","applyEffect","put","selector","imageType","exportLayer","container","querySelector","exportedImage","Image","src","layerObject","exportObject","destroy","crop","Project","layers","startTime","Date","getTime","Error","getParameter","putImageData","fs","buff","Buffer","writeFile","resizeNearestNeighbour","resizeBilinearInterpolation","oldPixelIndex00","oldPixelIndex01","oldPixelIndex10","oldPixelIndex11","oldHeight","resizeBiquadraticInterpolation","oldPixelIndex02","oldPixelIndex12","oldPixelIndex20","oldPixelIndex21","oldPixelIndex22","interpolate","f1","f2","f3","interpolateNormalize","image","url","load","clientWidth","clientHeight","drawImage","onload","readFileSync","BaseOnLayerObject"],"sourceRoot":""}