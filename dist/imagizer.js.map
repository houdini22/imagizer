{"version":3,"file":"imagizer.js","mappings":"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","sources":["webpack://imagizer/external \"canvas\"","webpack://imagizer/external \"fs\"","webpack://imagizer/webpack/bootstrap","webpack://imagizer/webpack/runtime/define property getters","webpack://imagizer/webpack/runtime/hasOwnProperty shorthand","webpack://imagizer/webpack/runtime/make namespace object","webpack://imagizer/./src/helpers/common.tsx","webpack://imagizer/./src/classes/CanvasWrapper.tsx","webpack://imagizer/./src/classes/effects/Base.tsx","webpack://imagizer/./src/classes/effects/BasePoint.tsx","webpack://imagizer/./src/classes/effects/point/GrayScale.tsx","webpack://imagizer/./src/classes/effects/point/Sepia.tsx","webpack://imagizer/./src/classes/effects/point/Contrast.tsx","webpack://imagizer/./src/classes/effects/point/Brightness.tsx","webpack://imagizer/./src/classes/effects/point/Diffusion.tsx","webpack://imagizer/./src/classes/effects/point/Dither.tsx","webpack://imagizer/./src/classes/effects/point/Exposure.tsx","webpack://imagizer/./src/classes/effects/point/Gain.tsx","webpack://imagizer/./src/classes/effects/point/Gamma.tsx","webpack://imagizer/./src/helpers/color.tsx","webpack://imagizer/./src/classes/effects/point/HSBAdjust.tsx","webpack://imagizer/./src/classes/effects/point/InvertAlpha.tsx","webpack://imagizer/./src/classes/effects/point/Invert.tsx","webpack://imagizer/./src/classes/effects/point/Levels.tsx","webpack://imagizer/./src/classes/effects/point/Rescale.tsx","webpack://imagizer/./src/classes/effects/point/Solarize.tsx","webpack://imagizer/./src/classes/effects/point/Threshold.tsx","webpack://imagizer/./src/classes/effects/point/Tritone.tsx","webpack://imagizer/./src/classes/effects/point/Dissolve.tsx","webpack://imagizer/./src/classes/effects/point/Edge.tsx","webpack://imagizer/./src/classes/effects/point/ChannelMix.tsx","webpack://imagizer/./src/classes/effects/point/AutoContrast.tsx","webpack://imagizer/./src/classes/effects/BaseTransform.tsx","webpack://imagizer/./src/classes/effects/transform/Diffuse.tsx","webpack://imagizer/./src/classes/effects/transform/Kaleidoscope.tsx","webpack://imagizer/./src/helpers/noise.tsx","webpack://imagizer/./src/classes/effects/transform/Marble.tsx","webpack://imagizer/./src/classes/effects/transform/Pinch.tsx","webpack://imagizer/./src/classes/effects/transform/Ripple.tsx","webpack://imagizer/./src/classes/effects/transform/Shear.tsx","webpack://imagizer/./src/classes/effects/transform/Sphere.tsx","webpack://imagizer/./src/classes/effects/transform/Swim.tsx","webpack://imagizer/./src/classes/effects/transform/Twirl.tsx","webpack://imagizer/./src/classes/effects/transform/Water.tsx","webpack://imagizer/./src/classes/effects/transform/Circle.tsx","webpack://imagizer/./src/classes/effects/transform/Rotate.tsx","webpack://imagizer/./src/classes/effects/transform/Offset.tsx","webpack://imagizer/./src/classes/effects/transform/Polar.tsx","webpack://imagizer/./src/classes/effects/transform/Perspective.tsx","webpack://imagizer/./src/classes/effects/BaseCustom.tsx","webpack://imagizer/./src/classes/effects/custom/AutoWhiteBalance.tsx","webpack://imagizer/./src/classes/effects/custom/FillColor.tsx","webpack://imagizer/./src/classes/effects/custom/Flip.tsx","webpack://imagizer/./src/classes/effects/custom/Block.tsx","webpack://imagizer/./src/classes/effects/custom/Border.tsx","webpack://imagizer/./src/classes/effects/custom/Emboss.tsx","webpack://imagizer/./src/classes/effects/custom/ComponentStretching.tsx","webpack://imagizer/./src/classes/EffectsRepository.tsx","webpack://imagizer/./src/classes/LayerObject.tsx","webpack://imagizer/./src/classes/Layer.tsx","webpack://imagizer/./src/classes/Project.tsx","webpack://imagizer/./src/helpers/resize.tsx","webpack://imagizer/./src/classes/Image.tsx","webpack://imagizer/./src/classes/BaseOnLayer.tsx"],"sourcesContent":["module.exports = require(\"canvas\");","module.exports = require(\"fs\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","let blendingModes = {\n  lighten: function (bottomPixel, topPixel) {\n    return topPixel > bottomPixel ? topPixel : bottomPixel;\n  },\n  darken: function (bottomPixel, topPixel) {\n    return topPixel > bottomPixel ? bottomPixel : topPixel;\n  },\n  multiply: function (bottomPixel, topPixel) {\n    return (bottomPixel * topPixel) / 255;\n  },\n  average: function (bottomPixel, topPixel) {\n    return bottomPixel + topPixel / 2;\n  },\n  add: function (bottomPixel, topPixel) {\n    return Math.min(255, bottomPixel + topPixel);\n  },\n  subtract: function (bottomPixel, topPixel) {\n    return bottomPixel + topPixel < 255 ? 0 : bottomPixel + topPixel - 255;\n  },\n  difference: function (bottomPixel, topPixel) {\n    return Math.abs(bottomPixel - topPixel);\n  },\n  negation: function (bottomPixel, topPixel) {\n    return 255 - Math.abs(255 - bottomPixel - topPixel);\n  },\n  screen: function (bottomPixel, topPixel) {\n    return 255 - (((255 - bottomPixel) * (255 - topPixel)) >> 8);\n  },\n  exclusion: function (bottomPixel, topPixel) {\n    return bottomPixel + topPixel - (2 * bottomPixel * topPixel) / 255;\n  },\n  overlay: function (bottomPixel, topPixel) {\n    return topPixel < 128\n      ? (2 * bottomPixel * topPixel) / 255\n      : 255 - (2 * (255 - bottomPixel) * (255 - topPixel)) / 255;\n  },\n  softLight: function (bottomPixel, topPixel) {\n    return topPixel < 128\n      ? 2 * ((bottomPixel >> 1) + 64) * (topPixel / 255)\n      : 255 - (2 * (255 - ((bottomPixel >> 1) + 64)) * (255 - topPixel)) / 255;\n  },\n  hardLight: function (bottomPixel, topPixel) {\n    return blendingModes.softLight(topPixel, bottomPixel);\n  },\n  colorDodge: function (bottomPixel, topPixel) {\n    return topPixel === 255\n      ? topPixel\n      : Math.min(255, (bottomPixel << 8) / (255 - topPixel));\n  },\n  colorBurn: function (bottomPixel, topPixel) {\n    return topPixel === 0\n      ? topPixel\n      : Math.max(0, 255 - ((255 - bottomPixel) << 8) / topPixel);\n  },\n  linearDodge: function (bottomPixel, topPixel) {\n    return blendingModes.add(bottomPixel, topPixel);\n  },\n  linearBurn: function (bottomPixel, topPixel) {\n    return blendingModes.subtract(bottomPixel, topPixel);\n  },\n  linearLight: function (bottomPixel, topPixel) {\n    return topPixel < 128\n      ? blendingModes.linearBurn(bottomPixel, 2 * topPixel)\n      : blendingModes.linearDodge(bottomPixel, 2 * (topPixel - 128));\n  },\n  vividLight: function (bottomPixel, topPixel) {\n    return topPixel < 128\n      ? blendingModes.colorBurn(bottomPixel, 2 * topPixel)\n      : blendingModes.colorDodge(bottomPixel, 2 * (topPixel - 128));\n  },\n  pinLight: function (bottomPixel, topPixel) {\n    return topPixel < 128\n      ? blendingModes.darken(bottomPixel, 2 * topPixel)\n      : blendingModes.lighten(bottomPixel, 2 * (topPixel - 128));\n  },\n  hardMix: function (bottomPixel, topPixel) {\n    return blendingModes.vividLight(bottomPixel, topPixel) < 128 ? 0 : 255;\n  },\n  reflect: function (bottomPixel, topPixel) {\n    return topPixel === 255\n      ? topPixel\n      : Math.min(255, (bottomPixel * bottomPixel) / (255 - topPixel));\n  },\n  glow: function (bottomPixel, topPixel) {\n    return blendingModes.reflect(topPixel, bottomPixel);\n  },\n  phoenix: function (bottomPixel, topPixel) {\n    return (\n      Math.min(bottomPixel, topPixel) - Math.max(bottomPixel, topPixel) + 255\n    );\n  },\n};\n\nexport function mergeImageData(bottom, top, pixelCallback) {\n  let x, y, xx, yy, firstOldPixelIndex, firstNewPixelIndex, pixelResult;\n\n  for (\n    y = top.y, yy = 0;\n    y < bottom.height && yy < top.height;\n    y += 1, yy += 1\n  ) {\n    for (\n      x = top.x, xx = 0;\n      x < bottom.width && xx < top.width;\n      x += 1, xx += 1\n    ) {\n      if (xx < top.width && yy < top.height) {\n        // overwrite only rect-size of current layer\n        firstOldPixelIndex = y * bottom.width * 4 + x * 4;\n        firstNewPixelIndex = yy * top.width * 4 + xx * 4;\n\n        pixelResult = pixelCallback(\n          {\n            r: bottom.imageData.data[firstOldPixelIndex + 0],\n            g: bottom.imageData.data[firstOldPixelIndex + 1],\n            b: bottom.imageData.data[firstOldPixelIndex + 2],\n            a: bottom.imageData.data[firstOldPixelIndex + 3],\n          },\n          {\n            r: top.imageData.data[firstNewPixelIndex + 0],\n            g: top.imageData.data[firstNewPixelIndex + 1],\n            b: top.imageData.data[firstNewPixelIndex + 2],\n            a: top.imageData.data[firstNewPixelIndex + 3],\n          },\n          x,\n          y,\n          {\n            blendingMode: top.blendingMode,\n          }\n        );\n\n        if (pixelResult !== false) {\n          // if skip change\n          bottom.imageData.data[firstOldPixelIndex + 0] = pixelResult.r;\n          bottom.imageData.data[firstOldPixelIndex + 1] = pixelResult.g;\n          bottom.imageData.data[firstOldPixelIndex + 2] = pixelResult.b;\n          bottom.imageData.data[firstOldPixelIndex + 3] = pixelResult.a;\n        }\n      }\n    }\n  }\n  return bottom.imageData;\n}\n\nexport function mergePixelCallback(bottomPixel, topPixel, x, y, parameters) {\n  if (topPixel.a === 0) {\n    return false; // skip change - opacity is full\n  }\n\n  // alpha compositing\n  let mergedR,\n    mergedG,\n    mergedB,\n    mergedA = topPixel.a / 255,\n    rootA = (bottomPixel.a / 255) * (1 - mergedA),\n    outA = mergedA + (bottomPixel.a * (1 - mergedA)) / 255;\n\n  switch (parameters.blendingMode) {\n    case \"lighten\":\n    case \"darken\":\n    case \"multiply\":\n    case \"average\":\n    case \"add\":\n    case \"subtract\":\n    case \"difference\":\n    case \"negation\":\n    case \"screen\":\n    case \"exclusion\":\n    case \"overlay\":\n    case \"softLight\":\n    case \"hardLight\":\n    case \"colorDodge\":\n    case \"colorBurn\":\n    case \"linearDodge\":\n    case \"linearBurn\":\n    case \"linearLight\":\n    case \"vividLight\":\n    case \"pinLight\":\n    case \"hardMix\":\n    case \"reflect\":\n    case \"glow\":\n    case \"phoenix\":\n      topPixel.r = blendingModes[parameters.blendingMode](\n        bottomPixel.r,\n        topPixel.r\n      );\n      topPixel.g = blendingModes[parameters.blendingMode](\n        bottomPixel.g,\n        topPixel.g\n      );\n      topPixel.b = blendingModes[parameters.blendingMode](\n        bottomPixel.b,\n        topPixel.b\n      );\n      break;\n\n    default:\n      break;\n  }\n\n  let rootR = bottomPixel.r;\n  let rootG = bottomPixel.g;\n  let rootB = bottomPixel.b;\n\n  mergedR = topPixel.r * mergedA + rootR * rootA;\n  mergedG = topPixel.g * mergedA + rootG * rootA;\n  mergedB = topPixel.b * mergedA + rootB * rootA;\n\n  mergedR = outA === 0 ? 0 : mergedR / outA;\n  mergedG = outA === 0 ? 0 : mergedG / outA;\n  mergedB = outA === 0 ? 0 : mergedB / outA;\n\n  return {\n    r: Math.min(Math.max(0, mergedR), 255) | 0,\n    g: Math.min(Math.max(0, mergedG), 255) | 0,\n    b: Math.min(Math.max(0, mergedB), 255) | 0,\n    a: (255 * outA) | 0,\n  };\n}\n\nexport function cropImageData(\n  oldImageData,\n  newImageData,\n  startX,\n  startY,\n  width,\n  height\n) {\n  let oldWidth = oldImageData.width,\n    newWidth = newImageData.width,\n    x,\n    y,\n    xx,\n    yy,\n    firstOldPixelIndex,\n    firstNewPixelIndex;\n\n  for (\n    y = startY, yy = 0;\n    y < startY + height && yy < height;\n    y += 1, yy += 1\n  ) {\n    for (\n      x = startX, xx = 0;\n      x < startX + width && xx < width;\n      x += 1, xx += 1\n    ) {\n      firstOldPixelIndex = y * oldWidth * 4 + x * 4;\n      firstNewPixelIndex = yy * newWidth * 4 + xx * 4;\n\n      newImageData.data[firstNewPixelIndex] =\n        oldImageData.data[firstOldPixelIndex];\n      newImageData.data[firstNewPixelIndex + 1] =\n        oldImageData.data[firstOldPixelIndex + 1];\n      newImageData.data[firstNewPixelIndex + 2] =\n        oldImageData.data[firstOldPixelIndex + 2];\n      newImageData.data[firstNewPixelIndex + 3] =\n        oldImageData.data[firstOldPixelIndex + 3];\n    }\n  }\n\n  return newImageData;\n}\n\nexport function mod(a, b) {\n  let n = Math.floor(a / b);\n  a -= n * b;\n  if (a < 0) {\n    return a + b;\n  }\n  return a;\n}\n\nexport function triangle(x) {\n  let r = mod(x, 1);\n  return 2 * (r < 0.5 ? r : 1 - r);\n}\n\nexport function smoothStep(a, b, x) {\n  if (x < a) {\n    return 0;\n  }\n  if (x >= b) {\n    return 1;\n  }\n  x = (x - a) / (b - a);\n  return x * x * (3 - 2 * x);\n}\n\nexport function brightness(pixel) {\n  return (pixel.r + pixel.g + pixel.b) / 3;\n}\n\nexport function isBrowser() {\n  return typeof window !== \"undefined\";\n}\n","import { isBrowser } from \"../helpers/common\";\n\nclass CanvasWrapper {\n  canvas = null;\n\n  context = null;\n\n  width = 0;\n\n  height = 0;\n\n  constructor(width, height) {\n    this.initialize(width, height);\n  }\n\n  initialize(width = 0, height = 0) {\n    if (!isBrowser()) {\n      let Canvas = require(\"canvas\");\n      this.canvas = new Canvas(width, height);\n    } else {\n      this.canvas = document.createElement(\"canvas\");\n\n      // hide from viewport\n      this.canvas.style.position = \"absolute\";\n      this.canvas.style.left = \"-99999px\";\n      this.canvas.style.top = \"-99999px\";\n\n      this.setWidth(width);\n      this.setHeight(height);\n\n      document.body.appendChild(this.canvas);\n    }\n  }\n\n  setWidth(value) {\n    this.canvas.setAttribute(\"width\", \"\" + value);\n    this.width = value;\n    return this;\n  }\n\n  setHeight(value) {\n    this.canvas.setAttribute(\"height\", \"\" + value);\n    this.height = value;\n    return this;\n  }\n\n  getContext() {\n    if (!this.context) {\n      this.context = this.canvas.getContext(\"2d\");\n    }\n    return this.context;\n  }\n\n  getCanvas() {\n    return this.canvas;\n  }\n\n  toDataURL(type) {\n    return this.canvas.toDataURL(type);\n  }\n\n  destroy() {\n    if (isBrowser()) {\n      document.body.removeChild(this.canvas);\n    }\n    this.canvas = null;\n    this.context = null;\n  }\n}\n\nexport default CanvasWrapper;\n","class BaseEffect {\n  opts = {};\n\n  constructor(opts = {}) {\n    this.opts = opts;\n  }\n\n  getDefaultParameters() {\n    return {};\n  }\n\n  before(parameters, width, height, imageData) {\n    return {};\n  }\n\n  static getName() {\n    throw \"Extend it.\";\n  }\n}\n\nexport default BaseEffect;\n","import BaseEffect from \"./Base\";\n\nclass BasePointEffect extends BaseEffect {\n  callback(pixel, x, y, parameters, width, height) {\n    throw \"Extend it.\";\n  }\n\n  run(imageData, parameters) {\n    parameters = parameters = {\n      ...this.getDefaultParameters(),\n      ...parameters,\n    };\n\n    let x,\n      y,\n      firstPixelIndex,\n      result,\n      imageDataCopy = new Uint8ClampedArray(imageData.data), // copy image data\n      /**\n       * Get ImageData array index from x and y position\n       * @param x\n       * @param y\n       * @returns {number}\n       */\n      getIndex = function getIndex(x, y) {\n        return y * imageData.width * 4 + x * 4;\n      },\n      normalizePixelValue = function (value) {\n        return Math.min(Math.max(value, 0), 255) | 0;\n      },\n      sandbox = {\n        // object invoked as this in effect callback\n        /**\n         * Get changed pixel\n         * @param {int} x\n         * @param {int} y\n         * @returns {{r: *, g: *, b: *, a: *}}\n         */\n        getPixel: function (x, y) {\n          let index = getIndex(x, y);\n          return {\n            r: imageDataCopy[index + 0],\n            g: imageDataCopy[index + 1],\n            b: imageDataCopy[index + 2],\n            a: imageDataCopy[index + 3],\n          };\n        },\n        /**\n         * Get original pixel.\n         * @param {int} x\n         * @param {int} y\n         * @returns {{r: *, g: *, b: *, a: *}}\n         */\n        getOriginalPixel: function (x, y) {\n          let index = getIndex(x, y);\n          return {\n            r: imageData.data[index + 0],\n            g: imageData.data[index + 1],\n            b: imageData.data[index + 2],\n            a: imageData.data[index + 3],\n          };\n        },\n        /**\n         * Set new pixel\n         * @param {int} x\n         * @param {int} y\n         * @param {object} rgba\n         */\n        setPixel: function (x, y, rgba) {\n          let index = getIndex(x, y);\n          imageDataCopy[index + 0] = normalizePixelValue(rgba.r);\n          imageDataCopy[index + 1] = normalizePixelValue(rgba.g);\n          imageDataCopy[index + 2] = normalizePixelValue(rgba.b);\n          imageDataCopy[index + 3] = normalizePixelValue(rgba.a);\n        },\n        /**\n         * Data created by effect init function\n         */\n        data: null,\n        /**\n         * ImageData width\n         */\n        width: imageData.width,\n        /**\n         * ImageData height\n         */\n        height: imageData.height,\n      };\n\n    sandbox.data = this.before.call(\n      sandbox,\n      parameters,\n      imageData.width,\n      imageData.height,\n      imageData\n    );\n\n    for (y = 0; y < imageData.height; y += 1) {\n      for (x = 0; x < imageData.width; x += 1) {\n        firstPixelIndex = getIndex(x, y);\n\n        result = this.callback.call(\n          sandbox,\n          {\n            r: imageDataCopy[firstPixelIndex + 0],\n            g: imageDataCopy[firstPixelIndex + 1],\n            b: imageDataCopy[firstPixelIndex + 2],\n            a: imageDataCopy[firstPixelIndex + 3],\n          },\n          x,\n          y,\n          parameters,\n          imageData.width,\n          imageData.height\n        );\n\n        if (typeof result === \"object\") {\n          imageDataCopy[firstPixelIndex + 0] = normalizePixelValue(result.r);\n          imageDataCopy[firstPixelIndex + 1] = normalizePixelValue(result.g);\n          imageDataCopy[firstPixelIndex + 2] = normalizePixelValue(result.b);\n          imageDataCopy[firstPixelIndex + 3] = normalizePixelValue(result.a);\n        }\n      }\n    }\n\n    imageData.data.set(imageDataCopy);\n    return imageData;\n  }\n}\n\nexport default BasePointEffect;\n","import BasePointEffect from \"../BasePoint\";\n\nclass GrayScaleEffect extends BasePointEffect {\n  static getName() {\n    return \"gray-scale\";\n  }\n\n  callback(pixel, x, y, parameters, width, height) {\n    let newRGB = 0.299 * pixel.r + 0.587 * pixel.g + 0.114 * pixel.b;\n    return {\n      r: newRGB,\n      g: newRGB,\n      b: newRGB,\n      a: pixel.a,\n    };\n  }\n}\n\nexport default GrayScaleEffect;\n","import BasePointEffect from \"../BasePoint\";\n\nclass GrayScaleEffect extends BasePointEffect {\n  static getName() {\n    return \"sepia\";\n  }\n\n  getDefaultParameters() {\n    return {\n      sepiaValue: 1,\n    };\n  }\n\n  callback(pixel, x, y, parameters, width, height) {\n    let tmp = 0.299 * pixel.r + 0.587 * pixel.g + 0.114 * pixel.b;\n\n    pixel.r = tmp + 2 * parameters.sepiaValue;\n    pixel.g = tmp + parameters.sepiaValue;\n    pixel.b = tmp;\n\n    return pixel;\n  }\n}\n\nexport default GrayScaleEffect;\n","import BasePointEffect from \"../BasePoint\";\n\nclass ContrastEffect extends BasePointEffect {\n  static getName() {\n    return \"contrast\";\n  }\n\n  data = {\n    factor: 1,\n  };\n\n  getDefaultParameters() {\n    return {\n      contrast: 0.5,\n    };\n  }\n\n  before(parameters) {\n    return {\n      factor:\n        (259 * (parameters.contrast * 255 + 255)) /\n        (255 * (259 - parameters.contrast * 255)),\n    };\n  }\n\n  callback(pixel, x, y, parameters, width, height) {\n    pixel.r = this.data.factor * (pixel.r - 128) + 128;\n    pixel.g = this.data.factor * (pixel.g - 128) + 128;\n    pixel.b = this.data.factor * (pixel.b - 128) + 128;\n\n    return pixel;\n  }\n}\n\nexport default ContrastEffect;\n","import BasePointEffect from \"../BasePoint\";\n\nclass BrightnessEffect extends BasePointEffect {\n  static getName() {\n    return \"brightness\";\n  }\n\n  data = {\n    brightness: 0,\n  };\n\n  getDefaultParameters() {\n    return {\n      brightness: 0.5,\n    };\n  }\n\n  before(parameters) {\n    return {\n      brightness: 255 * parameters.brightness,\n    };\n  }\n\n  callback(pixel, x, y, parameters, width, height) {\n    pixel.r = pixel.r + this.data.brightness;\n    pixel.g = pixel.g + this.data.brightness;\n    pixel.b = pixel.b + this.data.brightness;\n\n    return pixel;\n  }\n}\n\nexport default BrightnessEffect;\n","import BasePointEffect from \"../BasePoint\";\n\nclass DiffusionEffect extends BasePointEffect {\n  static getName() {\n    return \"diffusion\";\n  }\n\n  data = {\n    map: {},\n    div: {},\n    sum: 0,\n  };\n\n  getDefaultParameters() {\n    return {\n      matrix: [0, 0, 0, 0, 0, 7, 3, 5, 1],\n      levels: 6,\n      colorDither: true,\n      granulate: true,\n    };\n  }\n\n  before(parameters = { levels: 0, matrix: [] }, width, height, imageData) {\n    let i,\n      sum = 0,\n      map = [],\n      div = [];\n\n    for (i = 0; i < parameters.matrix.length; i += 1) {\n      sum += parameters.matrix[i];\n    }\n\n    for (i = 0; i < parameters.levels; i += 1) {\n      map[i] = ((255 * i) / (parameters.levels - 1)) | 0;\n    }\n\n    for (i = 0; i < 256; i += 1) {\n      div[i] = ((parameters.levels * i) / 256) | 0;\n    }\n\n    return {\n      sum: sum,\n      map: map,\n      div: div,\n    };\n  }\n\n  callback(pixel, x, y, parameters, width, height) {\n    let red1 = pixel.r,\n      green1 = pixel.g,\n      blue1 = pixel.b,\n      red2,\n      green2,\n      blue2,\n      data = this.data,\n      tmpPixel,\n      tmpRed,\n      tmpGreen,\n      tmpBlue,\n      i,\n      j,\n      iy,\n      jx,\n      w,\n      grayScale;\n\n    if (!parameters.colorDither) {\n      grayScale = (red1 + green1 + blue1) / 3;\n      red1 = grayScale;\n      green1 = grayScale;\n      blue1 = grayScale;\n    }\n\n    red2 = data.map[data.div[red1]];\n    green2 = data.map[data.div[green1]];\n    blue2 = data.map[data.div[blue1]];\n\n    tmpRed = red1 - red2;\n    tmpGreen = green1 - green2;\n    tmpBlue = blue1 - blue2;\n\n    if (parameters.granulate) {\n      for (i = -1; i <= 1; i += 1) {\n        iy = i + y;\n        if (iy < 0 || iy >= height) {\n          continue;\n        }\n        for (j = -1; j <= 1; j += 1) {\n          jx = j + x;\n          if (jx < 0 || jx >= width) {\n            continue;\n          }\n          w = parameters.matrix[(i + 1) * 3 + j + 1];\n          if (w !== 0) {\n            tmpPixel = this.getPixel(jx, iy);\n            tmpPixel.r += (tmpRed * w) / data.sum;\n            tmpPixel.g += (tmpGreen * w) / data.sum;\n            tmpPixel.b += (tmpBlue * w) / data.sum;\n            this.setPixel(jx, iy, tmpPixel);\n          }\n        }\n      }\n    }\n\n    return {\n      r: red2,\n      g: green2,\n      b: blue2,\n      a: pixel.a,\n    };\n  }\n}\n\nexport default DiffusionEffect;\n","import BasePointEffect from \"../BasePoint\";\n\nclass DitherEffect extends BasePointEffect {\n  static getName() {\n    return \"dither\";\n  }\n\n  data: {\n    cols: 0;\n    rows: 0;\n    map: {};\n    mod: {};\n    div: {};\n  };\n\n  getDefaultParameters() {\n    return {\n      matrices: {\n        ditherMagic4x4Matrix: [\n          0, 14, 3, 13, 11, 5, 8, 6, 12, 2, 15, 1, 7, 9, 4, 10,\n        ],\n        ditherOrdered4x4Matrix: [\n          0, 8, 2, 10, 12, 4, 14, 6, 3, 11, 1, 9, 15, 7, 13, 5,\n        ],\n        ditherLines4x4Matrix: [\n          0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n        ],\n        dither90Halftone6x6Matrix: [\n          29, 18, 12, 19, 30, 34, 17, 7, 4, 8, 20, 28, 11, 3, 0, 1, 9, 27, 16,\n          6, 2, 5, 13, 26, 25, 15, 10, 14, 21, 31, 33, 25, 24, 23, 33, 36,\n        ],\n        ditherOrdered6x6Matrix: [\n          1, 59, 15, 55, 2, 56, 12, 52, 33, 17, 47, 31, 34, 18, 44, 28, 9, 49,\n          5, 63, 10, 50, 6, 60, 41, 25, 37, 21, 42, 26, 38, 22, 3, 57, 13, 53,\n          0, 58, 14, 54, 35, 19, 45, 29, 32, 16, 46, 30, 11, 51, 7, 61, 8, 48,\n          4, 62, 43, 27, 39, 23, 40, 24, 36, 20,\n        ],\n        ditherOrdered8x8Matrix: [\n          1, 235, 59, 219, 15, 231, 55, 215, 2, 232, 56, 216, 12, 228, 52, 212,\n          129, 65, 187, 123, 143, 79, 183, 119, 130, 66, 184, 120, 140, 76, 180,\n          116, 33, 193, 17, 251, 47, 207, 31, 247, 34, 194, 18, 248, 44, 204,\n          28, 244, 161, 97, 145, 81, 175, 111, 159, 95, 162, 98, 146, 82, 172,\n          108, 156, 92, 9, 225, 49, 209, 5, 239, 63, 223, 10, 226, 50, 210, 6,\n          236, 60, 220, 137, 73, 177, 113, 133, 69, 191, 127, 138, 74, 178, 114,\n          134, 70, 188, 124, 41, 201, 25, 241, 37, 197, 21, 255, 42, 202, 26,\n          242, 38, 198, 22, 252, 169, 105, 153, 89, 165, 101, 149, 85, 170, 106,\n          154, 90, 166, 102, 150, 86, 3, 233, 57, 217, 13, 229, 53, 213, 0, 234,\n          58, 218, 14, 230, 54, 214, 131, 67, 185, 121, 141, 77, 181, 117, 128,\n          64, 186, 122, 142, 78, 182, 118, 35, 195, 19, 249, 45, 205, 29, 245,\n          32, 192, 16, 250, 46, 206, 30, 246, 163, 99, 147, 83, 173, 109, 157,\n          93, 160, 96, 144, 80, 174, 110, 158, 94, 11, 227, 51, 211, 7, 237, 61,\n          221, 8, 224, 48, 208, 4, 238, 62, 222, 139, 75, 179, 115, 135, 71,\n          189, 125, 136, 72, 176, 112, 132, 68, 190, 126, 43, 203, 27, 243, 39,\n          199, 23, 253, 40, 200, 24, 240, 36, 196, 20, 254, 171, 107, 155, 91,\n          167, 103, 151, 87, 168, 104, 152, 88, 164, 100, 148, 84,\n        ],\n        ditherCluster3Matrix: [\n          9, 11, 10, 8, 6, 7, 12, 17, 16, 5, 0, 1, 13, 14, 15, 4, 3, 2, 8, 6, 7,\n          9, 11, 10, 5, 0, 1, 12, 17, 16, 4, 3, 2, 13, 14, 15,\n        ],\n        ditherCluster4Matrix: [\n          18, 20, 19, 16, 13, 11, 12, 15, 27, 28, 29, 22, 4, 3, 2, 9, 26, 31,\n          30, 21, 5, 0, 1, 10, 23, 25, 24, 17, 8, 6, 7, 14, 13, 11, 12, 15, 18,\n          20, 19, 16, 4, 3, 2, 9, 27, 28, 29, 22, 5, 0, 1, 10, 26, 31, 30, 21,\n          8, 6, 7, 14, 23, 25, 24, 17,\n        ],\n        ditherCluster8Matrix: [\n          64, 69, 77, 87, 86, 76, 68, 67, 63, 58, 50, 40, 41, 51, 59, 60, 70,\n          94, 100, 109, 108, 99, 93, 75, 57, 33, 27, 18, 19, 28, 34, 52, 78,\n          101, 114, 116, 115, 112, 98, 83, 49, 26, 13, 11, 12, 15, 29, 44, 88,\n          110, 123, 124, 125, 118, 107, 85, 39, 17, 4, 3, 2, 9, 20, 42, 89, 111,\n          122, 127, 126, 117, 106, 84, 38, 16, 5, 0, 1, 10, 21, 43, 79, 102,\n          119, 121, 120, 113, 97, 82, 48, 25, 8, 6, 7, 14, 30, 45, 71, 95, 103,\n          104, 105, 96, 92, 74, 56, 32, 24, 23, 22, 31, 35, 53, 65, 72, 80, 90,\n          91, 81, 73, 66, 62, 55, 47, 37, 36, 46, 54, 61, 63, 58, 50, 40, 41,\n          51, 59, 60, 64, 69, 77, 87, 86, 76, 68, 67, 57, 33, 27, 18, 19, 28,\n          34, 52, 70, 94, 100, 109, 108, 99, 93, 75, 49, 26, 13, 11, 12, 15, 29,\n          44, 78, 101, 114, 116, 115, 112, 98, 83, 39, 17, 4, 3, 2, 9, 20, 42,\n          88, 110, 123, 124, 125, 118, 107, 85, 38, 16, 5, 0, 1, 10, 21, 43, 89,\n          111, 122, 127, 126, 117, 106, 84, 48, 25, 8, 6, 7, 14, 30, 45, 79,\n          102, 119, 121, 120, 113, 97, 82, 56, 32, 24, 23, 22, 31, 35, 53, 71,\n          95, 103, 104, 105, 96, 92, 74, 62, 55, 47, 37, 36, 46, 54, 61, 65, 72,\n          80, 90, 91, 81, 73, 66,\n        ],\n      },\n      levels: 6,\n      matrix: \"ditherMagic4x4Matrix\",\n      colorDither: true,\n    };\n  }\n\n  before(parameters, width, height, imageData) {\n    let matrix = parameters.matrix,\n      rows,\n      cols,\n      map = [],\n      div = [],\n      mod = [],\n      i;\n\n    if (typeof matrix === \"string\") {\n      matrix = parameters.matrices[matrix];\n    }\n\n    rows = Math.sqrt(matrix.length);\n    cols = Math.sqrt(matrix.length);\n\n    for (i = 0; i < parameters.levels; i += 1) {\n      map[i] = (255 * i) / (parameters.levels - 1);\n    }\n\n    for (i = 0; i < 256; i += 1) {\n      div[i] = (((parameters.levels - 1) * i) / 256) | 0;\n      mod[i] = ((i * (rows * cols + 1)) / 256) | 0;\n    }\n\n    return {\n      matrix: matrix,\n      map: map,\n      div: div,\n      mod: mod,\n      cols: cols,\n      rows: rows,\n    };\n  }\n\n  callback(pixel, x, y, parameters, width, height) {\n    let col = x % this.data.cols,\n      row = y % this.data.rows,\n      v = parameters.matrix[row * this.data.cols + col],\n      red = pixel.r,\n      green = pixel.g,\n      blue = pixel.b,\n      result = { a: pixel.a, r: 0, g: 0, b: 0 },\n      value;\n\n    if (parameters.colorDither) {\n      result.r =\n        this.data.map[\n          this.data.mod[red] > v ? this.data.div[red] + 1 : this.data.div[red]\n        ];\n      result.g =\n        this.data.map[\n          this.data.mod[green] > v\n            ? this.data.div[green] + 1\n            : this.data.div[green]\n        ];\n      result.b =\n        this.data.map[\n          this.data.mod[blue] > v\n            ? this.data.div[blue] + 1\n            : this.data.div[blue]\n        ];\n    } else {\n      value = (red + green + blue) / 3;\n      result.r =\n        result.g =\n        result.b =\n          this.data.map[\n            this.data.mod[value] > v\n              ? this.data.div[value] + 1\n              : this.data.div[value]\n          ];\n    }\n\n    return result;\n  }\n}\n\nexport default DitherEffect;\n","import BasePointEffect from \"../BasePoint\";\n\nclass ExposureEffect extends BasePointEffect {\n  static getName() {\n    return \"exposure\";\n  }\n\n  getDefaultParameters() {\n    return {\n      exposure: 1,\n    };\n  }\n\n  callback(pixel, x, y, parameters, width, height) {\n    pixel.r = (1 - Math.exp((-pixel.r / 255) * parameters.exposure)) * 255;\n    pixel.g = (1 - Math.exp((-pixel.g / 255) * parameters.exposure)) * 255;\n    pixel.b = (1 - Math.exp((-pixel.b / 255) * parameters.exposure)) * 255;\n\n    return pixel;\n  }\n}\n\nexport default ExposureEffect;\n","import BasePointEffect from \"../BasePoint\";\n\nclass GainEffect extends BasePointEffect {\n  static getName() {\n    return \"gain\";\n  }\n\n  getDefaultParameters() {\n    return {\n      gain: 1,\n      bias: 1,\n    };\n  }\n\n  callback(pixel, x, y, parameters, width, height) {\n    let red = (1 / parameters.gain - 2) * (1 - (2 * pixel.r) / 255),\n      green = (1 / parameters.gain - 2) * (1 - (2 * pixel.g) / 255),\n      blue = (1 / parameters.gain - 2) * (1 - (2 * pixel.b) / 255);\n\n    if (pixel.r / 255 < 0.5) {\n      red = pixel.r / 255 / red + 1;\n    } else {\n      red = (red - pixel.r / 255) / (red - 1);\n    }\n\n    if (pixel.g / 255 < 0.5) {\n      green = pixel.g / 255 / green + 1;\n    } else {\n      green = (green - pixel.g / 255) / (green - 1);\n    }\n\n    if (pixel.b / 255 < 0.5) {\n      blue = pixel.b / 255 / blue + 1;\n    } else {\n      blue = (blue - pixel.b / 255) / (blue - 1);\n    }\n\n    red = red / ((1 / parameters.bias - 2) * (1 - red) + 1);\n    green = green / ((1 / parameters.bias - 2) * (1 - green) + 1);\n    blue = blue / ((1 / parameters.bias - 2) * (1 - blue) + 1);\n\n    pixel.r = red * 255;\n    pixel.g = green * 255;\n    pixel.b = blue * 255;\n\n    return pixel;\n  }\n}\n\nexport default GainEffect;\n","import BasePointEffect from \"../BasePoint\";\n\nclass GammaEffect extends BasePointEffect {\n  static getName() {\n    return \"gamma\";\n  }\n\n  data = {\n    table: {\n      r: {},\n      g: {},\n      b: {},\n    },\n  };\n\n  getDefaultParameters() {\n    return {\n      gammaRed: 1,\n      gammaGreen: 1,\n      gammaBlue: 1,\n    };\n  }\n\n  before(\n    parameters = { gammaRed: 1, gammaGreen: 1, gammaBlue: 1 },\n    width,\n    height,\n    imageData\n  ) {\n    let table = {\n        r: [],\n        g: [],\n        b: [],\n      },\n      i;\n\n    for (i = 0; i < 256; i += 1) {\n      table.r[i] = (255 * Math.pow(i / 255, 1 / parameters.gammaRed) + 0.5) | 0;\n      table.g[i] =\n        (255 * Math.pow(i / 255, 1 / parameters.gammaGreen) + 0.5) | 0;\n      table.b[i] =\n        (255 * Math.pow(i / 255, 1 / parameters.gammaBlue) + 0.5) | 0;\n    }\n\n    return {\n      table: table,\n    };\n  }\n\n  callback(pixel, x, y, parameters, width, height) {\n    return {\n      r: this.data.table.r[pixel.r],\n      g: this.data.table.g[pixel.g],\n      b: this.data.table.b[pixel.b],\n      a: pixel.a,\n    };\n  }\n}\n\nexport default GammaEffect;\n","/**\n * RGB to HSB color convert.\n * @param r\n * @param g\n * @param b\n * @returns {{h: number, s: number, b: number}}\n */\nexport function RGBtoHSB(r, g, b) {\n  let hue,\n    saturation,\n    brightness,\n    cmax = Math.max(r, g, b),\n    cmin = Math.min(r, g, b);\n\n  brightness = cmax / 255;\n  if (cmax !== 0) {\n    saturation = (cmax - cmin) / cmax;\n  } else {\n    saturation = 0;\n  }\n\n  if (saturation === 0) {\n    hue = 0;\n  } else {\n    let redc = (cmax - r) / (cmax - cmin),\n      greenc = (cmax - g) / (cmax - cmin),\n      bluec = (cmax - b) / (cmax - cmin);\n\n    if (r === cmax) {\n      hue = bluec - greenc;\n    } else {\n      if (g === cmax) {\n        hue = 2 + redc - bluec;\n      } else {\n        hue = 4 + greenc - redc;\n      }\n    }\n\n    hue /= 6;\n    if (hue < 0) {\n      hue += 1;\n    }\n  }\n\n  return {\n    h: hue,\n    s: saturation,\n    b: brightness,\n  };\n}\n\n/**\n * HSB to RGB color convert.\n * @param hue\n * @param saturation\n * @param brightness\n * @returns {{r: Number, g: Number, b: Number}}\n */\nexport function HSBtoRGB(hue, saturation, brightness) {\n  let red, green, blue;\n  if (saturation === 0) {\n    red = brightness * 255 + 0.5;\n    green = brightness * 255 + 0.5;\n    blue = brightness * 255 + 0.5;\n  } else {\n    let h = (hue - Math.floor(hue)) * 6,\n      f = h - Math.floor(h),\n      p = brightness * (1 - saturation),\n      q = brightness * (1 - saturation * f),\n      t = brightness * (1 - saturation * (1 - f));\n\n    switch (h | 0) {\n      case 0:\n        red = brightness * 255 + 0.5;\n        green = t * 255 + 0.5;\n        blue = p * 255 + 0.5;\n        break;\n\n      case 1:\n        red = q * 255 + 0.5;\n        green = brightness * 255 + 0.5;\n        blue = p * 255 + 0.5;\n        break;\n\n      case 2:\n        red = p * 255 + 0.5;\n        green = brightness * 255 + 0.5;\n        blue = t * 255 + 0.5;\n        break;\n\n      case 3:\n        red = p * 255 + 0.5;\n        green = q * 255 + 0.5;\n        blue = brightness * 255 + 0.5;\n        break;\n\n      case 4:\n        red = t * 255 + 0.5;\n        green = p * 255 + 0.5;\n        blue = brightness * 255 + 0.5;\n        break;\n\n      case 5:\n        red = brightness * 255 + 0.5;\n        green = p * 255 + 0.5;\n        blue = q * 255 + 0.5;\n        break;\n\n      default:\n        red = 0;\n        green = 0;\n        blue = 0;\n        break;\n    }\n  }\n  return {\n    r: parseInt(red),\n    g: parseInt(green),\n    b: parseInt(blue),\n  };\n}\n\nexport function mixColors(t, rgb1, rgb2) {\n  return {\n    r: rgb1.r + t * (rgb2.r - rgb1.r),\n    g: rgb1.g + t * (rgb2.g - rgb1.g),\n    b: rgb1.b + t * (rgb2.b - rgb1.b),\n    a: rgb1.a + t * (rgb2.a - rgb1.a),\n  };\n}\n\nexport function hexToRGB(hex) {\n  hex = parseInt(hex.replace(\"#\", \"\"), 16);\n  let r = hex >> 16;\n  let g = (hex >> 8) & 0xff;\n  let b = hex & 0xff;\n  return {\n    r: r,\n    g: g,\n    b: b,\n  };\n}\n\nexport function RGBtoHex(pixel) {\n  let bin = (pixel.r << 16) | (pixel.g << 8) | pixel.b;\n  return (function (h) {\n    return new Array(7 - h.length).join(\"0\") + h;\n  })(bin.toString(16).toUpperCase());\n}\n\nexport function RGBtoXYZ(r, g, b) {\n  let let_R = r / 255;\n  let let_G = g / 255;\n  let let_B = b / 255;\n\n  if (let_R > 0.04045) {\n    let_R = Math.pow((let_R + 0.055) / 1.055, 2.4);\n  } else {\n    let_R = let_R / 12.92;\n  }\n\n  if (let_G > 0.04045) {\n    let_G = Math.pow((let_G + 0.055) / 1.055, 2.4);\n  } else {\n    let_G = let_G / 12.92;\n  }\n\n  if (let_B > 0.04045) {\n    let_B = Math.pow((let_B + 0.055) / 1.055, 2.4);\n  } else {\n    let_B = let_B / 12.92;\n  }\n\n  let_R = let_R * 100;\n  let_G = let_G * 100;\n  let_B = let_B * 100;\n\n  return {\n    x: let_R * 0.4124 + let_G * 0.3576 + let_B * 0.1805,\n    y: let_R * 0.2126 + let_G * 0.7152 + let_B * 0.0722,\n    z: let_R * 0.0193 + let_G * 0.1192 + let_B * 0.9505,\n  };\n}\n\nexport function RGBtoCIELab(r, g, b) {\n  let xyz = RGBtoXYZ(r, g, b);\n\n  let let_X = xyz.x / 95.047; // ref\n  let let_Y = xyz.y / 100; // ref\n  let let_Z = xyz.z / 108.883; // ref\n\n  if (let_X > 0.008856) {\n    let_X = Math.pow(let_X, 1 / 3);\n  } else {\n    let_X = 7.787 * let_X + 16 / 116;\n  }\n\n  if (let_Y > 0.008856) {\n    let_Y = Math.pow(let_Y, 1 / 3);\n  } else {\n    let_Y = 7.787 * let_Y + 16 / 116;\n  }\n\n  if (let_Z > 0.008856) {\n    let_Z = Math.pow(let_Z, 1 / 3);\n  } else {\n    let_Z = 7.787 * let_Z + 16 / 116;\n  }\n\n  return {\n    l: 116 * let_Y - 16,\n    a: 500 * (let_X - let_Y),\n    b: 200 * (let_Y - let_Z),\n  };\n}\n\nexport function CIELabToXYZ(l, a, b) {\n  let let_Y = (l + 16) / 116;\n  let let_X = a / 500 + let_Y;\n  let let_Z = let_Y - b / 200;\n\n  if (Math.pow(let_Y, 3) > 0.008856) {\n    let_Y = Math.pow(let_Y, 3);\n  } else {\n    let_Y = (let_Y - 16 / 116) / 7.787;\n  }\n\n  if (Math.pow(let_X, 3) > 0.008856) {\n    let_X = Math.pow(let_X, 3);\n  } else {\n    let_X = (let_X - 16 / 116) / 7.787;\n  }\n\n  if (Math.pow(let_Z, 3) > 0.008856) {\n    let_Z = Math.pow(let_Z, 3);\n  } else {\n    let_Z = (let_Z - 16 / 116) / 7.787;\n  }\n\n  return {\n    x: 95.047 * let_X, // ref\n    y: 100 * let_Y, // ref\n    z: 108.883 * let_Z, // ref\n  };\n}\n\nexport function CIELabToRGB(l, a, b) {\n  let xyz = CIELabToXYZ(l, a, b);\n\n  let let_X = xyz.x / 100;\n  let let_Y = xyz.y / 100;\n  let let_Z = xyz.z / 100;\n\n  let let_R = let_X * 3.2406 + let_Y * -1.5372 + let_Z * -0.4986;\n  let let_G = let_X * -0.9689 + let_Y * 1.8758 + let_Z * 0.0415;\n  let let_B = let_X * 0.0557 + let_Y * -0.204 + let_Z * 1.057;\n\n  if (let_R > 0.0031308) {\n    let_R = 1.055 * Math.pow(let_R, 1 / 2.4) - 0.055;\n  } else {\n    let_R = 12.92 * let_R;\n  }\n\n  if (let_G > 0.0031308) {\n    let_G = 1.055 * Math.pow(let_G, 1 / 2.4) - 0.055;\n  } else {\n    let_G = 12.92 * let_G;\n  }\n\n  if (let_B > 0.0031308) {\n    let_B = 1.055 * Math.pow(let_B, 1 / 2.4) - 0.055;\n  } else {\n    let_B = 12.92 * let_B;\n  }\n\n  return {\n    r: let_R * 255,\n    g: let_G * 255,\n    b: let_B * 255,\n  };\n}\n","import BasePointEffect from \"../BasePoint\";\nimport { RGBtoHSB, HSBtoRGB } from \"../../../helpers/color\";\n\nclass HSBAdjustEffect extends BasePointEffect {\n  static getName() {\n    return \"hsb-adjust\";\n  }\n\n  getDefaultParameters() {\n    return {\n      h: 1,\n      s: 1,\n      b: 1,\n    };\n  }\n\n  callback(pixel, x, y, parameters, width, height) {\n    let hsb = RGBtoHSB(pixel.r, pixel.g, pixel.b);\n\n    hsb.h += parameters.h;\n    while (hsb.h < 0) {\n      hsb.h += Math.PI * 2;\n    }\n\n    hsb.s += parameters.s;\n    hsb.s = Math.max(Math.min(hsb.s, 1), 0);\n\n    hsb.b += parameters.b;\n    hsb.b = Math.max(Math.min(hsb.b, 1), 0);\n\n    let result = HSBtoRGB(hsb.h, hsb.s, hsb.b);\n    pixel.r = result.r;\n    pixel.g = result.g;\n    pixel.b = result.b;\n\n    return pixel;\n  }\n}\n\nexport default HSBAdjustEffect;\n","import BasePointEffect from \"../BasePoint\";\n\nclass InvertAlphaEffect extends BasePointEffect {\n  static getName() {\n    return \"invert-alpha\";\n  }\n\n  callback(pixel, x, y, parameters, width, height) {\n    pixel.a = 255 - pixel.a;\n    return pixel;\n  }\n}\n\nexport default InvertAlphaEffect;\n","import BasePointEffect from \"../BasePoint\";\n\nclass InvertEffect extends BasePointEffect {\n  static getName() {\n    return \"invert\";\n  }\n\n  callback(pixel, x, y, parameters, width, height) {\n    pixel.r = 255 - pixel.r;\n    pixel.g = 255 - pixel.g;\n    pixel.b = 255 - pixel.b;\n    return pixel;\n  }\n}\n\nexport default InvertEffect;\n","import BasePointEffect from \"../BasePoint\";\n\nclass LevelsEffect extends BasePointEffect {\n  static getName() {\n    return \"levels\";\n  }\n\n  data = {\n    lut: {\n      0: {},\n      1: {},\n      2: {},\n    },\n  };\n\n  getDefaultParameters() {\n    return {\n      low: 0,\n      high: 1,\n      lowOutput: 0,\n      highOutput: 1,\n    };\n  }\n\n  before(parameters, width, height, imageData) {\n    let Histogram = function (imageData, width, height, offset, stride) {\n      let i,\n        j,\n        index,\n        x,\n        y,\n        histogram = new Array(3),\n        minValue = new Array(4),\n        maxValue = new Array(4),\n        minFrequency = new Array(3),\n        maxFrequency = new Array(3),\n        mean = new Array(3),\n        numSamples = width * height,\n        isGray = true,\n        RED = 0,\n        GREEN = 1,\n        BLUE = 2,\n        GRAY = 3;\n\n      for (i = 0; i < histogram.length; i += 1) {\n        histogram[i] = new Array(256);\n        for (j = 0; j < 256; j += 1) {\n          histogram[i][j] = 0;\n        }\n      }\n\n      for (y = 0; y < height; y += 1) {\n        for (x = 0; x < width; x += 1) {\n          index = y * width * 4 + x * 4;\n          histogram[RED][imageData.data[index]]++;\n          histogram[GREEN][imageData.data[index + 1]]++;\n          histogram[BLUE][imageData.data[index + 2]]++;\n        }\n      }\n\n      for (i = 0; i < 256; i += 1) {\n        if (\n          histogram[RED][i] !== histogram[GREEN][i] ||\n          histogram[GREEN][i] !== histogram[BLUE][i]\n        ) {\n          isGray = false;\n          break;\n        }\n      }\n\n      for (i = 0; i < 3; i += 1) {\n        for (j = 0; j < 256; j += 1) {\n          if (histogram[i][j] > 0) {\n            minValue[i] = j;\n            break;\n          }\n        }\n        for (j = 255; j >= 0; j -= 1) {\n          if (histogram[i][j] > 0) {\n            maxValue[i] = j;\n            break;\n          }\n        }\n        minFrequency[i] = Infinity;\n        maxFrequency[i] = 0;\n        for (j = 0; j < 256; j += 1) {\n          minFrequency[i] = Math.min(minFrequency[i], histogram[i][j]);\n          maxFrequency[i] = Math.max(maxFrequency[i], histogram[i][j]);\n          mean[i] += j * histogram[i][j];\n        }\n        mean[i] /= numSamples;\n        minValue[GRAY] = Math.min(\n          minValue[RED],\n          minValue[GREEN],\n          minValue[BLUE]\n        );\n        maxValue[GRAY] = Math.max(\n          maxValue[RED],\n          maxValue[GREEN],\n          maxValue[BLUE]\n        );\n      }\n\n      this.getNumSamples = function () {\n        return numSamples;\n      };\n\n      this.isGray = function () {\n        return isGray;\n      };\n\n      this.getFrequency = function (channel, value) {\n        if (!value) {\n          if (numSamples > 0 && isGray && value >= 0 && value <= 255) {\n            return histogram[0][value];\n          }\n          return -1;\n        }\n        if (\n          numSamples < 1 ||\n          channel < 0 ||\n          channel > 2 ||\n          value < 0 ||\n          value > 255\n        ) {\n          return -1;\n        }\n        return histogram[channel][value];\n      };\n\n      this.getMinFrequency = function (channel) {\n        if (!channel) {\n          if (numSamples > 0 && isGray) {\n            return minFrequency[0];\n          }\n          return -1;\n        }\n        if (numSamples < 1 || channel < 0 || channel > 2) {\n          return -1;\n        }\n        return minFrequency[channel];\n      };\n\n      this.getMaxFrequency = function (channel) {\n        if (!channel) {\n          if (numSamples > 0 && isGray) {\n            return maxFrequency[0];\n          }\n          return -1;\n        }\n        if (numSamples < 1 || channel < 0 || channel > 2) {\n          return -1;\n        }\n        return maxFrequency[channel];\n      };\n\n      this.getMinValue = function (channel) {\n        if (!channel) {\n          if (numSamples > 0 && isGray) {\n            return minValue[0];\n          }\n          return -1;\n        }\n        return minValue[channel];\n      };\n\n      this.getMaxValue = function (channel) {\n        if (!channel) {\n          if (numSamples > 0 && isGray) {\n            return maxValue[0];\n          }\n          return -1;\n        }\n        return maxValue[channel];\n      };\n\n      this.getMeanValue = function (channel) {\n        if (!channel) {\n          if (numSamples > 0 && isGray) {\n            return mean[0];\n          }\n          return -1;\n        }\n        return mean[channel];\n      };\n    };\n\n    let histogram = new Histogram(imageData, width, height, 0, width),\n      lut = new Array(3),\n      low = parameters.low * 255,\n      high = parameters.high * 255,\n      i,\n      j;\n\n    for (i = 0; i < lut.length; i += 1) {\n      lut[i] = new Array(256);\n    }\n    if (low === high) {\n      high++;\n    }\n\n    for (i = 0; i < 3; i += 1) {\n      for (j = 0; j < 256; j += 1) {\n        lut[i][j] =\n          255 *\n          (parameters.lowOutput +\n            ((parameters.highOutput - parameters.lowOutput) * (j - low)) /\n              (high - low));\n      }\n    }\n\n    histogram.isGray(); // uglify fix - \"Side effects in initialization of unused letiable histogram\" warning\n\n    return {\n      lut: lut,\n    };\n  }\n\n  callback(pixel, x, y, parameters, width, height) {\n    return {\n      r: this.data.lut[0][pixel.r],\n      g: this.data.lut[1][pixel.g],\n      b: this.data.lut[2][pixel.b],\n      a: pixel.a,\n    };\n  }\n}\n\nexport default LevelsEffect;\n","import BasePointEffect from \"../BasePoint\";\n\nclass RescaleEffect extends BasePointEffect {\n  static getName() {\n    return \"rescale\";\n  }\n\n  getDefaultParameters() {\n    return {\n      scale: 1,\n    };\n  }\n\n  callback(pixel, x, y, parameters, width, height) {\n    pixel.r = parameters.scale * pixel.r;\n    pixel.g = parameters.scale * pixel.g;\n    pixel.b = parameters.scale * pixel.b;\n\n    return pixel;\n  }\n}\n\nexport default RescaleEffect;\n","import BasePointEffect from \"../BasePoint\";\n\nclass SolarizeEffect extends BasePointEffect {\n  static getName() {\n    return \"solarize\";\n  }\n\n  callback(pixel, x, y, parameters, width, height) {\n    let red =\n        pixel.r / 255 > 0.5\n          ? 2 * (pixel.r / 255 - 0.5)\n          : 2 * (0.5 - pixel.r / 255),\n      green =\n        pixel.g / 255 > 0.5\n          ? 2 * (pixel.g / 255 - 0.5)\n          : 2 * (0.5 - pixel.g / 255),\n      blue =\n        pixel.b / 255 > 0.5\n          ? 2 * (pixel.b / 255 - 0.5)\n          : 2 * (0.5 - pixel.b / 255);\n\n    return {\n      r: red * 255,\n      g: green * 255,\n      b: blue * 255,\n      a: pixel.a,\n    };\n  }\n}\n\nexport default SolarizeEffect;\n","import BasePointEffect from \"../BasePoint\";\n\nclass ThresholdEffect extends BasePointEffect {\n  static getName() {\n    return \"threshold\";\n  }\n\n  callback(pixel, x, y, parameters, width, height) {\n    let grayscale = (pixel.r + pixel.g + pixel.b) / 3;\n\n    if (grayscale >= 127) {\n      return {\n        r: 255,\n        g: 255,\n        b: 255,\n        a: pixel.a,\n      };\n    }\n\n    return {\n      r: 0,\n      g: 0,\n      b: 0,\n      a: pixel.a,\n    };\n  }\n}\n\nexport default ThresholdEffect;\n","import BasePointEffect from \"../BasePoint\";\nimport { mixColors } from \"../../../helpers/color\";\n\nclass TritoneEffect extends BasePointEffect {\n  static getName() {\n    return \"tritone\";\n  }\n\n  data = {\n    lut: {},\n  };\n\n  getDefaultParameters() {\n    return {\n      shadowColor: {\n        r: 0,\n        g: 0,\n        b: 0,\n        a: 255,\n      },\n      midColor: {\n        r: 136,\n        g: 136,\n        b: 136,\n        a: 255,\n      },\n      highColor: {\n        r: 255,\n        g: 255,\n        b: 255,\n        a: 255,\n      },\n    };\n  }\n\n  before(parameters) {\n    let lut = [],\n      i,\n      t;\n\n    for (i = 0; i < 128; i += 1) {\n      t = i / 127;\n      lut[i] = mixColors(t, parameters.shadowColor, parameters.midColor);\n    }\n    for (i = 128; i < 256; i += 1) {\n      t = (i - 127) / 128;\n      lut[i] = mixColors(t, parameters.midColor, parameters.highColor);\n    }\n    return {\n      lut: lut,\n    };\n  }\n\n  callback(pixel, x, y, parameters, width, height) {\n    let brightness = Math.floor((pixel.r + pixel.g + pixel.b) / 3);\n    return this.data.lut[brightness];\n  }\n}\n\nexport default TritoneEffect;\n","import BasePointEffect from \"../BasePoint\";\nimport { smoothStep } from \"../../../helpers/common\";\n\nclass DissolveEffect extends BasePointEffect {\n  static getName() {\n    return \"dissolve\";\n  }\n\n  data = {\n    minDensity: 0,\n    maxDensity: 0,\n  };\n\n  getDefaultParameters() {\n    return {\n      density: 1,\n      softness: 0,\n    };\n  }\n\n  before(parameters, width, height, imageData) {\n    let d = (1 - parameters.density) * (1 + parameters.softness);\n    return {\n      minDensity: d - parameters.softness,\n      maxDensity: d,\n    };\n  }\n\n  callback(pixel, x, y, parameters, width, height) {\n    let v = Math.random(),\n      f = smoothStep(this.data.minDensity, this.data.maxDensity, v);\n    pixel.a = pixel.a * f;\n    return pixel;\n  }\n}\n\nexport default DissolveEffect;\n","import BasePointEffect from \"../BasePoint\";\n\nclass EdgeEffect extends BasePointEffect {\n  static getName() {\n    return \"edge\";\n  }\n\n  data = {\n    hEdgeMatrix: [],\n    vEdgeMatrix: [],\n  };\n\n  getDefaultParameters() {\n    return {\n      matrixes: {\n        robertsV: [0, 0, -1, 0, 1, 0, 0, 0, 0],\n        robertsH: [-1, 0, 0, 0, 1, 0, 0, 0, 0],\n        prewittV: [-1, 0, 1, -1, 0, 1, -1, 0, 1],\n        prewittH: [-1, -1, -1, 0, 0, 0, 1, 1, 1],\n        sobelV: [-1, 0, 1, -2, 0, 2, -1, 0, 1],\n        sobelH: [-1, -2, -1, 0, 0, 0, 1, 2, 1],\n        freiChenV: [-1, 0, 1, -Math.sqrt(2), 0, Math.sqrt(2), -1, 0, 1],\n        freiChenH: [-1, -Math.sqrt(2), -1, 0, 0, 0, 1, Math.sqrt(2), 1],\n      },\n      hEdgeMatrix: \"sobelV\",\n      vEdgeMatrix: \"sobelH\",\n    };\n  }\n\n  before(parameters, width, height, imageData) {\n    let hEdgeMatrix = parameters.hEdgeMatrix,\n      vEdgeMatrix = parameters.vEdgeMatrix;\n\n    if (typeof hEdgeMatrix === \"string\") {\n      hEdgeMatrix = parameters.matrixes[parameters.hEdgeMatrix];\n    }\n    if (typeof vEdgeMatrix === \"string\") {\n      vEdgeMatrix = parameters.matrixes[parameters.vEdgeMatrix];\n    }\n    return {\n      hEdgeMatrix: hEdgeMatrix,\n      vEdgeMatrix: vEdgeMatrix,\n    };\n  }\n\n  callback(pixel, x, y, parameters, width, height) {\n    let r = 0,\n      g = 0,\n      b = 0,\n      rh = 0,\n      gh = 0,\n      bh = 0,\n      rv = 0,\n      gv = 0,\n      bv = 0,\n      row,\n      iy,\n      col,\n      ix,\n      mOffset,\n      pixel2,\n      h,\n      v;\n\n    for (row = -1; row <= 1; row += 1) {\n      iy = y + row;\n      if (!(0 <= iy && iy < height)) {\n        iy = y;\n      }\n      mOffset = 3 * (row + 1) + 1;\n      for (col = -1; col <= 1; col += 1) {\n        ix = x + col;\n        if (!(0 <= ix && ix < width)) {\n          ix = x;\n        }\n        pixel2 = this.getOriginalPixel(ix, iy);\n        h = this.data.hEdgeMatrix[mOffset + col];\n        v = this.data.vEdgeMatrix[mOffset + col];\n\n        r = pixel2.r;\n        g = pixel2.g;\n        b = pixel2.b;\n\n        rh += Math.floor(h * r);\n        gh += Math.floor(h * g);\n        bh += Math.floor(h * b);\n\n        rv += Math.floor(v * r);\n        gv += Math.floor(v * g);\n        bv += Math.floor(v + b);\n      }\n    }\n    r = Math.floor(Math.sqrt(rh * rh + rv * rv) / 1.8);\n    g = Math.floor(Math.sqrt(gh * gh + gv * gv) / 1.8);\n    b = Math.floor(Math.sqrt(bh * bh + bv * bv) / 1.8);\n    return {\n      r: r,\n      g: g,\n      b: b,\n      a: pixel.a,\n    };\n  }\n}\n\nexport default EdgeEffect;\n","import BasePointEffect from \"../BasePoint\";\n\nclass ChannelMixEffect extends BasePointEffect {\n  static getName() {\n    return \"channel-mix\";\n  }\n\n  getDefaultParameters() {\n    return {\n      blueGreen: 1,\n      redBlue: 1,\n      greenRed: 1,\n      intoR: 1,\n      intoG: 1,\n      intoB: 1,\n    };\n  }\n\n  callback(pixel, x, y, parameters, width, height) {\n    let r = pixel.r,\n      g = pixel.g,\n      b = pixel.b;\n\n    return {\n      r:\n        ((parameters.intoR *\n          (parameters.blueGreen * g + (255 - parameters.blueGreen) * b)) /\n          255 +\n          (255 - parameters.intoR) * r) /\n        255,\n      g:\n        ((parameters.intoG *\n          (parameters.redBlue * g + (255 - parameters.redBlue) * r)) /\n          255 +\n          (255 - parameters.intoG) * g) /\n        255,\n      b:\n        ((parameters.intoB *\n          (parameters.greenRed * g + (255 - parameters.greenRed) * g)) /\n          255 +\n          (255 - parameters.intoB) * b) /\n        255,\n      a: pixel.a,\n    };\n  }\n}\n\nexport default ChannelMixEffect;\n","import BasePointEffect from \"../BasePoint\";\n\nclass AutoContrastEffect extends BasePointEffect {\n  static getName() {\n    return \"auto-contrast\";\n  }\n\n  data = {\n    remap: (value, min, max) => 0,\n    min: 0,\n    max: 0,\n  };\n\n  before(parameters, width, height) {\n    let x,\n      y,\n      pixel,\n      min = Infinity,\n      max = -1;\n\n    for (y = 0; y < height; y += 1) {\n      for (x = 0; x < width; x += 1) {\n        pixel = this.getPixel(x, y);\n\n        min = Math.min((pixel.r + pixel.g + pixel.b) / 3, min);\n        max = Math.max((pixel.r + pixel.g + pixel.b) / 3, max);\n      }\n    }\n\n    return {\n      min: min,\n      max: max,\n      remap: function (value) {\n        return ((value - min) * 255) / (max - min);\n      },\n    };\n  }\n\n  callback(pixel, x, y, parameters, width, height) {\n    pixel.r = this.data.remap(pixel.r, this.data.min, this.data.max);\n    pixel.g = this.data.remap(pixel.g, this.data.min, this.data.max);\n    pixel.b = this.data.remap(pixel.b, this.data.min, this.data.max);\n\n    return pixel;\n  }\n}\n\nexport default AutoContrastEffect;\n","import BaseEffect from \"./Base\";\n\nclass BaseTransformEffect extends BaseEffect {\n  callback(pixel, x, y, parameters, width, height) {\n    throw \"Extend it.\";\n  }\n\n  run(imageData, parameters) {\n    parameters = {\n      ...this.getDefaultParameters(),\n      ...parameters,\n    };\n\n    let x,\n      y,\n      normalizePixelValue = function (value) {\n        return Math.min(Math.max(value, 0), 255) | 0;\n      },\n      sandbox = {\n        data: null,\n      },\n      imageDataCopy = new Uint8ClampedArray(imageData.data);\n\n    sandbox.data = this.before.call(\n      sandbox,\n      parameters,\n      imageData.width,\n      imageData.height,\n      imageData\n    );\n\n    for (y = 0; y < imageData.height; y += 1) {\n      for (x = 0; x < imageData.width; x += 1) {\n        let newXY = this.callback.call(\n            sandbox,\n            x,\n            y,\n            parameters,\n            imageData.width,\n            imageData.height\n          ),\n          newX = normalizePixelValue(newXY[0]),\n          newY = normalizePixelValue(newXY[1]),\n          oldPixelIndex = y * imageData.width * 4 + x * 4,\n          newPixelIndex = newY * imageData.width * 4 + newX * 4;\n\n        imageDataCopy[oldPixelIndex + 0] = imageData.data[newPixelIndex + 0];\n        imageDataCopy[oldPixelIndex + 1] = imageData.data[newPixelIndex + 1];\n        imageDataCopy[oldPixelIndex + 2] = imageData.data[newPixelIndex + 2];\n        imageDataCopy[oldPixelIndex + 3] = imageData.data[newPixelIndex + 3];\n      }\n    }\n\n    imageData.data.set(imageDataCopy);\n    return imageData;\n  }\n}\n\nexport default BaseTransformEffect;\n","import BaseTransformEffect from \"../BaseTransform\";\n\nclass DiffuseEffect extends BaseTransformEffect {\n  static getName() {\n    return \"diffuse\";\n  }\n\n  data = {\n    sinTable: {},\n    cosTable: {},\n  };\n\n  getDefaultParameters() {\n    return {\n      scale: 4,\n    };\n  }\n\n  before(parameters, width, height, imageData) {\n    let sinTable = new Array(256),\n      cosTable = new Array(256),\n      i,\n      angle;\n    for (i = 0; i < 256; i += 1) {\n      angle = (Math.PI * 2 * i) / 256;\n      sinTable[i] = parameters.scale * Math.sin(angle);\n      cosTable[i] = parameters.scale * Math.cos(angle);\n    }\n    return {\n      sinTable: sinTable,\n      cosTable: cosTable,\n    };\n  }\n\n  callback(x, y, parameters) {\n    let angle = (Math.random() * 255) | 0,\n      distance = Math.random();\n\n    return [\n      x + distance * this.data.sinTable[angle],\n      y + distance * this.data.cosTable[angle],\n    ];\n  }\n}\n\nexport default DiffuseEffect;\n","import BaseTransformEffect from \"../BaseTransform\";\nimport { triangle } from \"../../../helpers/common\";\n\nclass KaleidoscopeEffect extends BaseTransformEffect {\n  static getName() {\n    return \"kaleidoscope\";\n  }\n\n  data = {\n    icentreX: 0,\n    icentreY: 0,\n  };\n\n  getDefaultParameters() {\n    return {\n      centreX: 0.5,\n      centreY: 0.5,\n      angle: 0,\n      angle2: 0,\n      sides: 3,\n      radius: 0,\n    };\n  }\n\n  before(parameters, width, height, imageData) {\n    return {\n      icentreX: width * parameters.centreX,\n      icentreY: height * parameters.centreY,\n    };\n  }\n\n  callback(x, y, parameters) {\n    let dx = x - this.data.icentreX,\n      dy = y - this.data.icentreY,\n      r = Math.sqrt(dx * dx + dy * dy),\n      theta = Math.atan2(dy, dx) - parameters.angle - parameters.angle2;\n\n    theta = triangle((theta / Math.PI) * parameters.sides * 0.5);\n\n    if (parameters.radius !== 0) {\n      let c = Math.cos(theta),\n        radiusC = parameters.radius / c;\n      r = radiusC * triangle(r / radiusC);\n    }\n\n    theta += parameters.angle;\n\n    return [\n      this.data.icentreX + r * Math.cos(theta),\n      this.data.icentreY + r * Math.sin(theta),\n    ];\n  }\n}\n\nexport default KaleidoscopeEffect;\n","let parameters = {},\n  isInit = false;\n\nlet noise = {\n  init: function () {\n    if (isInit) {\n      return false;\n    }\n    isInit = true;\n\n    parameters.B = 0x100;\n    parameters.BM = 0xff;\n    parameters.N = 0x1000;\n\n    parameters.P = new Array(parameters.B + parameters.B + 2);\n    parameters.G1 = new Array(parameters.B + parameters.B + 2);\n    parameters.G2 = new Array(parameters.B + parameters.B + 2);\n    for (i = 0; i < parameters.G2.length; i += 1) {\n      parameters.G2[i] = new Array(2);\n    }\n    parameters.G3 = new Array(parameters.B + parameters.B + 2);\n    for (i = 0; i < parameters.G3.length; i += 1) {\n      parameters.G3[i] = new Array(3);\n    }\n    let i, j, k;\n\n    for (i = 0; i < parameters.B; i += 1) {\n      parameters.P[i] = i;\n      parameters.G1[i] =\n        ((this.random() % (parameters.B + parameters.B)) - parameters.B) /\n        parameters.B;\n      parameters.G2[i] = [];\n      for (j = 0; j < 2; j += 1) {\n        parameters.G2[i][j] =\n          ((this.random() % (parameters.B + parameters.B)) - parameters.B) /\n          parameters.B;\n      }\n      parameters.G2[i] = this.normalize2(parameters.G2[i]);\n\n      parameters.G3[i] = [];\n      for (j = 0; j < 3; j += 1) {\n        parameters.G3[i][j] =\n          ((this.random() % (parameters.B + parameters.B)) - parameters.B) /\n          parameters.B;\n      }\n      parameters.G3[i] = this.normalize3(parameters.G3[i]);\n    }\n\n    for (i = parameters.B - 1; i >= 0; i -= 1) {\n      k = parameters.P[i];\n      parameters.P[i] = parameters.P[(j = this.random() % parameters.B)];\n      parameters.P[j] = k;\n    }\n\n    for (i = 0; i < parameters.B + 2; i += 1) {\n      parameters.P[parameters.B + i] = parameters.P[i];\n      parameters.G1[parameters.B + i] = parameters.G1[i];\n      for (j = 0; j < 2; j += 1) {\n        parameters.G2[parameters.B + i][j] = parameters.G2[i][j];\n      }\n      for (j = 0; j < 3; j++) {\n        parameters.G3[parameters.B + i][j] = parameters.G3[i][j];\n      }\n    }\n  },\n  random: function () {\n    return parseInt(Math.random() * 256 * 256) & 0x7fffffff;\n  },\n  normalize2: function (arr) {\n    let s = Math.sqrt(arr[0] * arr[0] + arr[1] * arr[1] + arr[2] * arr[2]);\n    arr[0] = arr[0] / s;\n    arr[1] = arr[1] / s;\n    arr[2] = arr[2] / s;\n    return arr;\n  },\n  normalize3: function (arr) {\n    let s = Math.sqrt(arr[0] * arr[0] + arr[1] * arr[1]);\n    arr[0] = arr[0] / s;\n    arr[1] = arr[1] / s;\n    return arr;\n  },\n  sCurve: function (t) {\n    return t * t * (3.0 - 2.0 * t);\n  },\n  lerp: function (t, a, b) {\n    return a + t * (b - a);\n  },\n  /**\n   * Compute 1-dimensional Perlin noise.\n   * @param x\n   */\n  noise1: function (x) {\n    let bx0, bx1, rx0, rx1, sx, t, u, v;\n\n    this.init();\n\n    t = x + parameters.N;\n    bx0 = parseInt(t) & parameters.BM;\n    bx1 = (bx0 + 1) & parameters.BM;\n    rx0 = t - parseInt(t);\n    rx1 = rx0 - 1;\n\n    sx = this.sCurve(rx0);\n\n    u = rx0 * parameters.G1[parameters.P[bx0]];\n    v = rx1 * parameters.G1[parameters.P[bx1]];\n\n    return 2.3 * this.lerp(sx, u, v);\n  },\n  /**\n   * Compute 2-dimensional Perlin noise\n   * @param x\n   * @param y\n   * @returns {number}\n   */\n  noise2: function (x, y) {\n    let bx0,\n      bx1,\n      by0,\n      by1,\n      b00,\n      b10,\n      b01,\n      b11,\n      rx0,\n      rx1,\n      ry0,\n      ry1,\n      q = [],\n      sx,\n      sy,\n      a,\n      b,\n      t,\n      u,\n      v,\n      i,\n      j;\n\n    this.init();\n\n    t = x + parameters.N;\n    bx0 = parseInt(t) & parameters.BM;\n    bx1 = (bx0 + 1) & parameters.BM;\n    rx0 = t - parseInt(t);\n    rx1 = rx0 - 1;\n\n    t = y + parameters.N;\n    by0 = parseInt(t) & parameters.BM;\n    by1 = (by0 + 1) & parameters.BM;\n    ry0 = t - parseInt(t);\n    ry1 = ry0 - 1;\n\n    i = parameters.P[bx0];\n    j = parameters.P[bx1];\n\n    b00 = parameters.P[i + by0];\n    b10 = parameters.P[j + by0];\n    b01 = parameters.P[i + by1];\n    b11 = parameters.P[j + by1];\n\n    sx = this.sCurve(rx0);\n    sy = this.sCurve(ry0);\n\n    q = parameters.G2[b00];\n    u = rx0 * q[0] + ry0 * q[1];\n    q = parameters.G2[b10];\n    v = rx1 * q[0] + ry0 * q[1];\n    a = this.lerp(sx, u, v);\n\n    q = parameters.G2[b01];\n    u = rx0 * q[0] + ry1 * q[1];\n    q = parameters.G2[b11];\n    v = rx1 * q[0] + ry1 * q[1];\n    b = this.lerp(sx, u, v);\n\n    return 1.5 * this.lerp(sy, a, b);\n  },\n  /**\n   * Compute 3-dimensional Perlin noise.\n   * @param x\n   * @param y\n   * @param z\n   */\n  noise3: function (x, y, z) {\n    let bx0,\n      bx1,\n      by0,\n      by1,\n      bz0,\n      bz1,\n      b00,\n      b10,\n      b01,\n      b11,\n      rx0,\n      rx1,\n      ry0,\n      ry1,\n      rz0,\n      rz1,\n      q,\n      sy,\n      sz,\n      a,\n      b,\n      c,\n      d,\n      t,\n      u,\n      v,\n      i,\n      j;\n\n    this.init();\n\n    t = x + parameters.N;\n    bx0 = parseInt(t) & parameters.BM;\n    bx1 = (bx0 + 1) & parameters.BM;\n    rx0 = t - parseInt(t);\n    rx1 = rx0 - 1;\n\n    t = y + parameters.N;\n    by0 = parseInt(t) & parameters.BM;\n    by1 = (by0 + 1) & parameters.BM;\n    ry0 = t - parseInt(t);\n    ry1 = ry0 - 1;\n\n    t = z + parameters.N;\n    bz0 = parseInt(t) & parameters.BM;\n    bz1 = (bz0 + 1) & parameters.BM;\n    rz0 = t - parseInt(t);\n    rz1 = rz0 - 1;\n\n    i = parameters.P[bx0];\n    j = parameters.P[bx1];\n\n    b00 = parameters.P[i + by0];\n    b10 = parameters.P[j + by0];\n    b01 = parameters.P[i + by1];\n    b11 = parameters.P[j + by1];\n\n    t = this.sCurve(rx0);\n    sy = this.sCurve(ry0);\n    sz = this.sCurve(rz0);\n\n    q = parameters.G3[b00 + bz0];\n    u = rx0 * q[0] + ry0 * q[1] + rz0 * q[2];\n    q = parameters.G3[b10 + bz0];\n    v = rx1 * q[0] + ry0 * q[1] + rz0 * q[2];\n    a = this.lerp(t, u, v);\n\n    q = parameters.G3[b01 + bz0];\n    u = rx0 * q[0] + ry1 * q[1] + rz0 * q[2];\n    q = parameters.G3[b11 + bz0];\n    v = rx1 * q[0] + ry1 * q[1] + rz0 * q[2];\n    b = this.lerp(t, u, v);\n\n    c = this.lerp(sy, a, b);\n\n    q = parameters.G3[b00 + bz1];\n    u = rx0 * q[0] + ry0 * q[1] + rz1 * q[2];\n    q = parameters.G3[b10 + bz1];\n    v = rx1 * q[0] + ry0 * q[1] + rz1 * q[2];\n    a = this.lerp(t, u, v);\n\n    q = parameters.G3[b01 + bz1];\n    u = rx0 * q[0] + ry1 * q[1] + rz1 * q[2];\n    q = parameters.G3[b11 + bz1];\n    v = rx1 * q[0] + ry1 * q[1] + rz1 * q[2];\n    b = this.lerp(t, u, v);\n\n    d = this.lerp(sy, a, b);\n\n    return 1.5 * this.lerp(sz, c, d);\n  },\n  /**\n   * Compute turbulence using Perlin noise.\n   * @param x\n   * @param y\n   * @param z\n   * @param octaves\n   * @returns {*}\n   */\n  turbulence3: function (x, y, z, octaves) {\n    let t = 0,\n      i;\n    for (i = 1; i <= octaves; i *= 2) {\n      t += Math.abs(this.noise3(i * x, i * y, i * z)) / i;\n    }\n    return t;\n  },\n};\n\nexport default noise;\n","import BaseTransformEffect from \"../BaseTransform\";\nimport noiseHelper from \"../../../helpers/noise\";\n\nclass MarbleEffect extends BaseTransformEffect {\n  static getName() {\n    return \"marble\";\n  }\n\n  data = {\n    sinTable: {},\n    cosTable: {},\n    displacementMap: (x: number, y: number) => 0,\n  };\n\n  getDefaultParameters() {\n    return {\n      xScale: 4,\n      yScale: 4,\n      amount: 1,\n      turbulence: 1,\n    };\n  }\n\n  before(parameters, width, height, imageData) {\n    let sinTable = new Array(256),\n      cosTable = new Array(256),\n      i = 0,\n      angle;\n\n    for (i = 0; i < 256; i += 1) {\n      angle = ((Math.PI * 2 * i) / 256) * parameters.turbulence;\n      sinTable[i] = -parameters.yScale * Math.sin(angle);\n      cosTable[i] = parameters.yScale * Math.cos(angle);\n    }\n    return {\n      sinTable: sinTable,\n      cosTable: cosTable,\n      displacementMap: function (x, y) {\n        let result =\n          127 *\n          (1 +\n            noiseHelper.noise2(x / parameters.xScale, y / parameters.yScale));\n        return Math.min(255, Math.max(0, result));\n      },\n    };\n  }\n\n  callback(x, y, parameters) {\n    let displacement = Math.floor(this.data.displacementMap(x, y));\n    return [\n      x + this.data.sinTable[displacement],\n      y + this.data.cosTable[displacement],\n    ];\n  }\n}\n\nexport default MarbleEffect;\n","import BaseTransformEffect from \"../BaseTransform\";\n\nclass PinchEffect extends BaseTransformEffect {\n  static getName() {\n    return \"pinch\";\n  }\n\n  data = {\n    icentreX: 0,\n    icentreY: 0,\n    radius2: 0,\n  };\n\n  getDefaultParameters() {\n    return {\n      angle: 0,\n      centreX: 0.5,\n      centreY: 0.5,\n      radius: 100,\n      amount: 0.5,\n    };\n  }\n\n  before(parameters, width, height, imageData) {\n    let icentreX = width * parameters.centreX,\n      icentreY = height * parameters.centreY,\n      radius = parameters.radius,\n      radius2;\n    if (radius === 0) {\n      radius = Math.min(icentreX, icentreY);\n    }\n    radius2 = radius * radius;\n    return {\n      icentreX: icentreX,\n      icentreY: icentreY,\n      radius: radius,\n      radius2: radius2,\n    };\n  }\n\n  callback(x, y, parameters) {\n    let dx = x - this.data.icentreX,\n      dy = y - this.data.icentreY,\n      distance = dx * dx + dy * dy,\n      d,\n      t,\n      e,\n      a,\n      s,\n      c;\n\n    if (distance > this.data.radius2 || distance === 0) {\n      return [x, y];\n    }\n    d = Math.sqrt(distance / this.data.radius2);\n    t = Math.pow(Math.sin(Math.PI * 0.5 * d), -parameters.amount);\n\n    dx *= t;\n    dy *= t;\n\n    e = 1 - d;\n    a = parameters.angle * e * e;\n\n    s = Math.sin(a);\n    c = Math.cos(a);\n\n    return [\n      this.data.icentreX + c * dx - s * dy,\n      this.data.icentreY + s * dx + c * dy,\n    ];\n  }\n}\n\nexport default PinchEffect;\n","import BaseTransformEffect from \"../BaseTransform\";\nimport { triangle, mod } from \"../../../helpers/common\";\nimport noise from \"../../../helpers/noise\";\n\nclass RippleEffect extends BaseTransformEffect {\n  static getName() {\n    return \"ripple\";\n  }\n\n  getDefaultParameters() {\n    return {\n      xAmplitude: 5,\n      yAmplitute: 0,\n      xWaveLength: 16,\n      yWaveLength: 16,\n      waveType: \"SINE\", // SAWTOOTH TRIANGLE NOISE\n    };\n  }\n\n  callback(x, y, parameters) {\n    let nx = y / parameters.xWaveLength,\n      ny = x / parameters.yWaveLength,\n      fx,\n      fy;\n\n    switch (parameters.waveType) {\n      case \"SINE\":\n      default:\n        fx = Math.sin(nx);\n        fy = Math.sin(ny);\n        break;\n\n      case \"SAWTOOTH\":\n        fx = mod(nx, 1);\n        fy = mod(ny, 1);\n        break;\n\n      case \"TRIANGLE\":\n        fx = triangle(nx);\n        fy = triangle(ny);\n        break;\n\n      case \"NOISE\":\n        fx = noise.noise1(nx);\n        fy = noise.noise1(ny);\n        break;\n    }\n\n    return [x + parameters.xAmplitude * fx, y + parameters.yAmplitute * fy];\n  }\n}\n\nexport default RippleEffect;\n","import BaseTransformEffect from \"../BaseTransform\";\n\nclass ShearEffect extends BaseTransformEffect {\n  static getName() {\n    return \"shear\";\n  }\n\n  data = {\n    shx: 0,\n    shy: 0,\n  };\n\n  getDefaultParameters() {\n    return {\n      xAngle: 0,\n      yAngle: 0,\n      xOffset: 0,\n      yOffset: 0,\n    };\n  }\n\n  before(parameters, width, height) {\n    return {\n      shx: Math.sin(parameters.xAngle),\n      shy: Math.sin(parameters.yAngle),\n    };\n  }\n\n  callback(x, y, parameters) {\n    return [\n      x + parameters.xOffset + y * this.data.shx,\n      y + parameters.yOffset + x * this.data.shy,\n    ];\n  }\n}\n\nexport default ShearEffect;\n","import BaseTransformEffect from \"../BaseTransform\";\n\nclass SphereEffect extends BaseTransformEffect {\n  static getName() {\n    return \"sphere\";\n  }\n\n  data = {\n    icentreX: 0,\n    icentreY: 0,\n    a2: 0,\n    b2: 0,\n    a: 0,\n    b: 0,\n  };\n\n  getDefaultParameters() {\n    return {\n      a: 0,\n      b: 0,\n      centreX: 0.5,\n      centreY: 0.5,\n      refractionIndex: 1.5,\n    };\n  }\n\n  before(parameters, width, height) {\n    let icentreX = width * parameters.centreX,\n      icentreY = height * parameters.centreY,\n      a = parameters.a,\n      b = parameters.b,\n      a2,\n      b2;\n    if (a === 0) {\n      a = width / 2;\n    }\n    if (b === 0) {\n      b = height / 2;\n    }\n    a2 = a * a;\n    b2 = b * b;\n\n    return {\n      icentreX: icentreX,\n      icentreY: icentreY,\n      a: a,\n      b: b,\n      a2: a2,\n      b2: b2,\n    };\n  }\n\n  callback(x, y, parameters) {\n    let dx = x - this.data.icentreX,\n      dy = y - this.data.icentreY,\n      x2 = dx * dx,\n      y2 = dy * dy,\n      rRefraction = 1 / parameters.refractionIndex,\n      z = Math.sqrt(\n        (1 - x2 / this.data.a2 - y2 / this.data.b2) *\n          (this.data.a * this.data.b)\n      ),\n      z2 = z * z,\n      xAngle = Math.acos(dx / Math.sqrt(x2 + z2)),\n      angle1 = Math.PI / 2 - xAngle,\n      angle2 = Math.asin(Math.sin(angle1) * rRefraction),\n      yAngle = Math.acos(dy / Math.sqrt(y2 + z2)),\n      ret = new Array(2);\n\n    if (y2 >= this.data.b2 - this.data.b2 / x2 / this.data.a2) {\n      return [x, y];\n    }\n\n    angle2 = Math.PI / 2 - xAngle - angle2;\n    ret[0] = x - Math.tan(angle2) * z;\n\n    angle1 = Math.PI / 2 - yAngle;\n    angle2 = Math.asin(Math.sin(angle1) * rRefraction);\n    angle2 = Math.PI / 2 - yAngle - angle2;\n    ret[1] = y - Math.tan(angle2) * z;\n    return ret;\n  }\n}\n\nexport default SphereEffect;\n","import BaseTransformEffect from \"../BaseTransform\";\nimport noise from \"../../../helpers/noise\";\n\nclass SwimEffect extends BaseTransformEffect {\n  static getName() {\n    return \"swim\";\n  }\n\n  data = {\n    m00: 0,\n    m01: 0,\n    m10: 0,\n    m11: 0,\n  };\n\n  getDefaultParameters() {\n    return {\n      scale: 32,\n      turbulence: 0,\n      amount: 1,\n      time: 0,\n      angle: 0,\n      stretch: 1,\n    };\n  }\n\n  before(parameters, width, height) {\n    let cos = Math.cos(parameters.angle),\n      sin = Math.sin(parameters.angle);\n\n    return {\n      m00: cos,\n      m01: sin,\n      m10: -sin,\n      m11: cos,\n    };\n  }\n\n  callback(x, y, parameters) {\n    let nx = this.data.m00 * x + this.data.m01 * y,\n      ny = this.data.m10 * x + this.data.m11 * y;\n\n    nx /= parameters.scale;\n    ny /= parameters.scale * parameters.stretch;\n\n    if (parameters.turbulence === 1) {\n      return [\n        x + parameters.amount * noise.noise3(nx + 0.5, ny, parameters.time),\n        y + parameters.amount * noise.noise3(nx, ny + 0.5, parameters.time),\n      ];\n    }\n    return [\n      x +\n        parameters.amount *\n          noise.turbulence3(\n            nx + 0.5,\n            ny,\n            parameters.turbulence,\n            parameters.time\n          ),\n      y +\n        parameters.amount *\n          noise.turbulence3(\n            nx,\n            ny + 0.5,\n            parameters.turbulence,\n            parameters.time\n          ),\n    ];\n  }\n}\n\nexport default SwimEffect;\n","import BaseTransformEffect from \"../BaseTransform\";\nimport noise from \"../../../helpers/noise\";\n\nclass TwirlEffect extends BaseTransformEffect {\n  static getName() {\n    return \"twirl\";\n  }\n\n  data = {\n    iCentreX: 0,\n    iCentreY: 0,\n  };\n\n  getDefaultParameters() {\n    return {\n      angle: 0,\n      centreX: 0.5,\n      centreY: 0.5,\n      radius: 100,\n    };\n  }\n\n  before(parameters, width, height) {\n    let iCentreX = width * parameters.centreX,\n      iCentreY = height * parameters.centreY,\n      radius = parameters.radius,\n      radius2;\n\n    if (radius === 0) {\n      radius = Math.min(iCentreX, iCentreY);\n    }\n    radius2 = radius * radius;\n\n    return {\n      iCentreX: iCentreX,\n      iCentreY: iCentreY,\n      radius: radius,\n      radius2: radius2,\n    };\n  }\n\n  callback(x, y, parameters) {\n    let dx = x - this.data.iCentreX,\n      dy = y - this.data.iCentreY,\n      distance = dx * dx + dy * dy,\n      a;\n\n    if (distance > parameters.radius2) {\n      return [x, y];\n    }\n\n    distance = Math.sqrt(distance);\n    a =\n      Math.atan2(dy, dx) +\n      (parameters.angle * (parameters.radius - distance)) / parameters.radius;\n\n    return [\n      this.data.iCentreX + distance * Math.cos(a),\n      this.data.iCentreY + distance * Math.sin(a),\n    ];\n  }\n}\n\nexport default TwirlEffect;\n","import BaseTransformEffect from \"../BaseTransform\";\nimport noise from \"../../../helpers/noise\";\n\nclass WaterEffect extends BaseTransformEffect {\n  static getName() {\n    return \"water\";\n  }\n\n  data = {\n    iCentreX: 0,\n    iCentreY: 0,\n    radius2: 0,\n  };\n\n  getDefaultParameters() {\n    return {\n      waveLength: 16,\n      amplitude: 10,\n      phase: 0,\n      centreX: 0.5,\n      centreY: 0.5,\n      radius: 50,\n    };\n  }\n\n  before(parameters, width, height) {\n    let iCentreX = width * parameters.centreX,\n      iCentreY = height * parameters.centreY,\n      radius = parameters.radius,\n      radius2;\n\n    if (radius === 0) {\n      radius = Math.min(iCentreX, iCentreY);\n    }\n    radius2 = radius * radius;\n\n    return {\n      iCentreX: iCentreX,\n      iCentreY: iCentreY,\n      radius: radius,\n      radius2: radius2,\n    };\n  }\n\n  callback(x, y, parameters) {\n    let dx = x - this.data.iCentreX,\n      dy = y - this.data.iCentreY,\n      distance2 = dx * dx + dy * dy,\n      distance,\n      amount;\n\n    if (distance2 > this.data.radius2) {\n      return [x, y];\n    }\n    distance = Math.sqrt(distance2);\n    amount =\n      parameters.amplitude *\n      Math.sin(\n        (distance / parameters.waveLength) * Math.PI * 2 - parameters.phase\n      );\n    amount *= (parameters.radius - distance) / parameters.radius;\n    if (distance !== 0) {\n      amount *= parameters.waveLength / distance;\n    }\n    return [x + dx * amount, y + dy * amount];\n  }\n}\n\nexport default WaterEffect;\n","import BaseTransformEffect from \"../BaseTransform\";\nimport { mod } from \"../../../helpers/common\";\n\nclass CircleEffect extends BaseTransformEffect {\n  static getName() {\n    return \"circle\";\n  }\n\n  data = {\n    icentreX: 0,\n    width: 0,\n  };\n\n  getDefaultParameters() {\n    return {\n      radius: 10,\n      height: 20,\n      angle: 0,\n      spreadAngle: Math.PI,\n      centreX: 0.5,\n      centreY: 0.5,\n    };\n  }\n\n  before(parameters, width, height, imageData) {\n    return {\n      icentreX: width * parameters.centreX,\n      icentreY: height * parameters.centreY,\n      width: --width,\n    };\n  }\n\n  callback(x, y, parameters, width, height) {\n    let dx = x - this.data.icentreX,\n      dy = y - this.data.icentreX,\n      theta = Math.atan2(-dy, -dx) + parameters.angle,\n      r = Math.sqrt(dx * dx + dy * dy);\n\n    theta = mod(theta, 2 * Math.PI);\n\n    return [\n      (this.data.width * theta) / parameters.spreadAngle + 0.00001,\n      height * (1 - (r - parameters.radius) / (height + 0.00001)),\n    ];\n  }\n}\n\nexport default CircleEffect;\n","import BaseTransformEffect from \"../BaseTransform\";\n\nclass RotateEffect extends BaseTransformEffect {\n  static getName() {\n    return \"rotate\";\n  }\n\n  data = {\n    sin: 0,\n    cos: 0,\n    icentreX: 0,\n    icentreY: 0,\n  };\n\n  getDefaultParameters() {\n    return {\n      angle: Math.PI,\n    };\n  }\n\n  before(parameters, width, height, imageData) {\n    return {\n      cos: Math.cos(parameters.angle),\n      sin: Math.sin(parameters.angle),\n      icentreX: width / 2,\n      icentreY: height / 2,\n    };\n  }\n\n  callback(x, y, parameters, width, height) {\n    return [\n      this.data.cos * (x - this.data.icentreX) -\n        this.data.sin * (y - this.data.icentreY) +\n        this.data.icentreY,\n      this.data.sin * (x - this.data.icentreX) -\n        this.data.cos * (y - this.data.icentreY) +\n        this.data.icentreY,\n    ];\n  }\n}\n\nexport default RotateEffect;\n","import BaseTransformEffect from \"../BaseTransform\";\n\nclass RotateEffect extends BaseTransformEffect {\n  static getName() {\n    return \"offset\";\n  }\n\n  getDefaultParameters() {\n    return {\n      xOffset: 100,\n      yOffset: 100,\n      wrap: true,\n    };\n  }\n\n  callback(x, y, parameters, width, height) {\n    if (parameters.wrap) {\n      return [\n        (x + width - parameters.xOffset) % width,\n        (y + height - parameters.yOffset) % height,\n      ];\n    } else {\n      return [x - parameters.xOffset, y - parameters.yOffset];\n    }\n  }\n}\n\nexport default RotateEffect;\n","import BaseTransformEffect from \"../BaseTransform\";\n\nclass PolarEffect extends BaseTransformEffect {\n  static getName() {\n    return \"polar\";\n  }\n\n  data = {\n    centreX: 0,\n    centreY: 0,\n    sqr: (value: number) => 0,\n    radius: 0,\n  };\n\n  getDefaultParameters() {\n    return {\n      type: \"RECT_TO_POLAR\", // RECT_TO_POLAR, POLAR_TO_RECT, INVERT_IN_CIRCLE\n    };\n  }\n\n  before(parameters, width, height, imageData) {\n    return {\n      centreX: width / 2,\n      centreY: height / 2,\n      radius: Math.max(width / 2, height / 2),\n      sqr: function (x) {\n        return x * x;\n      },\n    };\n  }\n\n  callback(x, y, parameters, width, height) {\n    let theta,\n      theta2,\n      t,\n      m,\n      xMax,\n      yMax,\n      nx,\n      ny,\n      xmax,\n      ymax,\n      dx,\n      dy,\n      distance,\n      r = 0;\n\n    switch (parameters.type) {\n      case \"RECT_TO_POLAR\":\n        if (x >= this.data.centreX) {\n          if (y > this.data.centreY) {\n            theta =\n              Math.PI -\n              Math.atan((x - this.data.centreX) / (y - this.data.centreY));\n            r = Math.sqrt(\n              this.data.sqr(x - this.data.centreX) +\n                this.data.sqr(y - this.data.centreY)\n            );\n          } else {\n            if (y < this.data.centreY) {\n              theta = Math.atan(\n                (x - this.data.centreX) / (this.data.centreY - y)\n              );\n              r = Math.sqrt(\n                this.data.sqr(x - this.data.centreX) +\n                  this.data.sqr(this.data.centreY - y)\n              );\n            } else {\n              theta = Math.PI / 2;\n              r = x - this.data.centreX;\n            }\n          }\n        } else {\n          if (x < this.data.centreX) {\n            if (y < this.data.centreY) {\n              theta =\n                Math.PI * 2 -\n                Math.atan((this.data.centreX - x) / (this.data.centreY - y));\n              r = Math.sqrt(\n                this.data.sqr(this.data.centreX - x) +\n                  this.data.sqr(this.data.centreY - y)\n              );\n            } else {\n              if (y > this.data.centreY) {\n                theta =\n                  Math.PI +\n                  Math.atan((this.data.centreX - x) / (y - this.data.centreY));\n                r = Math.sqrt(\n                  this.data.sqr(this.data.centreX - x) +\n                    this.data.sqr(y - this.data.centreY)\n                );\n              } else {\n                theta = 1.5 * Math.PI;\n                r = this.data.centreX - x;\n              }\n            }\n          }\n        }\n        if (x != this.data.centreX) {\n          m = Math.abs((y - this.data.centreY) / (x - this.data.centreX));\n        } else {\n          m = 0;\n        }\n\n        if (m <= height / width) {\n          if (x == this.data.centreX) {\n            xMax = 0;\n            yMax = this.data.centreY;\n          } else {\n            xMax = this.data.centreX;\n            yMax = m * xMax;\n          }\n        } else {\n          yMax = this.data.centreY;\n          xMax = yMax / m;\n        }\n\n        return [\n          width - 1 - (width - 1) / (Math.PI * 2 * theta),\n          (height * r) / this.data.radius,\n        ];\n\n      case \"POLAR_TO_RECT\":\n        theta = (x / width) * Math.PI * 2;\n\n        if (theta >= 1.5 * Math.PI) {\n          theta2 = Math.PI * 2 - theta;\n        } else {\n          if (theta >= Math.PI) {\n            theta2 = theta - Math.PI;\n          } else {\n            if (theta >= 0.5 * Math.PI) {\n              theta2 = Math.PI - theta;\n            } else {\n              theta2 = theta;\n            }\n          }\n        }\n\n        t = Math.tan(theta2);\n        if (t != 0) {\n          m = 1.0 / t;\n        } else {\n          m = 0;\n        }\n\n        if (m <= height / width) {\n          if (theta2 == 0) {\n            xmax = 0;\n            ymax = this.data.centreY;\n          } else {\n            xmax = this.data.centreX;\n            ymax = m * xmax;\n          }\n        } else {\n          ymax = this.data.centreY;\n          xmax = ymax / m;\n        }\n\n        r = this.data.radius * (y / height);\n\n        nx = -r * Math.sin(theta2);\n        ny = r * Math.cos(theta2);\n\n        if (theta >= 1.5 * Math.PI) {\n          return [this.data.centreX - nx, this.data.centreY - ny];\n        } else {\n          if (theta >= Math.PI) {\n            return [this.data.centreX - nx, this.data.centreY + ny];\n          } else {\n            if (theta >= 0.5 * Math.PI) {\n              return [this.data.centreX + nx, this.data.centreY + ny];\n            } else {\n              return [this.data.centreX + nx, this.data.centreY - ny];\n            }\n          }\n        }\n        break; // TODO: ???\n\n      case \"INVERT_IN_CIRCLE\":\n        dx = x - this.data.centreX;\n        dy = y - this.data.centreY;\n        distance = dx * dx + dy * dy;\n\n        return [\n          this.data.centreX +\n            (this.data.centreX * this.data.centreX * dx) / distance,\n          this.data.centreY +\n            (this.data.centreY * this.data.centreY * dy) / distance,\n        ];\n    }\n  }\n}\n\nexport default PolarEffect;\n","import BaseTransformEffect from \"../BaseTransform\";\nimport noiseHelper from \"../../../helpers/noise\";\n\nclass PerspectiveEffect extends BaseTransformEffect {\n  static getName() {\n    return \"perspective\";\n  }\n\n  data = {\n    A: 0,\n    B: 0,\n    C: 0,\n    D: 0,\n    E: 0,\n    F: 0,\n    G: 0,\n    H: 0,\n    I: 0,\n  };\n\n  getDefaultParameters() {\n    return {\n      x0: 0,\n      y0: 0,\n      x1: 1,\n      y1: 0,\n      x2: 1,\n      y2: 1,\n      x3: 0,\n      y3: 1,\n    };\n  }\n\n  before(parameters, width, height, imageData) {\n    function unitSquareToQuad() {\n      let result = {\n          a11: 0,\n          a21: 0,\n          a31: 0,\n          a12: 0,\n          a22: 0,\n          a32: 0,\n          a13: 0,\n          a23: 0,\n          a33: 0,\n          A: 0,\n          B: 0,\n          C: 0,\n          D: 0,\n          E: 0,\n          F: 0,\n          G: 0,\n          H: 0,\n          I: 0,\n        },\n        x0 = Math.floor(width * parameters.x0),\n        y0 = Math.floor(height * parameters.y0),\n        x1 = Math.floor(width * parameters.x1),\n        y1 = Math.floor(height * parameters.y1),\n        x2 = Math.floor(width * parameters.x2),\n        y2 = Math.floor(height * parameters.y2),\n        x3 = Math.floor(width * parameters.x3),\n        y3 = Math.floor(height * parameters.y3),\n        dx1 = x1 - x2,\n        dy1 = y1 - y2,\n        dx2 = x3 - x2,\n        dy2 = y3 - y2,\n        dx3 = x0 - x1 + x2 - x3,\n        dy3 = y0 - y1 + y2 - y3;\n\n      if (dx3 == 0 && dy3 == 0) {\n        result.a11 = x1 - x0;\n        result.a21 = x2 - x1;\n        result.a31 = x0;\n        result.a12 = y1 - y0;\n        result.a22 = y2 - y1;\n        result.a32 = y0;\n        result.a13 = result.a23 = 0;\n      } else {\n        result.a13 = (dx3 * dy2 - dx2 * dy3) / (dx1 * dy2 - dy1 * dx2);\n        result.a23 = (dx1 * dy3 - dy1 * dx3) / (dx1 * dy2 - dy1 * dx2);\n        result.a11 = x1 - x0 + result.a13 * x1;\n        result.a21 = x3 - x0 + result.a23 * x3;\n        result.a31 = x0;\n        result.a12 = y1 - y0 + result.a13 * y1;\n        result.a22 = y3 - y0 + result.a23 * y3;\n        result.a32 = y0;\n      }\n\n      result.a33 = 1;\n\n      return result;\n    }\n\n    let result = unitSquareToQuad();\n\n    result.A = result.a22 * result.a33 - result.a32 * result.a23;\n    result.B = result.a31 * result.a23 - result.a21 * result.a33;\n    result.C = result.a21 * result.a32 - result.a31 * result.a22;\n    result.D = result.a32 * result.a13 - result.a12 * result.a33;\n    result.E = result.a11 * result.a33 - result.a31 * result.a13;\n    result.F = result.a31 * result.a12 - result.a11 * result.a32;\n    result.G = result.a12 * result.a23 - result.a22 * result.a13;\n    result.H = result.a21 * result.a13 - result.a11 * result.a23;\n    result.I = result.a11 * result.a22 - result.a21 * result.a12;\n\n    return result;\n  }\n\n  callback(x, y, parameters, width, height) {\n    return [\n      (width * (this.data.A * x + this.data.B * y + this.data.C)) /\n        (this.data.G * x + this.data.H * y + this.data.I),\n      (height * (this.data.D * x + this.data.E * y + this.data.F)) /\n        (this.data.G * x + this.data.H * y + this.data.I),\n    ];\n  }\n}\n\nexport default PerspectiveEffect;\n","import BaseEffect from \"./Base\";\n\nclass BaseCustomEffect extends BaseEffect {\n  callback(pixel, x, y, parameters, width, height) {\n    throw \"Extend it.\";\n  }\n\n  run(imageData, parameters) {\n    parameters = {\n      ...this.getDefaultParameters(),\n      ...parameters,\n    };\n\n    let imageDataCopy = new Uint8ClampedArray(imageData.data), // copy image data\n      /**\n       * Get ImageData array index from x and y position\n       * @param x\n       * @param y\n       * @returns {number}\n       */\n      getIndex = function getIndex(x, y) {\n        return y * imageData.width * 4 + x * 4;\n      },\n      normalizePixelValue = function (value) {\n        return Math.min(Math.max(value, 0), 255) | 0;\n      },\n      sandbox = {\n        // object invoked as this in effect callback\n        /**\n         * Get changed pixel\n         * @param {int} x\n         * @param {int} y\n         * @returns {{r: *, g: *, b: *, a: *}}\n         */\n        getPixel: function (x, y) {\n          let index = getIndex(x, y);\n          return {\n            r: imageDataCopy[index + 0],\n            g: imageDataCopy[index + 1],\n            b: imageDataCopy[index + 2],\n            a: imageDataCopy[index + 3],\n          };\n        },\n        /**\n         * Get pixel by its index\n         * @param index\n         */\n        getOriginalPixelByIndex: function (index) {\n          index *= 4;\n          return {\n            r: imageData.data[index],\n            g: imageData.data[index + 1],\n            b: imageData.data[index + 2],\n            a: imageData.data[index + 3],\n          };\n        },\n        /**\n         * Get original pixel.\n         * @param {int} x\n         * @param {int} y\n         * @returns {{r: *, g: *, b: *, a: *}}\n         */\n        getOriginalPixel: function (x, y) {\n          let index = getIndex(x, y);\n          return {\n            r: imageData.data[index + 0],\n            g: imageData.data[index + 1],\n            b: imageData.data[index + 2],\n            a: imageData.data[index + 3],\n          };\n        },\n        /**\n         * Set new pixel\n         * @param {int} x\n         * @param {int} y\n         * @param {object} rgba\n         */\n        setPixel: function (x, y, rgba) {\n          let index = getIndex(x, y);\n          imageDataCopy[index + 0] = normalizePixelValue(rgba.r);\n          imageDataCopy[index + 1] = normalizePixelValue(rgba.g);\n          imageDataCopy[index + 2] = normalizePixelValue(rgba.b);\n          imageDataCopy[index + 3] = normalizePixelValue(rgba.a);\n        },\n        /**\n         * Set pixel by index.\n         * @param index\n         * @param rgba\n         */\n        setPixelByIndex: function (index, rgba) {\n          index *= 4;\n          imageDataCopy[index + 0] = normalizePixelValue(rgba.r);\n          imageDataCopy[index + 1] = normalizePixelValue(rgba.g);\n          imageDataCopy[index + 2] = normalizePixelValue(rgba.b);\n          imageDataCopy[index + 3] = normalizePixelValue(rgba.a);\n        },\n        /**\n         * Data created by effect init function\n         */\n        data: null,\n        /**\n         * ImageData width\n         */\n        width: imageData.width,\n        /**\n         * ImageData height\n         */\n        height: imageData.height,\n      };\n\n    sandbox.data = this.before.call(\n      sandbox,\n      parameters,\n      imageData.width,\n      imageData.height,\n      imageData\n    );\n\n    this.callback.call(sandbox, imageData.width, imageData.height, parameters);\n\n    imageData.data.set(imageDataCopy);\n\n    return imageData;\n  }\n}\n\nexport default BaseCustomEffect;\n","import BaseCustomEffect from \"../BaseCustom\";\nimport { RGBtoCIELab, CIELabToRGB } from \"../../../helpers/color\";\n\nclass AutoWhiteBalanceEffect extends BaseCustomEffect {\n  static getName() {\n    return \"auto-white-balance\";\n  }\n\n  getDefaultParameters() {\n    return {\n      intensity: 50,\n    };\n  }\n\n  callback(width, height, parameters) {\n    let x,\n      y,\n      sumA = 0,\n      sumB = 0,\n      pixel,\n      lab,\n      avgSumA,\n      avgSumB,\n      aDelta,\n      bDelta;\n\n    for (y = 0; y < height; y += 1) {\n      for (x = 0; x < width; x += 1) {\n        pixel = this.getPixel(x, y);\n        lab = RGBtoCIELab(pixel.r, pixel.g, pixel.b);\n        sumA += lab.a;\n        sumB += lab.b;\n      }\n    }\n\n    avgSumA = 0 - sumA / (width * height);\n    avgSumB = 0 - sumB / (width * height);\n\n    aDelta = avgSumA * (parameters.intensity / 100) * 1.1;\n    bDelta = avgSumB * (parameters.intensity / 100) * 1.1;\n\n    for (y = 0; y < height; y += 1) {\n      for (x = 0; x < width; x += 1) {\n        pixel = this.getPixel(x, y);\n\n        lab = RGBtoCIELab(pixel.r, pixel.g, pixel.b);\n\n        lab.a += aDelta;\n        lab.b += bDelta;\n\n        pixel = CIELabToRGB(lab.l, lab.a, lab.b);\n        pixel.a = this.getPixel(x, y).a;\n\n        this.setPixel(x, y, pixel);\n      }\n    }\n  }\n}\n\nexport default AutoWhiteBalanceEffect;\n","import BaseCustomEffect from \"../BaseCustom\";\nimport { hexToRGB } from \"../../../helpers/color\";\n\nclass FillColorEffect extends BaseCustomEffect {\n  static getName() {\n    return \"fill-color\";\n  }\n\n  getDefaultParameters() {\n    return {\n      color: \"transparent\",\n    };\n  }\n\n  callback(width, height, parameters) {\n    let x, y, color;\n\n    if (parameters.color === \"transparent\") {\n      color = {\n        r: 0,\n        g: 0,\n        b: 0,\n        a: 0,\n      };\n    } else {\n      color = hexToRGB(parameters.color);\n      color.a = 255;\n    }\n\n    for (y = 0; y < height; y += 1) {\n      for (x = 0; x < width; x += 1) {\n        this.setPixel(x, y, color);\n      }\n    }\n  }\n}\n\nexport default FillColorEffect;\n","import BaseCustomEffect from \"../BaseCustom\";\n\nclass FlipEffect extends BaseCustomEffect {\n  static getName() {\n    return \"flip\";\n  }\n\n  getDefaultParameters() {\n    return {\n      operation: \"FLIP_H\", // FLIP_H, FLIP_V, FLIP_HV, FLIP_90CW, FLIP_90CCW, FLIP_180\n    };\n  }\n\n  callback(width, height, parameters) {\n    let x = 0,\n      y = 0,\n      w = width,\n      h = height,\n      newX = 0,\n      newY = 0,\n      newW = w,\n      newH = h,\n      newRow,\n      newCol;\n\n    switch (parameters.operation) {\n      case \"FLIP_H\":\n        newX = width - (x + w);\n        break;\n      case \"FLIP_V\":\n        newY = height - (y + h);\n        break;\n      case \"FLIP_HV\":\n        newW = h;\n        newH = w;\n        newX = y;\n        newY = x;\n        break;\n      case \"FLIP_90CW\":\n        newW = h;\n        newH = w;\n        newX = height - (y + h);\n        newY = x;\n        break;\n      case \"FLIP_90CCW\":\n        newW = h;\n        newH = w;\n        newX = y;\n        newY = width - (x + w);\n        break;\n      case \"FLIP_180\":\n        newX = width - (x + w);\n        newY = height - (y + h);\n        break;\n    }\n\n    for (y = 0; y < height; y += 1) {\n      for (x = 0; x < width; x += 1) {\n        newRow = y;\n        newCol = x;\n\n        switch (parameters.operation) {\n          case \"FLIP_H\":\n            newCol = w - x - 1;\n            break;\n          case \"FLIP_V\":\n            newRow = h - y - 1;\n            break;\n          case \"FLIP_HV\":\n            newRow = x;\n            newCol = y;\n            break;\n          case \"FLIP_90CW\":\n            newRow = x;\n            newCol = h - y - 1;\n            break;\n          case \"FLIP_90CCW\":\n            newRow = w - x - 1;\n            newCol = y;\n            break;\n          case \"FLIP_180\":\n            newRow = h - y - 1;\n            newCol = w - x - 1;\n            break;\n        }\n\n        this.setPixel(newCol, newRow, this.getOriginalPixel(x, y));\n      }\n    }\n  }\n}\n\nexport default FlipEffect;\n","import BaseCustomEffect from \"../BaseCustom\";\n\nclass BlockEffect extends BaseCustomEffect {\n  static getName() {\n    return \"block\";\n  }\n\n  getDefaultParameters() {\n    return {\n      blockSize: 5,\n    };\n  }\n\n  callback(width, height, parameters) {\n    let x, y, w, h, t, r, g, b, pixel, by, bx;\n\n    for (y = 0; y < height; y += parameters.blockSize) {\n      for (x = 0; x < width; x += parameters.blockSize) {\n        w = Math.min(parameters.blockSize, width - x);\n        h = Math.min(parameters.blockSize, height - y);\n        t = w * h;\n\n        r = 0;\n        g = 0;\n        b = 0;\n\n        for (by = 0; by < h; by += 1) {\n          for (bx = 0; bx < w; bx += 1) {\n            pixel = this.getOriginalPixel(x + bx, y + by);\n\n            r += pixel.r & 0xff;\n            g += pixel.g & 0xff;\n            b += pixel.b & 0xff;\n          }\n        }\n\n        r = r / t;\n        g = g / t;\n        b = b / t;\n\n        for (by = 0; by < h; by += 1) {\n          for (bx = 0; bx < w; bx += 1) {\n            this.setPixel(x + bx, y + by, {\n              r: r,\n              g: g,\n              b: b,\n              a: 255,\n            });\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default BlockEffect;\n","import BaseCustomEffect from \"../BaseCustom\";\n\nclass BorderEffect extends BaseCustomEffect {\n  static getName() {\n    return \"border\";\n  }\n\n  data = {\n    leftBorder: 0,\n    rightBorder: 0,\n    topBorder: 0,\n    bottomBorder: 0,\n  };\n\n  getDefaultParameters() {\n    return {\n      leftBorder: 10,\n      rightBorder: 10,\n      topBorder: 10,\n      bottomBorder: 10,\n      borderColor: {\n        r: 0,\n        b: 0,\n        g: 0,\n        a: 255,\n      },\n    };\n  }\n\n  before(parameters, width, height, imageData) {\n    return {\n      leftBorder: parameters.leftBorder | 0,\n      rightBorder: parameters.rightBorder | 0,\n      topBorder: parameters.rightBorder | 0,\n      bottomBorder: parameters.bottomBorder | 0,\n    };\n  }\n\n  callback(width, height, parameters) {\n    let x, y;\n\n    for (y = 0; y < height; y += 1) {\n      for (x = 0; x < width; x += 1) {\n        if (this.data.leftBorder > 0 && x < this.data.leftBorder) {\n          this.setPixel(x, y, parameters.borderColor);\n        }\n        if (this.data.rightBorder > 0 && width - this.data.rightBorder < x) {\n          this.setPixel(x, y, parameters.borderColor);\n        }\n        if (this.data.topBorder > 0 && y < this.data.topBorder) {\n          this.setPixel(x, y, parameters.borderColor);\n        }\n        if (this.data.bottomBorder > 0 && height - this.data.bottomBorder < y) {\n          this.setPixel(x, y, parameters.borderColor);\n        }\n      }\n    }\n  }\n}\n\nexport default BorderEffect;\n","import BaseCustomEffect from \"../BaseCustom\";\nimport { brightness } from \"../../../helpers/common\";\n\nclass EmbossEffect extends BaseCustomEffect {\n  static getName() {\n    return \"emboss\";\n  }\n\n  getDefaultParameters() {\n    return {\n      azimuth: (135 * Math.PI) / 180,\n      elevation: (30 * Math.PI) / 180,\n      width45: 3,\n      emboss: true,\n    };\n  }\n\n  callback(width, height, parameters) {\n    let x,\n      y,\n      bumpMapWidth = width,\n      bumpPixels = [],\n      Nx,\n      Ny,\n      Nz,\n      Lx,\n      Ly,\n      Lz,\n      Nz2,\n      NzLz,\n      NdotL,\n      s1,\n      s2,\n      s3,\n      shade,\n      background,\n      pixelScale = 255.9,\n      bumpIndex = 0,\n      index = 0,\n      pixel,\n      r,\n      g,\n      b;\n\n    Lx =\n      (Math.cos(parameters.azimuth) *\n        Math.cos(parameters.elevation) *\n        pixelScale) |\n      0;\n    Ly =\n      (Math.sin(parameters.azimuth) *\n        Math.cos(parameters.elevation) *\n        pixelScale) |\n      0;\n    Lz = (Math.sin(parameters.elevation) * pixelScale) | 0;\n\n    Nz = ((6 * 255) / parameters.width45) | 0;\n    Nz2 = Nz * Nz;\n    NzLz = Nz * Lz;\n\n    background = Lz;\n\n    for (y = 0; y < height; y += 1) {\n      for (x = 0; x < width; x += 1) {\n        bumpPixels.push(brightness(this.getOriginalPixel(x, y)) | 0);\n      }\n    }\n\n    for (y = 0; y < height; y += 1, bumpIndex += bumpMapWidth) {\n      s1 = bumpIndex;\n      s2 = s1 + bumpMapWidth;\n      s3 = s2 + bumpMapWidth;\n\n      for (x = 0; x < width; x += 1, s1 += 1, s2 += 1, s3 += 1) {\n        if (y != 0 && y < height - 2 && x != 0 && x < width - 2) {\n          Nx =\n            bumpPixels[s1 - 1] +\n            bumpPixels[s2 - 1] +\n            bumpPixels[s3 - 1] -\n            bumpPixels[s1 + 1] -\n            bumpPixels[s2 + 1] -\n            bumpPixels[s3 + 1];\n          Ny =\n            bumpPixels[s3 - 1] +\n            bumpPixels[s3] +\n            bumpPixels[s3 + 1] -\n            bumpPixels[s1 - 1] -\n            bumpPixels[s1] -\n            bumpPixels[s1 + 1];\n\n          if (Nx == 0 && Ny == 0) {\n            shade = background;\n          } else {\n            if ((NdotL = Nx * Lx + Ny * Ly + NzLz) < 0) {\n              shade = 0;\n            } else {\n              shade = NdotL / Math.sqrt(Nx * Nx + Ny * Ny + Nz2);\n            }\n          }\n        } else {\n          shade = background;\n        }\n\n        if (parameters.emboss) {\n          pixel = this.getOriginalPixelByIndex(index);\n          r = (pixel.r * shade) >> 8;\n          g = (pixel.g * shade) >> 8;\n          b = (pixel.b * shade) >> 8;\n          this.setPixelByIndex(index++, {\n            r: r,\n            g: g,\n            b: b,\n            a: pixel.a,\n          });\n        } else {\n          this.setPixelByIndex(index++, {\n            r: shade,\n            g: shade << 8,\n            b: shade << 16,\n            a: 255,\n          });\n        }\n      }\n    }\n  }\n}\n\nexport default EmbossEffect;\n","import BaseCustomEffect from \"../BaseCustom\";\n\nclass ComponentStretchingEffect extends BaseCustomEffect {\n  static getName() {\n    return \"component-stretching\";\n  }\n\n  callback(width, height, parameters) {\n    let x,\n      y,\n      minR = Infinity,\n      minG = Infinity,\n      minB = Infinity,\n      maxR = -1,\n      maxG = -1,\n      maxB = -1,\n      pixel,\n      remap = function remap(value, min, max) {\n        return ((value - min) * 255) / (max - min);\n      };\n\n    for (y = 0; y < height; y += 1) {\n      for (x = 0; x < width; x += 1) {\n        pixel = this.getPixel(x, y);\n\n        minR = Math.min(pixel.r, minR);\n        minG = Math.min(pixel.g, minG);\n        minB = Math.min(pixel.b, minB);\n\n        maxR = Math.max(pixel.r, maxR);\n        maxG = Math.max(pixel.g, maxG);\n        maxB = Math.max(pixel.b, maxB);\n      }\n    }\n\n    for (y = 0; y < height; y += 1) {\n      for (x = 0; x < width; x += 1) {\n        pixel = this.getPixel(x, y);\n\n        pixel.r = remap(pixel.r, minR, maxR);\n        pixel.g = remap(pixel.g, minG, maxG);\n        pixel.b = remap(pixel.b, minB, maxB);\n\n        this.setPixel(x, y, pixel);\n      }\n    }\n  }\n}\n\nexport default ComponentStretchingEffect;\n","import GrayScale from \"./effects/point/GrayScale\";\nimport Sepia from \"./effects/point/Sepia\";\nimport Contrast from \"./effects/point/Contrast\";\nimport Brightness from \"./effects/point/Brightness\";\nimport Diffusion from \"./effects/point/Diffusion\";\nimport Dither from \"./effects/point/Dither\";\nimport Exposure from \"./effects/point/Exposure\";\nimport Gain from \"./effects/point/Gain\";\nimport Gamma from \"./effects/point/Gamma\";\nimport HSBAdjust from \"./effects/point/HSBAdjust\";\nimport InvertAlpha from \"./effects/point/InvertAlpha\";\nimport Invert from \"./effects/point/Invert\";\nimport Levels from \"./effects/point/Levels\";\nimport Rescale from \"./effects/point/Rescale\";\nimport Solarize from \"./effects/point/Solarize\";\nimport Threshold from \"./effects/point/Threshold\";\nimport Tritone from \"./effects/point/Tritone\";\nimport Dissolve from \"./effects/point/Dissolve\";\nimport Edge from \"./effects/point/Edge\";\nimport ChannelMix from \"./effects/point/ChannelMix\";\nimport AutoContrast from \"./effects/point/AutoContrast\";\n\nimport Diffuse from \"./effects/transform/Diffuse\";\nimport Kaleidoscope from \"./effects/transform/Kaleidoscope\";\nimport Marble from \"./effects/transform/Marble\";\nimport Pinch from \"./effects/transform/Pinch\";\nimport Ripple from \"./effects/transform/Ripple\";\nimport Shear from \"./effects/transform/Shear\";\nimport Sphere from \"./effects/transform/Sphere\";\nimport Swim from \"./effects/transform/Swim\";\nimport Twirl from \"./effects/transform/Twirl\";\nimport Water from \"./effects/transform/Water\";\nimport Circle from \"./effects/transform/Circle\";\nimport Rotate from \"./effects/transform/Rotate\";\nimport Offset from \"./effects/transform/Offset\";\nimport Polar from \"./effects/transform/Polar\";\nimport Perspective from \"./effects/transform/Perspective\";\n\nimport AutoWhiteBalance from \"./effects/custom/AutoWhiteBalance\";\nimport FillColor from \"./effects/custom/FillColor\";\nimport Flip from \"./effects/custom/Flip\";\nimport Block from \"./effects/custom/Block\";\nimport Border from \"./effects/custom/Border\";\nimport Emboss from \"./effects/custom/Emboss\";\nimport ComponentStretching from \"./effects/custom/ComponentStretching\";\n\nlet availableEffects = {};\n\nfunction add(_class) {\n  if (availableEffects[_class.getName()]) {\n    throw `Effect: ${_class.getName()} exists already!`;\n  }\n  availableEffects[_class.getName()] = _class;\n}\n\nadd(GrayScale);\nadd(Sepia);\nadd(Contrast);\nadd(Brightness);\nadd(Diffusion);\nadd(Dither);\nadd(Exposure);\nadd(Gain);\nadd(Gamma);\nadd(HSBAdjust);\nadd(InvertAlpha);\nadd(Invert);\nadd(Levels);\nadd(Rescale);\nadd(Solarize);\nadd(Threshold);\nadd(Tritone);\nadd(Diffuse);\nadd(Dissolve);\nadd(Kaleidoscope);\nadd(Marble);\nadd(Pinch);\nadd(Ripple);\nadd(Shear);\nadd(Sphere);\nadd(Swim);\nadd(Twirl);\nadd(Water);\nadd(Edge);\nadd(ChannelMix);\nadd(Circle);\nadd(Rotate);\nadd(Offset);\nadd(Polar);\nadd(Perspective);\nadd(AutoContrast);\nadd(AutoWhiteBalance);\nadd(FillColor);\nadd(Flip);\nadd(Block);\nadd(Border);\nadd(Emboss);\nadd(ComponentStretching);\n\nclass EffectsRepository {\n  static get(name) {\n    return availableEffects[name];\n  }\n}\n\nexport default EffectsRepository;\n","import CanvasWrapper from \"./CanvasWrapper\";\nimport { cropImageData } from \"../helpers/common\";\nimport EffectsRepository from \"./EffectsRepository\";\n\nclass LayerObject {\n  obj = null;\n\n  layer = null;\n\n  x = 0;\n\n  y = 0;\n\n  opts = {};\n\n  effects = [];\n\n  constructor(obj, layer, x, y, opts) {\n    this.obj = obj;\n    this.layer = this;\n    this.x = x;\n    this.y = y;\n    this.opts = opts;\n    this.effects = [];\n  }\n\n  getObject() {\n    return this.obj;\n  }\n\n  getX() {\n    return this.x;\n  }\n\n  getY() {\n    return this.y;\n  }\n\n  getWidth() {\n    return this.obj.getWidth();\n  }\n\n  getHeight() {\n    return this.obj.getHeight();\n  }\n\n  exportObject() {\n    let imageData = this.obj.getImageData();\n    for (let i = 0; i < this.effects.length; i += 1) {\n      imageData = this.effects[i].effect.run(imageData, this.effects[i].params);\n    }\n    return imageData;\n  }\n\n  applyEffect(name, parameters) {\n    this.effects.push({\n      name,\n      effect: new (EffectsRepository.get(name))(),\n      parameters,\n    });\n  }\n\n  moveXY(x, y) {\n    this.moveX(x);\n    this.moveY(y);\n    return this;\n  }\n\n  moveX(x) {\n    this.x += x | 0;\n    return this;\n  }\n\n  moveY(y) {\n    this.y += y | 0;\n    return this;\n  }\n\n  setXY(x, y) {\n    this.setX(x);\n    this.setY(y);\n    return this;\n  }\n\n  setX(x) {\n    this.x = x;\n    return this;\n  }\n\n  setY(y) {\n    this.y = y;\n    return this;\n  }\n\n  resize(newWidth, newHeight, mode, isLayerResize) {\n    let oldWidth = this.getWidth(),\n      oldHeight = this.getHeight(),\n      ratioX = newWidth / oldWidth,\n      ratioY = newHeight / oldHeight;\n\n    if (isLayerResize) {\n      this.moveXY(-this.getX() * ratioX, -this.getY() * ratioY);\n    }\n\n    this.getObject().resize(newWidth, newHeight, mode);\n\n    return this;\n  }\n\n  crop(startX, startY, width, height) {\n    let object = this.getObject(),\n      oldImageData = object.getImageData(),\n      canvas = new CanvasWrapper(width, height),\n      newImageData = canvas.getContext().createImageData(width, height);\n\n    newImageData = cropImageData(\n      oldImageData,\n      newImageData,\n      startX,\n      startY,\n      width,\n      height\n    );\n\n    object.setImageData(newImageData).setWidth(width).setHeight(height);\n\n    this.setXY(startX, startY);\n\n    return this;\n  }\n}\n\nexport default LayerObject;\n","import CanvasWrapper from \"./CanvasWrapper\";\nimport LayerObject from \"./LayerObject\";\nimport { mergeImageData, mergePixelCallback } from \"../helpers/common\";\nimport EffectsRepository from \"./EffectsRepository\";\n\nclass Layer {\n  objects = [];\n\n  effects = [];\n\n  x = 0;\n\n  y = 0;\n\n  canvas = null;\n\n  imageData = null;\n\n  width = 0;\n\n  height = 0;\n\n  parameters = {\n    background_color: \"\",\n    blendingMode: \"\",\n  };\n\n  constructor(\n    width,\n    height,\n    parameters = {\n      background_color: \"transparent\",\n      blendingMode: \"\",\n    }\n  ) {\n    this.initialize(width, height, parameters);\n\n    if (\n      parameters.background_color &&\n      parameters.background_color !== \"transparent\"\n    ) {\n      this.applyEffect(\"fill-color\", {\n        color: parameters.background_color,\n      });\n    }\n  }\n\n  initialize(width, height, parameters) {\n    this.canvas = new CanvasWrapper(width, height);\n    this.imageData = this.canvas.getContext().createImageData(width, height);\n    this.width = width;\n    this.height = height;\n    this.parameters = parameters;\n  }\n\n  put(obj, x, y) {\n    let put = new LayerObject(obj, this, x, y, {});\n    this.objects.push(put);\n    return put;\n  }\n\n  /*exportTo(selector, imageType = \"image/png\") {\n    this.exportLayer();\n\n    let container = document.querySelector(selector),\n      exportedImage = new Image();\n\n    exportedImage.src = canvas.toDataURL(imageType);\n    container.appendChild(exportedImage);\n  }*/\n\n  exportLayer() {\n    let i, layerObject;\n\n    for (i = 0; i < this.objects.length; i += 1) {\n      layerObject = this.objects[i];\n      this.imageData = mergeImageData(\n        {\n          width: this.width,\n          height: this.height,\n          imageData: this.imageData,\n        },\n        {\n          x: layerObject.getX(),\n          y: layerObject.getY(),\n          width: layerObject.getWidth(),\n          height: layerObject.getHeight(),\n          imageData: layerObject.exportObject(),\n        },\n        mergePixelCallback\n      );\n    }\n\n    for (i = 0; i < this.effects.length; i++) {\n      this.imageData = this.effects[i].effect.run(\n        this.imageData,\n        this.effects[i].params\n      );\n    }\n\n    return this.imageData;\n  }\n\n  applyEffect(name, parameters) {\n    this.effects.push({\n      name,\n      effect: new (EffectsRepository.get(name))(),\n      parameters,\n    });\n  }\n\n  resize(newWidth, newHeight, mode) {\n    let i;\n\n    this.canvas.destroy();\n    this.canvas = null;\n    this.imageData = null;\n\n    this.initialize(newWidth, newHeight, this.parameters);\n\n    for (i = 0; i < this.objects.length; i += 1) {\n      this.objects[i].resize(newWidth, newHeight, mode, true);\n    }\n\n    return this;\n  }\n\n  crop(startX, startY, width, height) {\n    let i;\n\n    for (i = 0; i < this.objects.length; i += 1) {\n      this.objects[i].crop(startX, startY, width, height);\n    }\n\n    return this;\n  }\n\n  moveXY(x, y) {\n    this.moveX(x);\n    this.moveY(y);\n    return this;\n  }\n\n  moveX(x) {\n    this.x += x | 0;\n    return this;\n  }\n\n  moveY(y) {\n    this.y += y | 0;\n    return this;\n  }\n\n  setX(x) {\n    this.x = x;\n    return this;\n  }\n\n  setY(y) {\n    this.y = y;\n    return this;\n  }\n\n  setBlendingMode(blendingMode) {\n    this.parameters.blendingMode = blendingMode;\n  }\n\n  getX() {\n    return this.x;\n  }\n\n  getY() {\n    return this.y;\n  }\n\n  getWidth() {\n    return this.width;\n  }\n\n  getHeight() {\n    return this.height;\n  }\n\n  getParameter(name) {\n    return this.parameters[name];\n  }\n}\n\nexport default Layer;\n","import CanvasWrapper from \"./CanvasWrapper\";\nimport Layer from \"./Layer\";\nimport {\n  mergeImageData,\n  mergePixelCallback,\n  isBrowser,\n} from \"../helpers/common\";\nimport EffectsRepository from \"./EffectsRepository\";\n\nclass Project {\n  imageData = null;\n\n  effects = [];\n\n  layers = [];\n\n  startTime = new Date();\n\n  parameters = {};\n\n  width = 0;\n\n  height = 0;\n\n  canvas = null;\n\n  constructor(width, height, parameters = {}) {\n    this.initialize(width, height, parameters);\n  }\n\n  initialize(width, height, parameters) {\n    this.parameters = parameters;\n    this.width = width;\n    this.height = height;\n    this.canvas = new CanvasWrapper(width, height);\n    this.imageData = this.canvas.getContext().getImageData(0, 0, width, height);\n  }\n\n  createLayer(parameters) {\n    let layer = new Layer(this.width, this.height, parameters);\n    this.layers.push(layer);\n    return layer;\n  }\n\n  getTime() {\n    let end = new Date();\n    return end.getTime() - this.startTime.getTime();\n  }\n\n  save(selector, imageType = \"image/png\") {\n    if (isBrowser()) {\n      throw new Error(\"Available only in node.js environment\");\n    }\n\n    for (let i = 0; i < this.layers.length; i++) {\n      this.imageData = mergeImageData(\n        {\n          width: this.width,\n          height: this.height,\n          imageData: this.imageData,\n        },\n        {\n          x: this.layers[i].getX(),\n          y: this.layers[i].getY(),\n          width: this.layers[i].getWidth(),\n          height: this.layers[i].getHeight(),\n          imageData: this.layers[i].exportLayer(),\n          blendingMode: this.layers[i].getParameter(\"blendingMode\"),\n        },\n        mergePixelCallback\n      );\n    }\n\n    for (let i = 0; i < this.effects.length; i++) {\n      this.imageData = this.effects[i].effect.run(\n        this.imageData,\n        this.effects[i].parameters\n      );\n    }\n\n    this.canvas.getContext().putImageData(this.imageData, 0, 0);\n\n    let fs = require(\"fs\"),\n      img = this.canvas.toDataURL(),\n      data = img.replace(/^data:image\\/\\w+;base64,/, \"\"),\n      buff = new Buffer(data, \"base64\");\n\n    fs.writeFile(selector, buff);\n  }\n\n  render(imageType = \"image/png\") {\n    if (!isBrowser()) {\n      throw new Error(\"Available only in browser environment\");\n    }\n\n    let i,\n      exportedImage = new window.Image();\n\n    for (i = 0; i < this.layers.length; i++) {\n      this.imageData = mergeImageData(\n        {\n          width: this.width,\n          height: this.height,\n          imageData: this.imageData,\n        },\n        {\n          x: this.layers[i].getX(),\n          y: this.layers[i].getY(),\n          width: this.layers[i].getWidth(),\n          height: this.layers[i].getHeight(),\n          imageData: this.layers[i].exportLayer(),\n          blendingMode: this.layers[i].getParameter(\"blendingMode\"),\n        },\n        mergePixelCallback\n      );\n    }\n\n    for (i = 0; i < this.effects.length; i++) {\n      this.imageData = this.effects[i].effect.run(\n        this.imageData,\n        this.effects[i].parameters\n      );\n    }\n\n    this.canvas.getContext().putImageData(this.imageData, 0, 0);\n\n    exportedImage.src = this.canvas.toDataURL(imageType);\n    return exportedImage;\n  }\n\n  applyEffect(name, parameters = {}) {\n    this.effects.push({\n      name,\n      effect: new (EffectsRepository.get(name))(),\n      parameters,\n    });\n  }\n\n  resize(newWidth, newHeight, mode) {\n    this.canvas.destroy();\n    this.canvas = null;\n    this.imageData = null;\n    this.initialize(newWidth, newHeight, mode);\n\n    for (let i = 0; i < this.layers.length; i += 1) {\n      this.layers[i].resize(newWidth, newHeight, mode);\n    }\n\n    return this;\n  }\n}\n\nexport default Project;\n","export function resizeNearestNeighbour(\n  oldImageData,\n  newImageData,\n  newWidth,\n  newHeight\n) {\n  let oldWidth = oldImageData.width,\n    oldHeight = oldImageData.height,\n    ratioX = oldWidth / newWidth,\n    ratioY = oldHeight / newHeight,\n    oldPixelIndex,\n    newPixelIndex,\n    x,\n    y;\n\n  for (y = 0; y < newHeight; y += 1) {\n    for (x = 0; x < newWidth; x += 1) {\n      oldPixelIndex =\n        Math.floor(y * ratioY) * oldWidth * 4 + Math.floor(x * ratioX) * 4;\n      newPixelIndex = y * newWidth * 4 + x * 4;\n\n      newImageData.data[newPixelIndex + 0] =\n        oldImageData.data[oldPixelIndex + 0];\n      newImageData.data[newPixelIndex + 1] =\n        oldImageData.data[oldPixelIndex + 1];\n      newImageData.data[newPixelIndex + 2] =\n        oldImageData.data[oldPixelIndex + 2];\n      newImageData.data[newPixelIndex + 3] =\n        oldImageData.data[oldPixelIndex + 3];\n    }\n  }\n\n  return newImageData;\n}\n\nexport function resizeBilinearInterpolation(\n  oldImageData,\n  newImageData,\n  newWidth,\n  newHeight\n) {\n  let oldWidth = oldImageData.width,\n    oldHeight = oldImageData.height,\n    ratioX = oldWidth / newWidth,\n    ratioY = oldHeight / newHeight,\n    newPixelIndex,\n    x,\n    y,\n    x0,\n    y0,\n    dx,\n    dy,\n    x1,\n    y1,\n    oldPixelIndex00,\n    oldPixelIndex01,\n    oldPixelIndex10,\n    oldPixelIndex11,\n    i,\n    j;\n\n  for (i = 0; i < newHeight; i += 1) {\n    for (j = 0; j < newWidth; j += 1) {\n      x = j * ratioX;\n      y = i * ratioY;\n      x0 = Math.floor(x);\n      y0 = Math.floor(y);\n      dx = x - x0;\n      dy = y - y0;\n      x1 = x0 + 1;\n      y1 = y0 + 1;\n\n      if (x1 >= oldWidth) {\n        x1 = x0;\n      }\n      if (y1 >= oldHeight) {\n        y1 = y0;\n      }\n\n      oldPixelIndex00 = (y0 * oldWidth + x0) * 4;\n      oldPixelIndex01 = (y0 * oldWidth + x1) * 4;\n      oldPixelIndex10 = (y1 * oldWidth + x0) * 4;\n      oldPixelIndex11 = (y1 * oldWidth + x1) * 4;\n      newPixelIndex = (i * newWidth + j) * 4;\n\n      newImageData.data[newPixelIndex] =\n        (1.0 - dy) *\n          ((1.0 - dx) * oldImageData.data[oldPixelIndex00] +\n            dx * oldImageData.data[oldPixelIndex01]) +\n        dy *\n          ((1.0 - dx) * oldImageData.data[oldPixelIndex10] +\n            dx * oldImageData.data[oldPixelIndex11]);\n      newImageData.data[newPixelIndex + 1] =\n        (1.0 - dy) *\n          ((1.0 - dx) * oldImageData.data[oldPixelIndex00 + 1] +\n            dx * oldImageData.data[oldPixelIndex01 + 1]) +\n        dy *\n          ((1.0 - dx) * oldImageData.data[oldPixelIndex10 + 1] +\n            dx * oldImageData.data[oldPixelIndex11 + 1]);\n      newImageData.data[newPixelIndex + 2] =\n        (1.0 - dy) *\n          ((1.0 - dx) * oldImageData.data[oldPixelIndex00 + 2] +\n            dx * oldImageData.data[oldPixelIndex01 + 2]) +\n        dy *\n          ((1.0 - dx) * oldImageData.data[oldPixelIndex10 + 2] +\n            dx * oldImageData.data[oldPixelIndex11 + 2]);\n      newImageData.data[newPixelIndex + 3] =\n        (1.0 - dy) *\n          ((1.0 - dx) * oldImageData.data[oldPixelIndex00 + 3] +\n            dx * oldImageData.data[oldPixelIndex01 + 3]) +\n        dy *\n          ((1.0 - dx) * oldImageData.data[oldPixelIndex10 + 3] +\n            dx * oldImageData.data[oldPixelIndex11 + 3]);\n    }\n  }\n\n  return newImageData;\n}\n\nexport function resizeBiquadraticInterpolation(\n  oldImageData,\n  newImageData,\n  newWidth,\n  newHeight\n) {\n  let interpolate = function interpolate(f1, f2, f3, d) {\n      return f2 + (f3 - f1) * d + (f1 - 2 * f2 + f3) * d * d;\n    },\n    interpolateNormalize = function interpolateNormalize(f1, f2, f3, d) {\n      let result = interpolate(f1, f2, f3, d);\n      if (result > 255) {\n        return 255;\n      }\n      if (result < 0) {\n        return 0;\n      }\n      return Math.floor(result);\n    },\n    oldWidth = oldImageData.width,\n    oldHeight = oldImageData.height,\n    ratioX = oldWidth / newWidth,\n    ratioY = oldHeight / newHeight,\n    x,\n    y,\n    x0,\n    y0,\n    x1,\n    y1,\n    x2,\n    y2,\n    dx,\n    dy,\n    oldPixelIndex00,\n    oldPixelIndex01,\n    oldPixelIndex02,\n    oldPixelIndex10,\n    oldPixelIndex11,\n    oldPixelIndex12,\n    oldPixelIndex20,\n    oldPixelIndex21,\n    oldPixelIndex22,\n    newPixelIndex,\n    i,\n    j;\n\n  for (i = 0; i < newHeight; i += 1) {\n    for (j = 0; j < newWidth; j += 1) {\n      x = j * ratioX;\n      y = i * ratioY;\n\n      x1 = Math.floor(x);\n      y1 = Math.floor(y);\n      dx = (x - x1) * 0.5;\n      dy = (y - y1) * 0.5;\n\n      if (x1 - 1 >= 0) {\n        x0 = x1 - 1;\n      } else {\n        x0 = x1;\n      }\n\n      if (y1 - 1 >= 0) {\n        y0 = y1 - 1;\n      } else {\n        y0 = y1;\n      }\n\n      if (x1 + 1 >= oldWidth) {\n        x2 = x1;\n      } else {\n        x2 = x1 + 1;\n      }\n\n      if (y1 + 1 >= oldWidth) {\n        y2 = y1;\n      } else {\n        y2 = y1 + 1;\n      }\n\n      oldPixelIndex00 = (y0 * oldWidth + x0) * 4;\n      oldPixelIndex01 = (y0 * oldWidth + x1) * 4;\n      oldPixelIndex02 = (y0 * oldWidth + x2) * 4;\n      oldPixelIndex10 = (y1 * oldWidth + x0) * 4;\n      oldPixelIndex11 = (y1 * oldWidth + x1) * 4;\n      oldPixelIndex12 = (y1 * oldWidth + x2) * 4;\n      oldPixelIndex20 = (y2 * oldWidth + x0) * 4;\n      oldPixelIndex21 = (y2 * oldWidth + x1) * 4;\n      oldPixelIndex22 = (y2 * oldWidth + x2) * 4;\n\n      newPixelIndex = (i * newWidth + j) * 4;\n\n      newImageData.data[newPixelIndex] = interpolateNormalize(\n        interpolate(\n          oldImageData.data[oldPixelIndex00],\n          oldImageData.data[oldPixelIndex01],\n          oldImageData.data[oldPixelIndex02],\n          dx\n        ),\n        interpolate(\n          oldImageData.data[oldPixelIndex10],\n          oldImageData.data[oldPixelIndex11],\n          oldImageData.data[oldPixelIndex12],\n          dx\n        ),\n        interpolate(\n          oldImageData.data[oldPixelIndex20],\n          oldImageData.data[oldPixelIndex21],\n          oldImageData.data[oldPixelIndex22],\n          dx\n        ),\n        dy\n      );\n\n      newImageData.data[newPixelIndex + 1] = interpolateNormalize(\n        interpolate(\n          oldImageData.data[oldPixelIndex00 + 1],\n          oldImageData.data[oldPixelIndex01 + 1],\n          oldImageData.data[oldPixelIndex02 + 1],\n          dx\n        ),\n        interpolate(\n          oldImageData.data[oldPixelIndex10 + 1],\n          oldImageData.data[oldPixelIndex11 + 1],\n          oldImageData.data[oldPixelIndex12 + 1],\n          dx\n        ),\n        interpolate(\n          oldImageData.data[oldPixelIndex20 + 1],\n          oldImageData.data[oldPixelIndex21 + 1],\n          oldImageData.data[oldPixelIndex22 + 1],\n          dx\n        ),\n        dy\n      );\n\n      newImageData.data[newPixelIndex + 2] = interpolateNormalize(\n        interpolate(\n          oldImageData.data[oldPixelIndex00 + 2],\n          oldImageData.data[oldPixelIndex01 + 2],\n          oldImageData.data[oldPixelIndex02 + 2],\n          dx\n        ),\n        interpolate(\n          oldImageData.data[oldPixelIndex10 + 2],\n          oldImageData.data[oldPixelIndex11 + 2],\n          oldImageData.data[oldPixelIndex12 + 2],\n          dx\n        ),\n        interpolate(\n          oldImageData.data[oldPixelIndex20 + 2],\n          oldImageData.data[oldPixelIndex21 + 2],\n          oldImageData.data[oldPixelIndex22 + 2],\n          dx\n        ),\n        dy\n      );\n\n      newImageData.data[newPixelIndex + 3] = interpolateNormalize(\n        interpolate(\n          oldImageData.data[oldPixelIndex00 + 3],\n          oldImageData.data[oldPixelIndex01 + 3],\n          oldImageData.data[oldPixelIndex02 + 3],\n          dx\n        ),\n        interpolate(\n          oldImageData.data[oldPixelIndex10 + 3],\n          oldImageData.data[oldPixelIndex11 + 3],\n          oldImageData.data[oldPixelIndex12 + 3],\n          dx\n        ),\n        interpolate(\n          oldImageData.data[oldPixelIndex20 + 3],\n          oldImageData.data[oldPixelIndex21 + 3],\n          oldImageData.data[oldPixelIndex22 + 3],\n          dx\n        ),\n        dy\n      );\n    }\n  }\n\n  return newImageData;\n}\n","import BaseOnLayerObject from \"./BaseOnLayer\";\nimport CanvasWrapper from \"./CanvasWrapper\";\nimport { isBrowser } from \"../helpers/common\";\n\nclass Image extends BaseOnLayerObject {\n  url = null;\n\n  image = null;\n\n  constructor() {\n    super();\n\n    if (!isBrowser()) {\n      let canvas = require(\"canvas\");\n      this.image = new canvas.Image();\n    } else {\n      this.image = new window.Image();\n\n      // hide from viewport\n      this.image.style.position = \"absolute\";\n      this.image.style.left = \"-99999px\";\n      this.image.style.top = \"-99999px\";\n    }\n  }\n\n  load(url, callback) {\n    let load = () => {\n      this.setWidth(!isBrowser() ? this.image.width : this.image.clientWidth);\n      this.setHeight(\n        !isBrowser() ? this.image.height : this.image.clientHeight\n      );\n\n      // get image data\n      this.canvas = new CanvasWrapper(this.getWidth(), this.getHeight());\n      this.canvas\n        .getContext()\n        .drawImage(this.image, 0, 0, this.getWidth(), this.getHeight());\n\n      if (isBrowser()) {\n        document.body.removeChild(this.image);\n      }\n\n      if (typeof callback === \"function\") {\n        callback.call(this);\n      }\n    };\n\n    this.url = url;\n\n    if (isBrowser()) {\n      document.body.appendChild(this.image);\n      this.image.onload = function () {\n        load();\n      };\n      this.image.src = url;\n    } else {\n      let fs = require(\"fs\");\n      this.image.src = fs.readFileSync(url);\n      load();\n    }\n  }\n}\n\nexport default Image;\n","import CanvasWrapper from \"./CanvasWrapper\";\nimport {\n  resizeNearestNeighbour,\n  resizeBilinearInterpolation,\n  resizeBiquadraticInterpolation,\n} from \"../helpers/resize\";\n\nclass BaseOnLayerObject {\n  imageData = null;\n\n  canvas = null;\n\n  width = 0;\n\n  height = 0;\n\n  getWidth() {\n    return this.width;\n  }\n\n  getHeight() {\n    return this.height;\n  }\n\n  setWidth(value) {\n    this.width = value;\n    return this;\n  }\n\n  setHeight(value) {\n    this.height = value;\n    return this;\n  }\n\n  getImageData() {\n    if (!this.imageData) {\n      this.imageData = this.canvas\n        .getContext()\n        .getImageData(0, 0, this.getWidth(), this.getHeight());\n    }\n    return this.imageData;\n  }\n\n  setImageData(value) {\n    this.imageData = value;\n    return this;\n  }\n\n  resize(newWidth, newHeight, mode = \"nearest-neighbour\") {\n    let oldImageData = this.getImageData(),\n      canvas = new CanvasWrapper(newWidth, newHeight),\n      newImageData = canvas.getContext().createImageData(newWidth, newHeight);\n\n    switch (mode) {\n      case \"nearest-neighbour\":\n        newImageData = resizeNearestNeighbour(\n          oldImageData,\n          newImageData,\n          newWidth,\n          newHeight\n        );\n        break;\n\n      case \"bilinear-interpolation\":\n        newImageData = resizeBilinearInterpolation(\n          oldImageData,\n          newImageData,\n          newWidth,\n          newHeight\n        );\n        break;\n\n      case \"biquadratic-interpolation\":\n        newImageData = resizeBiquadraticInterpolation(\n          oldImageData,\n          newImageData,\n          newWidth,\n          newHeight\n        );\n        break;\n\n      default:\n        canvas.destroy();\n        return this;\n    }\n\n    canvas.destroy();\n\n    return this.setWidth(newWidth)\n      .setHeight(newHeight)\n      .setImageData(newImageData);\n  }\n}\n\nexport default BaseOnLayerObject;\n"],"names":["module","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","blendingModes","lighten","bottomPixel","topPixel","darken","multiply","average","add","Math","min","subtract","difference","abs","negation","screen","exclusion","overlay","softLight","hardLight","colorDodge","colorBurn","max","linearDodge","linearBurn","linearLight","vividLight","pinLight","hardMix","reflect","glow","phoenix","mergeImageData","bottom","top","pixelCallback","x","y","xx","yy","firstOldPixelIndex","firstNewPixelIndex","pixelResult","height","width","imageData","data","g","b","a","blendingMode","mergePixelCallback","parameters","mergedR","mergedG","mergedB","mergedA","rootA","outA","rootR","rootG","rootB","mod","floor","triangle","brightness","pixel","isBrowser","window","CanvasWrapper","this","initialize","canvas","document","createElement","style","position","left","setWidth","setHeight","body","appendChild","Canvas","setAttribute","context","getContext","type","toDataURL","removeChild","BaseEffect","opts","BasePointEffect","getDefaultParameters","firstPixelIndex","result","imageDataCopy","Uint8ClampedArray","getIndex","normalizePixelValue","sandbox","getPixel","index","getOriginalPixel","setPixel","rgba","before","callback","set","GrayScaleEffect","newRGB","sepiaValue","tmp","ContrastEffect","factor","contrast","BrightnessEffect","DiffusionEffect","map","div","sum","matrix","levels","colorDither","granulate","i","length","red2","green2","blue2","tmpPixel","tmpRed","tmpGreen","tmpBlue","j","iy","jx","w","grayScale","red1","green1","blue1","DitherEffect","matrices","ditherMagic4x4Matrix","ditherOrdered4x4Matrix","ditherLines4x4Matrix","dither90Halftone6x6Matrix","ditherOrdered6x6Matrix","ditherOrdered8x8Matrix","ditherCluster3Matrix","ditherCluster4Matrix","ditherCluster8Matrix","rows","cols","sqrt","col","row","v","red","green","blue","ExposureEffect","exposure","exp","GainEffect","gain","bias","GammaEffect","table","gammaRed","gammaGreen","gammaBlue","pow","mixColors","t","rgb1","rgb2","RGBtoCIELab","xyz","let_R","let_G","let_B","z","RGBtoXYZ","let_X","let_Y","let_Z","l","HSBAdjustEffect","h","s","hsb","hue","saturation","cmax","cmin","redc","greenc","bluec","RGBtoHSB","PI","f","p","q","parseInt","HSBtoRGB","InvertAlphaEffect","InvertEffect","LevelsEffect","lut","low","high","lowOutput","highOutput","histogram","offset","stride","Array","minValue","maxValue","minFrequency","maxFrequency","mean","numSamples","isGray","Infinity","getNumSamples","getFrequency","channel","getMinFrequency","getMaxFrequency","getMinValue","getMaxValue","getMeanValue","RescaleEffect","scale","SolarizeEffect","ThresholdEffect","TritoneEffect","shadowColor","midColor","highColor","DissolveEffect","minDensity","maxDensity","density","softness","random","smoothStep","EdgeEffect","hEdgeMatrix","vEdgeMatrix","matrixes","robertsV","robertsH","prewittV","prewittH","sobelV","sobelH","freiChenV","freiChenH","ix","mOffset","pixel2","rh","gh","bh","rv","gv","bv","ChannelMixEffect","blueGreen","redBlue","greenRed","intoR","intoG","intoB","AutoContrastEffect","remap","BaseTransformEffect","newXY","newX","newY","oldPixelIndex","newPixelIndex","DiffuseEffect","sinTable","cosTable","angle","sin","cos","distance","KaleidoscopeEffect","icentreX","icentreY","centreX","centreY","angle2","sides","radius","dx","dy","theta","atan2","c","radiusC","isInit","init","B","BM","N","P","G1","G2","G3","k","normalize2","normalize3","arr","sCurve","lerp","noise1","bx0","bx1","rx0","rx1","sx","u","noise2","by0","by1","b00","b10","b01","b11","ry0","ry1","sy","noise3","bz0","bz1","rz0","rz1","sz","turbulence3","octaves","MarbleEffect","displacementMap","xScale","yScale","amount","turbulence","noiseHelper","displacement","PinchEffect","radius2","e","RippleEffect","xAmplitude","yAmplitute","xWaveLength","yWaveLength","waveType","fx","fy","nx","ny","noise","ShearEffect","shx","shy","xAngle","yAngle","xOffset","yOffset","SphereEffect","a2","b2","refractionIndex","x2","y2","rRefraction","z2","acos","angle1","asin","ret","tan","SwimEffect","m00","m01","m10","m11","time","stretch","TwirlEffect","iCentreX","iCentreY","WaterEffect","waveLength","amplitude","phase","distance2","CircleEffect","spreadAngle","RotateEffect","wrap","PolarEffect","sqr","theta2","atan","PerspectiveEffect","A","C","D","E","F","G","H","I","x0","y0","x1","y1","x3","y3","a11","a21","a31","a12","a22","a32","a13","a23","a33","dx1","dy1","dx2","dy2","dx3","dy3","unitSquareToQuad","BaseCustomEffect","getOriginalPixelByIndex","setPixelByIndex","AutoWhiteBalanceEffect","intensity","lab","avgSumB","aDelta","bDelta","sumA","sumB","CIELabToXYZ","FillColorEffect","color","hex","replace","FlipEffect","operation","newRow","newCol","BlockEffect","blockSize","by","bx","BorderEffect","leftBorder","rightBorder","topBorder","bottomBorder","borderColor","EmbossEffect","azimuth","elevation","width45","emboss","Nx","Ny","Nz","Lx","Ly","Lz","Nz2","NzLz","NdotL","s1","s2","s3","shade","background","bumpMapWidth","bumpPixels","pixelScale","bumpIndex","push","ComponentStretchingEffect","minR","minG","minB","maxR","maxG","maxB","availableEffects","_class","getName","GrayScale","Sepia","Contrast","Brightness","Diffusion","Dither","Exposure","Gain","Gamma","HSBAdjust","InvertAlpha","Invert","Levels","Rescale","Solarize","Threshold","Tritone","Diffuse","Dissolve","Kaleidoscope","Marble","Pinch","Ripple","Shear","Sphere","Swim","Twirl","Water","Edge","ChannelMix","Circle","Rotate","Offset","Polar","Perspective","AutoContrast","AutoWhiteBalance","FillColor","Flip","Block","Border","Emboss","ComponentStretching","EffectsRepository","name","LayerObject","layer","effects","getWidth","getHeight","getImageData","effect","run","params","moveX","moveY","setX","setY","newWidth","newHeight","mode","isLayerResize","ratioX","ratioY","moveXY","getX","getY","getObject","resize","startX","startY","object","oldImageData","newImageData","createImageData","oldWidth","cropImageData","setImageData","setXY","Layer","background_color","applyEffect","put","objects","layerObject","exportObject","destroy","crop","Project","Date","layers","getTime","startTime","selector","Error","exportLayer","getParameter","putImageData","fs","buff","Buffer","writeFile","imageType","exportedImage","Image","src","resizeNearestNeighbour","resizeBilinearInterpolation","oldPixelIndex00","oldPixelIndex01","oldPixelIndex10","oldPixelIndex11","oldHeight","resizeBiquadraticInterpolation","oldPixelIndex02","oldPixelIndex12","oldPixelIndex20","oldPixelIndex21","oldPixelIndex22","interpolate","f1","f2","f3","interpolateNormalize","image","url","load","clientWidth","clientHeight","drawImage","onload","readFileSync","BaseOnLayerObject"],"sourceRoot":""}