{"version":3,"file":"imagizer.js","mappings":"kCAAAA,EAAOC,QAAUC,QAAQ,W,OCAzBF,EAAOC,QAAUC,QAAQ,QCCrBC,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaL,QAGrB,IAAID,EAASG,EAAyBE,GAAY,CAGjDJ,QAAS,IAOV,OAHAO,EAAoBH,GAAUL,EAAQA,EAAOC,QAASG,GAG/CJ,EAAOC,QCpBfG,EAAoBK,EAAI,CAACR,EAASS,KACjC,IAAI,IAAIC,KAAOD,EACXN,EAAoBQ,EAAEF,EAAYC,KAASP,EAAoBQ,EAAEX,EAASU,IAC5EE,OAAOC,eAAeb,EAASU,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,MCJ3EP,EAAoBQ,EAAI,CAACK,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFd,EAAoBkB,EAAKrB,IACH,oBAAXsB,QAA0BA,OAAOC,aAC1CX,OAAOC,eAAeb,EAASsB,OAAOC,YAAa,CAAEC,MAAO,WAE7DZ,OAAOC,eAAeb,EAAS,aAAc,CAAEwB,OAAO,K,2DCLvD,IAAMC,EAAgB,CACpBC,QAAS,SAAUC,EAAqBC,GACtC,OAAOA,EAAWD,EAAcC,EAAWD,GAE7CE,OAAQ,SAAUF,EAAqBC,GACrC,OAAOA,EAAWD,EAAcA,EAAcC,GAEhDE,SAAU,SAAUH,EAAqBC,GACvC,OAAQD,EAAcC,EAAY,KAEpCG,QAAS,SAAUJ,EAAqBC,GACtC,OAAOD,EAAcC,EAAW,GAElCI,IAAK,SAAUL,EAAqBC,GAClC,OAAOK,KAAKC,IAAI,IAAKP,EAAcC,IAErCO,SAAU,SAAUR,EAAqBC,GACvC,OAAOD,EAAcC,EAAW,IAAM,EAAID,EAAcC,EAAW,KAErEQ,WAAY,SAAUT,EAAqBC,GACzC,OAAOK,KAAKI,IAAIV,EAAcC,IAEhCU,SAAU,SAAUX,EAAqBC,GACvC,OAAO,IAAMK,KAAKI,IAAI,IAAMV,EAAcC,IAE5CW,OAAQ,SAAUZ,EAAqBC,GACrC,OAAO,MAAS,IAAMD,IAAgB,IAAMC,IAAc,IAE5DY,UAAW,SAAUb,EAAqBC,GACxC,OAAOD,EAAcC,EAAY,EAAID,EAAcC,EAAY,KAEjEa,QAAS,SAAUd,EAAqBC,GACtC,OAAOA,EAAW,IACb,EAAID,EAAcC,EAAY,IAC/B,IAAO,GAAK,IAAMD,IAAgB,IAAMC,GAAa,KAE3Dc,UAAW,SAAUf,EAAqBC,GACxC,OAAOA,EAAW,IACd,GAA0B,IAApBD,GAAe,KAAYC,EAAW,KAC5C,IAAO,GAAK,KAA4B,IAApBD,GAAe,MAAa,IAAMC,GAAa,KAEzEe,UAAW,SAAUhB,EAAqBC,GACxC,OAAOH,EAAciB,UAAUd,EAAUD,IAE3CiB,WAAY,SAAUjB,EAAqBC,GACzC,OAAoB,MAAbA,EACHA,EACAK,KAAKC,IAAI,KAAMP,GAAe,IAAM,IAAMC,KAEhDiB,UAAW,SAAUlB,EAAqBC,GACxC,OAAoB,IAAbA,EACHA,EACAK,KAAKa,IAAI,EAAG,KAAQ,IAAMnB,GAAgB,GAAKC,IAErDmB,YAAa,SAAUpB,EAAqBC,GAC1C,OAAOH,EAAcO,IAAIL,EAAaC,IAExCoB,WAAY,SAAUrB,EAAqBC,GACzC,OAAOH,EAAcU,SAASR,EAAaC,IAE7CqB,YAAa,SAAUtB,EAAqBC,GAC1C,OAAOA,EAAW,IACdH,EAAcuB,WAAWrB,EAAa,EAAIC,GAC1CH,EAAcsB,YAAYpB,EAAa,GAAKC,EAAW,OAE7DsB,WAAY,SAAUvB,EAAqBC,GACzC,OAAOA,EAAW,IACdH,EAAcoB,UAAUlB,EAAa,EAAIC,GACzCH,EAAcmB,WAAWjB,EAAa,GAAKC,EAAW,OAE5DuB,SAAU,SAAUxB,EAAqBC,GACvC,OAAOA,EAAW,IACdH,EAAcI,OAAOF,EAAa,EAAIC,GACtCH,EAAcC,QAAQC,EAAa,GAAKC,EAAW,OAEzDwB,QAAS,SAAUzB,EAAqBC,GACtC,OAAOH,EAAcyB,WAAWvB,EAAaC,GAAY,IAAM,EAAI,KAErEyB,QAAS,SAAU1B,EAAqBC,GACtC,OAAoB,MAAbA,EACHA,EACAK,KAAKC,IAAI,IAAMP,EAAcA,GAAgB,IAAMC,KAEzD0B,KAAM,SAAU3B,EAAqBC,GACnC,OAAOH,EAAc4B,QAAQzB,EAAUD,IAEzC4B,QAAS,SAAU5B,EAAqBC,GACtC,OACEK,KAAKC,IAAIP,EAAaC,GAAYK,KAAKa,IAAInB,EAAaC,GAAY,MAKnE,SAAS4B,EAAeC,EAAQC,EAAKC,GAC1C,IAAIC,EAAGC,EAAGC,EAAIC,EAAIC,EAAoBC,EAAoBC,EAE1D,IACEL,EAAIH,EAAIG,EAAGE,EAAK,EAChBF,EAAIJ,EAAOU,QAAUJ,EAAKL,EAAIS,OAC9BN,GAAK,EAAGE,GAAM,EAEd,IACEH,EAAIF,EAAIE,EAAGE,EAAK,EAChBF,EAAIH,EAAOW,OAASN,EAAKJ,EAAIU,MAC7BR,GAAK,EAAGE,GAAM,EAEVA,EAAKJ,EAAIU,OAASL,EAAKL,EAAIS,SAE7BH,EAAqBH,EAAIJ,EAAOW,MAAQ,EAAQ,EAAJR,EAC5CK,EAAqBF,EAAKL,EAAIU,MAAQ,EAAS,EAALN,GAsBtB,KApBpBI,EAAcP,EACZ,CACEtC,EAAGoC,EAAOY,UAAUC,KAAKN,EAAqB,GAC9CO,EAAGd,EAAOY,UAAUC,KAAKN,EAAqB,GAC9CQ,EAAGf,EAAOY,UAAUC,KAAKN,EAAqB,GAC9CS,EAAGhB,EAAOY,UAAUC,KAAKN,EAAqB,IAEhD,CACE3C,EAAGqC,EAAIW,UAAUC,KAAKL,EAAqB,GAC3CM,EAAGb,EAAIW,UAAUC,KAAKL,EAAqB,GAC3CO,EAAGd,EAAIW,UAAUC,KAAKL,EAAqB,GAC3CQ,EAAGf,EAAIW,UAAUC,KAAKL,EAAqB,IAE7CL,EACAC,EACA,CACEa,aAAchB,EAAIgB,kBAMpBjB,EAAOY,UAAUC,KAAKN,EAAqB,GAAKE,EAAY7C,EAC5DoC,EAAOY,UAAUC,KAAKN,EAAqB,GAAKE,EAAYK,EAC5Dd,EAAOY,UAAUC,KAAKN,EAAqB,GAAKE,EAAYM,EAC5Df,EAAOY,UAAUC,KAAKN,EAAqB,GAAKE,EAAYO,IAKpE,OAAOhB,EAAOY,UAGT,SAASM,EACdhD,EACAC,EACAgC,EACAC,EACAe,GAEA,GAAmB,IAAfhD,EAAS6C,EACX,OAAO,EAIT,IAAII,EACFC,EACAC,EACAC,EAAUpD,EAAS6C,EAAI,IACvBQ,EAAStD,EAAY8C,EAAI,KAAQ,EAAIO,GACrCE,EAAOF,EAAWrD,EAAY8C,GAAK,EAAIO,GAAY,IAErD,OAAQJ,EAAWF,cACjB,IAAK,UACL,IAAK,SACL,IAAK,WACL,IAAK,UACL,IAAK,MACL,IAAK,WACL,IAAK,aACL,IAAK,WACL,IAAK,SACL,IAAK,YACL,IAAK,UACL,IAAK,YACL,IAAK,YACL,IAAK,aACL,IAAK,YACL,IAAK,cACL,IAAK,aACL,IAAK,cACL,IAAK,aACL,IAAK,WACL,IAAK,UACL,IAAK,UACL,IAAK,OACL,IAAK,UACH9C,EAASP,EAAII,EAAcmD,EAAWF,cACpC/C,EAAYN,EACZO,EAASP,GAEXO,EAAS2C,EAAI9C,EAAcmD,EAAWF,cACpC/C,EAAY4C,EACZ3C,EAAS2C,GAEX3C,EAAS4C,EAAI/C,EAAcmD,EAAWF,cACpC/C,EAAY6C,EACZ5C,EAAS4C,GAQf,IAAIW,EAAQxD,EAAYN,EACpB+D,EAAQzD,EAAY4C,EACpBc,EAAQ1D,EAAY6C,EAUxB,OARAK,EAAUjD,EAASP,EAAI2D,EAAUG,EAAQF,EACzCH,EAAUlD,EAAS2C,EAAIS,EAAUI,EAAQH,EACzCF,EAAUnD,EAAS4C,EAAIQ,EAAUK,EAAQJ,EAEzCJ,EAAmB,IAATK,EAAa,EAAIL,EAAUK,EACrCJ,EAAmB,IAATI,EAAa,EAAIJ,EAAUI,EACrCH,EAAmB,IAATG,EAAa,EAAIH,EAAUG,EAE9B,CACL7D,EAAyC,EAAtCY,KAAKC,IAAID,KAAKa,IAAI,EAAG+B,GAAU,KAClCN,EAAyC,EAAtCtC,KAAKC,IAAID,KAAKa,IAAI,EAAGgC,GAAU,KAClCN,EAAyC,EAAtCvC,KAAKC,IAAID,KAAKa,IAAI,EAAGiC,GAAU,KAClCN,EAAI,IAAMS,EAAQ,GAgDf,SAASI,EAAIb,EAAWD,GAG7B,OADAC,GADQxC,KAAKsD,MAAMd,EAAID,GACdA,GACD,EACCC,EAAID,EAENC,EAGF,SAASe,EAAS5B,GACvB,IAAIvC,EAAIiE,EAAI1B,EAAG,GACf,OAAO,GAAKvC,EAAI,GAAMA,EAAI,EAAIA,GAczB,SAASoE,EAAWC,GACzB,OAAQA,EAAMrE,EAAIqE,EAAMnB,EAAImB,EAAMlB,GAAK,EAGlC,SAASmB,IACd,MAAyB,oBAAXC,O,8RCpOhB,QArEMC,WAUJ,WAAYzB,EAAeD,I,4FAAgB,yBATI,MASJ,iBANzC,MAMyC,eAJjB,GAIiB,gBAFhB,GAGzB2B,KAAKC,WAAW3B,EAAOD,G,+CAGzB,WAAwD,IAA7CC,EAA6C,uDAA7B,EAAGD,EAA0B,uDAAT,EAC7C,GAAKwB,IAIHG,KAAKE,OAASC,SAASC,cAAc,UAGrCJ,KAAKE,OAAOG,MAAMC,SAAW,WAC7BN,KAAKE,OAAOG,MAAME,KAAO,WACzBP,KAAKE,OAAOG,MAAMzC,IAAM,WAExBoC,KAAKQ,SAASlC,GACd0B,KAAKS,UAAUpC,GAEf8B,SAASO,KAAKC,YAAYX,KAAKE,YAdf,CAChB,MAAyB/F,EAAQ,KAAzByG,EAAR,EAAQA,aACRZ,KAAKE,OAASU,EAAatC,EAAOD,M,sBAgBtC,SAAS3C,GAGP,OAFAsE,KAAKE,OAAOW,aAAa,QAAS,GAAKnF,GACvCsE,KAAK1B,MAAQ5C,EACNsE,O,uBAGT,SAAUtE,GAGR,OAFAsE,KAAKE,OAAOW,aAAa,SAAU,GAAKnF,GACxCsE,KAAK3B,OAAS3C,EACPsE,O,wBAGT,WAIE,OAHKA,KAAKc,UACRd,KAAKc,QAAUd,KAAKE,OAAOa,WAAW,OAEjCf,KAAKc,U,uBAGd,WACE,OAAOd,KAAKE,S,uBAGd,WAA8C,IAApCc,EAAoC,uDAArB,YACvB,OAAOhB,KAAKE,OAAOe,UAAUD,K,qBAG/B,WACMnB,KACFM,SAASO,KAAKQ,YAAYlB,KAAKE,QAEjCF,KAAKE,OAAS,KACdF,KAAKc,QAAU,U,mBAjEbf,G,4XC0BN,QA7BMoB,WAGJ,aAA+B,IAAnBC,EAAmB,uDAAJ,GAAI,wBAFN,IAGvBpB,KAAKoB,KAAOA,E,6CAgBd,WACE,KAAM,iB,qCAdR,WACE,MAAO,K,oBAGT,SACEtC,EACAR,EACAD,EACAE,GAEA,MAAO,K,iBAOT,SAAIA,EAAsBO,GACxB,OAAO,U,6BAzBLqC,G,sqDCoKN,QAlKME,SAAAA,I,quBACJ,SACEzB,EAMA9B,EACAC,EACAe,EACAR,EACAD,GAEA,KAAM,e,iBAGR,SAAIE,EAAsBO,GAMxB,IAAIhB,EAAGC,EAAGuD,EAAiBC,EAL3BzC,EAAaA,EAAa,EAAH,KAClBkB,KAAKwB,wBACL1C,GAIL,IAAM2C,EAAgB,IAAIC,kBAAkBnD,EAAUC,MAOpDmD,EAAW,SAAkB7D,EAAWC,GACtC,OAAOA,EAAIQ,EAAUD,MAAQ,EAAQ,EAAJR,GAEnC8D,EAAsB,SAAUlG,GAC9B,OAA2C,EAApCS,KAAKC,IAAID,KAAKa,IAAItB,EAAO,GAAI,MAEtCmG,EAAU,CAQRC,SAAU,SACRhE,EACAC,GAOA,IAAIgE,EAAQJ,EAAS7D,EAAGC,GACxB,MAAO,CACLxC,EAAGkG,EAAcM,EAAQ,GACzBtD,EAAGgD,EAAcM,EAAQ,GACzBrD,EAAG+C,EAAcM,EAAQ,GACzBpD,EAAG8C,EAAcM,EAAQ,KAS7BC,iBAAkB,SAChBlE,EACAC,GAOA,IAAIgE,EAAQJ,EAAS7D,EAAGC,GACxB,MAAO,CACLxC,EAAGgD,EAAUC,KAAKuD,EAAQ,GAC1BtD,EAAGF,EAAUC,KAAKuD,EAAQ,GAC1BrD,EAAGH,EAAUC,KAAKuD,EAAQ,GAC1BpD,EAAGJ,EAAUC,KAAKuD,EAAQ,KAS9BE,SAAU,SACRnE,EACAC,EACAmE,GAOA,IAAIH,EAAQJ,EAAS7D,EAAGC,GACxB0D,EAAcM,EAAQ,GAAKH,EAAoBM,EAAK3G,GACpDkG,EAAcM,EAAQ,GAAKH,EAAoBM,EAAKzD,GACpDgD,EAAcM,EAAQ,GAAKH,EAAoBM,EAAKxD,GACpD+C,EAAcM,EAAQ,GAAKH,EAAoBM,EAAKvD,IAKtDH,KAAM,KAINF,MAAOC,EAAUD,MAIjBD,OAAQE,EAAUF,QAWtB,IARAwD,EAAQrD,KAAOwB,KAAKmC,OAAO7G,KACzBuG,EACA/C,EACAP,EAAUD,MACVC,EAAUF,OACVE,GAGGR,EAAI,EAAGA,EAAIQ,EAAUF,OAAQN,GAAK,EACrC,IAAKD,EAAI,EAAGA,EAAIS,EAAUD,MAAOR,GAAK,EACpCwD,EAAkBK,EAAS7D,EAAGC,GAiBR,WAAlB,EAfJwD,EAASvB,KAAKoC,SAAS9G,KACrBuG,EACA,CACEtG,EAAGkG,EAAcH,EAAkB,GACnC7C,EAAGgD,EAAcH,EAAkB,GACnC5C,EAAG+C,EAAcH,EAAkB,GACnC3C,EAAG8C,EAAcH,EAAkB,IAErCxD,EACAC,EACAe,EACAP,EAAUD,MACVC,EAAUF,WAIVoD,EAAcH,EAAkB,GAAKM,EAAoBL,EAAOhG,GAChEkG,EAAcH,EAAkB,GAAKM,EAAoBL,EAAO9C,GAChEgD,EAAcH,EAAkB,GAAKM,EAAoBL,EAAO7C,GAChE+C,EAAcH,EAAkB,GAAKM,EAAoBL,EAAO5C,IAMtE,OADAJ,EAAUC,KAAK6D,IAAIZ,GACZlD,O,mBA9JL8C,CAAwBF,G,++BCiC9B,QAjCMmB,SAAAA,I,quBACJ,WACE,MAAO,iB,yBAGT,SACE1C,EAMA9B,EACAC,EACAe,EACAR,EACAD,GAOA,IAAMkE,EAAS,KAAQ3C,EAAMrE,EAAI,KAAQqE,EAAMnB,EAAI,KAAQmB,EAAMlB,EACjE,MAAO,CACLnD,EAAGgH,EACH9D,EAAG8D,EACH7D,EAAG6D,EACH5D,EAAGiB,EAAMjB,Q,6BA5BT2D,CAAwBjB,G,++BC2C9B,QAvCMmB,SAAAA,I,quBACJ,WACE,MAAO,Y,qCAGT,WACE,MAAO,CACLC,WAAY,K,sBAIhB,SACE7C,EAMA9B,EACAC,EACAe,EACAR,EACAD,GAOA,IAAMqE,EAAM,KAAQ9C,EAAMrE,EAAI,KAAQqE,EAAMnB,EAAI,KAAQmB,EAAMlB,EAM9D,OAJAkB,EAAMrE,EAAImH,EAAM,EAAI5D,EAAW2D,WAC/B7C,EAAMnB,EAAIiE,EAAM5D,EAAW2D,WAC3B7C,EAAMlB,EAAIgE,EAEH9C,O,6BAnCL4C,CAAoBnB,G,0mCCqD1B,QAjDMsB,SAAAA,I,uyBAKe,CACjBC,OAAQ,I,qCALV,WACE,MAAO,e,qCAOT,WACE,MAAO,CACLC,SAAU,M,oBAId,SAAO/D,GACL,MAAO,CACL8D,OACG,KAA6B,IAAtB9D,EAAW+D,SAAiB,MACnC,KAAO,IAA4B,IAAtB/D,EAAW+D,c,sBAI/B,SACEjD,EAMA9B,EACAC,EACAe,EACAR,EACAD,GAWA,OAJAuB,EAAMrE,EAAIyE,KAAKxB,KAAKoE,QAAUhD,EAAMrE,EAAI,KAAO,IAC/CqE,EAAMnB,EAAIuB,KAAKxB,KAAKoE,QAAUhD,EAAMnB,EAAI,KAAO,IAC/CmB,EAAMlB,EAAIsB,KAAKxB,KAAKoE,QAAUhD,EAAMlB,EAAI,KAAO,IAExCkB,O,6BA7CL+C,CAAuBtB,G,+mCC+C7B,SA/CMyB,SAAAA,I,2yBAKe,CACjBnD,WAAY,I,qCALd,WACE,MAAO,iB,qCAOT,WACE,MAAO,CACLA,WAAY,M,oBAIhB,SAAOb,GACL,MAAO,CACLa,WAAY,IAAMb,EAAWa,c,sBAIjC,SACEC,EAMA9B,EACAC,EACAe,EACAR,EACAD,GAWA,OAJAuB,EAAMrE,EAAIqE,EAAMrE,EAAIyE,KAAKxB,KAAKmB,WAC9BC,EAAMnB,EAAImB,EAAMnB,EAAIuB,KAAKxB,KAAKmB,WAC9BC,EAAMlB,EAAIkB,EAAMlB,EAAIsB,KAAKxB,KAAKmB,WAEvBC,O,6BA3CLkD,CAAyBzB,G,unCCuI/B,SAlIM0B,SAAAA,I,8yBAKe,CACjBC,IAAK,GACLC,IAAK,GACLC,IAAK,I,qCAPP,WACE,MAAO,gB,qCAST,WACE,MAAO,CACLC,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACjCC,OAAQ,EACRC,aAAa,EACbC,WAAW,K,oBAIf,SACExE,EACAR,EACAD,EACAE,GAMA,IAJA,IAAI2E,EAAM,EACJF,EAAM,GACVC,EAAM,GAECM,EAAI,EAAGA,EAAIzE,EAAWqE,OAAOK,OAAQD,GAAK,EACjDL,GAAOpE,EAAWqE,OAAOI,GAG3B,IAAK,IAAIA,EAAI,EAAGA,EAAIzE,EAAWsE,OAAQG,GAAK,EAC1CP,EAAIO,GAAO,IAAMA,GAAMzE,EAAWsE,OAAS,GAAM,EAGnD,IAAK,IAAIG,EAAI,EAAGA,EAAI,IAAKA,GAAK,EAC5BN,EAAIM,GAAOzE,EAAWsE,OAASG,EAAK,IAAO,EAG7C,MAAO,CACLL,IAAKA,EACLF,IAAKA,EACLC,IAAKA,K,sBAIT,SACErD,EAMA9B,EACAC,EACAe,EACAR,EACAD,GAOA,IAGEoF,EACAC,EACAC,EAEAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAdEC,EAAOxE,EAAMrE,EACf8I,EAASzE,EAAMnB,EACf6F,EAAQ1E,EAAMlB,EAIdF,EAAOwB,KAAKxB,KAyBd,GAfKM,EAAWuE,cAEde,EADAD,GAAaC,EAAOC,EAASC,GAAS,EAEtCD,EAASF,EACTG,EAAQH,GAOVN,EAASO,GAJTX,EAAOjF,EAAKwE,IAAIxE,EAAKyE,IAAImB,KAKzBN,EAAWO,GAJXX,EAASlF,EAAKwE,IAAIxE,EAAKyE,IAAIoB,KAK3BN,EAAUO,GAJVX,EAAQnF,EAAKwE,IAAIxE,EAAKyE,IAAIqB,KAMtBxF,EAAWwE,UACb,IAAK,IAAIC,GAAK,EAAGA,GAAK,EAAGA,GAAK,EAE5B,MADAS,EAAKT,EAAIxF,GACA,GAAKiG,GAAM3F,GAGpB,IAAK,IAAIkG,GAAK,EAAGA,GAAK,EAAGA,GAAK,GAC5BN,EAAKM,EAAIzG,GACA,GAAKmG,GAAM3F,GAIV,KADV4F,EAAIpF,EAAWqE,OAAiB,GAATI,EAAI,GAASgB,EAAI,OAEtCX,EAAW5D,KAAK8B,SAASmC,EAAID,IACpBzI,GAAMsI,EAASK,EAAK1F,EAAK0E,IAClCU,EAASnF,GAAMqF,EAAWI,EAAK1F,EAAK0E,IACpCU,EAASlF,GAAMqF,EAAUG,EAAK1F,EAAK0E,IACnClD,KAAKiC,SAASgC,EAAID,EAAIJ,IAM9B,MAAO,CACLrI,EAAGkI,EACHhF,EAAGiF,EACHhF,EAAGiF,EACHhF,EAAGiB,EAAMjB,Q,+BA7HToE,CAAwB1B,G,unCCwM9B,SA5LMmD,SAAAA,I,8yBAKe,CACjBC,KAAM,EACNC,KAAM,EACN1B,IAAK,GACLxD,IAAK,GACLyD,IAAK,K,qCATP,WACE,MAAO,a,qCAWT,WACE,MAAO,CACL0B,SAAU,CACRC,qBAAsB,CACpB,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,IAEpDC,uBAAwB,CACtB,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAErDC,qBAAsB,CACpB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,IAEpDC,0BAA2B,CACzB,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GACjE,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAE/DC,uBAAwB,CACtB,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GACjE,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GACjE,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,GACjE,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAErCC,uBAAwB,CACtB,EAAG,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,EAAG,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IACjE,IAAK,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,GAAI,IAClE,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAC/D,GAAI,IAAK,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAChE,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,IAAK,EAAG,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,EAClE,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,IAClE,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAChE,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,IAClE,IAAK,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,EAAG,IAClE,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IACjE,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAChE,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,IAChE,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,GAAI,IAAK,EAAG,IAAK,GACnE,IAAK,EAAG,IAAK,GAAI,IAAK,EAAG,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,GAC/D,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,GAAI,IAAK,GAClE,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GACjE,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAEvDC,qBAAsB,CACpB,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EACpE,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,IAEnDC,qBAAsB,CACpB,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAChE,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAClE,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GACjE,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,IAE3BC,qBAAsB,CACpB,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAChE,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC/D,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,IAClE,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,IAC9D,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,IACjE,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAClE,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAChE,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAChE,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACnE,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GACjE,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GACnE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAC/D,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACjE,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACnE,GAAI,GAAI,GAAI,GAAI,GAAI,KAGxBhC,OAAQ,EACRD,OAAQ,uBACRE,aAAa,K,oBAIjB,SACEvE,EACAR,EACAD,EACAE,GAEA,IACEmG,EACAD,EAFEtB,EAASrE,EAAWqE,OAGtBH,EAAM,GACNC,EAAM,GACNzD,EAAM,GAEc,iBAAX2D,IACTA,EAASrE,EAAW6F,SAASxB,IAG/BuB,EAAOvI,KAAKkJ,KAAKlC,EAAOK,QACxBiB,EAAOtI,KAAKkJ,KAAKlC,EAAOK,QAExB,IAAK,IAAID,EAAI,EAAGA,EAAIzE,EAAWsE,OAAQG,GAAK,EAC1CP,EAAIO,GAAM,IAAMA,GAAMzE,EAAWsE,OAAS,GAG5C,IAAK,IAAIG,EAAI,EAAGA,EAAI,IAAKA,GAAK,EAC5BN,EAAIM,IAAQzE,EAAWsE,OAAS,GAAKG,EAAK,IAAO,EACjD/D,EAAI+D,GAAOA,GAAKmB,EAAOD,EAAO,GAAM,IAAO,EAG7C,MAAO,CACLtB,OAAAA,EACAH,IAAAA,EACAC,IAAAA,EACAzD,IAAAA,EACAiF,KAAAA,EACAC,KAAAA,K,sBAIJ,SACE9E,EAMA9B,EACAC,EACAe,EACAR,EACAD,GAOA,IAOE3C,EAPE4J,EAAMxH,EAAIkC,KAAKxB,KAAKiG,KACtBc,EAAMxH,EAAIiC,KAAKxB,KAAKkG,KACpBc,EAAI1G,EAAWqE,OAAOoC,EAAMvF,KAAKxB,KAAKiG,KAAOa,GAC7CG,EAAM7F,EAAMrE,EACZmK,EAAQ9F,EAAMnB,EACdkH,EAAO/F,EAAMlB,EACb6C,EAAS,CAAE5C,EAAGiB,EAAMjB,EAAGpD,EAAG,EAAGkD,EAAG,EAAGC,EAAG,GAgCxC,OA7BII,EAAWuE,aACb9B,EAAOhG,EACLyE,KAAKxB,KAAKwE,IACRhD,KAAKxB,KAAKgB,IAAIiG,GAAOD,EAAIxF,KAAKxB,KAAKyE,IAAIwC,GAAO,EAAIzF,KAAKxB,KAAKyE,IAAIwC,IAEpElE,EAAO9C,EACLuB,KAAKxB,KAAKwE,IACRhD,KAAKxB,KAAKgB,IAAIkG,GAASF,EACnBxF,KAAKxB,KAAKyE,IAAIyC,GAAS,EACvB1F,KAAKxB,KAAKyE,IAAIyC,IAEtBnE,EAAO7C,EACLsB,KAAKxB,KAAKwE,IACRhD,KAAKxB,KAAKgB,IAAImG,GAAQH,EAClBxF,KAAKxB,KAAKyE,IAAI0C,GAAQ,EACtB3F,KAAKxB,KAAKyE,IAAI0C,MAGtBjK,GAAS+J,EAAMC,EAAQC,GAAQ,EAC/BpE,EAAOhG,EACLgG,EAAO9C,EACP8C,EAAO7C,EACLsB,KAAKxB,KAAKwE,IACRhD,KAAKxB,KAAKgB,IAAI9D,GAAS8J,EACnBxF,KAAKxB,KAAKyE,IAAIvH,GAAS,EACvBsE,KAAKxB,KAAKyE,IAAIvH,KAInB6F,O,+BAxLLiD,CAAqBnD,G,y/BCgB3B,SArCMuE,SAAAA,I,0uBACJ,WACE,MAAO,e,qCAGT,WACE,MAAO,CACLC,SAAU,K,sBAId,SACEjG,EAMA9B,EACAC,EACAe,EACAR,EACAD,GAWA,OAJAuB,EAAMrE,EAA6D,KAAxD,EAAIY,KAAK2J,KAAMlG,EAAMrE,EAAI,IAAOuD,EAAW+G,WACtDjG,EAAMnB,EAA6D,KAAxD,EAAItC,KAAK2J,KAAMlG,EAAMnB,EAAI,IAAOK,EAAW+G,WACtDjG,EAAMlB,EAA6D,KAAxD,EAAIvC,KAAK2J,KAAMlG,EAAMlB,EAAI,IAAOI,EAAW+G,WAE/CjG,O,+BAjCLgG,CAAuBvE,G,y/BCiE7B,SAhEM0E,SAAAA,I,0uBACJ,WACE,MAAO,W,qCAGT,WACE,MAAO,CACLC,KAAM,EACNC,KAAM,K,sBAIV,SACErG,EAMA9B,EACAC,EACAe,EACAR,EACAD,GAOA,IAAIoH,GAAO,EAAI3G,EAAWkH,KAAO,IAAM,EAAK,EAAIpG,EAAMrE,EAAK,KACzDmK,GAAS,EAAI5G,EAAWkH,KAAO,IAAM,EAAK,EAAIpG,EAAMnB,EAAK,KACzDkH,GAAQ,EAAI7G,EAAWkH,KAAO,IAAM,EAAK,EAAIpG,EAAMlB,EAAK,KA4B1D,OAzBE+G,EADE7F,EAAMrE,EAAI,IAAM,GACZqE,EAAMrE,EAAI,IAAMkK,EAAM,GAErBA,EAAM7F,EAAMrE,EAAI,MAAQkK,EAAM,GAIrCC,EADE9F,EAAMnB,EAAI,IAAM,GACVmB,EAAMnB,EAAI,IAAMiH,EAAQ,GAEvBA,EAAQ9F,EAAMnB,EAAI,MAAQiH,EAAQ,GAI3CC,EADE/F,EAAMlB,EAAI,IAAM,GACXkB,EAAMlB,EAAI,IAAMiH,EAAO,GAEtBA,EAAO/F,EAAMlB,EAAI,MAAQiH,EAAO,GAG1CF,IAAc,EAAI3G,EAAWmH,KAAO,IAAM,EAAIR,GAAO,EACrDC,IAAkB,EAAI5G,EAAWmH,KAAO,IAAM,EAAIP,GAAS,EAC3DC,IAAgB,EAAI7G,EAAWmH,KAAO,IAAM,EAAIN,GAAQ,EAExD/F,EAAMrE,EAAU,IAANkK,EACV7F,EAAMnB,EAAY,IAARiH,EACV9F,EAAMlB,EAAW,IAAPiH,EAEH/F,O,+BA5DLmG,CAAmB1E,G,unCCkFzB,SAzEM6E,SAAAA,I,8yBAKe,CACjBC,MAAO,CACL5K,EAAG,GACHkD,EAAG,GACHC,EAAG,M,qCARP,WACE,MAAO,Y,qCAWT,WACE,MAAO,CACL0H,SAAU,EACVC,WAAY,EACZC,UAAW,K,oBAIf,SACExH,EACAR,EACAD,EACAE,GAQA,IANA,IAAM4H,EAAQ,CACZ5K,EAAG,GACHkD,EAAG,GACHC,EAAG,IAGI6E,EAAI,EAAGA,EAAI,IAAKA,GAAK,EAC5B4C,EAAM5K,EAAEgI,GAAM,IAAMpH,KAAKoK,IAAIhD,EAAI,IAAK,EAAIzE,EAAWsH,UAAY,GAAO,EACxED,EAAM1H,EAAE8E,GACL,IAAMpH,KAAKoK,IAAIhD,EAAI,IAAK,EAAIzE,EAAWuH,YAAc,GAAO,EAC/DF,EAAMzH,EAAE6E,GACL,IAAMpH,KAAKoK,IAAIhD,EAAI,IAAK,EAAIzE,EAAWwH,WAAa,GAAO,EAGhE,MAAO,CACLH,MAAOA,K,sBAIX,SACEvG,EAMA9B,EACAC,EACAe,EACAR,EACAD,GAOA,MAAO,CACL9C,EAAGyE,KAAKxB,KAAK2H,MAAM5K,EAAEqE,EAAMrE,GAC3BkD,EAAGuB,KAAKxB,KAAK2H,MAAM1H,EAAEmB,EAAMnB,GAC3BC,EAAGsB,KAAKxB,KAAK2H,MAAMzH,EAAEkB,EAAMlB,GAC3BC,EAAGiB,EAAMjB,Q,+BApETuH,CAAoB7E,GC0HnB,SAASmF,GACdC,EACAC,EAMAC,GAYA,MAAO,CACLpL,EAAGmL,EAAKnL,EAAIkL,GAAKE,EAAKpL,EAAImL,EAAKnL,GAC/BkD,EAAGiI,EAAKjI,EAAIgI,GAAKE,EAAKlI,EAAIiI,EAAKjI,GAC/BC,EAAGgI,EAAKhI,EAAI+H,GAAKE,EAAKjI,EAAIgI,EAAKhI,GAC/BC,EAAG+H,EAAK/H,EAAI8H,GAAKE,EAAKhI,EAAI+H,EAAK/H,IAqE5B,SAASiI,GACdrL,EACAkD,EACAC,GAMA,IAAImI,EAnDC,SACLtL,EACAkD,EACAC,GAMA,IAAIoI,EAAQvL,EAAI,IACZwL,EAAQtI,EAAI,IACZuI,EAAQtI,EAAI,IAwBhB,OAtBIoI,EAAQ,OACVA,EAAQ3K,KAAKoK,KAAKO,EAAQ,MAAS,MAAO,KAE1CA,GAAgB,MAGdC,EAAQ,OACVA,EAAQ5K,KAAKoK,KAAKQ,EAAQ,MAAS,MAAO,KAE1CA,GAAgB,MAGdC,EAAQ,OACVA,EAAQ7K,KAAKoK,KAAKS,EAAQ,MAAS,MAAO,KAE1CA,GAAgB,MAOX,CACLlJ,EAAW,OALbgJ,GAAgB,KAKc,OAJ9BC,GAAgB,KAI+B,OAH/CC,GAAgB,KAIdjJ,EAAW,MAAR+I,EAAyB,MAARC,EAAyB,MAARC,EACrCC,EAAW,MAARH,EAAyB,MAARC,EAAyB,MAARC,GAa7BE,CAAS3L,EAAGkD,EAAGC,GAErByI,EAAQN,EAAI/I,EAAI,OAChBsJ,EAAQP,EAAI9I,EAAI,IAChBsJ,EAAQR,EAAII,EAAI,QAoBpB,OAjBEE,EADEA,EAAQ,QACFhL,KAAKoK,IAAIY,EAAO,EAAI,GAEpB,MAAQA,EAAQ,GAAK,IAexB,CACLG,EAAG,KAZHF,EADEA,EAAQ,QACFjL,KAAKoK,IAAIa,EAAO,EAAI,GAEpB,MAAQA,EAAQ,GAAK,KAUZ,GACjBzI,EAAG,KAAOwI,EAAQC,GAClB1I,EAAG,KAAO0I,GARVC,EADEA,EAAQ,QACFlL,KAAKoK,IAAIc,EAAO,EAAI,GAEpB,MAAQA,EAAQ,GAAK,O,y/BCvMjC,SArDME,SAAAA,I,0uBACJ,WACE,MAAO,iB,qCAGT,WACE,MAAO,CACLC,EAAG,EACHC,EAAG,EACH/I,EAAG,K,sBAIP,SACEkB,EAMA9B,EACAC,EACAe,EACAR,EACAD,GAOA,IAAMqJ,EDjCH,SACLnM,EACAkD,EACAC,GAMA,IAAIiJ,EACFC,EAEAC,EAAO1L,KAAKa,IAAIzB,EAAGkD,EAAGC,GACtBoJ,EAAO3L,KAAKC,IAAIb,EAAGkD,EAAGC,GASxB,GAAmB,IALjBkJ,EADW,IAATC,GACYA,EAAOC,GAAQD,EAEhB,GAIbF,EAAM,MACD,CACL,IAAII,GAAQF,EAAOtM,IAAMsM,EAAOC,GAC9BE,GAAUH,EAAOpJ,IAAMoJ,EAAOC,GAC9BG,GAASJ,EAAOnJ,IAAMmJ,EAAOC,GAG7BH,EADEpM,IAAMsM,EACFI,EAAQD,EAEVvJ,IAAMoJ,EACF,EAAIE,EAAOE,EAEX,EAAID,EAASD,GAIvBJ,GAAO,GACG,IACRA,GAAO,GAIX,MAAO,CACLH,EAAGG,EACHF,EAAGG,EACHlJ,EAjCWmJ,EAAO,KCkBNK,CAAStI,EAAMrE,EAAGqE,EAAMnB,EAAGmB,EAAMlB,GAG7C,IADAgJ,EAAIF,GAAK1I,EAAW0I,EACbE,EAAIF,EAAI,GACbE,EAAIF,GAAe,EAAVrL,KAAKgM,GAGhBT,EAAID,GAAK3I,EAAW2I,EACpBC,EAAID,EAAItL,KAAKa,IAAIb,KAAKC,IAAIsL,EAAID,EAAG,GAAI,GAErCC,EAAIhJ,GAAKI,EAAWJ,EACpBgJ,EAAIhJ,EAAIvC,KAAKa,IAAIb,KAAKC,IAAIsL,EAAIhJ,EAAG,GAAI,GAErC,IAAI6C,EDaD,SACLoG,EACAC,EACAjI,GAMA,IAAI8F,EAAKC,EAAOC,EAChB,GAAmB,IAAfiC,EACFnC,EAAmB,IAAb9F,EAAmB,GACzB+F,EAAqB,IAAb/F,EAAmB,GAC3BgG,EAAoB,IAAbhG,EAAmB,OACrB,CACL,IAAI6H,EAA8B,GAAzBG,EAAMxL,KAAKsD,MAAMkI,IACxBS,EAAIZ,EAAIrL,KAAKsD,MAAM+H,GACnBa,EAAI1I,GAAc,EAAIiI,GACtBU,EAAI3I,GAAc,EAAIiI,EAAaQ,GACnC3B,EAAI9G,GAAc,EAAIiI,GAAc,EAAIQ,IAE1C,OAAY,EAAJZ,GACN,KAAK,EACH/B,EAAmB,IAAb9F,EAAmB,GACzB+F,EAAY,IAAJe,EAAU,GAClBd,EAAW,IAAJ0C,EAAU,GACjB,MAEF,KAAK,EACH5C,EAAU,IAAJ6C,EAAU,GAChB5C,EAAqB,IAAb/F,EAAmB,GAC3BgG,EAAW,IAAJ0C,EAAU,GACjB,MAEF,KAAK,EACH5C,EAAU,IAAJ4C,EAAU,GAChB3C,EAAqB,IAAb/F,EAAmB,GAC3BgG,EAAW,IAAJc,EAAU,GACjB,MAEF,KAAK,EACHhB,EAAU,IAAJ4C,EAAU,GAChB3C,EAAY,IAAJ4C,EAAU,GAClB3C,EAAoB,IAAbhG,EAAmB,GAC1B,MAEF,KAAK,EACH8F,EAAU,IAAJgB,EAAU,GAChBf,EAAY,IAAJ2C,EAAU,GAClB1C,EAAoB,IAAbhG,EAAmB,GAC1B,MAEF,KAAK,EACH8F,EAAmB,IAAb9F,EAAmB,GACzB+F,EAAY,IAAJ2C,EAAU,GAClB1C,EAAW,IAAJ2C,EAAU,GACjB,MAEF,QACE7C,EAAM,EACNC,EAAQ,EACRC,EAAO,GAIb,MAAO,CACLpK,EAAGgN,SAAS9C,GACZhH,EAAG8J,SAAS7C,GACZhH,EAAG6J,SAAS5C,ICjFC6C,CAASd,EAAIF,EAAGE,EAAID,EAAGC,EAAIhJ,GAKxC,OAJAkB,EAAMrE,EAAIgG,EAAOhG,EACjBqE,EAAMnB,EAAI8C,EAAO9C,EACjBmB,EAAMlB,EAAI6C,EAAO7C,EAEVkB,O,+BAjDL2H,CAAwBlG,G,y/BCqB9B,SA5BMoH,SAAAA,I,0uBACJ,WACE,MAAO,mB,yBAGT,SACE7I,EAMA9B,EACAC,EACAe,EACAR,EACAD,GAQA,OADAuB,EAAMjB,EAAI,IAAMiB,EAAMjB,EACfiB,O,+BAxBL6I,CAA0BpH,G,y/BC8BhC,SA9BMqH,SAAAA,I,0uBACJ,WACE,MAAO,a,yBAGT,SACE9I,EAMA9B,EACAC,EACAe,EACAR,EACAD,GAUA,OAHAuB,EAAMrE,EAAI,IAAMqE,EAAMrE,EACtBqE,EAAMnB,EAAI,IAAMmB,EAAMnB,EACtBmB,EAAMlB,EAAI,IAAMkB,EAAMlB,EACfkB,O,+BA1BL8I,CAAqBrH,G,unCCyP3B,SA9OMsH,SAAAA,I,8yBAKe,CACjBC,IAAK,K,qCALP,WACE,MAAO,a,qCAOT,WACE,MAAO,CACLC,IAAK,EACLC,KAAM,EACNC,UAAW,EACXC,WAAY,K,oBAIhB,SACElK,EACAR,EACAD,EACAE,GAqKA,IAnKA,IA8JI0K,EAAY,IA9JA,SAAU1K,EAAWD,EAAOD,EAAQ6K,EAAQC,GAe1D,IAdA,IAAIpH,EACFkH,EAAY,IAAIG,MAAM,GACtBC,EAAW,IAAID,MAAM,GACrBE,EAAW,IAAIF,MAAM,GACrBG,EAAe,IAAIH,MAAM,GACzBI,EAAe,IAAIJ,MAAM,GACzBK,EAAO,IAAIL,MAAM,GACjBM,EAAapL,EAAQD,EACrBsL,GAAS,EAMFpG,EAAI,EAAGA,EAAI0F,EAAUzF,OAAQD,GAAK,EAAG,CAC5C0F,EAAU1F,GAAK,IAAI6F,MAAM,KACzB,IAAK,IAAI7E,EAAI,EAAGA,EAAI,IAAKA,GAAK,EAC5B0E,EAAU1F,GAAGgB,GAAK,EAItB,IAAK,IAAIxG,EAAI,EAAGA,EAAIM,EAAQN,GAAK,EAC/B,IAAK,IAAID,EAAI,EAAGA,EAAIQ,EAAOR,GAAK,EAC9BiE,EAAQhE,EAAIO,EAAQ,EAAQ,EAAJR,EACxBmL,EAfI,GAeW1K,EAAUC,KAAKuD,MAC9BkH,EAfM,GAeW1K,EAAUC,KAAKuD,EAAQ,MACxCkH,EAfK,GAeW1K,EAAUC,KAAKuD,EAAQ,MAI3C,IAAK,IAAIwB,EAAI,EAAGA,EAAI,IAAKA,GAAK,EAC5B,GACE0F,EAvBI,GAuBW1F,KAAO0F,EAtBhB,GAsBiC1F,IACvC0F,EAvBM,GAuBW1F,KAAO0F,EAtBnB,GAsBmC1F,GACxC,CACAoG,GAAS,EACT,MAIJ,IAAK,IAAIpG,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAAG,CAC7B,IAAK,IAAIgB,EAAI,EAAGA,EAAI,IAAKA,GAAK,EAC5B,GAAI0E,EAAU1F,GAAGgB,GAAK,EAAG,CACvB8E,EAAS9F,GAAKgB,EACd,MAGJ,IAAK,IAAIA,EAAI,IAAKA,GAAK,EAAGA,GAAK,EAC7B,GAAI0E,EAAU1F,GAAGgB,GAAK,EAAG,CACvB+E,EAAS/F,GAAKgB,EACd,MAGJgF,EAAahG,GAAKqG,EAAAA,EAClBJ,EAAajG,GAAK,EAClB,IAAK,IAAIgB,EAAI,EAAGA,EAAI,IAAKA,GAAK,EAC5BgF,EAAahG,GAAKpH,KAAKC,IAAImN,EAAahG,GAAI0F,EAAU1F,GAAGgB,IACzDiF,EAAajG,GAAKpH,KAAKa,IAAIwM,EAAajG,GAAI0F,EAAU1F,GAAGgB,IACzDkF,EAAKlG,IAAMgB,EAAI0E,EAAU1F,GAAGgB,GAE9BkF,EAAKlG,IAAMmG,EACXL,EAjDO,GAiDUlN,KAAKC,IACpBiN,EArDI,GAsDJA,EArDM,GAsDNA,EArDK,IAuDPC,EAtDO,GAsDUnN,KAAKa,IACpBsM,EA1DI,GA2DJA,EA1DM,GA2DNA,EA1DK,IA8DTtJ,KAAK6J,cAAgB,WACnB,OAAOH,GAGT1J,KAAK2J,OAAS,WACZ,OAAOA,GAGT3J,KAAK8J,aAAe,SAACC,EAASrO,GAC5B,OAAKA,EAOHgO,EAAa,GACbK,EAAU,GACVA,EAAU,GACVrO,EAAQ,GACRA,EAAQ,KAEA,EAEHuN,EAAUc,GAASrO,GAdpBgO,EAAa,GAAKC,GAAUjO,GAAS,GAAKA,GAAS,IAC9CuN,EAAU,GAAGvN,IAEd,GAcZsE,KAAKgK,gBAAkB,SAACD,GACtB,OAAKA,EAMDL,EAAa,GAAKK,EAAU,GAAKA,EAAU,GACrC,EAEHR,EAAaQ,GARdL,EAAa,GAAKC,EACbJ,EAAa,IAEd,GAQZvJ,KAAKiK,gBAAkB,SAACF,GACtB,OAAKA,EAMDL,EAAa,GAAKK,EAAU,GAAKA,EAAU,GACrC,EAEHP,EAAaO,GARdL,EAAa,GAAKC,EACbH,EAAa,IAEd,GAQZxJ,KAAKkK,YAAc,SAACH,GAClB,OAAKA,EAMEV,EAASU,GALVL,EAAa,GAAKC,EACbN,EAAS,IAEV,GAKZrJ,KAAKmK,YAAc,SAACJ,GAClB,OAAKA,EAMET,EAASS,GALVL,EAAa,GAAKC,EACbL,EAAS,IAEV,GAKZtJ,KAAKoK,aAAe,SAACL,GACnB,OAAKA,EAMEN,EAAKM,GALNL,EAAa,GAAKC,EACbF,EAAK,IAEN,GAME,CAAclL,EAAWD,EAAOD,EAAQ,EAAGC,GACzDsK,EAAM,IAAIQ,MAAM,GAChBP,EAAuB,IAAjB/J,EAAW+J,IACjBC,EAAyB,IAAlBhK,EAAWgK,KAEXvF,EAAI,EAAGA,EAAIqF,EAAIpF,OAAQD,GAAK,EACnCqF,EAAIrF,GAAK,IAAI6F,MAAM,KAEjBP,IAAQC,GACVA,IAGF,IAAK,IAAIvF,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAC1B,IAAK,IAAIgB,EAAI,EAAGA,EAAI,IAAKA,GAAK,EAC5BqE,EAAIrF,GAAGgB,GACL,KACCzF,EAAWiK,WACRjK,EAAWkK,WAAalK,EAAWiK,YAAcxE,EAAIsE,IACpDC,EAAOD,IAMlB,OAFAI,EAAUU,SAEH,CACLf,IAAAA,K,sBAIJ,SACEhJ,EAMA9B,EACAC,EACAe,EACAR,EACAD,GAOA,MAAO,CACL9C,EAAGyE,KAAKxB,KAAKoK,IAAI,GAAGhJ,EAAMrE,GAC1BkD,EAAGuB,KAAKxB,KAAKoK,IAAI,GAAGhJ,EAAMnB,GAC1BC,EAAGsB,KAAKxB,KAAKoK,IAAI,GAAGhJ,EAAMlB,GAC1BC,EAAGiB,EAAMjB,Q,+BAzOTgK,CAAqBtH,G,y/BC8B3B,SArCMgJ,SAAAA,I,0uBACJ,WACE,MAAO,c,qCAGT,WACE,MAAO,CACLC,MAAO,K,sBAIX,SACE1K,EAMA9B,EACAC,EACAe,EACAR,EACAD,GAWA,OAJAuB,EAAMrE,EAAIuD,EAAWwL,MAAQ1K,EAAMrE,EACnCqE,EAAMnB,EAAIK,EAAWwL,MAAQ1K,EAAMnB,EACnCmB,EAAMlB,EAAII,EAAWwL,MAAQ1K,EAAMlB,EAE5BkB,O,+BAjCLyK,CAAsBhJ,G,y/BCyC5B,SA7CMkJ,SAAAA,I,0uBACJ,WACE,MAAO,e,yBAGT,SACE3K,EAMA9B,EACAC,EACAe,EACAR,EACAD,GAoBA,MAAO,CACL9C,EAAS,KAbPqE,EAAMrE,EAAI,IAAM,GACZ,GAAKqE,EAAMrE,EAAI,IAAM,IACrB,GAAK,GAAMqE,EAAMrE,EAAI,MAY3BkD,EAAW,KAVTmB,EAAMnB,EAAI,IAAM,GACZ,GAAKmB,EAAMnB,EAAI,IAAM,IACrB,GAAK,GAAMmB,EAAMnB,EAAI,MAS3BC,EAAU,KAPRkB,EAAMlB,EAAI,IAAM,GACZ,GAAKkB,EAAMlB,EAAI,IAAM,IACrB,GAAK,GAAMkB,EAAMlB,EAAI,MAM3BC,EAAGiB,EAAMjB,Q,+BAxCT4L,CAAuBlJ,G,y/BC2C7B,SA3CMmJ,SAAAA,I,0uBACJ,WACE,MAAO,gB,yBAGT,SACE5K,EAMA9B,EACAC,EACAe,EACAR,EACAD,GASA,OAFmBuB,EAAMrE,EAAIqE,EAAMnB,EAAImB,EAAMlB,GAAK,GAEjC,IACR,CACLnD,EAAG,IACHkD,EAAG,IACHC,EAAG,IACHC,EAAGiB,EAAMjB,GAIN,CACLpD,EAAG,EACHkD,EAAG,EACHC,EAAG,EACHC,EAAGiB,EAAMjB,Q,+BAtCT6L,CAAwBnJ,G,unCCuG9B,SAxEMoJ,SAAAA,I,8yBAKe,CACjB7B,IAAK,K,qCALP,WACE,MAAO,c,qCAOT,WACE,MAAO,CACL8B,YAAa,CACXnP,EAAG,EACHkD,EAAG,EACHC,EAAG,EACHC,EAAG,KAELgM,SAAU,CACRpP,EAAG,IACHkD,EAAG,IACHC,EAAG,IACHC,EAAG,KAELiM,UAAW,CACTrP,EAAG,IACHkD,EAAG,IACHC,EAAG,IACHC,EAAG,Q,oBAKT,SAAOG,GAIL,IAHA,IACE2H,EADEmC,EAAM,GAGDrF,EAAI,EAAGA,EAAI,IAAKA,GAAK,EAC5BkD,EAAIlD,EAAI,IACRqF,EAAIrF,GAAKiD,GAAUC,EAAG3H,EAAW4L,YAAa5L,EAAW6L,UAE3D,IAAK,IAAIpH,EAAI,IAAKA,EAAI,IAAKA,GAAK,EAC9BkD,GAAKlD,EAAI,KAAO,IAChBqF,EAAIrF,GAAKiD,GAAUC,EAAG3H,EAAW6L,SAAU7L,EAAW8L,WAExD,MAAO,CACLhC,IAAKA,K,sBAIT,SACEhJ,EAMA9B,EACAC,EACAe,EACAR,EACAD,GAOA,IAAMsB,EAAaxD,KAAKsD,OAAOG,EAAMrE,EAAIqE,EAAMnB,EAAImB,EAAMlB,GAAK,GAC9D,OAAOsB,KAAKxB,KAAKoK,IAAIjJ,Q,+BApEnB8K,CAAsBpJ,G,unCCmC5B,SAvDMwJ,SAAAA,I,8yBAKe,CACjBC,WAAY,EACZC,WAAY,I,qCANd,WACE,MAAO,e,qCAQT,WACE,MAAO,CACLC,QAAS,EACTC,SAAU,K,oBAId,SACEnM,EACAR,EACAD,EACAE,GAEA,IAAM7D,GAAK,EAAIoE,EAAWkM,UAAY,EAAIlM,EAAWmM,UACrD,MAAO,CACLH,WAAYpQ,EAAIoE,EAAWmM,SAC3BF,WAAYrQ,K,sBAIhB,SACEkF,EAMA9B,EACAC,EACAe,EACAR,EACAD,GAOA,IAAMmH,EAAIrJ,KAAK+O,SACb9C,EtB8NC,SAAoBzJ,EAAWD,EAAWZ,GAC/C,OAAIA,EAAIa,EACC,EAELb,GAAKY,EACA,GAETZ,GAAKA,EAAIa,IAAMD,EAAIC,IACRb,GAAK,EAAI,EAAIA,GsBtOhBqN,CAAWnL,KAAKxB,KAAKsM,WAAY9K,KAAKxB,KAAKuM,WAAYvF,GAE7D,OADA5F,EAAMjB,EAAIiB,EAAMjB,EAAIyJ,EACbxI,O,+BAnDLiL,CAAuBxJ,G,unCCqI7B,SA5HM+J,SAAAA,I,8yBAKe,CACjBC,YAAa,GACbC,YAAa,K,qCANf,WACE,MAAO,W,qCAQT,WACE,MAAO,CACLC,SAAU,CACRC,SAAU,CAAC,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACpCC,SAAU,EAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACpCC,SAAU,EAAE,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GACtCC,SAAU,EAAE,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACtCC,OAAQ,EAAE,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GACpCC,OAAQ,EAAE,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACpCC,UAAW,EAAE,EAAG,EAAG,GAAI3P,KAAKkJ,KAAK,GAAI,EAAGlJ,KAAKkJ,KAAK,IAAK,EAAG,EAAG,GAC7D0G,UAAW,EAAE,GAAI5P,KAAKkJ,KAAK,IAAK,EAAG,EAAG,EAAG,EAAG,EAAGlJ,KAAKkJ,KAAK,GAAI,IAE/DgG,YAAa,SACbC,YAAa,Y,oBAIjB,SACExM,EACAR,EACAD,EACAE,GAEA,IAEE8M,EACAC,EAHEU,EAAelN,EAAWuM,YAC5BY,EAAenN,EAAWwM,YAU5B,MAN4B,iBAAjBU,IACTX,EAAcvM,EAAWyM,SAASzM,EAAWuM,cAEnB,iBAAjBY,IACTX,EAAcxM,EAAWyM,SAASzM,EAAWwM,cAExC,CACLD,YAAAA,EACAC,YAAAA,K,sBAIJ,SACE1L,EAMA9B,EACAC,EACAe,EACAR,EACAD,GAuBA,IAhBA,IASE2F,EACAkI,EACAC,EACAC,EACA5E,EACAhC,EAdEjK,EAAI,EACNkD,EAAI,EACJC,EAAI,EACJ2N,EAAK,EACLC,EAAK,EACLC,EAAK,EACLC,EAAK,EACLC,EAAK,EACLC,EAAK,EAQEnH,GAAO,EAAGA,GAAO,EAAGA,GAAO,EAAG,CAE/B,IADNvB,EAAKjG,EAAIwH,IACQvB,EAAK3F,IACpB2F,EAAKjG,GAEPoO,EAAU,GAAK5G,EAAM,GAAK,EAC1B,IAAK,IAAID,GAAO,EAAGA,GAAO,EAAGA,GAAO,EAE5B,IADN4G,EAAKpO,EAAIwH,IACQ4G,EAAK5N,IACpB4N,EAAKpO,GAEPsO,EAASpM,KAAKgC,iBAAiBkK,EAAIlI,GACnCwD,EAAIxH,KAAKxB,KAAK6M,YAAYc,EAAU7G,GACpCE,EAAIxF,KAAKxB,KAAK8M,YAAYa,EAAU7G,GAEpC/J,EAAI6Q,EAAO7Q,EACXkD,EAAI2N,EAAO3N,EACXC,EAAI0N,EAAO1N,EAEX2N,GAAMlQ,KAAKsD,MAAM+H,EAAIjM,GACrB+Q,GAAMnQ,KAAKsD,MAAM+H,EAAI/I,GACrB8N,GAAMpQ,KAAKsD,MAAM+H,EAAI9I,GAErB8N,GAAMrQ,KAAKsD,MAAM+F,EAAIjK,GACrBkR,GAAMtQ,KAAKsD,MAAM+F,EAAI/G,GACrBiO,GAAMvQ,KAAKsD,MAAM+F,EAAI9G,GAMzB,MAAO,CACLnD,EAJFA,EAAIY,KAAKsD,MAAMtD,KAAKkJ,KAAKgH,EAAKA,EAAKG,EAAKA,GAAM,KAK5C/N,EAJFA,EAAItC,KAAKsD,MAAMtD,KAAKkJ,KAAKiH,EAAKA,EAAKG,EAAKA,GAAM,KAK5C/N,EAJFA,EAAIvC,KAAKsD,MAAMtD,KAAKkJ,KAAKkH,EAAKA,EAAKG,EAAKA,GAAM,KAK5C/N,EAAGiB,EAAMjB,Q,+BAvHTyM,CAAmB/J,G,y/BCiDzB,SA5DMsL,SAAAA,I,0uBACJ,WACE,MAAO,kB,qCAGT,WACE,MAAO,CACLC,UAAW,EACXC,QAAS,EACTC,SAAU,EACVC,MAAO,EACPC,MAAO,EACPC,MAAO,K,sBAIX,SACErN,EAMA9B,EACAC,EACAe,EACAR,EACAD,GAOA,IAAQ9C,EAAYqE,EAAZrE,EAAGkD,EAASmB,EAATnB,EAAGC,EAAMkB,EAANlB,EAEd,MAAO,CACLnD,GACIuD,EAAWiO,OACVjO,EAAW8N,UAAYnO,GAAK,IAAMK,EAAW8N,WAAalO,GAC3D,KACC,IAAMI,EAAWiO,OAASxR,GAC7B,IACFkD,GACIK,EAAWkO,OACVlO,EAAW+N,QAAUpO,GAAK,IAAMK,EAAW+N,SAAWtR,GACvD,KACC,IAAMuD,EAAWkO,OAASvO,GAC7B,IACFC,GACII,EAAWmO,OACVnO,EAAWgO,SAAWrO,GAAK,IAAMK,EAAWgO,UAAYrO,GACzD,KACC,IAAMK,EAAWmO,OAASvO,GAC7B,IACFC,EAAGiB,EAAMjB,Q,+BAvDTgO,CAAyBtL,G,unCCwD/B,SA3DM6L,SAAAA,I,8yBAKe,CACjBC,MAAO,SAACzR,GAAD,OAA2B,GAClCU,IAAK,EACLY,IAAK,I,qCAPP,WACE,MAAO,oB,uBAST,SAAO8B,EAAoBR,EAAeD,GAIxC,IAHA,IAAIjC,EAAMwN,EAAAA,EACR5M,GAAO,EAEAe,EAAI,EAAGA,EAAIM,EAAQN,GAAK,EAC/B,IAAK,IAAID,EAAI,EAAGA,EAAIQ,EAAOR,GAAK,EAAG,CACjC,IAAM8B,EAAQI,KAAK8B,SAAShE,EAAGC,GAE/B3B,EAAMD,KAAKC,KAAKwD,EAAMrE,EAAIqE,EAAMnB,EAAImB,EAAMlB,GAAK,EAAGtC,GAClDY,EAAMb,KAAKa,KAAK4C,EAAMrE,EAAIqE,EAAMnB,EAAImB,EAAMlB,GAAK,EAAG1B,GAItD,MAAO,CACLZ,IAAKA,EACLY,IAAKA,EACLmQ,MAAO,SAAUzR,GACf,OAAwB,KAAfA,EAAQU,IAAeY,EAAMZ,O,sBAK5C,SACEwD,EAMA9B,EACAC,EACAe,EACAR,EACAD,GAWA,OAJAuB,EAAMrE,EAAIyE,KAAKxB,KAAK2O,MAAMvN,EAAMrE,GAChCqE,EAAMnB,EAAIuB,KAAKxB,KAAK2O,MAAMvN,EAAMnB,GAChCmB,EAAMlB,EAAIsB,KAAKxB,KAAK2O,MAAMvN,EAAMlB,GAEzBkB,O,+BAvDLsN,CAA2B7L,G,srDCuDjC,SA7DM+L,SAAAA,I,0uBACJ,SACEtP,EACAC,EACAe,EACAR,EACAD,GAEA,KAAM,e,iBAGR,SAAIE,EAAsBO,GAMxB,IAAIhB,EAAGC,EALPe,EAAa,SACRkB,KAAKwB,wBACL1C,GAIL,IAAM8C,EAAsB,SAAUlG,GAClC,OAA2C,EAApCS,KAAKC,IAAID,KAAKa,IAAItB,EAAO,GAAI,MAEtCmG,EAAU,CACRrD,KAAM,MAERiD,EAAgB,IAAIC,kBAAkBnD,EAAUC,MAUlD,IARAqD,EAAQrD,KAAOwB,KAAKmC,OAAO7G,KACzBuG,EACA/C,EACAP,EAAUD,MACVC,EAAUF,OACVE,GAGGR,EAAI,EAAGA,EAAIQ,EAAUF,OAAQN,GAAK,EACrC,IAAKD,EAAI,EAAGA,EAAIS,EAAUD,MAAOR,GAAK,EAAG,CACvC,IAAMuP,EAAQrN,KAAKoC,SAAS9G,KACxBuG,EACA/D,EACAC,EACAe,EACAP,EAAUD,MACVC,EAAUF,QAEZiP,EAAO1L,EAAoByL,EAAM,IACjCE,EAAO3L,EAAoByL,EAAM,IACjCG,EAAgBzP,EAAIQ,EAAUD,MAAQ,EAAQ,EAAJR,EAC1C2P,EAAgBF,EAAOhP,EAAUD,MAAQ,EAAW,EAAPgP,EAE/C7L,EAAc+L,EAAgB,GAAKjP,EAAUC,KAAKiP,EAAgB,GAClEhM,EAAc+L,EAAgB,GAAKjP,EAAUC,KAAKiP,EAAgB,GAClEhM,EAAc+L,EAAgB,GAAKjP,EAAUC,KAAKiP,EAAgB,GAClEhM,EAAc+L,EAAgB,GAAKjP,EAAUC,KAAKiP,EAAgB,GAKtE,OADAlP,EAAUC,KAAK6D,IAAIZ,GACZlD,O,oBAzDL6O,CAA4BjM,G,unCC8DlC,SArDMuM,SAAAA,I,8yBAKe,CACjBC,SAAU,GACVC,SAAU,K,qCANZ,WACE,MAAO,c,qCAQT,WACE,MAAO,CACLtD,MAAO,K,oBAIX,SACExL,EACAR,EACAD,EACAE,GAKA,IAHA,IAEEsP,EAFEF,EAAW,IAAIvE,MAAM,KACvBwE,EAAW,IAAIxE,MAAM,KAEd7F,EAAI,EAAGA,EAAI,IAAKA,GAAK,EAC5BsK,EAAmB,EAAV1R,KAAKgM,GAAS5E,EAAK,IAC5BoK,EAASpK,GAAKzE,EAAWwL,MAAQnO,KAAK2R,IAAID,GAC1CD,EAASrK,GAAKzE,EAAWwL,MAAQnO,KAAK4R,IAAIF,GAE5C,MAAO,CACLF,SAAUA,EACVC,SAAUA,K,sBAId,SACE9P,EACAC,EACAe,EACAR,EACAD,GAEA,IAAIwP,EAAyB,IAAhB1R,KAAK+O,SAAkB,EAClC8C,EAAW7R,KAAK+O,SAElB,MAAO,CACLpN,EAAIkQ,EAAWhO,KAAKxB,KAAKmP,SAASE,GAClC9P,EAAIiQ,EAAWhO,KAAKxB,KAAKoP,SAASC,S,+BAhDlCH,CAAsBN,I,unCCoE5B,SA9DMa,SAAAA,I,8yBAKe,CACjBC,SAAU,EACVC,SAAU,I,qCANZ,WACE,MAAO,mB,qCAQT,WACE,MAAO,CACLC,QAAS,GACTC,QAAS,GACTR,MAAO,EACPS,OAAQ,EACRC,MAAO,EACPC,OAAQ,K,oBAIZ,SACE1P,EACAR,EACAD,EACAE,GAEA,MAAO,CACL2P,SAAU5P,EAAQQ,EAAWsP,QAC7BD,SAAU9P,EAASS,EAAWuP,W,sBAIlC,SACEvQ,EACAC,EACAe,EACAR,EACAD,GAEA,IAAIoQ,EAAK3Q,EAAIkC,KAAKxB,KAAK0P,SACrBQ,EAAK3Q,EAAIiC,KAAKxB,KAAK2P,SACnB5S,EAAIY,KAAKkJ,KAAKoJ,EAAKA,EAAKC,EAAKA,GAC7BC,EAAQxS,KAAKyS,MAAMF,EAAID,GAAM3P,EAAW+O,MAAQ/O,EAAWwP,OAI7D,GAFAK,EAAQjP,EAAUiP,EAAQxS,KAAKgM,GAAMrJ,EAAWyP,MAAQ,IAE9B,IAAtBzP,EAAW0P,OAAc,CAC3B,IAAIK,EAAI1S,KAAK4R,IAAIY,GACfG,EAAUhQ,EAAW0P,OAASK,EAChCtT,EAAIuT,EAAUpP,EAASnE,EAAIuT,GAK7B,OAFAH,GAAS7P,EAAW+O,MAEb,CACL7N,KAAKxB,KAAK0P,SAAW3S,EAAIY,KAAK4R,IAAIY,GAClC3O,KAAKxB,KAAK2P,SAAW5S,EAAIY,KAAK2R,IAAIa,S,+BAzDlCV,CAA2Bb,ICjBjC,IAAMtO,GAQF,GACAiQ,IAAS,EAqSb,SAnSY,CACVC,KAAM,WACJ,GAAID,GACF,OAAO,EAETA,IAAS,EAETjQ,GAAWmQ,EAAI,IACfnQ,GAAWoQ,GAAK,IAChBpQ,GAAWqQ,EAAI,KAEfrQ,GAAWsQ,EAAI,IAAIhG,MAAMtK,GAAWmQ,EAAInQ,GAAWmQ,EAAI,GACvDnQ,GAAWuQ,GAAK,IAAIjG,MAAMtK,GAAWmQ,EAAInQ,GAAWmQ,EAAI,GACxDnQ,GAAWwQ,GAAK,IAAIlG,MAAMtK,GAAWmQ,EAAInQ,GAAWmQ,EAAI,GACxD,IAAK,IAAI1L,EAAI,EAAGA,EAAIzE,GAAWwQ,GAAG9L,OAAQD,GAAK,EAC7CzE,GAAWwQ,GAAG/L,GAAK,IAAI6F,MAAM,GAE/BtK,GAAWyQ,GAAK,IAAInG,MAAMtK,GAAWmQ,EAAInQ,GAAWmQ,EAAI,GACxD,IAAK,IAAI1L,EAAI,EAAGA,EAAIzE,GAAWyQ,GAAG/L,OAAQD,GAAK,EAC7CzE,GAAWyQ,GAAGhM,GAAK,IAAI6F,MAAM,GAE/B,IAAI7F,EAAGgB,EAAGiL,EAEV,IAAKjM,EAAI,EAAGA,EAAIzE,GAAWmQ,EAAG1L,GAAK,EAAG,CAMpC,IALAzE,GAAWsQ,EAAE7L,GAAKA,EAClBzE,GAAWuQ,GAAG9L,IACVvD,KAAKkL,UAAYpM,GAAWmQ,EAAInQ,GAAWmQ,GAAMnQ,GAAWmQ,GAC9DnQ,GAAWmQ,EACbnQ,GAAWwQ,GAAG/L,GAAK,GACdgB,EAAI,EAAGA,EAAI,EAAGA,GAAK,EACtBzF,GAAWwQ,GAAG/L,GAAGgB,IACbvE,KAAKkL,UAAYpM,GAAWmQ,EAAInQ,GAAWmQ,GAAMnQ,GAAWmQ,GAC9DnQ,GAAWmQ,EAKf,IAHAnQ,GAAWwQ,GAAG/L,GAAKvD,KAAKyP,WAAW3Q,GAAWwQ,GAAG/L,IAEjDzE,GAAWyQ,GAAGhM,GAAK,GACdgB,EAAI,EAAGA,EAAI,EAAGA,GAAK,EACtBzF,GAAWyQ,GAAGhM,GAAGgB,IACbvE,KAAKkL,UAAYpM,GAAWmQ,EAAInQ,GAAWmQ,GAAMnQ,GAAWmQ,GAC9DnQ,GAAWmQ,EAEfnQ,GAAWyQ,GAAGhM,GAAKvD,KAAK0P,WAAW5Q,GAAWyQ,GAAGhM,IAGnD,IAAKA,EAAIzE,GAAWmQ,EAAI,EAAG1L,GAAK,EAAGA,GAAK,EACtCiM,EAAI1Q,GAAWsQ,EAAE7L,GACjBzE,GAAWsQ,EAAE7L,GAAKzE,GAAWsQ,EAAG7K,EAAIvE,KAAKkL,SAAWpM,GAAWmQ,GAC/DnQ,GAAWsQ,EAAE7K,GAAKiL,EAGpB,IAAKjM,EAAI,EAAGA,EAAIzE,GAAWmQ,EAAI,EAAG1L,GAAK,EAAG,CAGxC,IAFAzE,GAAWsQ,EAAEtQ,GAAWmQ,EAAI1L,GAAKzE,GAAWsQ,EAAE7L,GAC9CzE,GAAWuQ,GAAGvQ,GAAWmQ,EAAI1L,GAAKzE,GAAWuQ,GAAG9L,GAC3CgB,EAAI,EAAGA,EAAI,EAAGA,GAAK,EACtBzF,GAAWwQ,GAAGxQ,GAAWmQ,EAAI1L,GAAGgB,GAAKzF,GAAWwQ,GAAG/L,GAAGgB,GAExD,IAAKA,EAAI,EAAGA,EAAI,EAAGA,IACjBzF,GAAWyQ,GAAGzQ,GAAWmQ,EAAI1L,GAAGgB,GAAKzF,GAAWyQ,GAAGhM,GAAGgB,KAI5D2G,OAAQ,WACN,OAA2C,YAAlB,IAAhB/O,KAAK+O,SAAiB,IAAO,IAExCuE,WAAY,SAAUE,GACpB,IAAIlI,EAAItL,KAAKkJ,KAAKsK,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAInE,OAHAA,EAAI,GAAKA,EAAI,GAAKlI,EAClBkI,EAAI,GAAKA,EAAI,GAAKlI,EAClBkI,EAAI,GAAKA,EAAI,GAAKlI,EACXkI,GAETD,WAAY,SAAUC,GACpB,IAAIlI,EAAItL,KAAKkJ,KAAKsK,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAGjD,OAFAA,EAAI,GAAKA,EAAI,GAAKlI,EAClBkI,EAAI,GAAKA,EAAI,GAAKlI,EACXkI,GAETC,OAAQ,SAAUnJ,GAChB,OAAOA,EAAIA,GAAK,EAAM,EAAMA,IAE9BoJ,KAAM,SAAUpJ,EAAW9H,EAAWD,GACpC,OAAOC,EAAI8H,GAAK/H,EAAIC,IAMtBmR,OAAQ,SAAUhS,GAChB,IAAIiS,EAAKC,EAAKC,EAAKC,EAAKC,EAAI1J,EAAG2J,EAAG5K,EAelC,OAbAxF,KAAKgP,OAELvI,EAAI3I,EAAIgB,GAAWqQ,EAEnBa,EAAa,GADbD,EAAMxH,SAAS9B,GAAK3H,GAAWoQ,IACbpQ,GAAWoQ,GAE7BgB,GADAD,EAAMxJ,EAAI8B,SAAS9B,IACP,EAEZ0J,EAAKnQ,KAAK4P,OAAOK,GAEjBG,EAAIH,EAAMnR,GAAWuQ,GAAGvQ,GAAWsQ,EAAEW,IACrCvK,EAAI0K,EAAMpR,GAAWuQ,GAAGvQ,GAAWsQ,EAAEY,IAE9B,IAAMhQ,KAAK6P,KAAKM,EAAIC,EAAG5K,IAQhC6K,OAAQ,SAAUvS,EAAWC,GAC3B,IAAIgS,EACFC,EACAM,EACAC,EACAC,EACAC,EACAC,EACAC,EACAV,EACAC,EACAU,EACAC,EAEAV,EACAW,EACAnS,EACAD,EACA+H,EACA2J,EACA5K,EACAjC,EACAgB,EATA+D,EAAI,GAgDN,OArCAtI,KAAKgP,OAELvI,EAAI3I,EAAIgB,GAAWqQ,EAEnBa,EAAa,GADbD,EAAMxH,SAAS9B,GAAK3H,GAAWoQ,IACbpQ,GAAWoQ,GAE7BgB,GADAD,EAAMxJ,EAAI8B,SAAS9B,IACP,EAEZA,EAAI1I,EAAIe,GAAWqQ,EAEnBoB,EAAa,GADbD,EAAM/H,SAAS9B,GAAK3H,GAAWoQ,IACbpQ,GAAWoQ,GAE7B2B,GADAD,EAAMnK,EAAI8B,SAAS9B,IACP,EAEZlD,EAAIzE,GAAWsQ,EAAEW,GACjBxL,EAAIzF,GAAWsQ,EAAEY,GAEjBQ,EAAM1R,GAAWsQ,EAAE7L,EAAI+M,GACvBG,EAAM3R,GAAWsQ,EAAE7K,EAAI+L,GACvBI,EAAM5R,GAAWsQ,EAAE7L,EAAIgN,GACvBI,EAAM7R,GAAWsQ,EAAE7K,EAAIgM,GAEvBJ,EAAKnQ,KAAK4P,OAAOK,GACjBa,EAAK9Q,KAAK4P,OAAOgB,GAGjBR,EAAIH,GADJ3H,EAAIxJ,GAAWwQ,GAAGkB,IACN,GAAKI,EAAMtI,EAAE,GAEzB9C,EAAI0K,GADJ5H,EAAIxJ,GAAWwQ,GAAGmB,IACN,GAAKG,EAAMtI,EAAE,GACzB3J,EAAIqB,KAAK6P,KAAKM,EAAIC,EAAG5K,GAGrB4K,EAAIH,GADJ3H,EAAIxJ,GAAWwQ,GAAGoB,IACN,GAAKG,EAAMvI,EAAE,GAEzB9C,EAAI0K,GADJ5H,EAAIxJ,GAAWwQ,GAAGqB,IACN,GAAKE,EAAMvI,EAAE,GACzB5J,EAAIsB,KAAK6P,KAAKM,EAAIC,EAAG5K,GAEd,IAAMxF,KAAK6P,KAAKiB,EAAInS,EAAGD,IAQhCqS,OAAQ,SAAUjT,EAAWC,EAAWkJ,GACtC,IAAI8I,EACFC,EACAM,EACAC,EACAS,EACAC,EACAT,EACAC,EACAC,EACAC,EACAV,EACAC,EACAU,EACAC,EACAK,EACAC,EACA7I,EACAwI,EACAM,EACAzS,EACAD,EACAmQ,EACAnU,EACA+L,EACA2J,EACA5K,EACAjC,EACAgB,EA8DF,OA5DAvE,KAAKgP,OAELvI,EAAI3I,EAAIgB,GAAWqQ,EAEnBa,EAAa,GADbD,EAAMxH,SAAS9B,GAAK3H,GAAWoQ,IACbpQ,GAAWoQ,GAE7BgB,GADAD,EAAMxJ,EAAI8B,SAAS9B,IACP,EAEZA,EAAI1I,EAAIe,GAAWqQ,EAEnBoB,EAAa,GADbD,EAAM/H,SAAS9B,GAAK3H,GAAWoQ,IACbpQ,GAAWoQ,GAE7B2B,GADAD,EAAMnK,EAAI8B,SAAS9B,IACP,EAEZA,EAAIQ,EAAInI,GAAWqQ,EAEnB8B,EAAa,GADbD,EAAMzI,SAAS9B,GAAK3H,GAAWoQ,IACbpQ,GAAWoQ,GAE7BiC,GADAD,EAAMzK,EAAI8B,SAAS9B,IACP,EAEZlD,EAAIzE,GAAWsQ,EAAEW,GACjBxL,EAAIzF,GAAWsQ,EAAEY,GAEjBQ,EAAM1R,GAAWsQ,EAAE7L,EAAI+M,GACvBG,EAAM3R,GAAWsQ,EAAE7K,EAAI+L,GACvBI,EAAM5R,GAAWsQ,EAAE7L,EAAIgN,GACvBI,EAAM7R,GAAWsQ,EAAE7K,EAAIgM,GAEvB9J,EAAIzG,KAAK4P,OAAOK,GAChBa,EAAK9Q,KAAK4P,OAAOgB,GACjBQ,EAAKpR,KAAK4P,OAAOsB,GAGjBd,EAAIH,GADJ3H,EAAIxJ,GAAWyQ,GAAGiB,EAAMQ,IACZ,GAAKJ,EAAMtI,EAAE,GAAK4I,EAAM5I,EAAE,GAEtC9C,EAAI0K,GADJ5H,EAAIxJ,GAAWyQ,GAAGkB,EAAMO,IACZ,GAAKJ,EAAMtI,EAAE,GAAK4I,EAAM5I,EAAE,GACtC3J,EAAIqB,KAAK6P,KAAKpJ,EAAG2J,EAAG5K,GAGpB4K,EAAIH,GADJ3H,EAAIxJ,GAAWyQ,GAAGmB,EAAMM,IACZ,GAAKH,EAAMvI,EAAE,GAAK4I,EAAM5I,EAAE,GAEtC9C,EAAI0K,GADJ5H,EAAIxJ,GAAWyQ,GAAGoB,EAAMK,IACZ,GAAKH,EAAMvI,EAAE,GAAK4I,EAAM5I,EAAE,GACtC5J,EAAIsB,KAAK6P,KAAKpJ,EAAG2J,EAAG5K,GAEpBqJ,EAAI7O,KAAK6P,KAAKiB,EAAInS,EAAGD,GAGrB0R,EAAIH,GADJ3H,EAAIxJ,GAAWyQ,GAAGiB,EAAMS,IACZ,GAAKL,EAAMtI,EAAE,GAAK6I,EAAM7I,EAAE,GAEtC9C,EAAI0K,GADJ5H,EAAIxJ,GAAWyQ,GAAGkB,EAAMQ,IACZ,GAAKL,EAAMtI,EAAE,GAAK6I,EAAM7I,EAAE,GACtC3J,EAAIqB,KAAK6P,KAAKpJ,EAAG2J,EAAG5K,GAGpB4K,EAAIH,GADJ3H,EAAIxJ,GAAWyQ,GAAGmB,EAAMO,IACZ,GAAKJ,EAAMvI,EAAE,GAAK6I,EAAM7I,EAAE,GAEtC9C,EAAI0K,GADJ5H,EAAIxJ,GAAWyQ,GAAGoB,EAAMM,IACZ,GAAKJ,EAAMvI,EAAE,GAAK6I,EAAM7I,EAAE,GACtC5J,EAAIsB,KAAK6P,KAAKpJ,EAAG2J,EAAG5K,GAEpB9K,EAAIsF,KAAK6P,KAAKiB,EAAInS,EAAGD,GAEd,IAAMsB,KAAK6P,KAAKuB,EAAIvC,EAAGnU,IAUhC2W,YAAa,SAAUvT,EAAWC,EAAWkJ,EAAWqK,GACtD,IACE/N,EADEkD,EAAI,EAER,IAAKlD,EAAI,EAAGA,GAAK+N,EAAS/N,GAAK,EAC7BkD,GAAKtK,KAAKI,IAAIyD,KAAK+Q,OAAOxN,EAAIzF,EAAGyF,EAAIxF,EAAGwF,EAAI0D,IAAM1D,EAEpD,OAAOkD,I,unCC3NX,SA/DM8K,SAAAA,I,8yBAKe,CACjB5D,SAAU,GACVC,SAAU,GACV4D,gBAAiB,SAAC1T,EAAWC,GAAZ,OAA0B,K,qCAP7C,WACE,MAAO,a,qCAST,WACE,MAAO,CACL0T,OAAQ,EACRC,OAAQ,EACRC,OAAQ,EACRC,WAAY,K,oBAIhB,SACE9S,EACAR,EACAD,EACAE,GAMA,IAJA,IAEEsP,EAFEF,EAAW,IAAIvE,MAAM,KACvBwE,EAAW,IAAIxE,MAAM,KAGd7F,EAAI,EAAGA,EAAI,IAAKA,GAAK,EAC5BsK,EAAoB,EAAV1R,KAAKgM,GAAS5E,EAAK,IAAOzE,EAAW8S,WAC/CjE,EAASpK,IAAMzE,EAAW4S,OAASvV,KAAK2R,IAAID,GAC5CD,EAASrK,GAAKzE,EAAW4S,OAASvV,KAAK4R,IAAIF,GAE7C,MAAO,CACLF,SAAUA,EACVC,SAAUA,EACV4D,gBAAiB,SAAU1T,EAAGC,GAC5B,IAAIwD,EACF,KACC,EACCsQ,GAAAA,OAAmB/T,EAAIgB,EAAW2S,OAAQ1T,EAAIe,EAAW4S,SAC7D,OAAOvV,KAAKC,IAAI,IAAKD,KAAKa,IAAI,EAAGuE,Q,sBAKvC,SACEzD,EACAC,EACAe,EACAR,EACAD,GAEA,IAAIyT,EAAe3V,KAAKsD,MAAMO,KAAKxB,KAAKgT,gBAAgB1T,EAAGC,IAC3D,MAAO,CACLD,EAAIkC,KAAKxB,KAAKmP,SAASmE,GACvB/T,EAAIiC,KAAKxB,KAAKoP,SAASkE,S,+BA1DvBP,CAAqBnE,I,unCCoF3B,SAnFM2E,SAAAA,I,8yBAKe,CACjB7D,SAAU,EACVC,SAAU,EACV6D,QAAS,EACTxD,OAAQ,I,qCARV,WACE,MAAO,Y,qCAUT,WACE,MAAO,CACLX,MAAO,EACPO,QAAS,GACTC,QAAS,GACTG,OAAQ,IACRmD,OAAQ,M,oBAIZ,SACE7S,EACAR,EACAD,EACAE,GAEA,IAAI2P,EAAW5P,EAAQQ,EAAWsP,QAChCD,EAAW9P,EAASS,EAAWuP,QAC/BG,EAAS1P,EAAW0P,OAMtB,OAJe,IAAXA,IACFA,EAASrS,KAAKC,IAAI8R,EAAUC,IAGvB,CACLD,SAAUA,EACVC,SAAUA,EACVK,OAAQA,EACRwD,QALQxD,EAASA,K,sBASrB,SACE1Q,EACAC,EACAe,EACAR,EACAD,GAEA,IAGE3D,EACA+L,EACAwL,EACAtT,EACA8I,EACAoH,EAREJ,EAAK3Q,EAAIkC,KAAKxB,KAAK0P,SACrBQ,EAAK3Q,EAAIiC,KAAKxB,KAAK2P,SACnBH,EAAWS,EAAKA,EAAKC,EAAKA,EAQ5B,OAAIV,EAAWhO,KAAKxB,KAAKwT,SAAwB,IAAbhE,EAC3B,CAAClQ,EAAGC,IAEbrD,EAAIyB,KAAKkJ,KAAK2I,EAAWhO,KAAKxB,KAAKwT,SAGnCvD,GAFAhI,EAAItK,KAAKoK,IAAIpK,KAAK2R,IAAc,GAAV3R,KAAKgM,GAAWzN,IAAKoE,EAAW6S,QAGtDjD,GAAMjI,EAENwL,EAAI,EAAIvX,EACRiE,EAAIG,EAAW+O,MAAQoE,EAAIA,EAE3BxK,EAAItL,KAAK2R,IAAInP,GACbkQ,EAAI1S,KAAK4R,IAAIpP,GAEN,CACLqB,KAAKxB,KAAK0P,SAAWW,EAAIJ,EAAKhH,EAAIiH,EAClC1O,KAAKxB,KAAK2P,SAAW1G,EAAIgH,EAAKI,EAAIH,S,+BA9ElCqD,CAAoB3E,I,y/BCiD1B,SAtDM8E,SAAAA,I,0uBACJ,WACE,MAAO,a,qCAGT,WACE,MAAO,CACLC,WAAY,EACZC,WAAY,EACZC,YAAa,GACbC,YAAa,GACbC,SAAU,U,sBAId,SACEzU,EACAC,EACAe,EACAR,EACAD,GAEA,IAEEmU,EACAC,EAHEC,EAAK3U,EAAIe,EAAWuT,YACtBM,EAAK7U,EAAIgB,EAAWwT,YAItB,OAAQxT,EAAWyT,UACjB,IAAK,OACL,QACEC,EAAKrW,KAAK2R,IAAI4E,GACdD,EAAKtW,KAAK2R,IAAI6E,GACd,MAEF,IAAK,WACHH,EAAKhT,EAAIkT,EAAI,GACbD,EAAKjT,EAAImT,EAAI,GACb,MAEF,IAAK,WACHH,EAAK9S,EAASgT,GACdD,EAAK/S,EAASiT,GACd,MAEF,IAAK,QACHH,EAAKI,GAAAA,OAAaF,GAClBD,EAAKG,GAAAA,OAAaD,GAItB,MAAO,CAAC7U,EAAIgB,EAAWqT,WAAaK,EAAIzU,EAAIe,EAAWsT,WAAaK,Q,+BAlDlEP,CAAqB9E,I,unCC8C3B,SA5CMyF,SAAAA,I,8yBAKe,CACjBC,IAAK,EACLC,IAAK,I,qCANP,WACE,MAAO,Y,qCAQT,WACE,MAAO,CACLC,OAAQ,EACRC,OAAQ,EACRC,QAAS,EACTC,QAAS,K,oBAIb,SACErU,EACAR,EACAD,GAEA,MAAO,CACLyU,IAAK3W,KAAK2R,IAAIhP,EAAWkU,QACzBD,IAAK5W,KAAK2R,IAAIhP,EAAWmU,W,sBAI7B,SACEnV,EACAC,EACAe,EACAR,EACAD,GAEA,MAAO,CACLP,EAAIgB,EAAWoU,QAAUnV,EAAIiC,KAAKxB,KAAKsU,IACvC/U,EAAIe,EAAWqU,QAAUrV,EAAIkC,KAAKxB,KAAKuU,U,+BAvCvCF,CAAoBzF,I,unCCiG1B,SA5FMgG,SAAAA,I,8yBAKe,CACjBlF,SAAU,EACVC,SAAU,EACVkF,GAAI,EACJC,GAAI,EACJ3U,EAAG,EACHD,EAAG,I,qCAVL,WACE,MAAO,a,qCAYT,WACE,MAAO,CACLC,EAAG,EACHD,EAAG,EACH0P,QAAS,GACTC,QAAS,GACTkF,gBAAiB,O,oBAIrB,SACEzU,EACAR,EACAD,GAEA,IAAI6P,EAAW5P,EAAQQ,EAAWsP,QAChCD,EAAW9P,EAASS,EAAWuP,QAC/B1P,EAAIG,EAAWH,EACfD,EAAII,EAAWJ,EAYjB,OATU,IAANC,IACFA,EAAIL,EAAQ,GAEJ,IAANI,IACFA,EAAIL,EAAS,GAKR,CACL6P,SAAUA,EACVC,SAAUA,EACVxP,EAAGA,EACHD,EAAGA,EACH2U,GARG1U,EAAIA,EASP2U,GARG5U,EAAIA,K,sBAYX,SACEZ,EACAC,EACAe,EACAR,EACAD,GAEA,IAAIoQ,EAAK3Q,EAAIkC,KAAKxB,KAAK0P,SACrBQ,EAAK3Q,EAAIiC,KAAKxB,KAAK2P,SACnBqF,EAAK/E,EAAKA,EACVgF,EAAK/E,EAAKA,EACVgF,EAAc,EAAI5U,EAAWyU,gBAC7BtM,EAAI9K,KAAKkJ,MACN,EAAImO,EAAKxT,KAAKxB,KAAK6U,GAAKI,EAAKzT,KAAKxB,KAAK8U,KACrCtT,KAAKxB,KAAKG,EAAIqB,KAAKxB,KAAKE,IAE7BiV,EAAK1M,EAAIA,EACT+L,EAAS7W,KAAKyX,KAAKnF,EAAKtS,KAAKkJ,KAAKmO,EAAKG,IACvCE,EAAS1X,KAAKgM,GAAK,EAAI6K,EACvB1E,EAASnS,KAAK2X,KAAK3X,KAAK2R,IAAI+F,GAAUH,GACtCT,EAAS9W,KAAKyX,KAAKlF,EAAKvS,KAAKkJ,KAAKoO,EAAKE,IACvCI,EAAM,IAAI3K,MAAM,GAElB,OAAIqK,GAAMzT,KAAKxB,KAAK8U,GAAKtT,KAAKxB,KAAK8U,GAAKE,EAAKxT,KAAKxB,KAAK6U,GAC9C,CAACvV,EAAGC,IAGbuQ,EAASnS,KAAKgM,GAAK,EAAI6K,EAAS1E,EAChCyF,EAAI,GAAKjW,EAAI3B,KAAK6X,IAAI1F,GAAUrH,EAEhC4M,EAAS1X,KAAKgM,GAAK,EAAI8K,EACvB3E,EAASnS,KAAK2X,KAAK3X,KAAK2R,IAAI+F,GAAUH,GACtCpF,EAASnS,KAAKgM,GAAK,EAAI8K,EAAS3E,EAChCyF,EAAI,GAAKhW,EAAI5B,KAAK6X,IAAI1F,GAAUrH,EACzB8M,Q,+BAxFLX,CAAqBhG,I,unCC+E3B,SA/EM6G,SAAAA,I,8yBAKe,CACjBC,IAAK,EACLC,IAAK,EACLC,IAAK,EACLC,IAAK,I,qCARP,WACE,MAAO,W,qCAUT,WACE,MAAO,CACL/J,MAAO,GACPsH,WAAY,EACZD,OAAQ,EACR2C,KAAM,EACNzG,MAAO,EACP0G,QAAS,K,oBAIb,SACEzV,EACAR,EACAD,GAEA,IAAI0P,EAAM5R,KAAK4R,IAAIjP,EAAW+O,OAC5BC,EAAM3R,KAAK2R,IAAIhP,EAAW+O,OAE5B,MAAO,CACLqG,IAAKnG,EACLoG,IAAKrG,EACLsG,KAAMtG,EACNuG,IAAKtG,K,sBAIT,SACEjQ,EACAC,EACAe,EACAR,EACAD,GAEA,IAAIqU,EAAK1S,KAAKxB,KAAK0V,IAAMpW,EAAIkC,KAAKxB,KAAK2V,IAAMpW,EAC3C4U,EAAK3S,KAAKxB,KAAK4V,IAAMtW,EAAIkC,KAAKxB,KAAK6V,IAAMtW,EAK3C,OAHA2U,GAAM5T,EAAWwL,MACjBqI,GAAM7T,EAAWwL,MAAQxL,EAAWyV,QAEN,IAA1BzV,EAAW8S,WACN,CACL9T,EAAIgB,EAAW6S,OAASiB,GAAAA,OAAaF,EAAK,GAAKC,EAAI7T,EAAWwV,MAC9DvW,EAAIe,EAAW6S,OAASiB,GAAAA,OAAaF,EAAIC,EAAK,GAAK7T,EAAWwV,OAG3D,CACLxW,EACEgB,EAAW6S,OACTiB,GAAAA,YACEF,EAAK,GACLC,EACA7T,EAAW8S,WACX9S,EAAWwV,MAEjBvW,EACEe,EAAW6S,OACTiB,GAAAA,YACEF,EACAC,EAAK,GACL7T,EAAW8S,WACX9S,EAAWwV,Y,+BAzEjBL,CAAmB7G,I,unCCuEzB,SAzEMoH,SAAAA,I,8yBAKe,CACjBC,SAAU,EACVC,SAAU,EACVlG,OAAQ,EACRwD,QAAS,I,qCARX,WACE,MAAO,Y,qCAUT,WACE,MAAO,CACLnE,MAAO,EACPO,QAAS,GACTC,QAAS,GACTG,OAAQ,IACRwD,QAAS,O,oBAIb,SACElT,EACAR,EACAD,GAEA,IAAIoW,EAAWnW,EAAQQ,EAAWsP,QAChCsG,EAAWrW,EAASS,EAAWuP,QAC/BG,EAAS1P,EAAW0P,OAQtB,OALe,IAAXA,IACFA,EAASrS,KAAKC,IAAIqY,EAAUC,IAIvB,CACLD,SAAUA,EACVC,SAAUA,EACVlG,OAAQA,EACRwD,QANQxD,EAASA,K,sBAUrB,SACE1Q,EACAC,EACAe,EACAR,EACAD,GAEA,IAGEM,EAHE8P,EAAK3Q,EAAIkC,KAAKxB,KAAKiW,SACrB/F,EAAK3Q,EAAIiC,KAAKxB,KAAKkW,SACnB1G,EAAWS,EAAKA,EAAKC,EAAKA,EAG5B,OAAIV,EAAWlP,EAAWkT,QACjB,CAAClU,EAAGC,IAGbiQ,EAAW7R,KAAKkJ,KAAK2I,GACrBrP,EACExC,KAAKyS,MAAMF,EAAID,GACd3P,EAAW+O,OAAS/O,EAAW0P,OAASR,GAAalP,EAAW0P,OAE5D,CACLxO,KAAKxB,KAAKiW,SAAWzG,EAAW7R,KAAK4R,IAAIpP,GACzCqB,KAAKxB,KAAKkW,SAAW1G,EAAW7R,KAAK2R,IAAInP,U,+BApEzC6V,CAAoBpH,I,unCC6E1B,SA5EMuH,SAAAA,I,8yBAKe,CACjBF,SAAU,EACVC,SAAU,EACV1C,QAAS,EACTxD,OAAQ,I,qCARV,WACE,MAAO,Y,qCAUT,WACE,MAAO,CACLoG,WAAY,GACZC,UAAW,GACXC,MAAO,EACP1G,QAAS,GACTC,QAAS,GACTG,OAAQ,M,oBAIZ,SACE1P,EACAR,EACAD,GAEA,IAAIoW,EAAWnW,EAAQQ,EAAWsP,QAChCsG,EAAWrW,EAASS,EAAWuP,QAC/BG,EAAS1P,EAAW0P,OAQtB,OALe,IAAXA,IACFA,EAASrS,KAAKC,IAAIqY,EAAUC,IAIvB,CACLD,SAAAA,EACAC,SAAAA,EACAlG,OAAAA,EACAwD,QANQxD,EAASA,K,sBAUrB,SACE1Q,EACAC,EACAe,EACAR,EACAD,GAEA,IAGE2P,EACA2D,EAJElD,EAAK3Q,EAAIkC,KAAKxB,KAAKiW,SACrB/F,EAAK3Q,EAAIiC,KAAKxB,KAAKkW,SACnBK,EAAYtG,EAAKA,EAAKC,EAAKA,EAI7B,OAAIqG,EAAY/U,KAAKxB,KAAKwT,QACjB,CAAClU,EAAGC,IAEbiQ,EAAW7R,KAAKkJ,KAAK0P,GACrBpD,EACE7S,EAAW+V,UACX1Y,KAAK2R,IACFE,EAAWlP,EAAW8V,WAAczY,KAAKgM,GAAK,EAAIrJ,EAAWgW,OAElEnD,IAAW7S,EAAW0P,OAASR,GAAYlP,EAAW0P,OACrC,IAAbR,IACF2D,GAAU7S,EAAW8V,WAAa5G,GAE7B,CAAClQ,EAAI2Q,EAAKkD,EAAQ5T,EAAI2Q,EAAKiD,S,+BAxEhCgD,CAAoBvH,I,unCCwD1B,SAxDM4H,SAAAA,I,8yBAKe,CACjB9G,SAAU,EACVC,SAAU,EACV7P,MAAO,I,qCAPT,WACE,MAAO,a,qCAST,WACE,MAAO,CACLkQ,OAAQ,GACRnQ,OAAQ,GACRwP,MAAO,EACPoH,YAAa9Y,KAAKgM,GAClBiG,QAAS,GACTC,QAAS,M,oBAIb,SACEvP,EACAR,EACAD,EACAE,GAEA,MAAO,CACL2P,SAAU5P,EAAQQ,EAAWsP,QAC7BD,SAAU9P,EAASS,EAAWuP,QAC9B/P,QAASA,K,sBAIb,SACER,EACAC,EACAe,EACAR,EACAD,GAEA,IAAIoQ,EAAK3Q,EAAIkC,KAAKxB,KAAK0P,SACrBQ,EAAK3Q,EAAIiC,KAAKxB,KAAK0P,SACnBS,EAAQxS,KAAKyS,OAAOF,GAAKD,GAAM3P,EAAW+O,MAC1CtS,EAAIY,KAAKkJ,KAAKoJ,EAAKA,EAAKC,EAAKA,GAI/B,OAFAC,EAAQnP,EAAImP,EAAO,EAAIxS,KAAKgM,IAErB,CACJnI,KAAKxB,KAAKF,MAAQqQ,EAAS7P,EAAWmW,YAAc,KACrD5W,GAAU,GAAK9C,EAAIuD,EAAW0P,SAAWnQ,EAAS,a,+BAnDlD2W,CAAqB5H,I,unCC6C3B,SAlDM8H,SAAAA,I,8yBAKe,CACjBpH,IAAK,EACLC,IAAK,EACLG,SAAU,EACVC,SAAU,I,qCARZ,WACE,MAAO,a,qCAUT,WACE,MAAO,CACLN,MAAO1R,KAAKgM,M,oBAIhB,SACErJ,EACAR,EACAD,EACAE,GAEA,MAAO,CACLwP,IAAK5R,KAAK4R,IAAIjP,EAAW+O,OACzBC,IAAK3R,KAAK2R,IAAIhP,EAAW+O,OACzBK,SAAU5P,EAAQ,EAClB6P,SAAU9P,EAAS,K,sBAIvB,SACEP,EACAC,EACAe,EACAR,EACAD,GAEA,MAAO,CACL2B,KAAKxB,KAAKuP,KAAOjQ,EAAIkC,KAAKxB,KAAK0P,UAC7BlO,KAAKxB,KAAKsP,KAAO/P,EAAIiC,KAAKxB,KAAK2P,UAC/BnO,KAAKxB,KAAK2P,SACZnO,KAAKxB,KAAKsP,KAAOhQ,EAAIkC,KAAKxB,KAAK0P,UAC7BlO,KAAKxB,KAAKuP,KAAOhQ,EAAIiC,KAAKxB,KAAK2P,UAC/BnO,KAAKxB,KAAK2P,e,+BA7CZ+G,CAAqB9H,I,y/BC0B3B,SA/BM8H,SAAAA,I,0uBACJ,WACE,MAAO,a,qCAGT,WACE,MAAO,CACLhC,QAAS,IACTC,QAAS,IACTgC,MAAM,K,sBAIV,SACErX,EACAC,EACAe,EACAR,EACAD,GAEA,OAAIS,EAAWqW,KACN,EACJrX,EAAIQ,EAAQQ,EAAWoU,SAAW5U,GAClCP,EAAIM,EAASS,EAAWqU,SAAW9U,GAG/B,CAACP,EAAIgB,EAAWoU,QAASnV,EAAIe,EAAWqU,c,+BA1B/C+B,CAAqB9H,I,unCCgN3B,SA3MMgI,SAAAA,I,8yBAKe,CACjBhH,QAAS,EACTC,QAAS,EACTgH,IAAK,SAAC3Z,GAAD,OAAmB,GACxB8S,OAAQ,I,qCARV,WACE,MAAO,Y,qCAUT,WACE,MAAO,CACLxN,KAAM,mB,oBAIV,SACElC,EACAR,EACAD,EACAE,GAEA,MAAO,CACL6P,QAAS9P,EAAQ,EACjB+P,QAAShQ,EAAS,EAClBmQ,OAAQrS,KAAKa,IAAIsB,EAAQ,EAAGD,EAAS,GACrCgX,IAAK,SAAUvX,GACb,OAAOA,EAAIA,M,sBAKjB,SACEA,EACAC,EACAe,EACAR,EACAD,GAEA,IAAIsQ,EACF2G,EACA7O,EAIAiM,EACAC,EAGAlE,EACAC,EACAV,EACAzS,EAAI,EAEN,OAAQuD,EAAWkC,MACjB,IAAK,gBAqEH,OApEIlD,GAAKkC,KAAKxB,KAAK4P,QACbrQ,EAAIiC,KAAKxB,KAAK6P,SAChBM,EACExS,KAAKgM,GACLhM,KAAKoZ,MAAMzX,EAAIkC,KAAKxB,KAAK4P,UAAYrQ,EAAIiC,KAAKxB,KAAK6P,UACrD9S,EAAIY,KAAKkJ,KACPrF,KAAKxB,KAAK6W,IAAIvX,EAAIkC,KAAKxB,KAAK4P,SAC1BpO,KAAKxB,KAAK6W,IAAItX,EAAIiC,KAAKxB,KAAK6P,WAG5BtQ,EAAIiC,KAAKxB,KAAK6P,SAChBM,EAAQxS,KAAKoZ,MACVzX,EAAIkC,KAAKxB,KAAK4P,UAAYpO,KAAKxB,KAAK6P,QAAUtQ,IAEjDxC,EAAIY,KAAKkJ,KACPrF,KAAKxB,KAAK6W,IAAIvX,EAAIkC,KAAKxB,KAAK4P,SAC1BpO,KAAKxB,KAAK6W,IAAIrV,KAAKxB,KAAK6P,QAAUtQ,MAGtC4Q,EAAQxS,KAAKgM,GAAK,EAClB5M,EAAIuC,EAAIkC,KAAKxB,KAAK4P,SAIlBtQ,EAAIkC,KAAKxB,KAAK4P,UACZrQ,EAAIiC,KAAKxB,KAAK6P,SAChBM,EACY,EAAVxS,KAAKgM,GACLhM,KAAKoZ,MAAMvV,KAAKxB,KAAK4P,QAAUtQ,IAAMkC,KAAKxB,KAAK6P,QAAUtQ,IAC3DxC,EAAIY,KAAKkJ,KACPrF,KAAKxB,KAAK6W,IAAIrV,KAAKxB,KAAK4P,QAAUtQ,GAChCkC,KAAKxB,KAAK6W,IAAIrV,KAAKxB,KAAK6P,QAAUtQ,KAGlCA,EAAIiC,KAAKxB,KAAK6P,SAChBM,EACExS,KAAKgM,GACLhM,KAAKoZ,MAAMvV,KAAKxB,KAAK4P,QAAUtQ,IAAMC,EAAIiC,KAAKxB,KAAK6P,UACrD9S,EAAIY,KAAKkJ,KACPrF,KAAKxB,KAAK6W,IAAIrV,KAAKxB,KAAK4P,QAAUtQ,GAChCkC,KAAKxB,KAAK6W,IAAItX,EAAIiC,KAAKxB,KAAK6P,YAGhCM,EAAQ,IAAMxS,KAAKgM,GACnB5M,EAAIyE,KAAKxB,KAAK4P,QAAUtQ,KAK5BA,GAAKkC,KAAKxB,KAAK4P,QACbjS,KAAKI,KAAKwB,EAAIiC,KAAKxB,KAAK6P,UAAYvQ,EAAIkC,KAAKxB,KAAK4P,UAElD,IAGG/P,EAASC,EACZR,GAAKkC,KAAKxB,KAAK4P,QAEVpO,KAAKxB,KAAK6P,QAEVrO,KAAKxB,KAAK4P,QAIZpO,KAAKxB,KAAK6P,QAIZ,CACL/P,EAAQ,GAAKA,EAAQ,IAAgB,EAAVnC,KAAKgM,GAASwG,GACxCtQ,EAAS9C,EAAKyE,KAAKxB,KAAKgQ,QAG7B,IAAK,gBA0CH,OAtCE8G,GAHF3G,EAAS7Q,EAAIQ,EAASnC,KAAKgM,GAAK,IAEnB,IAAMhM,KAAKgM,GACH,EAAVhM,KAAKgM,GAASwG,EAEnBA,GAASxS,KAAKgM,GACPwG,EAAQxS,KAAKgM,GAElBwG,GAAS,GAAMxS,KAAKgM,GACbhM,KAAKgM,GAAKwG,EAEVA,GAMN,IADTlI,EAAItK,KAAK6X,IAAIsB,IAEP,EAAM7O,EAEN,IAGGpI,EAASC,EACF,GAAVgX,EAEKtV,KAAKxB,KAAK6P,QAEVrO,KAAKxB,KAAK4P,QAIZpO,KAAKxB,KAAK6P,QAMnBqE,IAFAnX,EAAIyE,KAAKxB,KAAKgQ,QAAUzQ,EAAIM,IAElBlC,KAAK2R,IAAIwH,GACnB3C,EAAKpX,EAAIY,KAAK4R,IAAIuH,GAEd3G,GAAS,IAAMxS,KAAKgM,GACf,CAACnI,KAAKxB,KAAK4P,QAAUsE,EAAI1S,KAAKxB,KAAK6P,QAAUsE,GAEhDhE,GAASxS,KAAKgM,GACT,CAACnI,KAAKxB,KAAK4P,QAAUsE,EAAI1S,KAAKxB,KAAK6P,QAAUsE,GAEhDhE,GAAS,GAAMxS,KAAKgM,GACf,CAACnI,KAAKxB,KAAK4P,QAAUsE,EAAI1S,KAAKxB,KAAK6P,QAAUsE,GAE7C,CAAC3S,KAAKxB,KAAK4P,QAAUsE,EAAI1S,KAAKxB,KAAK6P,QAAUsE,GAM5D,IAAK,mBAKH,OAFA3E,GAFAS,EAAK3Q,EAAIkC,KAAKxB,KAAK4P,SAEHK,GADhBC,EAAK3Q,EAAIiC,KAAKxB,KAAK6P,SACOK,EAEnB,CACL1O,KAAKxB,KAAK4P,QACPpO,KAAKxB,KAAK4P,QAAUpO,KAAKxB,KAAK4P,QAAUK,EAAMT,EACjDhO,KAAKxB,KAAK6P,QACPrO,KAAKxB,KAAK6P,QAAUrO,KAAKxB,KAAK6P,QAAUK,EAAMV,S,+BArMrDoH,CAAoBhI,I,unCC2I1B,SA/HMoI,SAAAA,I,8yBAKe,CACjBC,EAAG,EACHxG,EAAG,EACHyG,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,I,qCAbL,WACE,MAAO,kB,qCAeT,WACE,MAAO,CACLC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJ5C,GAAI,EACJC,GAAI,EACJ4C,GAAI,EACJC,GAAI,K,oBAIR,SACExX,EACAR,EACAD,EACAE,GA8DA,IAAIgD,EA5DJ,WACE,IAAIA,EAAS,CACTgV,IAAK,EACLC,IAAK,EACLC,IAAK,EACLC,IAAK,EACLC,IAAK,EACLC,IAAK,EACLC,IAAK,EACLC,IAAK,EACLC,IAAK,EACLtB,EAAG,EACHxG,EAAG,EACHyG,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,GAELC,EAAK9Z,KAAKsD,MAAMnB,EAAQQ,EAAWmX,IACnCC,EAAK/Z,KAAKsD,MAAMpB,EAASS,EAAWoX,IACpCC,EAAKha,KAAKsD,MAAMnB,EAAQQ,EAAWqX,IACnCC,EAAKja,KAAKsD,MAAMpB,EAASS,EAAWsX,IACpC5C,EAAKrX,KAAKsD,MAAMnB,EAAQQ,EAAW0U,IACnCC,EAAKtX,KAAKsD,MAAMpB,EAASS,EAAW2U,IACpC4C,EAAKla,KAAKsD,MAAMnB,EAAQQ,EAAWuX,IACnCC,EAAKna,KAAKsD,MAAMpB,EAASS,EAAWwX,IACpCU,EAAMb,EAAK3C,EACXyD,EAAMb,EAAK3C,EACXyD,EAAMb,EAAK7C,EACX2D,EAAMb,EAAK7C,EACX2D,EAAMnB,EAAKE,EAAK3C,EAAK6C,EACrBgB,EAAMnB,EAAKE,EAAK3C,EAAK6C,EAuBvB,OArBW,GAAPc,GAAmB,GAAPC,GACd9V,EAAOgV,IAAMJ,EAAKF,EAClB1U,EAAOiV,IAAMhD,EAAK2C,EAClB5U,EAAOkV,IAAMR,EACb1U,EAAOmV,IAAMN,EAAKF,EAClB3U,EAAOoV,IAAMlD,EAAK2C,EAClB7U,EAAOqV,IAAMV,EACb3U,EAAOsV,IAAMtV,EAAOuV,IAAM,IAE1BvV,EAAOsV,KAAOO,EAAMD,EAAMD,EAAMG,IAAQL,EAAMG,EAAMF,EAAMC,GAC1D3V,EAAOuV,KAAOE,EAAMK,EAAMJ,EAAMG,IAAQJ,EAAMG,EAAMF,EAAMC,GAC1D3V,EAAOgV,IAAMJ,EAAKF,EAAK1U,EAAOsV,IAAMV,EACpC5U,EAAOiV,IAAMH,EAAKJ,EAAK1U,EAAOuV,IAAMT,EACpC9U,EAAOkV,IAAMR,EACb1U,EAAOmV,IAAMN,EAAKF,EAAK3U,EAAOsV,IAAMT,EACpC7U,EAAOoV,IAAML,EAAKJ,EAAK3U,EAAOuV,IAAMR,EACpC/U,EAAOqV,IAAMV,GAGf3U,EAAOwV,IAAM,EAENxV,EAGI+V,GAYb,OAVA/V,EAAOkU,EAAIlU,EAAOoV,IAAMpV,EAAOwV,IAAMxV,EAAOqV,IAAMrV,EAAOuV,IACzDvV,EAAO0N,EAAI1N,EAAOkV,IAAMlV,EAAOuV,IAAMvV,EAAOiV,IAAMjV,EAAOwV,IACzDxV,EAAOmU,EAAInU,EAAOiV,IAAMjV,EAAOqV,IAAMrV,EAAOkV,IAAMlV,EAAOoV,IACzDpV,EAAOoU,EAAIpU,EAAOqV,IAAMrV,EAAOsV,IAAMtV,EAAOmV,IAAMnV,EAAOwV,IACzDxV,EAAOqU,EAAIrU,EAAOgV,IAAMhV,EAAOwV,IAAMxV,EAAOkV,IAAMlV,EAAOsV,IACzDtV,EAAOsU,EAAItU,EAAOkV,IAAMlV,EAAOmV,IAAMnV,EAAOgV,IAAMhV,EAAOqV,IACzDrV,EAAOuU,EAAIvU,EAAOmV,IAAMnV,EAAOuV,IAAMvV,EAAOoV,IAAMpV,EAAOsV,IACzDtV,EAAOwU,EAAIxU,EAAOiV,IAAMjV,EAAOsV,IAAMtV,EAAOgV,IAAMhV,EAAOuV,IACzDvV,EAAOyU,EAAIzU,EAAOgV,IAAMhV,EAAOoV,IAAMpV,EAAOiV,IAAMjV,EAAOmV,IAElDnV,I,sBAGT,SACEzD,EACAC,EACAe,EACAR,EACAD,GAEA,MAAO,CACJC,GAAS0B,KAAKxB,KAAKiX,EAAI3X,EAAIkC,KAAKxB,KAAKyQ,EAAIlR,EAAIiC,KAAKxB,KAAKkX,IACrD1V,KAAKxB,KAAKsX,EAAIhY,EAAIkC,KAAKxB,KAAKuX,EAAIhY,EAAIiC,KAAKxB,KAAKwX,GAChD3X,GAAU2B,KAAKxB,KAAKmX,EAAI7X,EAAIkC,KAAKxB,KAAKoX,EAAI7X,EAAIiC,KAAKxB,KAAKqX,IACtD7V,KAAKxB,KAAKsX,EAAIhY,EAAIkC,KAAKxB,KAAKuX,EAAIhY,EAAIiC,KAAKxB,KAAKwX,S,+BA1HjDR,CAA0BpI,I,srDC2IhC,SAlKMmK,SAAAA,I,0uBACJ,SAASjZ,EAAeD,EAAgBS,GACtC,KAAM,e,iBAGR,SAAIP,EAAsBO,GACxBA,EAAa,SACRkB,KAAKwB,wBACL1C,GAGL,IAAM2C,EAAgB,IAAIC,kBAAkBnD,EAAUC,MAOpDmD,EAAW,SAAkB7D,EAAGC,GAC9B,OAAOA,EAAIQ,EAAUD,MAAQ,EAAQ,EAAJR,GAEnC8D,EAAsB,SAAUlG,GAC9B,OAA2C,EAApCS,KAAKC,IAAID,KAAKa,IAAItB,EAAO,GAAI,MAEtCmG,EAAU,CAQRC,SAAU,SACRhE,EACAC,GAOA,IAAMgE,EAAQJ,EAAS7D,EAAGC,GAC1B,MAAO,CACLxC,EAAGkG,EAAcM,EAAQ,GACzBtD,EAAGgD,EAAcM,EAAQ,GACzBrD,EAAG+C,EAAcM,EAAQ,GACzBpD,EAAG8C,EAAcM,EAAQ,KAO7ByV,wBAAyB,SAAUzV,GAOjC,OADAA,GAAS,EACF,CACLxG,EAAGgD,EAAUC,KAAKuD,GAClBtD,EAAGF,EAAUC,KAAKuD,EAAQ,GAC1BrD,EAAGH,EAAUC,KAAKuD,EAAQ,GAC1BpD,EAAGJ,EAAUC,KAAKuD,EAAQ,KAS9BC,iBAAkB,SAChBlE,EACAC,GAOA,IAAMgE,EAAQJ,EAAS7D,EAAGC,GAC1B,MAAO,CACLxC,EAAGgD,EAAUC,KAAKuD,EAAQ,GAC1BtD,EAAGF,EAAUC,KAAKuD,EAAQ,GAC1BrD,EAAGH,EAAUC,KAAKuD,EAAQ,GAC1BpD,EAAGJ,EAAUC,KAAKuD,EAAQ,KAS9BE,SAAU,SACRnE,EACAC,EACAmE,GAOA,IAAMH,EAAQJ,EAAS7D,EAAGC,GAC1B0D,EAAcM,EAAQ,GAAKH,EAAoBM,EAAK3G,GACpDkG,EAAcM,EAAQ,GAAKH,EAAoBM,EAAKzD,GACpDgD,EAAcM,EAAQ,GAAKH,EAAoBM,EAAKxD,GACpD+C,EAAcM,EAAQ,GAAKH,EAAoBM,EAAKvD,IAOtD8Y,gBAAiB,SACf1V,EACAG,GAQAT,EAAsB,GADtBM,GAAS,IACkBH,EAAoBM,EAAK3G,GACpDkG,EAAcM,EAAQ,GAAKH,EAAoBM,EAAKzD,GACpDgD,EAAcM,EAAQ,GAAKH,EAAoBM,EAAKxD,GACpD+C,EAAcM,EAAQ,GAAKH,EAAoBM,EAAKvD,IAKtDH,KAAM,KAINF,MAAOC,EAAUD,MAIjBD,OAAQE,EAAUF,QAetB,OAZAwD,EAAQrD,KAAOwB,KAAKmC,OAAO7G,KACzBuG,EACA/C,EACAP,EAAUD,MACVC,EAAUF,OACVE,GAGFyB,KAAKoC,SAAS9G,KAAKuG,EAAStD,EAAUD,MAAOC,EAAUF,OAAQS,GAE/DP,EAAUC,KAAK6D,IAAIZ,GAEZlD,O,oBA9JLgZ,CAAyBpW,G,y/BC+D/B,SA1DMuW,SAAAA,I,0uBACJ,WACE,MAAO,yB,qCAGT,WACE,MAAO,CACLC,UAAW,M,sBAIf,SACErZ,EACAD,EACAS,GAWA,IATA,IAEEc,EACAgY,EAEAC,EACAC,EACAC,EAPEC,EAAO,EACTC,EAAO,EAQAla,EAAI,EAAGA,EAAIM,EAAQN,GAAK,EAC/B,IAAK,IAAID,EAAI,EAAGA,EAAIQ,EAAOR,GAAK,EAG9Bka,IADAJ,EAAMhR,IADNhH,EAAQI,KAAK8B,SAAShE,EAAGC,IACDxC,EAAGqE,EAAMnB,EAAGmB,EAAMlB,IAC9BC,EACZsZ,GAAQL,EAAIlZ,EAKhBmZ,EAAU,EAAII,GAAQ3Z,EAAQD,GAE9ByZ,GAHU,EAAIE,GAAQ1Z,EAAQD,KAGVS,EAAW6Y,UAAY,KAAO,IAClDI,EAASF,GAAW/Y,EAAW6Y,UAAY,KAAO,IAElD,IAAK,IAAI5Z,EAAI,EAAGA,EAAIM,EAAQN,GAAK,EAC/B,IAAK,IAAID,EAAI,EAAGA,EAAIQ,EAAOR,GAAK,GAG9B8Z,EAAMhR,IAFNhH,EAAQI,KAAK8B,SAAShE,EAAGC,IAEDxC,EAAGqE,EAAMnB,EAAGmB,EAAMlB,IAEtCC,GAAKmZ,EACTF,EAAIlZ,GAAKqZ,G/BgQfzQ,E+B9P0BsQ,EAAItQ,E/B+P9B3I,E+B/PiCiZ,EAAIjZ,E/BgQrCD,E+BhQwCkZ,EAAIlZ,E/BsQxCmI,OAAAA,EAEAM,OAAAA,EACAC,OAAAA,EACAC,OAAAA,EAEAP,OAAAA,EACAC,OAAAA,EACAC,OAAAA,EARAH,EA/CC,SACLS,EACA3I,EACAD,GAMA,IAAI0I,GAASE,EAAI,IAAM,IACnBH,EAAQxI,EAAI,IAAMyI,EAClBC,EAAQD,EAAQ1I,EAAI,IAoBxB,OAjBE0I,EADEjL,KAAKoK,IAAIa,EAAO,GAAK,QACfjL,KAAKoK,IAAIa,EAAO,IAEfA,EAAQ,GAAK,KAAO,MAexB,CACLtJ,EAAG,QAZHqJ,EADEhL,KAAKoK,IAAIY,EAAO,GAAK,QACfhL,KAAKoK,IAAIY,EAAO,IAEfA,EAAQ,GAAK,KAAO,OAW7BpJ,EAAG,IAAMqJ,EACTH,EAAG,SARHI,EADElL,KAAKoK,IAAIc,EAAO,GAAK,QACflL,KAAKoK,IAAIc,EAAO,IAEfA,EAAQ,GAAK,KAAO,QAmBrB6Q,CAAY5Q,EAAG3I,EAAGD,GAExByI,EAAQN,EAAI/I,EAAI,IAChBsJ,EAAQP,EAAI9I,EAAI,IAChBsJ,EAAQR,EAAII,EAAI,IAEhBH,EAAgB,OAARK,GAA0B,OAATC,GAA2B,MAATC,EAC3CN,GAAiB,MAATI,EAA0B,OAARC,EAAyB,MAARC,EAC3CL,EAAgB,MAARG,GAA0B,KAATC,EAAyB,MAARC,EAE1CP,EAAQ,SACVA,EAAQ,MAAQ3K,KAAKoK,IAAIO,EAAO,EAAI,KAAO,KAE3CA,GAAQ,MAGNC,EAAQ,SACVA,EAAQ,MAAQ5K,KAAKoK,IAAIQ,EAAO,EAAI,KAAO,KAE3CA,GAAQ,MAGNC,EAAQ,SACVA,EAAQ,MAAQ7K,KAAKoK,IAAIS,EAAO,EAAI,KAAO,KAE3CA,GAAQ,M+B/RJpH,E/BkSC,CACLrE,EAAW,IAARuL,EACHrI,EAAW,IAARsI,EACHrI,EAAW,IAARsI,I+BpSOrI,EAAIqB,KAAK8B,SAAShE,EAAGC,GAAGY,EAE9BqB,KAAKiC,SAASnE,EAAGC,EAAG6B,G/B0PrB,IACL0H,EACA3I,EACAD,EAMImI,EAEAM,EACAC,EACAC,EAEAP,EACAC,EACAC,O,+B+B/TA0Q,CAA+BH,I,y/BCkCrC,SAlCMY,SAAAA,I,0uBACJ,WACE,MAAO,iB,qCAGT,WACE,MAAO,CACLC,MAAO,iB,sBAIX,SAAS9Z,EAAeD,EAAgBS,GACtC,IAAIsZ,EhCmJiBC,EAKjBC,EgCtJqB,gBAArBxZ,EAAWsZ,MACbA,EAAQ,CACN7c,EAAG,EACHkD,EAAG,EACHC,EAAG,EACHC,EAAG,IhC4Ic0Z,EgCzIFvZ,EAAWsZ,OAA5BA,EhCkJG,CACL7c,GALI+c,EAAO/P,SAAS8P,EAAIE,QAAQ,IAAK,IAAK,MAC5B,GAKd9Z,EAJO6Z,GAAQ,EAAK,IAKpB5Z,EAJa,IAAP4Z,IgChJE3Z,EAAI,KAGZ,IAAK,IAAIZ,EAAI,EAAGA,EAAIM,EAAQN,GAAK,EAC/B,IAAK,IAAID,EAAI,EAAGA,EAAIQ,EAAOR,GAAK,EAC9BkC,KAAKiC,SAASnE,EAAGC,EAAGqa,Q,+BA5BtBD,CAAwBZ,I,y/BCyF9B,SA1FMiB,SAAAA,I,0uBACJ,WACE,MAAO,W,qCAGT,WACE,MAAO,CACLC,UAAW,Y,sBAIf,SAASna,EAAeD,EAAgBS,GACtC,IAQE4Z,EACAC,EATE7a,EAAI,EACNC,EAAI,EACJmG,EAAI5F,EACJkJ,EAAInJ,EAuCN,IA/BQS,EAAW2Z,UA+Bd1a,EAAI,EAAGA,EAAIM,EAAQN,GAAK,EAC3B,IAAKD,EAAI,EAAGA,EAAIQ,EAAOR,GAAK,EAAG,CAI7B,OAHA4a,EAAS3a,EACT4a,EAAS7a,EAEDgB,EAAW2Z,WACjB,IAAK,SACHE,EAASzU,EAAIpG,EAAI,EACjB,MACF,IAAK,SACH4a,EAASlR,EAAIzJ,EAAI,EACjB,MACF,IAAK,UACH2a,EAAS5a,EACT6a,EAAS5a,EACT,MACF,IAAK,YACH2a,EAAS5a,EACT6a,EAASnR,EAAIzJ,EAAI,EACjB,MACF,IAAK,aACH2a,EAASxU,EAAIpG,EAAI,EACjB6a,EAAS5a,EACT,MACF,IAAK,WACH2a,EAASlR,EAAIzJ,EAAI,EACjB4a,EAASzU,EAAIpG,EAAI,EAIrBkC,KAAKiC,SAAS0W,EAAQD,EAAQ1Y,KAAKgC,iBAAiBlE,EAAGC,U,+BApFzDya,CAAmBjB,I,y/BCqDzB,SArDMqB,SAAAA,I,0uBACJ,WACE,MAAO,Y,qCAGT,WACE,MAAO,CACLC,UAAW,K,sBAIf,SAASva,EAAeD,EAAgBS,GAGtC,IAFA,IAAIoF,EAAGsD,EAAGf,EAAGlL,EAAGkD,EAAGC,EAAGkB,EAEb7B,EAAI,EAAGA,EAAIM,EAAQN,GAAKe,EAAW+Z,UAC1C,IAAK,IAAI/a,EAAI,EAAGA,EAAIQ,EAAOR,GAAKgB,EAAW+Z,UAAW,CAGpDpS,GAFAvC,EAAI/H,KAAKC,IAAI0C,EAAW+Z,UAAWva,EAAQR,KAC3C0J,EAAIrL,KAAKC,IAAI0C,EAAW+Z,UAAWxa,EAASN,IAG5CxC,EAAI,EACJkD,EAAI,EACJC,EAAI,EAEJ,IAAK,IAAIoa,EAAK,EAAGA,EAAKtR,EAAGsR,GAAM,EAC7B,IAAK,IAAIC,EAAK,EAAGA,EAAK7U,EAAG6U,GAAM,EAG7Bxd,GAAe,KAFfqE,EAAQI,KAAKgC,iBAAiBlE,EAAIib,EAAIhb,EAAI+a,IAE/Bvd,EACXkD,GAAe,IAAVmB,EAAMnB,EACXC,GAAe,IAAVkB,EAAMlB,EAIfnD,GAAQkL,EACRhI,GAAQgI,EACR/H,GAAQ+H,EAER,IAAK,IAAIqS,EAAK,EAAGA,EAAKtR,EAAGsR,GAAM,EAC7B,IAAK,IAAIC,EAAK,EAAGA,EAAK7U,EAAG6U,GAAM,EAC7B/Y,KAAKiC,SAASnE,EAAIib,EAAIhb,EAAI+a,EAAI,CAC5Bvd,EAAGA,EACHkD,EAAGA,EACHC,EAAGA,EACHC,EAAG,Y,+BA5CXia,CAAoBrB,I,unCC4E1B,SAnEMyB,SAAAA,I,8yBAKG,CACLC,WAAY,EACZC,YAAa,EACbC,UAAW,EACXC,aAAc,EACdC,YAAa,CACX9d,EAAG,EACHkD,EAAG,EACHC,EAAG,EACHC,EAAG,O,qCAbP,WACE,MAAO,a,qCAgBT,WACE,MAAO,CACLsa,WAAY,GACZC,YAAa,GACbC,UAAW,GACXC,aAAc,GACdC,YAAa,CACX9d,EAAG,EACHkD,EAAG,EACHC,EAAG,EACHC,EAAG,Q,oBAKT,SACEG,EACAR,EACAD,EACAE,GAEA,MAAO,CACL0a,WAAoC,EAAxBna,EAAWma,WACvBC,YAAsC,EAAzBpa,EAAWoa,YACxBC,UAAkC,EAAvBra,EAAWqa,UACtBC,aAAwC,EAA1Bta,EAAWsa,gB,sBAI7B,SAAS9a,EAAOD,EAAQS,GACtB,IAAK,IAAIf,EAAI,EAAGA,EAAIM,EAAQN,GAAK,EAC/B,IAAK,IAAID,EAAI,EAAGA,EAAIQ,EAAOR,GAAK,EAC1BkC,KAAKxB,KAAKya,WAAa,GAAKnb,EAAIkC,KAAKxB,KAAKya,YAC5CjZ,KAAKiC,SAASnE,EAAGC,EAAGe,EAAWua,aAE7BrZ,KAAKxB,KAAK0a,YAAc,GAAK5a,EAAQ0B,KAAKxB,KAAK0a,YAAcpb,GAC/DkC,KAAKiC,SAASnE,EAAGC,EAAGe,EAAWua,aAE7BrZ,KAAKxB,KAAK2a,UAAY,GAAKpb,EAAIiC,KAAKxB,KAAK2a,WAC3CnZ,KAAKiC,SAASnE,EAAGC,EAAGe,EAAWua,aAE7BrZ,KAAKxB,KAAK4a,aAAe,GAAK/a,EAAS2B,KAAKxB,KAAK4a,aAAerb,GAClEiC,KAAKiC,SAASnE,EAAGC,EAAGe,EAAWua,kB,+BA5DnCL,CAAqBzB,I,y/BCqH3B,SA1HM+B,SAAAA,I,0uBACJ,WACE,MAAO,a,qCAGT,WACE,MAAO,CACLC,QAAU,IAAMpd,KAAKgM,GAAM,IAC3BqR,UAAY,GAAKrd,KAAKgM,GAAM,IAC5BsR,QAAS,EACTC,QAAQ,K,sBAIZ,SAASpb,EAAeD,EAAgBS,GACtC,IAEE6a,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAIA5a,EACArE,EACAkD,EACAC,EAtBE+b,EAAenc,EACjBoc,EAAa,GAebC,EAAa,MACbC,EAAY,EACZ7Y,EAAQ,EAMV+X,EACG3d,KAAK4R,IAAIjP,EAAWya,SACnBpd,KAAK4R,IAAIjP,EAAW0a,WACpBmB,EACF,EACFZ,EACG5d,KAAK2R,IAAIhP,EAAWya,SACnBpd,KAAK4R,IAAIjP,EAAW0a,WACpBmB,EACF,EACFX,EAAM7d,KAAK2R,IAAIhP,EAAW0a,WAAamB,EAAc,EAGrDV,GADAJ,EAAO,KAAW/a,EAAW2a,QAAW,GAC7BI,EACXK,EAAOL,EAAKG,EAEZQ,EAAaR,EAEb,IAAK,IAAIjc,EAAI,EAAGA,EAAIM,EAAQN,GAAK,EAC/B,IAAK,IAAID,EAAI,EAAGA,EAAIQ,EAAOR,GAAK,EAC9B4c,EAAWG,KAA+C,EAA1Clb,EAAWK,KAAKgC,iBAAiBlE,EAAGC,KAIxD,IAAK,IAAIA,EAAI,EAAGA,EAAIM,EAAQN,GAAK,EAAG6c,GAAaH,EAAc,CAG7DH,GADAD,GADAD,EAAKQ,GACKH,GACAA,EAEV,IAAK,IAAI3c,EAAI,EAAGA,EAAIQ,EAAOR,GAAK,EAAGsc,GAAM,EAAGC,GAAM,EAAGC,GAAM,EAChD,GAALvc,GAAUA,EAAIM,EAAS,GAAU,GAALP,GAAUA,EAAIQ,EAAQ,GACpDqb,EACEe,EAAWN,EAAK,GAChBM,EAAWL,EAAK,GAChBK,EAAWJ,EAAK,GAChBI,EAAWN,EAAK,GAChBM,EAAWL,EAAK,GAChBK,EAAWJ,EAAK,GAClBV,EACEc,EAAWJ,EAAK,GAChBI,EAAWJ,GACXI,EAAWJ,EAAK,GAChBI,EAAWN,EAAK,GAChBM,EAAWN,GACXM,EAAWN,EAAK,GAGhBG,EADQ,GAANZ,GAAiB,GAANC,EACLY,GAEHL,EAAQR,EAAKG,EAAKF,EAAKG,EAAKG,GAAQ,EAC/B,EAEAC,EAAQhe,KAAKkJ,KAAKsU,EAAKA,EAAKC,EAAKA,EAAKK,IAIlDM,EAAQC,EAGN1b,EAAW4a,QAEbne,GADAqE,EAAQI,KAAKwX,wBAAwBzV,IAC1BxG,EAAIgf,GAAU,EACzB9b,EAAKmB,EAAMnB,EAAI8b,GAAU,EACzB7b,EAAKkB,EAAMlB,EAAI6b,GAAU,EACzBva,KAAKyX,gBAAgB1V,IAAS,CAC5BxG,EAAGA,EACHkD,EAAGA,EACHC,EAAGA,EACHC,EAAGiB,EAAMjB,KAGXqB,KAAKyX,gBAAgB1V,IAAS,CAC5BxG,EAAGgf,EACH9b,EAAG8b,GAAS,EACZ7b,EAAG6b,GAAS,GACZ5b,EAAG,Y,+BAlHT2a,CAAqB/B,I,y/BCsC3B,SA9CMuD,SAAAA,I,0uBACJ,WACE,MAAO,2B,yBAGT,SAASxc,EAAeD,EAAgBS,GAatC,IAZA,IAMEc,EANEmb,EAAOnR,EAAAA,EACToR,EAAOpR,EAAAA,EACPqR,EAAOrR,EAAAA,EACPsR,GAAQ,EACRC,GAAQ,EACRC,GAAQ,EAGJjO,EAAQ,SAAezR,EAAOU,EAAKY,GACvC,OAAwB,KAAftB,EAAQU,IAAeY,EAAMZ,IAG/B2B,EAAI,EAAGA,EAAIM,EAAQN,GAAK,EAC/B,IAAK,IAAID,EAAI,EAAGA,EAAIQ,EAAOR,GAAK,EAC9B8B,EAAQI,KAAK8B,SAAShE,EAAGC,GAEzBgd,EAAO5e,KAAKC,IAAIwD,EAAMrE,EAAGwf,GACzBC,EAAO7e,KAAKC,IAAIwD,EAAMnB,EAAGuc,GACzBC,EAAO9e,KAAKC,IAAIwD,EAAMlB,EAAGuc,GAEzBC,EAAO/e,KAAKa,IAAI4C,EAAMrE,EAAG2f,GACzBC,EAAOhf,KAAKa,IAAI4C,EAAMnB,EAAG0c,GACzBC,EAAOjf,KAAKa,IAAI4C,EAAMlB,EAAG0c,GAI7B,IAAK,IAAIrd,EAAI,EAAGA,EAAIM,EAAQN,GAAK,EAC/B,IAAK,IAAID,EAAI,EAAGA,EAAIQ,EAAOR,GAAK,GAC9B8B,EAAQI,KAAK8B,SAAShE,EAAGC,IAEnBxC,EAAI4R,EAAMvN,EAAMrE,EAAGwf,EAAMG,GAC/Btb,EAAMnB,EAAI0O,EAAMvN,EAAMnB,EAAGuc,EAAMG,GAC/Bvb,EAAMlB,EAAIyO,EAAMvN,EAAMlB,EAAGuc,EAAMG,GAE/Bpb,KAAKiC,SAASnE,EAAGC,EAAG6B,Q,+BAxCtBkb,CAAkCvD,I,uKC4CxC,IAAM8D,GAAmB,GAEzB,SAASnf,GAAIof,GACX,GAAID,GAAiBC,EAAOC,WAC1B,uBAAiBD,EAAOC,UAAxB,oBAEFF,GAAiBC,EAAOC,WAAaD,EAGvCpf,GAAIsf,GACJtf,GAAIuf,GACJvf,GAAIwf,GACJxf,GAAIyf,IACJzf,GAAI0f,IACJ1f,GAAI2f,IACJ3f,GAAI4f,IACJ5f,GAAI6f,IACJ7f,GAAI8f,IACJ9f,GAAI+f,IACJ/f,GAAIggB,IACJhgB,GAAIigB,IACJjgB,GAAIkgB,IACJlgB,GAAImgB,IACJngB,GAAIogB,IACJpgB,GAAIqgB,IACJrgB,GAAIsgB,IACJtgB,GAAIugB,IACJvgB,GAAIwgB,IACJxgB,GAAIygB,IACJzgB,GAAI0gB,IACJ1gB,GAAI2gB,IACJ3gB,GAAI4gB,IACJ5gB,GAAI6gB,IACJ7gB,GAAI8gB,IACJ9gB,GAAI+gB,IACJ/gB,GAAIghB,IACJhhB,GAAIihB,IACJjhB,GAAIkhB,IACJlhB,GAAImhB,IACJnhB,GAAIohB,IACJphB,GAAIqhB,IACJrhB,GAAIshB,IACJthB,GAAIuhB,IACJvhB,GAAIwhB,IACJxhB,GAAIyhB,IACJzhB,GAAI0hB,IACJ1hB,GAAI2hB,IACJ3hB,GAAI4hB,IACJ5hB,GAAI6hB,IACJ7hB,GAAI8hB,IACJ9hB,GAAI+hB,IACJ/hB,GAAIgiB,IAQJ,SANMC,W,0JACJ,SAAWC,GACT,OAAO/C,GAAiB+C,M,wCAFtBD,G,gSCgEN,SAtJME,WAaJ,WACEnjB,EACAojB,EACAxgB,EACAC,EACAqD,I,4FACA,uBAlBiC,MAkBjC,gBAhBuB,MAgBvB,YAdoB,GAcpB,YAZoB,GAYpB,eAVuB,IAUvB,kBARgC,IAShCpB,KAAK9E,IAAMA,EACX8E,KAAKse,MAAQA,EACbte,KAAKlC,EAAIA,EACTkC,KAAKjC,EAAIA,EACTiC,KAAKoB,KAAOA,E,8CAGd,WACE,OAAOpB,KAAK9E,M,kBAGd,WACE,OAAO8E,KAAKlC,I,kBAGd,WACE,OAAOkC,KAAKjC,I,sBAGd,WACE,OAAOiC,KAAK9E,IAAIqjB,a,uBAGlB,WACE,OAAOve,KAAK9E,IAAIsjB,c,0BAGlB,WAEE,IADA,IAAIjgB,EAAYyB,KAAK9E,IAAIujB,eAChBlb,EAAI,EAAGA,EAAIvD,KAAK0e,QAAQlb,OAAQD,GAAK,EAC5ChF,EAAYyB,KAAK0e,QAAQnb,GAAGob,OAAOC,IACjCrgB,EACAyB,KAAK0e,QAAQnb,GAAGzE,YAGpB,OAAOP,I,yBAGT,SAAY6f,GAAoD,IAAtCtf,EAAsC,uDAAjB,GAM7C,OALAkB,KAAK0e,QAAQ7D,KAAK,CAChBuD,KAAAA,EACAO,OAAQ,IAAKR,GAAAA,IAAsBC,IACnCtf,WAAAA,IAEKkB,O,oBAGT,SAAOlC,EAAWC,GAGhB,OAFAiC,KAAK6e,MAAM/gB,GACXkC,KAAK8e,MAAM/gB,GACJiC,O,mBAGT,SAAMlC,GAEJ,OADAkC,KAAKlC,GAAS,EAAJA,EACHkC,O,mBAGT,SAAMjC,GAEJ,OADAiC,KAAKjC,GAAS,EAAJA,EACHiC,O,mBAGT,SAAMlC,EAAWC,GAGf,OAFAiC,KAAK+e,KAAKjhB,GACVkC,KAAKgf,KAAKjhB,GACHiC,O,kBAGT,SAAKlC,GAEH,OADAkC,KAAKlC,EAAIA,EACFkC,O,kBAGT,SAAKjC,GAEH,OADAiC,KAAKjC,EAAIA,EACFiC,O,oBAGT,SACEif,EACAC,EACAC,EACAC,GAEA,IAAMC,EAAWrf,KAAKue,WACpBe,EAAYtf,KAAKwe,YACjBe,EAASN,EAAWI,EACpBG,EAASN,EAAYI,EAYvB,OAVIF,GACFpf,KAAKyf,QAAQzf,KAAK0f,OAASH,GAASvf,KAAK2f,OAASH,QAG3B,IAAdN,EACTlf,KAAK4f,YAAYC,OAAOR,EAAWJ,EAAUK,EAAYL,EAAUE,GAEnEnf,KAAK4f,YAAYC,OAAOZ,EAAUC,EAAWC,GAGxCnf,O,kBAGT,SACE8f,EACAC,EACAzhB,EACAD,GAEA,IAAM2hB,EAAShgB,KAAK4f,YAIlBre,EpDgFC,SACL0e,EACAC,EACAJ,EACAC,EACAzhB,EACAD,GAEA,IAEEP,EACAC,EACAC,EACAC,EACAC,EACAC,EAPEkhB,EAAWY,EAAa3hB,MAC1B2gB,EAAWiB,EAAa5hB,MAQ1B,IACEP,EAAIgiB,EAAQ9hB,EAAK,EACjBF,EAAIgiB,EAAS1hB,GAAUJ,EAAKI,EAC5BN,GAAK,EAAGE,GAAM,EAEd,IACEH,EAAIgiB,EAAQ9hB,EAAK,EACjBF,EAAIgiB,EAASxhB,GAASN,EAAKM,EAC3BR,GAAK,EAAGE,GAAM,EAEdE,EAAqBH,EAAIshB,EAAW,EAAQ,EAAJvhB,EACxCK,EAAqBF,EAAKghB,EAAW,EAAS,EAALjhB,EAEzCkiB,EAAa1hB,KAAKL,GAChB8hB,EAAazhB,KAAKN,GACpBgiB,EAAa1hB,KAAKL,EAAqB,GACrC8hB,EAAazhB,KAAKN,EAAqB,GACzCgiB,EAAa1hB,KAAKL,EAAqB,GACrC8hB,EAAazhB,KAAKN,EAAqB,GACzCgiB,EAAa1hB,KAAKL,EAAqB,GACrC8hB,EAAazhB,KAAKN,EAAqB,GAI7C,OAAOgiB,EoDzHMC,CAHMH,EAAOvB,eACb,IAAI1e,EAAczB,EAAOD,GACZ0C,aAAaqf,gBAAgB9hB,EAAOD,GAIxDyhB,EACAC,EACAzhB,EACAD,GAOJ,OAJA2hB,EAAOK,aAAa9e,GAAQf,SAASlC,GAAOmC,UAAUpC,GAEtD2B,KAAKsgB,MAAMR,EAAQC,GAEZ/f,U,oBAlJLqe,G,+XCkLN,SAnLMkC,WAyBJ,WACEjiB,EACAD,GAQA,IAPAS,EAOA,uDAJI,CACF0hB,gBAAiB,GACjB5hB,aAAc,IAEhB,6BAlCiC,IAkCjC,kBAhCgC,IAgChC,YA9BoB,GA8BpB,YA5BoB,GA4BpB,iBA1BgC,MA0BhC,oBAxB+B,MAwB/B,gBAtBwB,GAsBxB,iBApByB,GAoBzB,qBAfE,CACF4hB,gBAAiB,GACjB5hB,aAAc,KAcdoB,KAAKC,WAAW3B,EAAOD,EAAQS,GAG7BA,EAAW0hB,iBACoB,gBAA/B1hB,EAAW0hB,iBAEXxgB,KAAKygB,YAAY,aAAc,CAC7BrI,MAAOtZ,EAAW0hB,kB,+CAKxB,SAAWliB,EAAeD,EAAgBS,GACxCkB,KAAKE,OAAS,IAAIH,EAAczB,EAAOD,GACvC2B,KAAKzB,UAAYyB,KAAKE,OAAOa,aAAaqf,gBAAgB9hB,EAAOD,GACjE2B,KAAK1B,MAAQA,EACb0B,KAAK3B,OAASA,EACd2B,KAAKlB,WAAaA,I,iBAGpB,SAAI5D,EAAU4C,EAAWC,GACvB,IAAM2iB,EAAM,IAAIrC,GAAYnjB,EAAK8E,KAAMlC,EAAGC,EAAG,IAE7C,OADAiC,KAAK2gB,QAAQ9F,KAAK6F,GACXA,I,yBAGT,WACE,IAAK,IAAInd,EAAI,EAAGA,EAAIvD,KAAK2gB,QAAQnd,OAAQD,GAAK,EAAG,CAC/C,IAAMqd,EAAc5gB,KAAK2gB,QAAQpd,GACjCvD,KAAKzB,UAAYb,EACf,CACEY,MAAO0B,KAAK1B,MACZD,OAAQ2B,KAAK3B,OACbE,UAAWyB,KAAKzB,WAElB,CACET,EAAG8iB,EAAYlB,OACf3hB,EAAG6iB,EAAYjB,OACfrhB,MAAOsiB,EAAYrC,WACnBlgB,OAAQuiB,EAAYpC,YACpBjgB,UAAWqiB,EAAYC,gBAEzBhiB,GAIJ,IAAK,IAAI0E,EAAI,EAAGA,EAAIvD,KAAK0e,QAAQlb,OAAQD,IACvCvD,KAAKzB,UAAYyB,KAAK0e,QAAQnb,GAAGob,OAAOC,IACtC5e,KAAKzB,UACLyB,KAAK0e,QAAQnb,GAAGzE,YAIpB,OAAOkB,KAAKzB,Y,yBAGd,SAAY6f,EAActf,GAMxB,OALAkB,KAAK0e,QAAQ7D,KAAK,CAChBuD,KAAAA,EACAO,OAAQ,IAAKR,GAAAA,IAAsBC,IACnCtf,WAAAA,IAEKkB,O,oBAGT,SAAOif,EAAkBC,EAAmBC,GAC1Cnf,KAAKE,OAAO4gB,UACZ9gB,KAAKE,OAAS,KACdF,KAAKzB,UAAY,UAEQ,IAAd2gB,EACTlf,KAAKC,WAAWD,KAAK1B,MAAQ2gB,EAAUjf,KAAK3B,OAAS4gB,EAAUjf,KAAKlB,YAEpEkB,KAAKC,WAAWgf,EAAUC,EAAWlf,KAAKlB,YAG5C,IAAK,IAAIyE,EAAI,EAAGA,EAAIvD,KAAK2gB,QAAQnd,OAAQD,GAAK,EAC5CvD,KAAK2gB,QAAQpd,GAAGsc,OAAOZ,EAAUC,EAAWC,GAAM,GAGpD,OAAOnf,O,kBAGT,SAAK8f,EAAgBC,EAAgBzhB,EAAeD,GAClD,IAAK,IAAIkF,EAAI,EAAGA,EAAIvD,KAAK2gB,QAAQnd,OAAQD,GAAK,EAC5CvD,KAAK2gB,QAAQpd,GAAGwd,KAAKjB,EAAQC,EAAQzhB,EAAOD,GAG9C,OAAO2B,O,oBAGT,SAAOlC,EAAWC,GAGhB,OAFAiC,KAAK6e,MAAM/gB,GACXkC,KAAK8e,MAAM/gB,GACJiC,O,mBAGT,SAAMlC,GAEJ,OADAkC,KAAKlC,GAAS,EAAJA,EACHkC,O,mBAGT,SAAMjC,GAEJ,OADAiC,KAAKjC,GAAS,EAAJA,EACHiC,O,kBAGT,SAAKlC,GAEH,OADAkC,KAAKlC,EAAIA,EACFkC,O,kBAGT,SAAKjC,GAEH,OADAiC,KAAKjC,EAAIA,EACFiC,O,6BAGT,SAAgBpB,GAEd,OADAoB,KAAKlB,WAAWF,aAAeA,EACxBoB,O,kBAGT,WACE,OAAOA,KAAKlC,I,kBAGd,WACE,OAAOkC,KAAKjC,I,sBAGd,WACE,OAAOiC,KAAK1B,Q,uBAGd,WACE,OAAO0B,KAAK3B,S,0BAGd,SAAa+f,GACX,OAAOpe,KAAKlB,WAAWsf,Q,oBA/KrBmC,G,+XC6JN,SAzJMS,WAiBJ,WAAY1iB,EAAeD,GAAyC,IAAzBS,EAAyB,uDAAJ,GAAI,+BAhBnC,MAgBmC,kBAdlC,IAckC,iBAZxC,IAYwC,oBAVxC,IAAImiB,MAUoC,qBARrC,IAQqC,gBAN1C,GAM0C,iBAJzC,GAIyC,iBAFlC,MAGhCjhB,KAAKC,WAAW3B,EAAOD,EAAQS,G,+CAGjC,SAAWR,EAAeD,GAA+C,IAA/BS,EAA+B,uDAAV,GAC7DkB,KAAKlB,WAAaA,EAClBkB,KAAK1B,MAAQA,EACb0B,KAAK3B,OAASA,EACd2B,KAAKE,OAAS,IAAIH,EAAczB,EAAOD,GACvC2B,KAAKzB,UAAYyB,KAAKE,OAAOa,aAAa0d,aAAa,EAAG,EAAGngB,EAAOD,K,yBAGtE,WAKS,IAJPS,EAIO,uDADH,CAAE0hB,gBAAiB,GAAI5hB,aAAc,IAErC0f,EAAQ,IAAIiC,GAAMvgB,KAAK1B,MAAO0B,KAAK3B,OAAQS,GAE/C,OADAkB,KAAKkhB,OAAOrG,KAAKyD,GACVA,I,qBAGT,WAEE,OADU,IAAI2C,MACHE,UAAYnhB,KAAKohB,UAAUD,Y,kBAGxC,SAAKE,GACH,GAAIxhB,IACF,MAAM,IAAIyhB,MAAM,yCAGlB,IAAK,IAAI/d,EAAI,EAAGA,EAAIvD,KAAKkhB,OAAO1d,OAAQD,IACtCvD,KAAKzB,UAAYb,EACf,CACEY,MAAO0B,KAAK1B,MACZD,OAAQ2B,KAAK3B,OACbE,UAAWyB,KAAKzB,WAElB,CACET,EAAGkC,KAAKkhB,OAAO3d,GAAGmc,OAClB3hB,EAAGiC,KAAKkhB,OAAO3d,GAAGoc,OAClBrhB,MAAO0B,KAAKkhB,OAAO3d,GAAGgb,WACtBlgB,OAAQ2B,KAAKkhB,OAAO3d,GAAGib,YACvBjgB,UAAWyB,KAAKkhB,OAAO3d,GAAGge,cAC1B3iB,aAAcoB,KAAKkhB,OAAO3d,GAAGie,aAAa,iBAE5C3iB,GAIJ,IAAK,IAAI0E,EAAI,EAAGA,EAAIvD,KAAK0e,QAAQlb,OAAQD,IACvCvD,KAAKzB,UAAYyB,KAAK0e,QAAQnb,GAAGob,OAAOC,IACtC5e,KAAKzB,UACLyB,KAAK0e,QAAQnb,GAAGzE,YAIpBkB,KAAKE,OAAOa,aAAa0gB,aAAazhB,KAAKzB,UAAW,EAAG,GAEzD,IAAMmjB,EAAKvnB,EAAQ,IAEjBqE,EADMwB,KAAKE,OAAOe,YACPsX,QAAQ,2BAA4B,IAC/CoJ,EAAOC,OAAOC,KAAKrjB,EAAM,UAE3BkjB,EAAGI,cAAcT,EAAMM,K,oBAGzB,WAA0D,IAAnDI,EAAmD,uDAA/B,YACzB,IAAKliB,IACH,MAAM,IAAIyhB,MAAM,yCAKlB,IAFA,IAAMU,EAAgB,IAAIliB,OAAOmiB,MAExB1e,EAAI,EAAGA,EAAIvD,KAAKkhB,OAAO1d,OAAQD,IACtCvD,KAAKzB,UAAYb,EACf,CACEY,MAAO0B,KAAK1B,MACZD,OAAQ2B,KAAK3B,OACbE,UAAWyB,KAAKzB,WAElB,CACET,EAAGkC,KAAKkhB,OAAO3d,GAAGmc,OAClB3hB,EAAGiC,KAAKkhB,OAAO3d,GAAGoc,OAClBrhB,MAAO0B,KAAKkhB,OAAO3d,GAAGgb,WACtBlgB,OAAQ2B,KAAKkhB,OAAO3d,GAAGib,YACvBjgB,UAAWyB,KAAKkhB,OAAO3d,GAAGge,cAC1B3iB,aAAcoB,KAAKkhB,OAAO3d,GAAGie,aAAa,iBAE5C3iB,GAIJ,IAAK,IAAI0E,EAAI,EAAGA,EAAIvD,KAAK0e,QAAQlb,OAAQD,IACvCvD,KAAKzB,UAAYyB,KAAK0e,QAAQnb,GAAGob,OAAOC,IACtC5e,KAAKzB,UACLyB,KAAK0e,QAAQnb,GAAGzE,YAOpB,OAHAkB,KAAKE,OAAOa,aAAa0gB,aAAazhB,KAAKzB,UAAW,EAAG,GAEzDyjB,EAAcE,IAAMliB,KAAKE,OAAOe,UAAU8gB,GACnCC,I,yBAGT,SAAY5D,GAAgD,IAAlCtf,EAAkC,uDAAb,GAM7C,OALAkB,KAAK0e,QAAQ7D,KAAK,CAChBuD,KAAAA,EACAO,OAAQ,IAAKR,GAAAA,IAAsBC,IACnCtf,WAAAA,IAEKkB,O,oBAGT,SAAOif,EAAkBC,GAAgE,IAA7CC,EAA6C,uDAA9B,oBACzDnf,KAAKE,OAAO4gB,UACZ9gB,KAAKE,OAAS,KACdF,KAAKzB,UAAY,UAEQ,IAAd2gB,EACTlf,KAAKC,WAAYD,KAAK1B,MAAQ2gB,EAAY,EAAIjf,KAAK3B,OAAS4gB,EAAY,GAExEjf,KAAKC,WAAWgf,EAAUC,GAG5B,IAAK,IAAI3b,EAAI,EAAGA,EAAIvD,KAAKkhB,OAAO1d,OAAQD,GAAK,EAC3CvD,KAAKkhB,OAAO3d,GAAGsc,OAAOZ,EAAUC,EAAWC,GAG7C,OAAOnf,U,oBArJLghB,GChBC,SAASmB,GACdlC,EACAC,EACAjB,EACAC,GAEA,IAIE1R,EACAC,EACA3P,EACAC,EAPEshB,EAAWY,EAAa3hB,MAE1BihB,EAASF,EAAWJ,EACpBO,EAFYS,EAAa5hB,OAEJ6gB,EAMvB,IAAKnhB,EAAI,EAAGA,EAAImhB,EAAWnhB,GAAK,EAC9B,IAAKD,EAAI,EAAGA,EAAImhB,EAAUnhB,GAAK,EAC7B0P,EACErR,KAAKsD,MAAM1B,EAAIyhB,GAAUH,EAAW,EAA6B,EAAzBljB,KAAKsD,MAAM3B,EAAIyhB,GACzD9R,EAAgB1P,EAAIkhB,EAAW,EAAQ,EAAJnhB,EAEnCoiB,EAAa1hB,KAAKiP,EAAgB,GAChCwS,EAAazhB,KAAKgP,EAAgB,GACpC0S,EAAa1hB,KAAKiP,EAAgB,GAChCwS,EAAazhB,KAAKgP,EAAgB,GACpC0S,EAAa1hB,KAAKiP,EAAgB,GAChCwS,EAAazhB,KAAKgP,EAAgB,GACpC0S,EAAa1hB,KAAKiP,EAAgB,GAChCwS,EAAazhB,KAAKgP,EAAgB,GAIxC,OAAO0S,EAGF,SAASkC,GACdnC,EACAC,EACAjB,EACAC,GAEA,IAIEzR,EACA3P,EACAC,EACAkY,EACAC,EACAzH,EACAC,EACAyH,EACAC,EACAiM,EACAC,EACAC,EACAC,EACAjf,EACAgB,EAlBE8a,EAAWY,EAAa3hB,MAC1BghB,EAAYW,EAAa5hB,OACzBkhB,EAASF,EAAWJ,EACpBO,EAASF,EAAYJ,EAiBvB,IAAK3b,EAAI,EAAGA,EAAI2b,EAAW3b,GAAK,EAC9B,IAAKgB,EAAI,EAAGA,EAAI0a,EAAU1a,GAAK,EAE7BxG,EAAIwF,EAAIic,EAGR/Q,GAJA3Q,EAAIyG,EAAIgb,IAERtJ,EAAK9Z,KAAKsD,MAAM3B,IAGhB4Q,EAAK3Q,GAFLmY,EAAK/Z,KAAKsD,MAAM1B,KAGhBoY,EAAKF,EAAK,IAGAoJ,IACRlJ,EAAKF,IAHPG,EAAKF,EAAK,IAKAoJ,IACRlJ,EAAKF,GAGPmM,EAAyC,GAAtBnM,EAAKmJ,EAAWpJ,GACnCqM,EAAyC,GAAtBpM,EAAKmJ,EAAWlJ,GACnCoM,EAAyC,GAAtBnM,EAAKiJ,EAAWpJ,GACnCuM,EAAyC,GAAtBpM,EAAKiJ,EAAWlJ,GACnC1I,EAAqC,GAApBlK,EAAI0b,EAAW1a,GAEhC2b,EAAa1hB,KAAKiP,IACf,EAAMiB,KACH,EAAMD,GAAMwR,EAAazhB,KAAK6jB,GAC9B5T,EAAKwR,EAAazhB,KAAK8jB,IAC3B5T,IACI,EAAMD,GAAMwR,EAAazhB,KAAK+jB,GAC9B9T,EAAKwR,EAAazhB,KAAKgkB,IAC7BtC,EAAa1hB,KAAKiP,EAAgB,IAC/B,EAAMiB,KACH,EAAMD,GAAMwR,EAAazhB,KAAK6jB,EAAkB,GAChD5T,EAAKwR,EAAazhB,KAAK8jB,EAAkB,IAC7C5T,IACI,EAAMD,GAAMwR,EAAazhB,KAAK+jB,EAAkB,GAChD9T,EAAKwR,EAAazhB,KAAKgkB,EAAkB,IAC/CtC,EAAa1hB,KAAKiP,EAAgB,IAC/B,EAAMiB,KACH,EAAMD,GAAMwR,EAAazhB,KAAK6jB,EAAkB,GAChD5T,EAAKwR,EAAazhB,KAAK8jB,EAAkB,IAC7C5T,IACI,EAAMD,GAAMwR,EAAazhB,KAAK+jB,EAAkB,GAChD9T,EAAKwR,EAAazhB,KAAKgkB,EAAkB,IAC/CtC,EAAa1hB,KAAKiP,EAAgB,IAC/B,EAAMiB,KACH,EAAMD,GAAMwR,EAAazhB,KAAK6jB,EAAkB,GAChD5T,EAAKwR,EAAazhB,KAAK8jB,EAAkB,IAC7C5T,IACI,EAAMD,GAAMwR,EAAazhB,KAAK+jB,EAAkB,GAChD9T,EAAKwR,EAAazhB,KAAKgkB,EAAkB,IAInD,OAAOtC,EAGF,SAASuC,GACdxC,EACAC,EACAjB,EACAC,GAEA,IAiBEphB,EACAC,EACAkY,EACAC,EACAC,EACAC,EACA5C,EACAC,EACAhF,EACAC,EACA2T,EACAC,EACAI,EACAH,EACAC,EACAG,EACAC,EACAC,EACAC,EACArV,EACAlK,EACAgB,EAtCEwe,EAAc,SAAqBC,EAAIC,EAAIC,EAAIxoB,GAC/C,OAAOuoB,GAAMC,EAAKF,GAAMtoB,GAAKsoB,EAAK,EAAIC,EAAKC,GAAMxoB,EAAIA,GAEvDyoB,EAAuB,SAA8BH,EAAIC,EAAIC,EAAIxoB,GAC/D,IAAI6G,EAASwhB,EAAYC,EAAIC,EAAIC,EAAIxoB,GACrC,OAAI6G,EAAS,IACJ,IAELA,EAAS,EACJ,EAEFpF,KAAKsD,MAAM8B,IAEpB8d,EAAWY,EAAa3hB,MAExBihB,EAASF,EAAWJ,EACpBO,EAFYS,EAAa5hB,OAEJ6gB,EAwBvB,IAAK3b,EAAI,EAAGA,EAAI2b,EAAW3b,GAAK,EAC9B,IAAKgB,EAAI,EAAGA,EAAI0a,EAAU1a,GAAK,EAE7BxG,EAAIwF,EAAIic,EAIR/Q,EAAgB,KALhB3Q,EAAIyG,EAAIgb,IAGRpJ,EAAKha,KAAKsD,MAAM3B,KAGhB4Q,EAAgB,IAAV3Q,GAFNqY,EAAKja,KAAKsD,MAAM1B,KA4BhBskB,EAAyC,IAjBvCnM,EADEE,EAAK,GAAK,EACPA,EAAK,EAELA,GAeiBiJ,GAvBtBpJ,EADEE,EAAK,GAAK,EACPA,EAAK,EAELA,IAsBPmM,EAAyC,GAAtBpM,EAAKmJ,EAAWlJ,GACnCuM,EAAyC,GAAtBxM,EAAKmJ,GAbtB7L,EADE2C,EAAK,GAAKkJ,EACPlJ,EAEAA,EAAK,IAYZoM,EAAyC,GAAtBnM,EAAKiJ,EAAWpJ,GACnCuM,EAAyC,GAAtBpM,EAAKiJ,EAAWlJ,GACnCwM,EAAyC,GAAtBvM,EAAKiJ,EAAW7L,GACnCoP,EAAyC,IAXvCnP,EADE2C,EAAK,GAAKiJ,EACPjJ,EAEAA,EAAK,GASYiJ,EAAWpJ,GACnC4M,EAAyC,GAAtBpP,EAAK4L,EAAWlJ,GACnC2M,EAAyC,GAAtBrP,EAAK4L,EAAW7L,GAEnC/F,EAAqC,GAApBlK,EAAI0b,EAAW1a,GAEhC2b,EAAa1hB,KAAKiP,GAAiB0V,EACjCJ,EACE9C,EAAazhB,KAAK6jB,GAClBpC,EAAazhB,KAAK8jB,GAClBrC,EAAazhB,KAAKkkB,GAClBjU,GAEFsU,EACE9C,EAAazhB,KAAK+jB,GAClBtC,EAAazhB,KAAKgkB,GAClBvC,EAAazhB,KAAKmkB,GAClBlU,GAEFsU,EACE9C,EAAazhB,KAAKokB,GAClB3C,EAAazhB,KAAKqkB,GAClB5C,EAAazhB,KAAKskB,GAClBrU,GAEFC,GAGFwR,EAAa1hB,KAAKiP,EAAgB,GAAK0V,EACrCJ,EACE9C,EAAazhB,KAAK6jB,EAAkB,GACpCpC,EAAazhB,KAAK8jB,EAAkB,GACpCrC,EAAazhB,KAAKkkB,EAAkB,GACpCjU,GAEFsU,EACE9C,EAAazhB,KAAK+jB,EAAkB,GACpCtC,EAAazhB,KAAKgkB,EAAkB,GACpCvC,EAAazhB,KAAKmkB,EAAkB,GACpClU,GAEFsU,EACE9C,EAAazhB,KAAKokB,EAAkB,GACpC3C,EAAazhB,KAAKqkB,EAAkB,GACpC5C,EAAazhB,KAAKskB,EAAkB,GACpCrU,GAEFC,GAGFwR,EAAa1hB,KAAKiP,EAAgB,GAAK0V,EACrCJ,EACE9C,EAAazhB,KAAK6jB,EAAkB,GACpCpC,EAAazhB,KAAK8jB,EAAkB,GACpCrC,EAAazhB,KAAKkkB,EAAkB,GACpCjU,GAEFsU,EACE9C,EAAazhB,KAAK+jB,EAAkB,GACpCtC,EAAazhB,KAAKgkB,EAAkB,GACpCvC,EAAazhB,KAAKmkB,EAAkB,GACpClU,GAEFsU,EACE9C,EAAazhB,KAAKokB,EAAkB,GACpC3C,EAAazhB,KAAKqkB,EAAkB,GACpC5C,EAAazhB,KAAKskB,EAAkB,GACpCrU,GAEFC,GAGFwR,EAAa1hB,KAAKiP,EAAgB,GAAK0V,EACrCJ,EACE9C,EAAazhB,KAAK6jB,EAAkB,GACpCpC,EAAazhB,KAAK8jB,EAAkB,GACpCrC,EAAazhB,KAAKkkB,EAAkB,GACpCjU,GAEFsU,EACE9C,EAAazhB,KAAK+jB,EAAkB,GACpCtC,EAAazhB,KAAKgkB,EAAkB,GACpCvC,EAAazhB,KAAKmkB,EAAkB,GACpClU,GAEFsU,EACE9C,EAAazhB,KAAKokB,EAAkB,GACpC3C,EAAazhB,KAAKqkB,EAAkB,GACpC5C,EAAazhB,KAAKskB,EAAkB,GACpCrU,GAEFC,GAKN,OAAOwR,E,wzCC7OT,SA3DM+B,SAAAA,I,8oBAKJ,aAAc,MAGZ,G,4FAHY,eACZ,gBADY,MAJU,MAIV,iBAFkC,MAKzCpiB,IAIH,EAAKujB,MAAQ,IAAItjB,OAAOmiB,MAGxB,EAAKmB,MAAM/iB,MAAMC,SAAW,WAC5B,EAAK8iB,MAAM/iB,MAAME,KAAO,WACxB,EAAK6iB,MAAM/iB,MAAMzC,IAAM,eATP,CAChB,IAAMsC,EAAS/F,EAAQ,KACvB,EAAKipB,MAAQ,IAAIljB,EAAO+hB,MALd,S,iCAgBd,SAAKoB,EAAajhB,GAA4B,WACtCkhB,EAAO,WACX,EAAK9iB,SAAUX,IAAiC,EAAKujB,MAAMG,YAA9B,EAAKH,MAAM9kB,OACxC,EAAKmC,UACFZ,IAAkC,EAAKujB,MAAMI,aAA/B,EAAKJ,MAAM/kB,QAI5B,EAAK6B,OAAS,IAAIH,EAAc,EAAKwe,WAAY,EAAKC,aACtD,EAAKte,OACFa,aACA0iB,UAAU,EAAKL,MAAO,EAAG,EAAG,EAAK7E,WAAY,EAAKC,aAEjD3e,KACFM,SAASO,KAAKQ,YAAY,EAAKkiB,OAGT,mBAAbhhB,GACTA,EAAS9G,KAAK,IAMlB,GAFA0E,KAAKqjB,IAAMA,EAEPxjB,IACFM,SAASO,KAAKC,YAAYX,KAAKojB,OAC/BpjB,KAAKojB,MAAMM,OAAS,WAClBJ,KAEFtjB,KAAKojB,MAAMlB,IAAMmB,MACZ,CACL,IAAM3B,EAAKvnB,EAAQ,IACnB6F,KAAKojB,MAAMlB,IAAMR,EAAGiC,aAAaN,GACjCC,U,oBAtDArB,CCEA2B,W,uIAC6B,M,iBAEC,M,gBAER,G,iBAEC,G,6CAE3B,WACE,OAAO5jB,KAAK1B,Q,uBAGd,WACE,OAAO0B,KAAK3B,S,sBAGd,SAAS3C,GAEP,OADAsE,KAAK1B,MAAQ5C,EACNsE,O,uBAGT,SAAUtE,GAER,OADAsE,KAAK3B,OAAS3C,EACPsE,O,0BAGT,WAME,OALKA,KAAKzB,YACRyB,KAAKzB,UAAYyB,KAAKE,OACnBa,aACA0d,aAAa,EAAG,EAAGze,KAAKue,WAAYve,KAAKwe,cAEvCxe,KAAKzB,Y,0BAGd,SAAa7C,GAEX,OADAsE,KAAKzB,UAAY7C,EACVsE,O,oBAGT,SACEif,EACAC,GAEmB,IADnBC,EACmB,uDADJ,oBAETc,EAAejgB,KAAKye,eACxBve,EAAS,IAAIH,EAAckf,EAAUC,GACnCgB,EAAehgB,EAAOa,aAAaqf,gBAAgBnB,EAAUC,GAEjE,OAAQC,GACN,IAAK,oBACHe,EAAeiC,GACblC,EACAC,EACAjB,EACAC,GAEF,MAEF,IAAK,yBACHgB,EAAekC,GACbnC,EACAC,EACAjB,EACAC,GAEF,MAEF,IAAK,4BACHgB,EAAeuC,GACbxC,EACAC,EACAjB,EACAC,GAEF,MAEF,QAEE,OADAhf,EAAO4gB,UACA9gB,KAKX,OAFAE,EAAO4gB,UAEA9gB,KAAKQ,SAASye,GAClBxe,UAAUye,GACVmB,aAAaH,Q,oBAvFd0D,K","sources":["webpack://imagizer/external commonjs2 \"canvas\"","webpack://imagizer/external commonjs2 \"fs\"","webpack://imagizer/webpack/bootstrap","webpack://imagizer/webpack/runtime/define property getters","webpack://imagizer/webpack/runtime/hasOwnProperty shorthand","webpack://imagizer/webpack/runtime/make namespace object","webpack://imagizer/./src/helpers/common.tsx","webpack://imagizer/./src/classes/CanvasWrapper.tsx","webpack://imagizer/./src/classes/effects/Base.tsx","webpack://imagizer/./src/classes/effects/BasePoint.tsx","webpack://imagizer/./src/classes/effects/point/GrayScale.tsx","webpack://imagizer/./src/classes/effects/point/Sepia.tsx","webpack://imagizer/./src/classes/effects/point/Contrast.tsx","webpack://imagizer/./src/classes/effects/point/Brightness.tsx","webpack://imagizer/./src/classes/effects/point/Diffusion.tsx","webpack://imagizer/./src/classes/effects/point/Dither.tsx","webpack://imagizer/./src/classes/effects/point/Exposure.tsx","webpack://imagizer/./src/classes/effects/point/Gain.tsx","webpack://imagizer/./src/classes/effects/point/Gamma.tsx","webpack://imagizer/./src/helpers/color.tsx","webpack://imagizer/./src/classes/effects/point/HSBAdjust.tsx","webpack://imagizer/./src/classes/effects/point/InvertAlpha.tsx","webpack://imagizer/./src/classes/effects/point/Invert.tsx","webpack://imagizer/./src/classes/effects/point/Levels.tsx","webpack://imagizer/./src/classes/effects/point/Rescale.tsx","webpack://imagizer/./src/classes/effects/point/Solarize.tsx","webpack://imagizer/./src/classes/effects/point/Threshold.tsx","webpack://imagizer/./src/classes/effects/point/Tritone.tsx","webpack://imagizer/./src/classes/effects/point/Dissolve.tsx","webpack://imagizer/./src/classes/effects/point/Edge.tsx","webpack://imagizer/./src/classes/effects/point/ChannelMix.tsx","webpack://imagizer/./src/classes/effects/point/AutoContrast.tsx","webpack://imagizer/./src/classes/effects/BaseTransform.tsx","webpack://imagizer/./src/classes/effects/transform/Diffuse.tsx","webpack://imagizer/./src/classes/effects/transform/Kaleidoscope.tsx","webpack://imagizer/./src/helpers/noise.tsx","webpack://imagizer/./src/classes/effects/transform/Marble.tsx","webpack://imagizer/./src/classes/effects/transform/Pinch.tsx","webpack://imagizer/./src/classes/effects/transform/Ripple.tsx","webpack://imagizer/./src/classes/effects/transform/Shear.tsx","webpack://imagizer/./src/classes/effects/transform/Sphere.tsx","webpack://imagizer/./src/classes/effects/transform/Swim.tsx","webpack://imagizer/./src/classes/effects/transform/Twirl.tsx","webpack://imagizer/./src/classes/effects/transform/Water.tsx","webpack://imagizer/./src/classes/effects/transform/Circle.tsx","webpack://imagizer/./src/classes/effects/transform/Rotate.tsx","webpack://imagizer/./src/classes/effects/transform/Offset.tsx","webpack://imagizer/./src/classes/effects/transform/Polar.tsx","webpack://imagizer/./src/classes/effects/transform/Perspective.tsx","webpack://imagizer/./src/classes/effects/BaseCustom.tsx","webpack://imagizer/./src/classes/effects/custom/AutoWhiteBalance.tsx","webpack://imagizer/./src/classes/effects/custom/FillColor.tsx","webpack://imagizer/./src/classes/effects/custom/Flip.tsx","webpack://imagizer/./src/classes/effects/custom/Block.tsx","webpack://imagizer/./src/classes/effects/custom/Border.tsx","webpack://imagizer/./src/classes/effects/custom/Emboss.tsx","webpack://imagizer/./src/classes/effects/custom/ComponentStretching.tsx","webpack://imagizer/./src/classes/EffectsRepository.tsx","webpack://imagizer/./src/classes/LayerObject.tsx","webpack://imagizer/./src/classes/Layer.tsx","webpack://imagizer/./src/classes/Project.tsx","webpack://imagizer/./src/helpers/resize.tsx","webpack://imagizer/./src/classes/Image.tsx","webpack://imagizer/./src/classes/BaseOnLayerObject.tsx"],"sourcesContent":["module.exports = require(\"canvas\");","module.exports = require(\"fs\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const blendingModes = {\n  lighten: function (bottomPixel: number, topPixel: number): number {\n    return topPixel > bottomPixel ? topPixel : bottomPixel;\n  },\n  darken: function (bottomPixel: number, topPixel: number): number {\n    return topPixel > bottomPixel ? bottomPixel : topPixel;\n  },\n  multiply: function (bottomPixel: number, topPixel: number): number {\n    return (bottomPixel * topPixel) / 255;\n  },\n  average: function (bottomPixel: number, topPixel: number): number {\n    return bottomPixel + topPixel / 2;\n  },\n  add: function (bottomPixel: number, topPixel: number): number {\n    return Math.min(255, bottomPixel + topPixel);\n  },\n  subtract: function (bottomPixel: number, topPixel: number): number {\n    return bottomPixel + topPixel < 255 ? 0 : bottomPixel + topPixel - 255;\n  },\n  difference: function (bottomPixel: number, topPixel: number): number {\n    return Math.abs(bottomPixel - topPixel);\n  },\n  negation: function (bottomPixel: number, topPixel: number): number {\n    return 255 - Math.abs(255 - bottomPixel - topPixel);\n  },\n  screen: function (bottomPixel: number, topPixel: number): number {\n    return 255 - (((255 - bottomPixel) * (255 - topPixel)) >> 8);\n  },\n  exclusion: function (bottomPixel: number, topPixel: number): number {\n    return bottomPixel + topPixel - (2 * bottomPixel * topPixel) / 255;\n  },\n  overlay: function (bottomPixel: number, topPixel: number): number {\n    return topPixel < 128\n      ? (2 * bottomPixel * topPixel) / 255\n      : 255 - (2 * (255 - bottomPixel) * (255 - topPixel)) / 255;\n  },\n  softLight: function (bottomPixel: number, topPixel: number): number {\n    return topPixel < 128\n      ? 2 * ((bottomPixel >> 1) + 64) * (topPixel / 255)\n      : 255 - (2 * (255 - ((bottomPixel >> 1) + 64)) * (255 - topPixel)) / 255;\n  },\n  hardLight: function (bottomPixel: number, topPixel: number): number {\n    return blendingModes.softLight(topPixel, bottomPixel);\n  },\n  colorDodge: function (bottomPixel: number, topPixel: number): number {\n    return topPixel === 255\n      ? topPixel\n      : Math.min(255, (bottomPixel << 8) / (255 - topPixel));\n  },\n  colorBurn: function (bottomPixel: number, topPixel: number): number {\n    return topPixel === 0\n      ? topPixel\n      : Math.max(0, 255 - ((255 - bottomPixel) << 8) / topPixel);\n  },\n  linearDodge: function (bottomPixel: number, topPixel: number): number {\n    return blendingModes.add(bottomPixel, topPixel);\n  },\n  linearBurn: function (bottomPixel: number, topPixel: number): number {\n    return blendingModes.subtract(bottomPixel, topPixel);\n  },\n  linearLight: function (bottomPixel: number, topPixel: number): number {\n    return topPixel < 128\n      ? blendingModes.linearBurn(bottomPixel, 2 * topPixel)\n      : blendingModes.linearDodge(bottomPixel, 2 * (topPixel - 128));\n  },\n  vividLight: function (bottomPixel: number, topPixel: number): number {\n    return topPixel < 128\n      ? blendingModes.colorBurn(bottomPixel, 2 * topPixel)\n      : blendingModes.colorDodge(bottomPixel, 2 * (topPixel - 128));\n  },\n  pinLight: function (bottomPixel: number, topPixel: number): number {\n    return topPixel < 128\n      ? blendingModes.darken(bottomPixel, 2 * topPixel)\n      : blendingModes.lighten(bottomPixel, 2 * (topPixel - 128));\n  },\n  hardMix: function (bottomPixel: number, topPixel: number): number {\n    return blendingModes.vividLight(bottomPixel, topPixel) < 128 ? 0 : 255;\n  },\n  reflect: function (bottomPixel: number, topPixel: number): number {\n    return topPixel === 255\n      ? topPixel\n      : Math.min(255, (bottomPixel * bottomPixel) / (255 - topPixel));\n  },\n  glow: function (bottomPixel: number, topPixel: number): number {\n    return blendingModes.reflect(topPixel, bottomPixel);\n  },\n  phoenix: function (bottomPixel: number, topPixel: number): number {\n    return (\n      Math.min(bottomPixel, topPixel) - Math.max(bottomPixel, topPixel) + 255\n    );\n  },\n};\n\nexport function mergeImageData(bottom, top, pixelCallback) {\n  let x, y, xx, yy, firstOldPixelIndex, firstNewPixelIndex, pixelResult;\n\n  for (\n    y = top.y, yy = 0;\n    y < bottom.height && yy < top.height;\n    y += 1, yy += 1\n  ) {\n    for (\n      x = top.x, xx = 0;\n      x < bottom.width && xx < top.width;\n      x += 1, xx += 1\n    ) {\n      if (xx < top.width && yy < top.height) {\n        // overwrite only rect-size of current layer\n        firstOldPixelIndex = y * bottom.width * 4 + x * 4;\n        firstNewPixelIndex = yy * top.width * 4 + xx * 4;\n\n        pixelResult = pixelCallback(\n          {\n            r: bottom.imageData.data[firstOldPixelIndex + 0],\n            g: bottom.imageData.data[firstOldPixelIndex + 1],\n            b: bottom.imageData.data[firstOldPixelIndex + 2],\n            a: bottom.imageData.data[firstOldPixelIndex + 3],\n          },\n          {\n            r: top.imageData.data[firstNewPixelIndex + 0],\n            g: top.imageData.data[firstNewPixelIndex + 1],\n            b: top.imageData.data[firstNewPixelIndex + 2],\n            a: top.imageData.data[firstNewPixelIndex + 3],\n          },\n          x,\n          y,\n          {\n            blendingMode: top.blendingMode,\n          }\n        );\n\n        if (pixelResult !== false) {\n          // if skip change\n          bottom.imageData.data[firstOldPixelIndex + 0] = pixelResult.r;\n          bottom.imageData.data[firstOldPixelIndex + 1] = pixelResult.g;\n          bottom.imageData.data[firstOldPixelIndex + 2] = pixelResult.b;\n          bottom.imageData.data[firstOldPixelIndex + 3] = pixelResult.a;\n        }\n      }\n    }\n  }\n  return bottom.imageData;\n}\n\nexport function mergePixelCallback(\n  bottomPixel: { r: number; g: number; b: number; a: number },\n  topPixel: { r: number; g: number; b: number; a: number },\n  x: number,\n  y: number,\n  parameters: { blendingMode: string }\n): { r: number; g: number; b: number; a: number } | boolean {\n  if (topPixel.a === 0) {\n    return false; // skip change - opacity is full\n  }\n\n  // alpha compositing\n  let mergedR,\n    mergedG,\n    mergedB,\n    mergedA = topPixel.a / 255,\n    rootA = (bottomPixel.a / 255) * (1 - mergedA),\n    outA = mergedA + (bottomPixel.a * (1 - mergedA)) / 255;\n\n  switch (parameters.blendingMode) {\n    case \"lighten\":\n    case \"darken\":\n    case \"multiply\":\n    case \"average\":\n    case \"add\":\n    case \"subtract\":\n    case \"difference\":\n    case \"negation\":\n    case \"screen\":\n    case \"exclusion\":\n    case \"overlay\":\n    case \"softLight\":\n    case \"hardLight\":\n    case \"colorDodge\":\n    case \"colorBurn\":\n    case \"linearDodge\":\n    case \"linearBurn\":\n    case \"linearLight\":\n    case \"vividLight\":\n    case \"pinLight\":\n    case \"hardMix\":\n    case \"reflect\":\n    case \"glow\":\n    case \"phoenix\":\n      topPixel.r = blendingModes[parameters.blendingMode](\n        bottomPixel.r,\n        topPixel.r\n      );\n      topPixel.g = blendingModes[parameters.blendingMode](\n        bottomPixel.g,\n        topPixel.g\n      );\n      topPixel.b = blendingModes[parameters.blendingMode](\n        bottomPixel.b,\n        topPixel.b\n      );\n      break;\n\n    default:\n      break;\n  }\n\n  let rootR = bottomPixel.r;\n  let rootG = bottomPixel.g;\n  let rootB = bottomPixel.b;\n\n  mergedR = topPixel.r * mergedA + rootR * rootA;\n  mergedG = topPixel.g * mergedA + rootG * rootA;\n  mergedB = topPixel.b * mergedA + rootB * rootA;\n\n  mergedR = outA === 0 ? 0 : mergedR / outA;\n  mergedG = outA === 0 ? 0 : mergedG / outA;\n  mergedB = outA === 0 ? 0 : mergedB / outA;\n\n  return {\n    r: Math.min(Math.max(0, mergedR), 255) | 0,\n    g: Math.min(Math.max(0, mergedG), 255) | 0,\n    b: Math.min(Math.max(0, mergedB), 255) | 0,\n    a: (255 * outA) | 0,\n  };\n}\n\nexport function cropImageData(\n  oldImageData: ImageData,\n  newImageData: ImageData,\n  startX: number,\n  startY: number,\n  width: number,\n  height: number\n): ImageData {\n  let oldWidth = oldImageData.width,\n    newWidth = newImageData.width,\n    x,\n    y,\n    xx,\n    yy,\n    firstOldPixelIndex,\n    firstNewPixelIndex;\n\n  for (\n    y = startY, yy = 0;\n    y < startY + height && yy < height;\n    y += 1, yy += 1\n  ) {\n    for (\n      x = startX, xx = 0;\n      x < startX + width && xx < width;\n      x += 1, xx += 1\n    ) {\n      firstOldPixelIndex = y * oldWidth * 4 + x * 4;\n      firstNewPixelIndex = yy * newWidth * 4 + xx * 4;\n\n      newImageData.data[firstNewPixelIndex] =\n        oldImageData.data[firstOldPixelIndex];\n      newImageData.data[firstNewPixelIndex + 1] =\n        oldImageData.data[firstOldPixelIndex + 1];\n      newImageData.data[firstNewPixelIndex + 2] =\n        oldImageData.data[firstOldPixelIndex + 2];\n      newImageData.data[firstNewPixelIndex + 3] =\n        oldImageData.data[firstOldPixelIndex + 3];\n    }\n  }\n\n  return newImageData;\n}\n\nexport function mod(a: number, b: number): number {\n  let n = Math.floor(a / b);\n  a -= n * b;\n  if (a < 0) {\n    return a + b;\n  }\n  return a;\n}\n\nexport function triangle(x: number) {\n  let r = mod(x, 1);\n  return 2 * (r < 0.5 ? r : 1 - r);\n}\n\nexport function smoothStep(a: number, b: number, x: number): number {\n  if (x < a) {\n    return 0;\n  }\n  if (x >= b) {\n    return 1;\n  }\n  x = (x - a) / (b - a);\n  return x * x * (3 - 2 * x);\n}\n\nexport function brightness(pixel: { r: number; g: number; b: number }) {\n  return (pixel.r + pixel.g + pixel.b) / 3;\n}\n\nexport function isBrowser(): boolean {\n  return typeof window !== \"undefined\";\n}\n","import { isBrowser } from \"../helpers/common\";\nimport { NodeCanvasRenderingContext2D, Canvas } from \"canvas/types\";\n\nclass CanvasWrapper {\n  protected canvas: Canvas | HTMLCanvasElement = null;\n\n  protected context: NodeCanvasRenderingContext2D | CanvasRenderingContext2D =\n    null;\n\n  protected width: number = 0;\n\n  protected height: number = 0;\n\n  constructor(width: number, height: number) {\n    this.initialize(width, height);\n  }\n\n  initialize(width: number = 0, height: number = 0): void {\n    if (!isBrowser()) {\n      const { createCanvas } = require(\"canvas\");\n      this.canvas = createCanvas(width, height);\n    } else {\n      this.canvas = document.createElement(\"canvas\");\n\n      // hide from viewport\n      this.canvas.style.position = \"absolute\";\n      this.canvas.style.left = \"-99999px\";\n      this.canvas.style.top = \"-99999px\";\n\n      this.setWidth(width);\n      this.setHeight(height);\n\n      document.body.appendChild(this.canvas);\n    }\n  }\n\n  setWidth(value: number): CanvasWrapper {\n    this.canvas.setAttribute(\"width\", \"\" + value);\n    this.width = value;\n    return this;\n  }\n\n  setHeight(value: number): CanvasWrapper {\n    this.canvas.setAttribute(\"height\", \"\" + value);\n    this.height = value;\n    return this;\n  }\n\n  getContext(): NodeCanvasRenderingContext2D | CanvasRenderingContext2D {\n    if (!this.context) {\n      this.context = this.canvas.getContext(\"2d\");\n    }\n    return this.context;\n  }\n\n  getCanvas(): Canvas | HTMLCanvasElement {\n    return this.canvas;\n  }\n\n  toDataURL(type: string = \"image/png\"): string {\n    return this.canvas.toDataURL(type);\n  }\n\n  destroy(): void {\n    if (isBrowser()) {\n      document.body.removeChild(this.canvas);\n    }\n    this.canvas = null;\n    this.context = null;\n  }\n}\n\nexport default CanvasWrapper;\n","class BaseEffect {\n  protected opts: object = {};\n\n  constructor(opts: object = {}) {\n    this.opts = opts;\n  }\n\n  getDefaultParameters(): object {\n    return {};\n  }\n\n  before(\n    parameters: object,\n    width: number,\n    height: number,\n    imageData: ImageData\n  ): object {\n    return {};\n  }\n\n  static getName(): string {\n    throw \"Extend it.\";\n  }\n\n  run(imageData: ImageData, parameters: object): ImageData {\n    return null;\n  }\n}\n\nexport default BaseEffect;\n","import BaseEffect from \"./Base\";\n\nclass BasePointEffect extends BaseEffect {\n  callback(\n    pixel: {\n      r: number;\n      g: number;\n      b: number;\n      a: number;\n    },\n    x: number,\n    y: number,\n    parameters: object,\n    width: number,\n    height: number\n  ) {\n    throw \"Extend it.\";\n  }\n\n  run(imageData: ImageData, parameters: object): ImageData {\n    parameters = parameters = {\n      ...this.getDefaultParameters(),\n      ...parameters,\n    };\n\n    let x, y, firstPixelIndex, result;\n    const imageDataCopy = new Uint8ClampedArray(imageData.data), // copy image data\n      /**\n       * Get ImageData array index from x and y position\n       * @param x\n       * @param y\n       * @returns {number}\n       */\n      getIndex = function getIndex(x: number, y: number): number {\n        return y * imageData.width * 4 + x * 4;\n      },\n      normalizePixelValue = function (value): number {\n        return Math.min(Math.max(value, 0), 255) | 0;\n      },\n      sandbox = {\n        // object invoked as this in effect callback\n        /**\n         * Get changed pixel\n         * @param {int} x\n         * @param {int} y\n         * @returns {{r: *, g: *, b: *, a: *}}\n         */\n        getPixel: function (\n          x: number,\n          y: number\n        ): {\n          r: number;\n          g: number;\n          b: number;\n          a: number;\n        } {\n          let index = getIndex(x, y);\n          return {\n            r: imageDataCopy[index + 0],\n            g: imageDataCopy[index + 1],\n            b: imageDataCopy[index + 2],\n            a: imageDataCopy[index + 3],\n          };\n        },\n        /**\n         * Get original pixel.\n         * @param {int} x\n         * @param {int} y\n         * @returns {{r: *, g: *, b: *, a: *}}\n         */\n        getOriginalPixel: function (\n          x: number,\n          y: number\n        ): {\n          r: number;\n          g: number;\n          b: number;\n          a: number;\n        } {\n          let index = getIndex(x, y);\n          return {\n            r: imageData.data[index + 0],\n            g: imageData.data[index + 1],\n            b: imageData.data[index + 2],\n            a: imageData.data[index + 3],\n          };\n        },\n        /**\n         * Set new pixel\n         * @param {int} x\n         * @param {int} y\n         * @param {object} rgba\n         */\n        setPixel: function (\n          x: number,\n          y: number,\n          rgba: {\n            r: number;\n            g: number;\n            b: number;\n            a: number;\n          }\n        ): void {\n          let index = getIndex(x, y);\n          imageDataCopy[index + 0] = normalizePixelValue(rgba.r);\n          imageDataCopy[index + 1] = normalizePixelValue(rgba.g);\n          imageDataCopy[index + 2] = normalizePixelValue(rgba.b);\n          imageDataCopy[index + 3] = normalizePixelValue(rgba.a);\n        },\n        /**\n         * Data created by effect init function\n         */\n        data: null,\n        /**\n         * ImageData width\n         */\n        width: imageData.width,\n        /**\n         * ImageData height\n         */\n        height: imageData.height,\n      };\n\n    sandbox.data = this.before.call(\n      sandbox,\n      parameters,\n      imageData.width,\n      imageData.height,\n      imageData\n    );\n\n    for (y = 0; y < imageData.height; y += 1) {\n      for (x = 0; x < imageData.width; x += 1) {\n        firstPixelIndex = getIndex(x, y);\n\n        result = this.callback.call(\n          sandbox,\n          {\n            r: imageDataCopy[firstPixelIndex + 0],\n            g: imageDataCopy[firstPixelIndex + 1],\n            b: imageDataCopy[firstPixelIndex + 2],\n            a: imageDataCopy[firstPixelIndex + 3],\n          },\n          x,\n          y,\n          parameters,\n          imageData.width,\n          imageData.height\n        );\n\n        if (typeof result === \"object\") {\n          imageDataCopy[firstPixelIndex + 0] = normalizePixelValue(result.r);\n          imageDataCopy[firstPixelIndex + 1] = normalizePixelValue(result.g);\n          imageDataCopy[firstPixelIndex + 2] = normalizePixelValue(result.b);\n          imageDataCopy[firstPixelIndex + 3] = normalizePixelValue(result.a);\n        }\n      }\n    }\n\n    imageData.data.set(imageDataCopy);\n    return imageData;\n  }\n}\n\nexport default BasePointEffect;\n","import BasePointEffect from \"../BasePoint\";\n\nclass GrayScaleEffect extends BasePointEffect {\n  static getName(): string {\n    return \"gray-scale\";\n  }\n\n  callback(\n    pixel: {\n      r: number;\n      g: number;\n      b: number;\n      a: number;\n    },\n    x: number,\n    y: number,\n    parameters: object,\n    width: number,\n    height: number\n  ): {\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n  } {\n    const newRGB = 0.299 * pixel.r + 0.587 * pixel.g + 0.114 * pixel.b;\n    return {\n      r: newRGB,\n      g: newRGB,\n      b: newRGB,\n      a: pixel.a,\n    };\n  }\n}\n\nexport default GrayScaleEffect;\n","import BasePointEffect from \"../BasePoint\";\n\nexport interface SepiaParameters {\n  sepiaValue: number;\n}\n\nclass SepiaEffect extends BasePointEffect {\n  static getName(): string {\n    return \"sepia\";\n  }\n\n  getDefaultParameters(): SepiaParameters {\n    return {\n      sepiaValue: 1,\n    };\n  }\n\n  callback(\n    pixel: {\n      r: number;\n      g: number;\n      b: number;\n      a: number;\n    },\n    x: number,\n    y: number,\n    parameters: SepiaParameters,\n    width: number,\n    height: number\n  ): {\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n  } {\n    const tmp = 0.299 * pixel.r + 0.587 * pixel.g + 0.114 * pixel.b;\n\n    pixel.r = tmp + 2 * parameters.sepiaValue;\n    pixel.g = tmp + parameters.sepiaValue;\n    pixel.b = tmp;\n\n    return pixel;\n  }\n}\n\nexport default SepiaEffect;\n","import BasePointEffect from \"../BasePoint\";\n\ninterface BeforeData {\n  factor: number;\n}\n\nexport interface ContrastParameters {\n  contrast: number;\n}\n\nclass ContrastEffect extends BasePointEffect {\n  static getName(): string {\n    return \"contrast\";\n  }\n\n  data: BeforeData = {\n    factor: 1,\n  };\n\n  getDefaultParameters(): ContrastParameters {\n    return {\n      contrast: 0.5,\n    };\n  }\n\n  before(parameters: ContrastParameters): BeforeData {\n    return {\n      factor:\n        (259 * (parameters.contrast * 255 + 255)) /\n        (255 * (259 - parameters.contrast * 255)),\n    };\n  }\n\n  callback(\n    pixel: {\n      r: number;\n      g: number;\n      b: number;\n      a: number;\n    },\n    x: number,\n    y: number,\n    parameters: ContrastParameters,\n    width: number,\n    height: number\n  ): {\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n  } {\n    pixel.r = this.data.factor * (pixel.r - 128) + 128;\n    pixel.g = this.data.factor * (pixel.g - 128) + 128;\n    pixel.b = this.data.factor * (pixel.b - 128) + 128;\n\n    return pixel;\n  }\n}\n\nexport default ContrastEffect;\n","import BasePointEffect from \"../BasePoint\";\n\ninterface BeforeData {\n  brightness: number;\n}\n\nexport interface BrightnessParameters {\n  brightness: number;\n}\n\nclass BrightnessEffect extends BasePointEffect {\n  static getName(): string {\n    return \"brightness\";\n  }\n\n  data: BeforeData = {\n    brightness: 0,\n  };\n\n  getDefaultParameters(): BrightnessParameters {\n    return {\n      brightness: 0.5,\n    };\n  }\n\n  before(parameters: BrightnessParameters): BeforeData {\n    return {\n      brightness: 255 * parameters.brightness,\n    };\n  }\n\n  callback(\n    pixel: {\n      r: number;\n      g: number;\n      b: number;\n      a: number;\n    },\n    x: number,\n    y: number,\n    parameters: object,\n    width: number,\n    height: number\n  ): {\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n  } {\n    pixel.r = pixel.r + this.data.brightness;\n    pixel.g = pixel.g + this.data.brightness;\n    pixel.b = pixel.b + this.data.brightness;\n\n    return pixel;\n  }\n}\n\nexport default BrightnessEffect;\n","import BasePointEffect from \"../BasePoint\";\n\nexport interface DiffusionParameters {\n  matrix: Array<number>;\n  levels: number;\n  colorDither: boolean;\n  granulate: boolean;\n}\n\ninterface BeforeData {\n  map: object;\n  div: object;\n  sum: number;\n}\n\nclass DiffusionEffect extends BasePointEffect {\n  static getName(): string {\n    return \"diffusion\";\n  }\n\n  data: BeforeData = {\n    map: {},\n    div: {},\n    sum: 0,\n  };\n\n  getDefaultParameters(): DiffusionParameters {\n    return {\n      matrix: [0, 0, 0, 0, 0, 7, 3, 5, 1],\n      levels: 6,\n      colorDither: true,\n      granulate: true,\n    };\n  }\n\n  before(\n    parameters: DiffusionParameters,\n    width: number,\n    height: number,\n    imageData: ImageData\n  ): BeforeData {\n    let sum = 0;\n    const map = [],\n      div = [];\n\n    for (let i = 0; i < parameters.matrix.length; i += 1) {\n      sum += parameters.matrix[i];\n    }\n\n    for (let i = 0; i < parameters.levels; i += 1) {\n      map[i] = ((255 * i) / (parameters.levels - 1)) | 0;\n    }\n\n    for (let i = 0; i < 256; i += 1) {\n      div[i] = ((parameters.levels * i) / 256) | 0;\n    }\n\n    return {\n      sum: sum,\n      map: map,\n      div: div,\n    };\n  }\n\n  callback(\n    pixel: {\n      r: number;\n      g: number;\n      b: number;\n      a: number;\n    },\n    x: number,\n    y: number,\n    parameters: DiffusionParameters,\n    width: number,\n    height: number\n  ): {\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n  } {\n    let red1 = pixel.r,\n      green1 = pixel.g,\n      blue1 = pixel.b,\n      red2,\n      green2,\n      blue2,\n      data = this.data,\n      tmpPixel,\n      tmpRed,\n      tmpGreen,\n      tmpBlue,\n      iy,\n      jx,\n      w,\n      grayScale;\n\n    if (!parameters.colorDither) {\n      grayScale = (red1 + green1 + blue1) / 3;\n      red1 = grayScale;\n      green1 = grayScale;\n      blue1 = grayScale;\n    }\n\n    red2 = data.map[data.div[red1]];\n    green2 = data.map[data.div[green1]];\n    blue2 = data.map[data.div[blue1]];\n\n    tmpRed = red1 - red2;\n    tmpGreen = green1 - green2;\n    tmpBlue = blue1 - blue2;\n\n    if (parameters.granulate) {\n      for (let i = -1; i <= 1; i += 1) {\n        iy = i + y;\n        if (iy < 0 || iy >= height) {\n          continue;\n        }\n        for (let j = -1; j <= 1; j += 1) {\n          jx = j + x;\n          if (jx < 0 || jx >= width) {\n            continue;\n          }\n          w = parameters.matrix[(i + 1) * 3 + j + 1];\n          if (w !== 0) {\n            tmpPixel = this.getPixel(jx, iy);\n            tmpPixel.r += (tmpRed * w) / data.sum;\n            tmpPixel.g += (tmpGreen * w) / data.sum;\n            tmpPixel.b += (tmpBlue * w) / data.sum;\n            this.setPixel(jx, iy, tmpPixel);\n          }\n        }\n      }\n    }\n\n    return {\n      r: red2,\n      g: green2,\n      b: blue2,\n      a: pixel.a,\n    };\n  }\n}\n\nexport default DiffusionEffect;\n","import BasePointEffect from \"../BasePoint\";\n\ninterface BeforeData {\n  cols: number;\n  rows: number;\n  map: object;\n  mod: object;\n  div: object;\n}\n\nexport interface DitherParameters {\n  matrices: {\n    ditherMagic4x4Matrix: Array<number>;\n    ditherOrdered4x4Matrix: Array<number>;\n    ditherLines4x4Matrix: Array<number>;\n    dither90Halftone6x6Matrix: Array<number>;\n    ditherOrdered6x6Matrix: Array<number>;\n    ditherOrdered8x8Matrix: Array<number>;\n    ditherCluster3Matrix: Array<number>;\n    ditherCluster4Matrix: Array<number>;\n    ditherCluster8Matrix: Array<number>;\n  };\n  levels: number;\n  matrix: string | Array<number>;\n  colorDither: boolean;\n}\n\nclass DitherEffect extends BasePointEffect {\n  static getName(): string {\n    return \"dither\";\n  }\n\n  data: BeforeData = {\n    cols: 0,\n    rows: 0,\n    map: {},\n    mod: {},\n    div: {},\n  };\n\n  getDefaultParameters(): DitherParameters {\n    return {\n      matrices: {\n        ditherMagic4x4Matrix: [\n          0, 14, 3, 13, 11, 5, 8, 6, 12, 2, 15, 1, 7, 9, 4, 10,\n        ],\n        ditherOrdered4x4Matrix: [\n          0, 8, 2, 10, 12, 4, 14, 6, 3, 11, 1, 9, 15, 7, 13, 5,\n        ],\n        ditherLines4x4Matrix: [\n          0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n        ],\n        dither90Halftone6x6Matrix: [\n          29, 18, 12, 19, 30, 34, 17, 7, 4, 8, 20, 28, 11, 3, 0, 1, 9, 27, 16,\n          6, 2, 5, 13, 26, 25, 15, 10, 14, 21, 31, 33, 25, 24, 23, 33, 36,\n        ],\n        ditherOrdered6x6Matrix: [\n          1, 59, 15, 55, 2, 56, 12, 52, 33, 17, 47, 31, 34, 18, 44, 28, 9, 49,\n          5, 63, 10, 50, 6, 60, 41, 25, 37, 21, 42, 26, 38, 22, 3, 57, 13, 53,\n          0, 58, 14, 54, 35, 19, 45, 29, 32, 16, 46, 30, 11, 51, 7, 61, 8, 48,\n          4, 62, 43, 27, 39, 23, 40, 24, 36, 20,\n        ],\n        ditherOrdered8x8Matrix: [\n          1, 235, 59, 219, 15, 231, 55, 215, 2, 232, 56, 216, 12, 228, 52, 212,\n          129, 65, 187, 123, 143, 79, 183, 119, 130, 66, 184, 120, 140, 76, 180,\n          116, 33, 193, 17, 251, 47, 207, 31, 247, 34, 194, 18, 248, 44, 204,\n          28, 244, 161, 97, 145, 81, 175, 111, 159, 95, 162, 98, 146, 82, 172,\n          108, 156, 92, 9, 225, 49, 209, 5, 239, 63, 223, 10, 226, 50, 210, 6,\n          236, 60, 220, 137, 73, 177, 113, 133, 69, 191, 127, 138, 74, 178, 114,\n          134, 70, 188, 124, 41, 201, 25, 241, 37, 197, 21, 255, 42, 202, 26,\n          242, 38, 198, 22, 252, 169, 105, 153, 89, 165, 101, 149, 85, 170, 106,\n          154, 90, 166, 102, 150, 86, 3, 233, 57, 217, 13, 229, 53, 213, 0, 234,\n          58, 218, 14, 230, 54, 214, 131, 67, 185, 121, 141, 77, 181, 117, 128,\n          64, 186, 122, 142, 78, 182, 118, 35, 195, 19, 249, 45, 205, 29, 245,\n          32, 192, 16, 250, 46, 206, 30, 246, 163, 99, 147, 83, 173, 109, 157,\n          93, 160, 96, 144, 80, 174, 110, 158, 94, 11, 227, 51, 211, 7, 237, 61,\n          221, 8, 224, 48, 208, 4, 238, 62, 222, 139, 75, 179, 115, 135, 71,\n          189, 125, 136, 72, 176, 112, 132, 68, 190, 126, 43, 203, 27, 243, 39,\n          199, 23, 253, 40, 200, 24, 240, 36, 196, 20, 254, 171, 107, 155, 91,\n          167, 103, 151, 87, 168, 104, 152, 88, 164, 100, 148, 84,\n        ],\n        ditherCluster3Matrix: [\n          9, 11, 10, 8, 6, 7, 12, 17, 16, 5, 0, 1, 13, 14, 15, 4, 3, 2, 8, 6, 7,\n          9, 11, 10, 5, 0, 1, 12, 17, 16, 4, 3, 2, 13, 14, 15,\n        ],\n        ditherCluster4Matrix: [\n          18, 20, 19, 16, 13, 11, 12, 15, 27, 28, 29, 22, 4, 3, 2, 9, 26, 31,\n          30, 21, 5, 0, 1, 10, 23, 25, 24, 17, 8, 6, 7, 14, 13, 11, 12, 15, 18,\n          20, 19, 16, 4, 3, 2, 9, 27, 28, 29, 22, 5, 0, 1, 10, 26, 31, 30, 21,\n          8, 6, 7, 14, 23, 25, 24, 17,\n        ],\n        ditherCluster8Matrix: [\n          64, 69, 77, 87, 86, 76, 68, 67, 63, 58, 50, 40, 41, 51, 59, 60, 70,\n          94, 100, 109, 108, 99, 93, 75, 57, 33, 27, 18, 19, 28, 34, 52, 78,\n          101, 114, 116, 115, 112, 98, 83, 49, 26, 13, 11, 12, 15, 29, 44, 88,\n          110, 123, 124, 125, 118, 107, 85, 39, 17, 4, 3, 2, 9, 20, 42, 89, 111,\n          122, 127, 126, 117, 106, 84, 38, 16, 5, 0, 1, 10, 21, 43, 79, 102,\n          119, 121, 120, 113, 97, 82, 48, 25, 8, 6, 7, 14, 30, 45, 71, 95, 103,\n          104, 105, 96, 92, 74, 56, 32, 24, 23, 22, 31, 35, 53, 65, 72, 80, 90,\n          91, 81, 73, 66, 62, 55, 47, 37, 36, 46, 54, 61, 63, 58, 50, 40, 41,\n          51, 59, 60, 64, 69, 77, 87, 86, 76, 68, 67, 57, 33, 27, 18, 19, 28,\n          34, 52, 70, 94, 100, 109, 108, 99, 93, 75, 49, 26, 13, 11, 12, 15, 29,\n          44, 78, 101, 114, 116, 115, 112, 98, 83, 39, 17, 4, 3, 2, 9, 20, 42,\n          88, 110, 123, 124, 125, 118, 107, 85, 38, 16, 5, 0, 1, 10, 21, 43, 89,\n          111, 122, 127, 126, 117, 106, 84, 48, 25, 8, 6, 7, 14, 30, 45, 79,\n          102, 119, 121, 120, 113, 97, 82, 56, 32, 24, 23, 22, 31, 35, 53, 71,\n          95, 103, 104, 105, 96, 92, 74, 62, 55, 47, 37, 36, 46, 54, 61, 65, 72,\n          80, 90, 91, 81, 73, 66,\n        ],\n      },\n      levels: 6,\n      matrix: \"ditherMagic4x4Matrix\",\n      colorDither: true,\n    };\n  }\n\n  before(\n    parameters: DitherParameters,\n    width: number,\n    height: number,\n    imageData: ImageData\n  ): BeforeData {\n    let matrix = parameters.matrix,\n      rows,\n      cols,\n      map = [],\n      div = [],\n      mod = [];\n\n    if (typeof matrix === \"string\") {\n      matrix = parameters.matrices[matrix];\n    }\n\n    rows = Math.sqrt(matrix.length);\n    cols = Math.sqrt(matrix.length);\n\n    for (let i = 0; i < parameters.levels; i += 1) {\n      map[i] = (255 * i) / (parameters.levels - 1);\n    }\n\n    for (let i = 0; i < 256; i += 1) {\n      div[i] = (((parameters.levels - 1) * i) / 256) | 0;\n      mod[i] = ((i * (rows * cols + 1)) / 256) | 0;\n    }\n\n    return {\n      matrix,\n      map,\n      div,\n      mod,\n      cols,\n      rows,\n    };\n  }\n\n  callback(\n    pixel: {\n      r: number;\n      g: number;\n      b: number;\n      a: number;\n    },\n    x: number,\n    y: number,\n    parameters: DitherParameters,\n    width: number,\n    height: number\n  ): {\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n  } {\n    let col = x % this.data.cols,\n      row = y % this.data.rows,\n      v = parameters.matrix[row * this.data.cols + col],\n      red = pixel.r,\n      green = pixel.g,\n      blue = pixel.b,\n      result = { a: pixel.a, r: 0, g: 0, b: 0 },\n      value;\n\n    if (parameters.colorDither) {\n      result.r =\n        this.data.map[\n          this.data.mod[red] > v ? this.data.div[red] + 1 : this.data.div[red]\n        ];\n      result.g =\n        this.data.map[\n          this.data.mod[green] > v\n            ? this.data.div[green] + 1\n            : this.data.div[green]\n        ];\n      result.b =\n        this.data.map[\n          this.data.mod[blue] > v\n            ? this.data.div[blue] + 1\n            : this.data.div[blue]\n        ];\n    } else {\n      value = (red + green + blue) / 3;\n      result.r =\n        result.g =\n        result.b =\n          this.data.map[\n            this.data.mod[value] > v\n              ? this.data.div[value] + 1\n              : this.data.div[value]\n          ];\n    }\n\n    return result;\n  }\n}\n\nexport default DitherEffect;\n","import BasePointEffect from \"../BasePoint\";\n\nexport interface ExposureParameters {\n  exposure: number;\n}\n\nclass ExposureEffect extends BasePointEffect {\n  static getName(): string {\n    return \"exposure\";\n  }\n\n  getDefaultParameters(): ExposureParameters {\n    return {\n      exposure: 1,\n    };\n  }\n\n  callback(\n    pixel: {\n      r: number;\n      g: number;\n      b: number;\n      a: number;\n    },\n    x: number,\n    y: number,\n    parameters: ExposureParameters,\n    width: number,\n    height: number\n  ): {\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n  } {\n    pixel.r = (1 - Math.exp((-pixel.r / 255) * parameters.exposure)) * 255;\n    pixel.g = (1 - Math.exp((-pixel.g / 255) * parameters.exposure)) * 255;\n    pixel.b = (1 - Math.exp((-pixel.b / 255) * parameters.exposure)) * 255;\n\n    return pixel;\n  }\n}\n\nexport default ExposureEffect;\n","import BasePointEffect from \"../BasePoint\";\n\nexport interface GainParameters {\n  gain: number;\n  bias: number;\n}\n\nclass GainEffect extends BasePointEffect {\n  static getName(): string {\n    return \"gain\";\n  }\n\n  getDefaultParameters(): GainParameters {\n    return {\n      gain: 1,\n      bias: 1,\n    };\n  }\n\n  callback(\n    pixel: {\n      r: number;\n      g: number;\n      b: number;\n      a: number;\n    },\n    x: number,\n    y: number,\n    parameters: GainParameters,\n    width: number,\n    height: number\n  ): {\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n  } {\n    let red = (1 / parameters.gain - 2) * (1 - (2 * pixel.r) / 255),\n      green = (1 / parameters.gain - 2) * (1 - (2 * pixel.g) / 255),\n      blue = (1 / parameters.gain - 2) * (1 - (2 * pixel.b) / 255);\n\n    if (pixel.r / 255 < 0.5) {\n      red = pixel.r / 255 / red + 1;\n    } else {\n      red = (red - pixel.r / 255) / (red - 1);\n    }\n\n    if (pixel.g / 255 < 0.5) {\n      green = pixel.g / 255 / green + 1;\n    } else {\n      green = (green - pixel.g / 255) / (green - 1);\n    }\n\n    if (pixel.b / 255 < 0.5) {\n      blue = pixel.b / 255 / blue + 1;\n    } else {\n      blue = (blue - pixel.b / 255) / (blue - 1);\n    }\n\n    red = red / ((1 / parameters.bias - 2) * (1 - red) + 1);\n    green = green / ((1 / parameters.bias - 2) * (1 - green) + 1);\n    blue = blue / ((1 / parameters.bias - 2) * (1 - blue) + 1);\n\n    pixel.r = red * 255;\n    pixel.g = green * 255;\n    pixel.b = blue * 255;\n\n    return pixel;\n  }\n}\n\nexport default GainEffect;\n","import BasePointEffect from \"../BasePoint\";\n\nexport interface GammaParameters {\n  gammaRed: number;\n  gammaGreen: number;\n  gammaBlue: number;\n}\n\ninterface BeforeData {\n  table: {\n    r: object;\n    g: object;\n    b: object;\n  };\n}\n\nclass GammaEffect extends BasePointEffect {\n  static getName(): string {\n    return \"gamma\";\n  }\n\n  data: BeforeData = {\n    table: {\n      r: {},\n      g: {},\n      b: {},\n    },\n  };\n\n  getDefaultParameters(): GammaParameters {\n    return {\n      gammaRed: 1,\n      gammaGreen: 1,\n      gammaBlue: 1,\n    };\n  }\n\n  before(\n    parameters: GammaParameters,\n    width: number,\n    height: number,\n    imageData: ImageData\n  ): BeforeData {\n    const table = {\n      r: [],\n      g: [],\n      b: [],\n    };\n\n    for (let i = 0; i < 256; i += 1) {\n      table.r[i] = (255 * Math.pow(i / 255, 1 / parameters.gammaRed) + 0.5) | 0;\n      table.g[i] =\n        (255 * Math.pow(i / 255, 1 / parameters.gammaGreen) + 0.5) | 0;\n      table.b[i] =\n        (255 * Math.pow(i / 255, 1 / parameters.gammaBlue) + 0.5) | 0;\n    }\n\n    return {\n      table: table,\n    };\n  }\n\n  callback(\n    pixel: {\n      r: number;\n      g: number;\n      b: number;\n      a: number;\n    },\n    x: number,\n    y: number,\n    parameters: GammaParameters,\n    width: number,\n    height: number\n  ): {\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n  } {\n    return {\n      r: this.data.table.r[pixel.r],\n      g: this.data.table.g[pixel.g],\n      b: this.data.table.b[pixel.b],\n      a: pixel.a,\n    };\n  }\n}\n\nexport default GammaEffect;\n","/**\n * RGB to HSB color convert.\n * @param r\n * @param g\n * @param b\n * @returns {{h: number, s: number, b: number}}\n */\nexport function RGBtoHSB(\n  r: number,\n  g: number,\n  b: number\n): {\n  h: number;\n  s: number;\n  b: number;\n} {\n  let hue,\n    saturation,\n    brightness,\n    cmax = Math.max(r, g, b),\n    cmin = Math.min(r, g, b);\n\n  brightness = cmax / 255;\n  if (cmax !== 0) {\n    saturation = (cmax - cmin) / cmax;\n  } else {\n    saturation = 0;\n  }\n\n  if (saturation === 0) {\n    hue = 0;\n  } else {\n    let redc = (cmax - r) / (cmax - cmin),\n      greenc = (cmax - g) / (cmax - cmin),\n      bluec = (cmax - b) / (cmax - cmin);\n\n    if (r === cmax) {\n      hue = bluec - greenc;\n    } else {\n      if (g === cmax) {\n        hue = 2 + redc - bluec;\n      } else {\n        hue = 4 + greenc - redc;\n      }\n    }\n\n    hue /= 6;\n    if (hue < 0) {\n      hue += 1;\n    }\n  }\n\n  return {\n    h: hue,\n    s: saturation,\n    b: brightness,\n  };\n}\n\n/**\n * HSB to RGB color convert.\n * @param hue\n * @param saturation\n * @param brightness\n * @returns {{r: Number, g: Number, b: Number}}\n */\nexport function HSBtoRGB(\n  hue: number,\n  saturation: number,\n  brightness: number\n): {\n  r: number;\n  g: number;\n  b: number;\n} {\n  let red, green, blue;\n  if (saturation === 0) {\n    red = brightness * 255 + 0.5;\n    green = brightness * 255 + 0.5;\n    blue = brightness * 255 + 0.5;\n  } else {\n    let h = (hue - Math.floor(hue)) * 6,\n      f = h - Math.floor(h),\n      p = brightness * (1 - saturation),\n      q = brightness * (1 - saturation * f),\n      t = brightness * (1 - saturation * (1 - f));\n\n    switch (h | 0) {\n      case 0:\n        red = brightness * 255 + 0.5;\n        green = t * 255 + 0.5;\n        blue = p * 255 + 0.5;\n        break;\n\n      case 1:\n        red = q * 255 + 0.5;\n        green = brightness * 255 + 0.5;\n        blue = p * 255 + 0.5;\n        break;\n\n      case 2:\n        red = p * 255 + 0.5;\n        green = brightness * 255 + 0.5;\n        blue = t * 255 + 0.5;\n        break;\n\n      case 3:\n        red = p * 255 + 0.5;\n        green = q * 255 + 0.5;\n        blue = brightness * 255 + 0.5;\n        break;\n\n      case 4:\n        red = t * 255 + 0.5;\n        green = p * 255 + 0.5;\n        blue = brightness * 255 + 0.5;\n        break;\n\n      case 5:\n        red = brightness * 255 + 0.5;\n        green = p * 255 + 0.5;\n        blue = q * 255 + 0.5;\n        break;\n\n      default:\n        red = 0;\n        green = 0;\n        blue = 0;\n        break;\n    }\n  }\n  return {\n    r: parseInt(red),\n    g: parseInt(green),\n    b: parseInt(blue),\n  };\n}\n\nexport function mixColors(\n  t: number,\n  rgb1: {\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n  },\n  rgb2: {\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n  }\n): {\n  r: number;\n  g: number;\n  b: number;\n  a: number;\n} {\n  return {\n    r: rgb1.r + t * (rgb2.r - rgb1.r),\n    g: rgb1.g + t * (rgb2.g - rgb1.g),\n    b: rgb1.b + t * (rgb2.b - rgb1.b),\n    a: rgb1.a + t * (rgb2.a - rgb1.a),\n  };\n}\n\nexport function hexToRGB(hex: string): {\n  r: number;\n  g: number;\n  b: number;\n} {\n  const _hex = parseInt(hex.replace(\"#\", \"\"), 16);\n  let r = _hex >> 16;\n  let g = (_hex >> 8) & 0xff;\n  let b = _hex & 0xff;\n  return {\n    r: r,\n    g: g,\n    b: b,\n  };\n}\n\nexport function RGBtoHex(pixel: { r: number; g: number; b: number }) {\n  let bin = (pixel.r << 16) | (pixel.g << 8) | pixel.b;\n  return (function (h) {\n    return new Array(7 - h.length).join(\"0\") + h;\n  })(bin.toString(16).toUpperCase());\n}\n\nexport function RGBtoXYZ(\n  r: number,\n  g: number,\n  b: number\n): {\n  x: number;\n  y: number;\n  z: number;\n} {\n  let let_R = r / 255;\n  let let_G = g / 255;\n  let let_B = b / 255;\n\n  if (let_R > 0.04045) {\n    let_R = Math.pow((let_R + 0.055) / 1.055, 2.4);\n  } else {\n    let_R = let_R / 12.92;\n  }\n\n  if (let_G > 0.04045) {\n    let_G = Math.pow((let_G + 0.055) / 1.055, 2.4);\n  } else {\n    let_G = let_G / 12.92;\n  }\n\n  if (let_B > 0.04045) {\n    let_B = Math.pow((let_B + 0.055) / 1.055, 2.4);\n  } else {\n    let_B = let_B / 12.92;\n  }\n\n  let_R = let_R * 100;\n  let_G = let_G * 100;\n  let_B = let_B * 100;\n\n  return {\n    x: let_R * 0.4124 + let_G * 0.3576 + let_B * 0.1805,\n    y: let_R * 0.2126 + let_G * 0.7152 + let_B * 0.0722,\n    z: let_R * 0.0193 + let_G * 0.1192 + let_B * 0.9505,\n  };\n}\n\nexport function RGBtoCIELab(\n  r: number,\n  g: number,\n  b: number\n): {\n  l: number;\n  a: number;\n  b: number;\n} {\n  let xyz = RGBtoXYZ(r, g, b);\n\n  let let_X = xyz.x / 95.047; // ref\n  let let_Y = xyz.y / 100; // ref\n  let let_Z = xyz.z / 108.883; // ref\n\n  if (let_X > 0.008856) {\n    let_X = Math.pow(let_X, 1 / 3);\n  } else {\n    let_X = 7.787 * let_X + 16 / 116;\n  }\n\n  if (let_Y > 0.008856) {\n    let_Y = Math.pow(let_Y, 1 / 3);\n  } else {\n    let_Y = 7.787 * let_Y + 16 / 116;\n  }\n\n  if (let_Z > 0.008856) {\n    let_Z = Math.pow(let_Z, 1 / 3);\n  } else {\n    let_Z = 7.787 * let_Z + 16 / 116;\n  }\n\n  return {\n    l: 116 * let_Y - 16,\n    a: 500 * (let_X - let_Y),\n    b: 200 * (let_Y - let_Z),\n  };\n}\n\nexport function CIELabToXYZ(\n  l: number,\n  a: number,\n  b: number\n): {\n  x: number;\n  y: number;\n  z: number;\n} {\n  let let_Y = (l + 16) / 116;\n  let let_X = a / 500 + let_Y;\n  let let_Z = let_Y - b / 200;\n\n  if (Math.pow(let_Y, 3) > 0.008856) {\n    let_Y = Math.pow(let_Y, 3);\n  } else {\n    let_Y = (let_Y - 16 / 116) / 7.787;\n  }\n\n  if (Math.pow(let_X, 3) > 0.008856) {\n    let_X = Math.pow(let_X, 3);\n  } else {\n    let_X = (let_X - 16 / 116) / 7.787;\n  }\n\n  if (Math.pow(let_Z, 3) > 0.008856) {\n    let_Z = Math.pow(let_Z, 3);\n  } else {\n    let_Z = (let_Z - 16 / 116) / 7.787;\n  }\n\n  return {\n    x: 95.047 * let_X, // ref\n    y: 100 * let_Y, // ref\n    z: 108.883 * let_Z, // ref\n  };\n}\n\nexport function CIELabToRGB(\n  l: number,\n  a: number,\n  b: number\n): {\n  r: number;\n  g: number;\n  b: number;\n} {\n  let xyz = CIELabToXYZ(l, a, b);\n\n  let let_X = xyz.x / 100;\n  let let_Y = xyz.y / 100;\n  let let_Z = xyz.z / 100;\n\n  let let_R = let_X * 3.2406 + let_Y * -1.5372 + let_Z * -0.4986;\n  let let_G = let_X * -0.9689 + let_Y * 1.8758 + let_Z * 0.0415;\n  let let_B = let_X * 0.0557 + let_Y * -0.204 + let_Z * 1.057;\n\n  if (let_R > 0.0031308) {\n    let_R = 1.055 * Math.pow(let_R, 1 / 2.4) - 0.055;\n  } else {\n    let_R = 12.92 * let_R;\n  }\n\n  if (let_G > 0.0031308) {\n    let_G = 1.055 * Math.pow(let_G, 1 / 2.4) - 0.055;\n  } else {\n    let_G = 12.92 * let_G;\n  }\n\n  if (let_B > 0.0031308) {\n    let_B = 1.055 * Math.pow(let_B, 1 / 2.4) - 0.055;\n  } else {\n    let_B = 12.92 * let_B;\n  }\n\n  return {\n    r: let_R * 255,\n    g: let_G * 255,\n    b: let_B * 255,\n  };\n}\n","import BasePointEffect from \"../BasePoint\";\nimport { RGBtoHSB, HSBtoRGB } from \"../../../helpers/color\";\n\nexport interface HSBAdjustParameters {\n  h: number;\n  s: number;\n  b: number;\n}\n\nclass HSBAdjustEffect extends BasePointEffect {\n  static getName(): string {\n    return \"hsb-adjust\";\n  }\n\n  getDefaultParameters(): HSBAdjustParameters {\n    return {\n      h: 1,\n      s: 1,\n      b: 1,\n    };\n  }\n\n  callback(\n    pixel: {\n      r: number;\n      g: number;\n      b: number;\n      a: number;\n    },\n    x: number,\n    y: number,\n    parameters: HSBAdjustParameters,\n    width: number,\n    height: number\n  ): {\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n  } {\n    const hsb = RGBtoHSB(pixel.r, pixel.g, pixel.b);\n\n    hsb.h += parameters.h;\n    while (hsb.h < 0) {\n      hsb.h += Math.PI * 2;\n    }\n\n    hsb.s += parameters.s;\n    hsb.s = Math.max(Math.min(hsb.s, 1), 0);\n\n    hsb.b += parameters.b;\n    hsb.b = Math.max(Math.min(hsb.b, 1), 0);\n\n    let result = HSBtoRGB(hsb.h, hsb.s, hsb.b);\n    pixel.r = result.r;\n    pixel.g = result.g;\n    pixel.b = result.b;\n\n    return pixel;\n  }\n}\n\nexport default HSBAdjustEffect;\n","import BasePointEffect from \"../BasePoint\";\n\nclass InvertAlphaEffect extends BasePointEffect {\n  static getName(): string {\n    return \"invert-alpha\";\n  }\n\n  callback(\n    pixel: {\n      r: number;\n      g: number;\n      b: number;\n      a: number;\n    },\n    x: number,\n    y: number,\n    parameters: object,\n    width: number,\n    height: number\n  ): {\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n  } {\n    pixel.a = 255 - pixel.a;\n    return pixel;\n  }\n}\n\nexport default InvertAlphaEffect;\n","import BasePointEffect from \"../BasePoint\";\n\nclass InvertEffect extends BasePointEffect {\n  static getName(): string {\n    return \"invert\";\n  }\n\n  callback(\n    pixel: {\n      r: number;\n      g: number;\n      b: number;\n      a: number;\n    },\n    x: number,\n    y: number,\n    parameters: object,\n    width: number,\n    height: number\n  ): {\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n  } {\n    pixel.r = 255 - pixel.r;\n    pixel.g = 255 - pixel.g;\n    pixel.b = 255 - pixel.b;\n    return pixel;\n  }\n}\n\nexport default InvertEffect;\n","import BasePointEffect from \"../BasePoint\";\n\nexport interface LevelsParameters {\n  low: number;\n  high: number;\n  lowOutput: number;\n  highOutput: number;\n}\n\ninterface BeforeData {\n  lut: Array<Array<number>>;\n}\n\nclass LevelsEffect extends BasePointEffect {\n  static getName(): string {\n    return \"levels\";\n  }\n\n  data: BeforeData = {\n    lut: [],\n  };\n\n  getDefaultParameters(): LevelsParameters {\n    return {\n      low: 0,\n      high: 1,\n      lowOutput: 0,\n      highOutput: 1,\n    };\n  }\n\n  before(\n    parameters: LevelsParameters,\n    width: number,\n    height: number,\n    imageData: ImageData\n  ): BeforeData {\n    let Histogram = function (imageData, width, height, offset, stride) {\n      let index,\n        histogram = new Array(3),\n        minValue = new Array(4),\n        maxValue = new Array(4),\n        minFrequency = new Array(3),\n        maxFrequency = new Array(3),\n        mean = new Array(3),\n        numSamples = width * height,\n        isGray = true,\n        RED = 0,\n        GREEN = 1,\n        BLUE = 2,\n        GRAY = 3;\n\n      for (let i = 0; i < histogram.length; i += 1) {\n        histogram[i] = new Array(256);\n        for (let j = 0; j < 256; j += 1) {\n          histogram[i][j] = 0;\n        }\n      }\n\n      for (let y = 0; y < height; y += 1) {\n        for (let x = 0; x < width; x += 1) {\n          index = y * width * 4 + x * 4;\n          histogram[RED][imageData.data[index]]++;\n          histogram[GREEN][imageData.data[index + 1]]++;\n          histogram[BLUE][imageData.data[index + 2]]++;\n        }\n      }\n\n      for (let i = 0; i < 256; i += 1) {\n        if (\n          histogram[RED][i] !== histogram[GREEN][i] ||\n          histogram[GREEN][i] !== histogram[BLUE][i]\n        ) {\n          isGray = false;\n          break;\n        }\n      }\n\n      for (let i = 0; i < 3; i += 1) {\n        for (let j = 0; j < 256; j += 1) {\n          if (histogram[i][j] > 0) {\n            minValue[i] = j;\n            break;\n          }\n        }\n        for (let j = 255; j >= 0; j -= 1) {\n          if (histogram[i][j] > 0) {\n            maxValue[i] = j;\n            break;\n          }\n        }\n        minFrequency[i] = Infinity;\n        maxFrequency[i] = 0;\n        for (let j = 0; j < 256; j += 1) {\n          minFrequency[i] = Math.min(minFrequency[i], histogram[i][j]);\n          maxFrequency[i] = Math.max(maxFrequency[i], histogram[i][j]);\n          mean[i] += j * histogram[i][j];\n        }\n        mean[i] /= numSamples;\n        minValue[GRAY] = Math.min(\n          minValue[RED],\n          minValue[GREEN],\n          minValue[BLUE]\n        );\n        maxValue[GRAY] = Math.max(\n          maxValue[RED],\n          maxValue[GREEN],\n          maxValue[BLUE]\n        );\n      }\n\n      this.getNumSamples = () => {\n        return numSamples;\n      };\n\n      this.isGray = () => {\n        return isGray;\n      };\n\n      this.getFrequency = (channel, value) => {\n        if (!value) {\n          if (numSamples > 0 && isGray && value >= 0 && value <= 255) {\n            return histogram[0][value];\n          }\n          return -1;\n        }\n        if (\n          numSamples < 1 ||\n          channel < 0 ||\n          channel > 2 ||\n          value < 0 ||\n          value > 255\n        ) {\n          return -1;\n        }\n        return histogram[channel][value];\n      };\n\n      this.getMinFrequency = (channel) => {\n        if (!channel) {\n          if (numSamples > 0 && isGray) {\n            return minFrequency[0];\n          }\n          return -1;\n        }\n        if (numSamples < 1 || channel < 0 || channel > 2) {\n          return -1;\n        }\n        return minFrequency[channel];\n      };\n\n      this.getMaxFrequency = (channel) => {\n        if (!channel) {\n          if (numSamples > 0 && isGray) {\n            return maxFrequency[0];\n          }\n          return -1;\n        }\n        if (numSamples < 1 || channel < 0 || channel > 2) {\n          return -1;\n        }\n        return maxFrequency[channel];\n      };\n\n      this.getMinValue = (channel) => {\n        if (!channel) {\n          if (numSamples > 0 && isGray) {\n            return minValue[0];\n          }\n          return -1;\n        }\n        return minValue[channel];\n      };\n\n      this.getMaxValue = (channel) => {\n        if (!channel) {\n          if (numSamples > 0 && isGray) {\n            return maxValue[0];\n          }\n          return -1;\n        }\n        return maxValue[channel];\n      };\n\n      this.getMeanValue = (channel) => {\n        if (!channel) {\n          if (numSamples > 0 && isGray) {\n            return mean[0];\n          }\n          return -1;\n        }\n        return mean[channel];\n      };\n    };\n\n    let histogram = new Histogram(imageData, width, height, 0, width),\n      lut = new Array(3),\n      low = parameters.low * 255,\n      high = parameters.high * 255;\n\n    for (let i = 0; i < lut.length; i += 1) {\n      lut[i] = new Array(256);\n    }\n    if (low === high) {\n      high++;\n    }\n\n    for (let i = 0; i < 3; i += 1) {\n      for (let j = 0; j < 256; j += 1) {\n        lut[i][j] =\n          255 *\n          (parameters.lowOutput +\n            ((parameters.highOutput - parameters.lowOutput) * (j - low)) /\n              (high - low));\n      }\n    }\n\n    histogram.isGray(); // uglify fix - \"Side effects in initialization of unused letiable histogram\" warning\n\n    return {\n      lut,\n    };\n  }\n\n  callback(\n    pixel: {\n      r: number;\n      g: number;\n      b: number;\n      a: number;\n    },\n    x: number,\n    y: number,\n    parameters: LevelsParameters,\n    width: number,\n    height: number\n  ): {\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n  } {\n    return {\n      r: this.data.lut[0][pixel.r],\n      g: this.data.lut[1][pixel.g],\n      b: this.data.lut[2][pixel.b],\n      a: pixel.a,\n    };\n  }\n}\n\nexport default LevelsEffect;\n","import BasePointEffect from \"../BasePoint\";\n\nexport interface RescaleParameters {\n  scale: number;\n}\n\nclass RescaleEffect extends BasePointEffect {\n  static getName(): string {\n    return \"rescale\";\n  }\n\n  getDefaultParameters(): RescaleParameters {\n    return {\n      scale: 1,\n    };\n  }\n\n  callback(\n    pixel: {\n      r: number;\n      g: number;\n      b: number;\n      a: number;\n    },\n    x: number,\n    y: number,\n    parameters: RescaleParameters,\n    width: number,\n    height: number\n  ): {\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n  } {\n    pixel.r = parameters.scale * pixel.r;\n    pixel.g = parameters.scale * pixel.g;\n    pixel.b = parameters.scale * pixel.b;\n\n    return pixel;\n  }\n}\n\nexport default RescaleEffect;\n","import BasePointEffect from \"../BasePoint\";\n\nclass SolarizeEffect extends BasePointEffect {\n  static getName(): string {\n    return \"solarize\";\n  }\n\n  callback(\n    pixel: {\n      r: number;\n      g: number;\n      b: number;\n      a: number;\n    },\n    x: number,\n    y: number,\n    parameters: object,\n    width: number,\n    height: number\n  ): {\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n  } {\n    const red =\n        pixel.r / 255 > 0.5\n          ? 2 * (pixel.r / 255 - 0.5)\n          : 2 * (0.5 - pixel.r / 255),\n      green =\n        pixel.g / 255 > 0.5\n          ? 2 * (pixel.g / 255 - 0.5)\n          : 2 * (0.5 - pixel.g / 255),\n      blue =\n        pixel.b / 255 > 0.5\n          ? 2 * (pixel.b / 255 - 0.5)\n          : 2 * (0.5 - pixel.b / 255);\n\n    return {\n      r: red * 255,\n      g: green * 255,\n      b: blue * 255,\n      a: pixel.a,\n    };\n  }\n}\n\nexport default SolarizeEffect;\n","import BasePointEffect from \"../BasePoint\";\n\nclass ThresholdEffect extends BasePointEffect {\n  static getName(): string {\n    return \"threshold\";\n  }\n\n  callback(\n    pixel: {\n      r: number;\n      g: number;\n      b: number;\n      a: number;\n    },\n    x: number,\n    y: number,\n    parameters: object,\n    width: number,\n    height: number\n  ): {\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n  } {\n    const grayscale = (pixel.r + pixel.g + pixel.b) / 3;\n\n    if (grayscale >= 127) {\n      return {\n        r: 255,\n        g: 255,\n        b: 255,\n        a: pixel.a,\n      };\n    }\n\n    return {\n      r: 0,\n      g: 0,\n      b: 0,\n      a: pixel.a,\n    };\n  }\n}\n\nexport default ThresholdEffect;\n","import BasePointEffect from \"../BasePoint\";\nimport { mixColors } from \"../../../helpers/color\";\n\nexport interface TritoneParameters {\n  shadowColor: {\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n  };\n  midColor: {\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n  };\n  highColor: {\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n  };\n}\n\ninterface BeforeData {\n  lut: Array<{\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n  }>;\n}\n\nclass TritoneEffect extends BasePointEffect {\n  static getName(): string {\n    return \"tritone\";\n  }\n\n  data: BeforeData = {\n    lut: [],\n  };\n\n  getDefaultParameters(): TritoneParameters {\n    return {\n      shadowColor: {\n        r: 0,\n        g: 0,\n        b: 0,\n        a: 255,\n      },\n      midColor: {\n        r: 136,\n        g: 136,\n        b: 136,\n        a: 255,\n      },\n      highColor: {\n        r: 255,\n        g: 255,\n        b: 255,\n        a: 255,\n      },\n    };\n  }\n\n  before(parameters: TritoneParameters): BeforeData {\n    let lut = [],\n      t;\n\n    for (let i = 0; i < 128; i += 1) {\n      t = i / 127;\n      lut[i] = mixColors(t, parameters.shadowColor, parameters.midColor);\n    }\n    for (let i = 128; i < 256; i += 1) {\n      t = (i - 127) / 128;\n      lut[i] = mixColors(t, parameters.midColor, parameters.highColor);\n    }\n    return {\n      lut: lut,\n    };\n  }\n\n  callback(\n    pixel: {\n      r: number;\n      g: number;\n      b: number;\n      a: number;\n    },\n    x: number,\n    y: number,\n    parameters: object,\n    width: number,\n    height: number\n  ): {\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n  } {\n    const brightness = Math.floor((pixel.r + pixel.g + pixel.b) / 3);\n    return this.data.lut[brightness];\n  }\n}\n\nexport default TritoneEffect;\n","import BasePointEffect from \"../BasePoint\";\nimport { smoothStep } from \"../../../helpers/common\";\n\nexport interface DissolveParameters {\n  density: number;\n  softness: number;\n}\n\ninterface BeforeData {\n  minDensity: number;\n  maxDensity: number;\n}\n\nclass DissolveEffect extends BasePointEffect {\n  static getName(): string {\n    return \"dissolve\";\n  }\n\n  data: BeforeData = {\n    minDensity: 0,\n    maxDensity: 0,\n  };\n\n  getDefaultParameters(): DissolveParameters {\n    return {\n      density: 1,\n      softness: 0,\n    };\n  }\n\n  before(\n    parameters: DissolveParameters,\n    width: number,\n    height: number,\n    imageData: ImageData\n  ): BeforeData {\n    const d = (1 - parameters.density) * (1 + parameters.softness);\n    return {\n      minDensity: d - parameters.softness,\n      maxDensity: d,\n    };\n  }\n\n  callback(\n    pixel: {\n      r: number;\n      g: number;\n      b: number;\n      a: number;\n    },\n    x: number,\n    y: number,\n    parameters: DissolveParameters,\n    width: number,\n    height: number\n  ): {\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n  } {\n    const v = Math.random(),\n      f = smoothStep(this.data.minDensity, this.data.maxDensity, v);\n    pixel.a = pixel.a * f;\n    return pixel;\n  }\n}\n\nexport default DissolveEffect;\n","import BasePointEffect from \"../BasePoint\";\n\ninterface BeforeData {\n  hEdgeMatrix: Array<number>;\n  vEdgeMatrix: Array<number>;\n}\n\nexport interface EdgeParameters {\n  matrixes: {\n    robertsV: Array<number>;\n    robertsH: Array<number>;\n    prewittV: Array<number>;\n    prewittH: Array<number>;\n    sobelV: Array<number>;\n    sobelH: Array<number>;\n    freiChenV: Array<number>;\n    freiChenH: Array<number>;\n  };\n  hEdgeMatrix: string;\n  vEdgeMatrix: string;\n}\n\nclass EdgeEffect extends BasePointEffect {\n  static getName(): string {\n    return \"edge\";\n  }\n\n  data: BeforeData = {\n    hEdgeMatrix: [],\n    vEdgeMatrix: [],\n  };\n\n  getDefaultParameters(): EdgeParameters {\n    return {\n      matrixes: {\n        robertsV: [0, 0, -1, 0, 1, 0, 0, 0, 0],\n        robertsH: [-1, 0, 0, 0, 1, 0, 0, 0, 0],\n        prewittV: [-1, 0, 1, -1, 0, 1, -1, 0, 1],\n        prewittH: [-1, -1, -1, 0, 0, 0, 1, 1, 1],\n        sobelV: [-1, 0, 1, -2, 0, 2, -1, 0, 1],\n        sobelH: [-1, -2, -1, 0, 0, 0, 1, 2, 1],\n        freiChenV: [-1, 0, 1, -Math.sqrt(2), 0, Math.sqrt(2), -1, 0, 1],\n        freiChenH: [-1, -Math.sqrt(2), -1, 0, 0, 0, 1, Math.sqrt(2), 1],\n      },\n      hEdgeMatrix: \"sobelV\",\n      vEdgeMatrix: \"sobelH\",\n    };\n  }\n\n  before(\n    parameters: EdgeParameters,\n    width: number,\n    height: number,\n    imageData: ImageData\n  ): BeforeData {\n    let _hEdgeMatrix = parameters.hEdgeMatrix,\n      _vEdgeMatrix = parameters.vEdgeMatrix,\n      hEdgeMatrix,\n      vEdgeMatrix;\n\n    if (typeof _hEdgeMatrix === \"string\") {\n      hEdgeMatrix = parameters.matrixes[parameters.hEdgeMatrix];\n    }\n    if (typeof _vEdgeMatrix === \"string\") {\n      vEdgeMatrix = parameters.matrixes[parameters.vEdgeMatrix];\n    }\n    return {\n      hEdgeMatrix,\n      vEdgeMatrix,\n    };\n  }\n\n  callback(\n    pixel: {\n      r: number;\n      g: number;\n      b: number;\n      a: number;\n    },\n    x: number,\n    y: number,\n    parameters: EdgeParameters,\n    width: number,\n    height: number\n  ): {\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n  } {\n    let r = 0,\n      g = 0,\n      b = 0,\n      rh = 0,\n      gh = 0,\n      bh = 0,\n      rv = 0,\n      gv = 0,\n      bv = 0,\n      iy,\n      ix,\n      mOffset,\n      pixel2,\n      h,\n      v;\n\n    for (let row = -1; row <= 1; row += 1) {\n      iy = y + row;\n      if (!(0 <= iy && iy < height)) {\n        iy = y;\n      }\n      mOffset = 3 * (row + 1) + 1;\n      for (let col = -1; col <= 1; col += 1) {\n        ix = x + col;\n        if (!(0 <= ix && ix < width)) {\n          ix = x;\n        }\n        pixel2 = this.getOriginalPixel(ix, iy);\n        h = this.data.hEdgeMatrix[mOffset + col];\n        v = this.data.vEdgeMatrix[mOffset + col];\n\n        r = pixel2.r;\n        g = pixel2.g;\n        b = pixel2.b;\n\n        rh += Math.floor(h * r);\n        gh += Math.floor(h * g);\n        bh += Math.floor(h * b);\n\n        rv += Math.floor(v * r);\n        gv += Math.floor(v * g);\n        bv += Math.floor(v + b);\n      }\n    }\n    r = Math.floor(Math.sqrt(rh * rh + rv * rv) / 1.8);\n    g = Math.floor(Math.sqrt(gh * gh + gv * gv) / 1.8);\n    b = Math.floor(Math.sqrt(bh * bh + bv * bv) / 1.8);\n    return {\n      r: r,\n      g: g,\n      b: b,\n      a: pixel.a,\n    };\n  }\n}\n\nexport default EdgeEffect;\n","import BasePointEffect from \"../BasePoint\";\n\nexport interface ChannelMixParameters {\n  blueGreen: number;\n  redBlue: number;\n  greenRed: number;\n  intoR: number;\n  intoG: number;\n  intoB: number;\n}\n\nclass ChannelMixEffect extends BasePointEffect {\n  static getName(): string {\n    return \"channel-mix\";\n  }\n\n  getDefaultParameters(): ChannelMixParameters {\n    return {\n      blueGreen: 1,\n      redBlue: 1,\n      greenRed: 1,\n      intoR: 1,\n      intoG: 1,\n      intoB: 1,\n    };\n  }\n\n  callback(\n    pixel: {\n      r: number;\n      g: number;\n      b: number;\n      a: number;\n    },\n    x: number,\n    y: number,\n    parameters: ChannelMixParameters,\n    width: number,\n    height: number\n  ): {\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n  } {\n    const { r, g, b } = pixel;\n\n    return {\n      r:\n        ((parameters.intoR *\n          (parameters.blueGreen * g + (255 - parameters.blueGreen) * b)) /\n          255 +\n          (255 - parameters.intoR) * r) /\n        255,\n      g:\n        ((parameters.intoG *\n          (parameters.redBlue * g + (255 - parameters.redBlue) * r)) /\n          255 +\n          (255 - parameters.intoG) * g) /\n        255,\n      b:\n        ((parameters.intoB *\n          (parameters.greenRed * g + (255 - parameters.greenRed) * g)) /\n          255 +\n          (255 - parameters.intoB) * b) /\n        255,\n      a: pixel.a,\n    };\n  }\n}\n\nexport default ChannelMixEffect;\n","import BasePointEffect from \"../BasePoint\";\n\ninterface BeforeData {\n  remap: (value: number) => number;\n  min: number;\n  max: number;\n}\n\nclass AutoContrastEffect extends BasePointEffect {\n  static getName(): string {\n    return \"auto-contrast\";\n  }\n\n  data: BeforeData = {\n    remap: (value: number): number => 0,\n    min: 0,\n    max: 0,\n  };\n\n  before(parameters: object, width: number, height: number): BeforeData {\n    let min = Infinity,\n      max = -1;\n\n    for (let y = 0; y < height; y += 1) {\n      for (let x = 0; x < width; x += 1) {\n        const pixel = this.getPixel(x, y);\n\n        min = Math.min((pixel.r + pixel.g + pixel.b) / 3, min);\n        max = Math.max((pixel.r + pixel.g + pixel.b) / 3, max);\n      }\n    }\n\n    return {\n      min: min,\n      max: max,\n      remap: function (value: number): number {\n        return ((value - min) * 255) / (max - min);\n      },\n    };\n  }\n\n  callback(\n    pixel: {\n      r: number;\n      g: number;\n      b: number;\n      a: number;\n    },\n    x: number,\n    y: number,\n    parameters: object,\n    width: number,\n    height: number\n  ): {\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n  } {\n    pixel.r = this.data.remap(pixel.r);\n    pixel.g = this.data.remap(pixel.g);\n    pixel.b = this.data.remap(pixel.b);\n\n    return pixel;\n  }\n}\n\nexport default AutoContrastEffect;\n","import BaseEffect from \"./Base\";\n\nclass BaseTransformEffect extends BaseEffect {\n  callback(\n    x: number,\n    y: number,\n    parameters: object,\n    width: number,\n    height: number\n  ): Array<number> {\n    throw \"Extend it.\";\n  }\n\n  run(imageData: ImageData, parameters: object): ImageData {\n    parameters = {\n      ...this.getDefaultParameters(),\n      ...parameters,\n    };\n\n    let x, y;\n    const normalizePixelValue = function (value: number): number {\n        return Math.min(Math.max(value, 0), 255) | 0;\n      },\n      sandbox = {\n        data: null,\n      },\n      imageDataCopy = new Uint8ClampedArray(imageData.data);\n\n    sandbox.data = this.before.call(\n      sandbox,\n      parameters,\n      imageData.width,\n      imageData.height,\n      imageData\n    );\n\n    for (y = 0; y < imageData.height; y += 1) {\n      for (x = 0; x < imageData.width; x += 1) {\n        const newXY = this.callback.call(\n            sandbox,\n            x,\n            y,\n            parameters,\n            imageData.width,\n            imageData.height\n          ),\n          newX = normalizePixelValue(newXY[0]),\n          newY = normalizePixelValue(newXY[1]),\n          oldPixelIndex = y * imageData.width * 4 + x * 4,\n          newPixelIndex = newY * imageData.width * 4 + newX * 4;\n\n        imageDataCopy[oldPixelIndex + 0] = imageData.data[newPixelIndex + 0];\n        imageDataCopy[oldPixelIndex + 1] = imageData.data[newPixelIndex + 1];\n        imageDataCopy[oldPixelIndex + 2] = imageData.data[newPixelIndex + 2];\n        imageDataCopy[oldPixelIndex + 3] = imageData.data[newPixelIndex + 3];\n      }\n    }\n\n    imageData.data.set(imageDataCopy);\n    return imageData;\n  }\n}\n\nexport default BaseTransformEffect;\n","import BaseTransformEffect from \"../BaseTransform\";\n\nexport interface DiffuseParameters {\n  scale: number;\n}\n\ninterface BeforeData {\n  sinTable: Array<number>;\n  cosTable: Array<number>;\n}\n\nclass DiffuseEffect extends BaseTransformEffect {\n  static getName(): string {\n    return \"diffuse\";\n  }\n\n  data: BeforeData = {\n    sinTable: [],\n    cosTable: [],\n  };\n\n  getDefaultParameters(): DiffuseParameters {\n    return {\n      scale: 4,\n    };\n  }\n\n  before(\n    parameters: DiffuseParameters,\n    width: number,\n    height: number,\n    imageData: ImageData\n  ): BeforeData {\n    let sinTable = new Array(256),\n      cosTable = new Array(256),\n      angle;\n    for (let i = 0; i < 256; i += 1) {\n      angle = (Math.PI * 2 * i) / 256;\n      sinTable[i] = parameters.scale * Math.sin(angle);\n      cosTable[i] = parameters.scale * Math.cos(angle);\n    }\n    return {\n      sinTable: sinTable,\n      cosTable: cosTable,\n    };\n  }\n\n  callback(\n    x: number,\n    y: number,\n    parameters: DiffuseParameters,\n    width: number,\n    height: number\n  ): Array<number> {\n    let angle = (Math.random() * 255) | 0,\n      distance = Math.random();\n\n    return [\n      x + distance * this.data.sinTable[angle],\n      y + distance * this.data.cosTable[angle],\n    ];\n  }\n}\n\nexport default DiffuseEffect;\n","import BaseTransformEffect from \"../BaseTransform\";\nimport { triangle } from \"../../../helpers/common\";\n\ninterface BeforeData {\n  icentreX: number;\n  icentreY: number;\n}\n\nexport interface KaleidoscopeParameters {\n  centreX: number;\n  centreY: number;\n  angle: number;\n  angle2: number;\n  sides: number;\n  radius: number;\n}\n\nclass KaleidoscopeEffect extends BaseTransformEffect {\n  static getName(): string {\n    return \"kaleidoscope\";\n  }\n\n  data: BeforeData = {\n    icentreX: 0,\n    icentreY: 0,\n  };\n\n  getDefaultParameters(): KaleidoscopeParameters {\n    return {\n      centreX: 0.5,\n      centreY: 0.5,\n      angle: 0,\n      angle2: 0,\n      sides: 3,\n      radius: 0,\n    };\n  }\n\n  before(\n    parameters: KaleidoscopeParameters,\n    width: number,\n    height: number,\n    imageData: ImageData\n  ): BeforeData {\n    return {\n      icentreX: width * parameters.centreX,\n      icentreY: height * parameters.centreY,\n    };\n  }\n\n  callback(\n    x: number,\n    y: number,\n    parameters: KaleidoscopeParameters,\n    width: number,\n    height: number\n  ): Array<number> {\n    let dx = x - this.data.icentreX,\n      dy = y - this.data.icentreY,\n      r = Math.sqrt(dx * dx + dy * dy),\n      theta = Math.atan2(dy, dx) - parameters.angle - parameters.angle2;\n\n    theta = triangle((theta / Math.PI) * parameters.sides * 0.5);\n\n    if (parameters.radius !== 0) {\n      let c = Math.cos(theta),\n        radiusC = parameters.radius / c;\n      r = radiusC * triangle(r / radiusC);\n    }\n\n    theta += parameters.angle;\n\n    return [\n      this.data.icentreX + r * Math.cos(theta),\n      this.data.icentreY + r * Math.sin(theta),\n    ];\n  }\n}\n\nexport default KaleidoscopeEffect;\n","const parameters: {\n  B?: number;\n  BM?: number;\n  N?: number;\n  P?: any[];\n  G1?: any[];\n  G2?: any[];\n  G3?: any[];\n} = {};\nlet isInit = false;\n\nlet noise = {\n  init: function (): boolean {\n    if (isInit) {\n      return false;\n    }\n    isInit = true;\n\n    parameters.B = 0x100;\n    parameters.BM = 0xff;\n    parameters.N = 0x1000;\n\n    parameters.P = new Array(parameters.B + parameters.B + 2);\n    parameters.G1 = new Array(parameters.B + parameters.B + 2);\n    parameters.G2 = new Array(parameters.B + parameters.B + 2);\n    for (let i = 0; i < parameters.G2.length; i += 1) {\n      parameters.G2[i] = new Array(2);\n    }\n    parameters.G3 = new Array(parameters.B + parameters.B + 2);\n    for (let i = 0; i < parameters.G3.length; i += 1) {\n      parameters.G3[i] = new Array(3);\n    }\n    let i, j, k;\n\n    for (i = 0; i < parameters.B; i += 1) {\n      parameters.P[i] = i;\n      parameters.G1[i] =\n        ((this.random() % (parameters.B + parameters.B)) - parameters.B) /\n        parameters.B;\n      parameters.G2[i] = [];\n      for (j = 0; j < 2; j += 1) {\n        parameters.G2[i][j] =\n          ((this.random() % (parameters.B + parameters.B)) - parameters.B) /\n          parameters.B;\n      }\n      parameters.G2[i] = this.normalize2(parameters.G2[i]);\n\n      parameters.G3[i] = [];\n      for (j = 0; j < 3; j += 1) {\n        parameters.G3[i][j] =\n          ((this.random() % (parameters.B + parameters.B)) - parameters.B) /\n          parameters.B;\n      }\n      parameters.G3[i] = this.normalize3(parameters.G3[i]);\n    }\n\n    for (i = parameters.B - 1; i >= 0; i -= 1) {\n      k = parameters.P[i];\n      parameters.P[i] = parameters.P[(j = this.random() % parameters.B)];\n      parameters.P[j] = k;\n    }\n\n    for (i = 0; i < parameters.B + 2; i += 1) {\n      parameters.P[parameters.B + i] = parameters.P[i];\n      parameters.G1[parameters.B + i] = parameters.G1[i];\n      for (j = 0; j < 2; j += 1) {\n        parameters.G2[parameters.B + i][j] = parameters.G2[i][j];\n      }\n      for (j = 0; j < 3; j++) {\n        parameters.G3[parameters.B + i][j] = parameters.G3[i][j];\n      }\n    }\n  },\n  random: function (): number {\n    return ((Math.random() * 256 * 256) | 0) & 0x7fffffff;\n  },\n  normalize2: function (arr: any[]): any[] {\n    let s = Math.sqrt(arr[0] * arr[0] + arr[1] * arr[1] + arr[2] * arr[2]);\n    arr[0] = arr[0] / s;\n    arr[1] = arr[1] / s;\n    arr[2] = arr[2] / s;\n    return arr;\n  },\n  normalize3: function (arr: any[]): any[] {\n    let s = Math.sqrt(arr[0] * arr[0] + arr[1] * arr[1]);\n    arr[0] = arr[0] / s;\n    arr[1] = arr[1] / s;\n    return arr;\n  },\n  sCurve: function (t: number): number {\n    return t * t * (3.0 - 2.0 * t);\n  },\n  lerp: function (t: number, a: number, b: number): number {\n    return a + t * (b - a);\n  },\n  /**\n   * Compute 1-dimensional Perlin noise.\n   * @param x\n   */\n  noise1: function (x: number): number {\n    let bx0, bx1, rx0, rx1, sx, t, u, v;\n\n    this.init();\n\n    t = x + parameters.N;\n    bx0 = parseInt(t) & parameters.BM;\n    bx1 = (bx0 + 1) & parameters.BM;\n    rx0 = t - parseInt(t);\n    rx1 = rx0 - 1;\n\n    sx = this.sCurve(rx0);\n\n    u = rx0 * parameters.G1[parameters.P[bx0]];\n    v = rx1 * parameters.G1[parameters.P[bx1]];\n\n    return 2.3 * this.lerp(sx, u, v);\n  },\n  /**\n   * Compute 2-dimensional Perlin noise\n   * @param x\n   * @param y\n   * @returns {number}\n   */\n  noise2: function (x: number, y: number): number {\n    let bx0,\n      bx1,\n      by0,\n      by1,\n      b00,\n      b10,\n      b01,\n      b11,\n      rx0,\n      rx1,\n      ry0,\n      ry1,\n      q = [],\n      sx,\n      sy,\n      a,\n      b,\n      t,\n      u,\n      v,\n      i,\n      j;\n\n    this.init();\n\n    t = x + parameters.N;\n    bx0 = parseInt(t) & parameters.BM;\n    bx1 = (bx0 + 1) & parameters.BM;\n    rx0 = t - parseInt(t);\n    rx1 = rx0 - 1;\n\n    t = y + parameters.N;\n    by0 = parseInt(t) & parameters.BM;\n    by1 = (by0 + 1) & parameters.BM;\n    ry0 = t - parseInt(t);\n    ry1 = ry0 - 1;\n\n    i = parameters.P[bx0];\n    j = parameters.P[bx1];\n\n    b00 = parameters.P[i + by0];\n    b10 = parameters.P[j + by0];\n    b01 = parameters.P[i + by1];\n    b11 = parameters.P[j + by1];\n\n    sx = this.sCurve(rx0);\n    sy = this.sCurve(ry0);\n\n    q = parameters.G2[b00];\n    u = rx0 * q[0] + ry0 * q[1];\n    q = parameters.G2[b10];\n    v = rx1 * q[0] + ry0 * q[1];\n    a = this.lerp(sx, u, v);\n\n    q = parameters.G2[b01];\n    u = rx0 * q[0] + ry1 * q[1];\n    q = parameters.G2[b11];\n    v = rx1 * q[0] + ry1 * q[1];\n    b = this.lerp(sx, u, v);\n\n    return 1.5 * this.lerp(sy, a, b);\n  },\n  /**\n   * Compute 3-dimensional Perlin noise.\n   * @param x\n   * @param y\n   * @param z\n   */\n  noise3: function (x: number, y: number, z: number): number {\n    let bx0,\n      bx1,\n      by0,\n      by1,\n      bz0,\n      bz1,\n      b00,\n      b10,\n      b01,\n      b11,\n      rx0,\n      rx1,\n      ry0,\n      ry1,\n      rz0,\n      rz1,\n      q,\n      sy,\n      sz,\n      a,\n      b,\n      c,\n      d,\n      t,\n      u,\n      v,\n      i,\n      j;\n\n    this.init();\n\n    t = x + parameters.N;\n    bx0 = parseInt(t) & parameters.BM;\n    bx1 = (bx0 + 1) & parameters.BM;\n    rx0 = t - parseInt(t);\n    rx1 = rx0 - 1;\n\n    t = y + parameters.N;\n    by0 = parseInt(t) & parameters.BM;\n    by1 = (by0 + 1) & parameters.BM;\n    ry0 = t - parseInt(t);\n    ry1 = ry0 - 1;\n\n    t = z + parameters.N;\n    bz0 = parseInt(t) & parameters.BM;\n    bz1 = (bz0 + 1) & parameters.BM;\n    rz0 = t - parseInt(t);\n    rz1 = rz0 - 1;\n\n    i = parameters.P[bx0];\n    j = parameters.P[bx1];\n\n    b00 = parameters.P[i + by0];\n    b10 = parameters.P[j + by0];\n    b01 = parameters.P[i + by1];\n    b11 = parameters.P[j + by1];\n\n    t = this.sCurve(rx0);\n    sy = this.sCurve(ry0);\n    sz = this.sCurve(rz0);\n\n    q = parameters.G3[b00 + bz0];\n    u = rx0 * q[0] + ry0 * q[1] + rz0 * q[2];\n    q = parameters.G3[b10 + bz0];\n    v = rx1 * q[0] + ry0 * q[1] + rz0 * q[2];\n    a = this.lerp(t, u, v);\n\n    q = parameters.G3[b01 + bz0];\n    u = rx0 * q[0] + ry1 * q[1] + rz0 * q[2];\n    q = parameters.G3[b11 + bz0];\n    v = rx1 * q[0] + ry1 * q[1] + rz0 * q[2];\n    b = this.lerp(t, u, v);\n\n    c = this.lerp(sy, a, b);\n\n    q = parameters.G3[b00 + bz1];\n    u = rx0 * q[0] + ry0 * q[1] + rz1 * q[2];\n    q = parameters.G3[b10 + bz1];\n    v = rx1 * q[0] + ry0 * q[1] + rz1 * q[2];\n    a = this.lerp(t, u, v);\n\n    q = parameters.G3[b01 + bz1];\n    u = rx0 * q[0] + ry1 * q[1] + rz1 * q[2];\n    q = parameters.G3[b11 + bz1];\n    v = rx1 * q[0] + ry1 * q[1] + rz1 * q[2];\n    b = this.lerp(t, u, v);\n\n    d = this.lerp(sy, a, b);\n\n    return 1.5 * this.lerp(sz, c, d);\n  },\n  /**\n   * Compute turbulence using Perlin noise.\n   * @param x\n   * @param y\n   * @param z\n   * @param octaves\n   * @returns {*}\n   */\n  turbulence3: function (x: number, y: number, z: number, octaves): number {\n    let t = 0,\n      i;\n    for (i = 1; i <= octaves; i *= 2) {\n      t += Math.abs(this.noise3(i * x, i * y, i * z)) / i;\n    }\n    return t;\n  },\n};\n\nexport default noise;\n","import BaseTransformEffect from \"../BaseTransform\";\nimport noiseHelper from \"../../../helpers/noise\";\n\ninterface BeforeData {\n  sinTable: Array<number>;\n  cosTable: Array<number>;\n  displacementMap: (x: number, y: number) => number;\n}\n\nexport interface MarbleParameters {\n  xScale: number;\n  yScale: number;\n  amount: number;\n  turbulence: number;\n}\n\nclass MarbleEffect extends BaseTransformEffect {\n  static getName(): string {\n    return \"marble\";\n  }\n\n  data: BeforeData = {\n    sinTable: [],\n    cosTable: [],\n    displacementMap: (x: number, y: number) => 0,\n  };\n\n  getDefaultParameters(): MarbleParameters {\n    return {\n      xScale: 4,\n      yScale: 4,\n      amount: 1,\n      turbulence: 1,\n    };\n  }\n\n  before(\n    parameters: MarbleParameters,\n    width: number,\n    height: number,\n    imageData: ImageData\n  ): BeforeData {\n    let sinTable = new Array(256),\n      cosTable = new Array(256),\n      angle;\n\n    for (let i = 0; i < 256; i += 1) {\n      angle = ((Math.PI * 2 * i) / 256) * parameters.turbulence;\n      sinTable[i] = -parameters.yScale * Math.sin(angle);\n      cosTable[i] = parameters.yScale * Math.cos(angle);\n    }\n    return {\n      sinTable: sinTable,\n      cosTable: cosTable,\n      displacementMap: function (x, y) {\n        let result =\n          127 *\n          (1 +\n            noiseHelper.noise2(x / parameters.xScale, y / parameters.yScale));\n        return Math.min(255, Math.max(0, result));\n      },\n    };\n  }\n\n  callback(\n    x: number,\n    y: number,\n    parameters: MarbleParameters,\n    width: number,\n    height: number\n  ): Array<number> {\n    let displacement = Math.floor(this.data.displacementMap(x, y));\n    return [\n      x + this.data.sinTable[displacement],\n      y + this.data.cosTable[displacement],\n    ];\n  }\n}\n\nexport default MarbleEffect;\n","import BaseTransformEffect from \"../BaseTransform\";\n\nexport interface PinchParameters {\n  angle: number;\n  centreX: number;\n  centreY: number;\n  radius: number;\n  amount: number;\n}\n\ninterface BeforeData {\n  icentreX: number;\n  icentreY: number;\n  radius2: number;\n  radius: number;\n}\n\nclass PinchEffect extends BaseTransformEffect {\n  static getName(): string {\n    return \"pinch\";\n  }\n\n  data: BeforeData = {\n    icentreX: 0,\n    icentreY: 0,\n    radius2: 0,\n    radius: 0,\n  };\n\n  getDefaultParameters(): PinchParameters {\n    return {\n      angle: 0,\n      centreX: 0.5,\n      centreY: 0.5,\n      radius: 100,\n      amount: 0.5,\n    };\n  }\n\n  before(\n    parameters: PinchParameters,\n    width: number,\n    height: number,\n    imageData: ImageData\n  ): BeforeData {\n    let icentreX = width * parameters.centreX,\n      icentreY = height * parameters.centreY,\n      radius = parameters.radius,\n      radius2;\n    if (radius === 0) {\n      radius = Math.min(icentreX, icentreY);\n    }\n    radius2 = radius * radius;\n    return {\n      icentreX: icentreX,\n      icentreY: icentreY,\n      radius: radius,\n      radius2: radius2,\n    };\n  }\n\n  callback(\n    x: number,\n    y: number,\n    parameters: PinchParameters,\n    width: number,\n    height: number\n  ): Array<number> {\n    let dx = x - this.data.icentreX,\n      dy = y - this.data.icentreY,\n      distance = dx * dx + dy * dy,\n      d,\n      t,\n      e,\n      a,\n      s,\n      c;\n\n    if (distance > this.data.radius2 || distance === 0) {\n      return [x, y];\n    }\n    d = Math.sqrt(distance / this.data.radius2);\n    t = Math.pow(Math.sin(Math.PI * 0.5 * d), -parameters.amount);\n\n    dx *= t;\n    dy *= t;\n\n    e = 1 - d;\n    a = parameters.angle * e * e;\n\n    s = Math.sin(a);\n    c = Math.cos(a);\n\n    return [\n      this.data.icentreX + c * dx - s * dy,\n      this.data.icentreY + s * dx + c * dy,\n    ];\n  }\n}\n\nexport default PinchEffect;\n","import BaseTransformEffect from \"../BaseTransform\";\nimport { triangle, mod } from \"../../../helpers/common\";\nimport noise from \"../../../helpers/noise\";\n\nexport interface RippleParameters {\n  xAmplitude: number;\n  yAmplitude: number;\n  xWaveLength: number;\n  yWaveLength: number;\n  waveType: string;\n}\n\nclass RippleEffect extends BaseTransformEffect {\n  static getName(): string {\n    return \"ripple\";\n  }\n\n  getDefaultParameters(): RippleParameters {\n    return {\n      xAmplitude: 5,\n      yAmplitude: 0,\n      xWaveLength: 16,\n      yWaveLength: 16,\n      waveType: \"SINE\", // SAWTOOTH TRIANGLE NOISE\n    };\n  }\n\n  callback(\n    x: number,\n    y: number,\n    parameters: RippleParameters,\n    width: number,\n    height: number\n  ): Array<number> {\n    let nx = y / parameters.xWaveLength,\n      ny = x / parameters.yWaveLength,\n      fx,\n      fy;\n\n    switch (parameters.waveType) {\n      case \"SINE\":\n      default:\n        fx = Math.sin(nx);\n        fy = Math.sin(ny);\n        break;\n\n      case \"SAWTOOTH\":\n        fx = mod(nx, 1);\n        fy = mod(ny, 1);\n        break;\n\n      case \"TRIANGLE\":\n        fx = triangle(nx);\n        fy = triangle(ny);\n        break;\n\n      case \"NOISE\":\n        fx = noise.noise1(nx);\n        fy = noise.noise1(ny);\n        break;\n    }\n\n    return [x + parameters.xAmplitude * fx, y + parameters.yAmplitude * fy];\n  }\n}\n\nexport default RippleEffect;\n","import BaseTransformEffect from \"../BaseTransform\";\n\nexport interface ShearParameters {\n  xAngle: number;\n  yAngle: number;\n  xOffset: number;\n  yOffset: number;\n}\n\ninterface BeforeData {\n  shx: number;\n  shy: number;\n}\n\nclass ShearEffect extends BaseTransformEffect {\n  static getName(): string {\n    return \"shear\";\n  }\n\n  data: BeforeData = {\n    shx: 0,\n    shy: 0,\n  };\n\n  getDefaultParameters(): ShearParameters {\n    return {\n      xAngle: 0,\n      yAngle: 0,\n      xOffset: 0,\n      yOffset: 0,\n    };\n  }\n\n  before(\n    parameters: ShearParameters,\n    width: number,\n    height: number\n  ): BeforeData {\n    return {\n      shx: Math.sin(parameters.xAngle),\n      shy: Math.sin(parameters.yAngle),\n    };\n  }\n\n  callback(\n    x: number,\n    y: number,\n    parameters: ShearParameters,\n    width: number,\n    height: number\n  ): Array<number> {\n    return [\n      x + parameters.xOffset + y * this.data.shx,\n      y + parameters.yOffset + x * this.data.shy,\n    ];\n  }\n}\n\nexport default ShearEffect;\n","import BaseTransformEffect from \"../BaseTransform\";\n\ninterface BeforeData {\n  icentreX: number;\n  icentreY: number;\n  a2: number;\n  b2: number;\n  a: number;\n  b: number;\n}\n\nexport interface SphereParameters {\n  a: number;\n  b: number;\n  centreX: number;\n  centreY: number;\n  refractionIndex: number;\n}\n\nclass SphereEffect extends BaseTransformEffect {\n  static getName(): string {\n    return \"sphere\";\n  }\n\n  data: BeforeData = {\n    icentreX: 0,\n    icentreY: 0,\n    a2: 0,\n    b2: 0,\n    a: 0,\n    b: 0,\n  };\n\n  getDefaultParameters(): SphereParameters {\n    return {\n      a: 0,\n      b: 0,\n      centreX: 0.5,\n      centreY: 0.5,\n      refractionIndex: 1.5,\n    };\n  }\n\n  before(\n    parameters: SphereParameters,\n    width: number,\n    height: number\n  ): BeforeData {\n    let icentreX = width * parameters.centreX,\n      icentreY = height * parameters.centreY,\n      a = parameters.a,\n      b = parameters.b,\n      a2,\n      b2;\n    if (a === 0) {\n      a = width / 2;\n    }\n    if (b === 0) {\n      b = height / 2;\n    }\n    a2 = a * a;\n    b2 = b * b;\n\n    return {\n      icentreX: icentreX,\n      icentreY: icentreY,\n      a: a,\n      b: b,\n      a2: a2,\n      b2: b2,\n    };\n  }\n\n  callback(\n    x: number,\n    y: number,\n    parameters: SphereParameters,\n    width: number,\n    height: number\n  ): Array<number> {\n    let dx = x - this.data.icentreX,\n      dy = y - this.data.icentreY,\n      x2 = dx * dx,\n      y2 = dy * dy,\n      rRefraction = 1 / parameters.refractionIndex,\n      z = Math.sqrt(\n        (1 - x2 / this.data.a2 - y2 / this.data.b2) *\n          (this.data.a * this.data.b)\n      ),\n      z2 = z * z,\n      xAngle = Math.acos(dx / Math.sqrt(x2 + z2)),\n      angle1 = Math.PI / 2 - xAngle,\n      angle2 = Math.asin(Math.sin(angle1) * rRefraction),\n      yAngle = Math.acos(dy / Math.sqrt(y2 + z2)),\n      ret = new Array(2);\n\n    if (y2 >= this.data.b2 - this.data.b2 / x2 / this.data.a2) {\n      return [x, y];\n    }\n\n    angle2 = Math.PI / 2 - xAngle - angle2;\n    ret[0] = x - Math.tan(angle2) * z;\n\n    angle1 = Math.PI / 2 - yAngle;\n    angle2 = Math.asin(Math.sin(angle1) * rRefraction);\n    angle2 = Math.PI / 2 - yAngle - angle2;\n    ret[1] = y - Math.tan(angle2) * z;\n    return ret;\n  }\n}\n\nexport default SphereEffect;\n","import BaseTransformEffect from \"../BaseTransform\";\nimport noise from \"../../../helpers/noise\";\n\ninterface BeforeData {\n  m00: number;\n  m01: number;\n  m10: number;\n  m11: number;\n}\n\nexport interface SwimParameters {\n  scale: number;\n  turbulence: number;\n  amount: number;\n  time: number;\n  angle: number;\n  stretch: number;\n}\n\nclass SwimEffect extends BaseTransformEffect {\n  static getName(): string {\n    return \"swim\";\n  }\n\n  data: BeforeData = {\n    m00: 0,\n    m01: 0,\n    m10: 0,\n    m11: 0,\n  };\n\n  getDefaultParameters(): SwimParameters {\n    return {\n      scale: 32,\n      turbulence: 0,\n      amount: 1,\n      time: 0,\n      angle: 0,\n      stretch: 1,\n    };\n  }\n\n  before(\n    parameters: SwimParameters,\n    width: number,\n    height: number\n  ): BeforeData {\n    let cos = Math.cos(parameters.angle),\n      sin = Math.sin(parameters.angle);\n\n    return {\n      m00: cos,\n      m01: sin,\n      m10: -sin,\n      m11: cos,\n    };\n  }\n\n  callback(\n    x: number,\n    y: number,\n    parameters: SwimParameters,\n    width: number,\n    height: number\n  ): Array<number> {\n    let nx = this.data.m00 * x + this.data.m01 * y,\n      ny = this.data.m10 * x + this.data.m11 * y;\n\n    nx /= parameters.scale;\n    ny /= parameters.scale * parameters.stretch;\n\n    if (parameters.turbulence === 1) {\n      return [\n        x + parameters.amount * noise.noise3(nx + 0.5, ny, parameters.time),\n        y + parameters.amount * noise.noise3(nx, ny + 0.5, parameters.time),\n      ];\n    }\n    return [\n      x +\n        parameters.amount *\n          noise.turbulence3(\n            nx + 0.5,\n            ny,\n            parameters.turbulence,\n            parameters.time\n          ),\n      y +\n        parameters.amount *\n          noise.turbulence3(\n            nx,\n            ny + 0.5,\n            parameters.turbulence,\n            parameters.time\n          ),\n    ];\n  }\n}\n\nexport default SwimEffect;\n","import BaseTransformEffect from \"../BaseTransform\";\n\ninterface BeforeData {\n  iCentreX: number;\n  iCentreY: number;\n  radius: number;\n  radius2: number;\n}\n\nexport interface TwirlParameters {\n  angle: number;\n  centreX: number;\n  centreY: number;\n  radius: number;\n  radius2: number;\n}\n\nclass TwirlEffect extends BaseTransformEffect {\n  static getName(): string {\n    return \"twirl\";\n  }\n\n  data: BeforeData = {\n    iCentreX: 0,\n    iCentreY: 0,\n    radius: 0,\n    radius2: 0,\n  };\n\n  getDefaultParameters(): TwirlParameters {\n    return {\n      angle: 0,\n      centreX: 0.5,\n      centreY: 0.5,\n      radius: 100,\n      radius2: 100,\n    };\n  }\n\n  before(\n    parameters: TwirlParameters,\n    width: number,\n    height: number\n  ): BeforeData {\n    let iCentreX = width * parameters.centreX,\n      iCentreY = height * parameters.centreY,\n      radius = parameters.radius,\n      radius2;\n\n    if (radius === 0) {\n      radius = Math.min(iCentreX, iCentreY);\n    }\n    radius2 = radius * radius;\n\n    return {\n      iCentreX: iCentreX,\n      iCentreY: iCentreY,\n      radius: radius,\n      radius2: radius2,\n    };\n  }\n\n  callback(\n    x: number,\n    y: number,\n    parameters: TwirlParameters,\n    width: number,\n    height: number\n  ): Array<number> {\n    let dx = x - this.data.iCentreX,\n      dy = y - this.data.iCentreY,\n      distance = dx * dx + dy * dy,\n      a;\n\n    if (distance > parameters.radius2) {\n      return [x, y];\n    }\n\n    distance = Math.sqrt(distance);\n    a =\n      Math.atan2(dy, dx) +\n      (parameters.angle * (parameters.radius - distance)) / parameters.radius;\n\n    return [\n      this.data.iCentreX + distance * Math.cos(a),\n      this.data.iCentreY + distance * Math.sin(a),\n    ];\n  }\n}\n\nexport default TwirlEffect;\n","import BaseTransformEffect from \"../BaseTransform\";\n\ninterface BeforeData {\n  iCentreX: number;\n  iCentreY: number;\n  radius2: number;\n  radius: number;\n}\n\nexport interface WaterParameters {\n  waveLength: number;\n  amplitude: number;\n  phase: number;\n  centreX: number;\n  centreY: number;\n  radius: number;\n}\n\nclass WaterEffect extends BaseTransformEffect {\n  static getName(): string {\n    return \"water\";\n  }\n\n  data: BeforeData = {\n    iCentreX: 0,\n    iCentreY: 0,\n    radius2: 0,\n    radius: 0,\n  };\n\n  getDefaultParameters(): WaterParameters {\n    return {\n      waveLength: 16,\n      amplitude: 10,\n      phase: 0,\n      centreX: 0.5,\n      centreY: 0.5,\n      radius: 50,\n    };\n  }\n\n  before(\n    parameters: WaterParameters,\n    width: number,\n    height: number\n  ): BeforeData {\n    let iCentreX = width * parameters.centreX,\n      iCentreY = height * parameters.centreY,\n      radius = parameters.radius,\n      radius2;\n\n    if (radius === 0) {\n      radius = Math.min(iCentreX, iCentreY);\n    }\n    radius2 = radius * radius;\n\n    return {\n      iCentreX,\n      iCentreY,\n      radius,\n      radius2,\n    };\n  }\n\n  callback(\n    x: number,\n    y: number,\n    parameters: WaterParameters,\n    width: number,\n    height: number\n  ): Array<number> {\n    let dx = x - this.data.iCentreX,\n      dy = y - this.data.iCentreY,\n      distance2 = dx * dx + dy * dy,\n      distance,\n      amount;\n\n    if (distance2 > this.data.radius2) {\n      return [x, y];\n    }\n    distance = Math.sqrt(distance2);\n    amount =\n      parameters.amplitude *\n      Math.sin(\n        (distance / parameters.waveLength) * Math.PI * 2 - parameters.phase\n      );\n    amount *= (parameters.radius - distance) / parameters.radius;\n    if (distance !== 0) {\n      amount *= parameters.waveLength / distance;\n    }\n    return [x + dx * amount, y + dy * amount];\n  }\n}\n\nexport default WaterEffect;\n","import BaseTransformEffect from \"../BaseTransform\";\nimport { mod } from \"../../../helpers/common\";\n\nexport interface CircleParameters {\n  radius: number;\n  height: number;\n  angle: number;\n  spreadAngle: number;\n  centreX: number;\n  centreY: number;\n}\n\ninterface BeforeData {\n  icentreX: number;\n  icentreY: number;\n  width: number;\n}\n\nclass CircleEffect extends BaseTransformEffect {\n  static getName(): string {\n    return \"circle\";\n  }\n\n  data: BeforeData = {\n    icentreX: 0,\n    icentreY: 0,\n    width: 0,\n  };\n\n  getDefaultParameters(): CircleParameters {\n    return {\n      radius: 10,\n      height: 20,\n      angle: 0,\n      spreadAngle: Math.PI,\n      centreX: 0.5,\n      centreY: 0.5,\n    };\n  }\n\n  before(\n    parameters: CircleParameters,\n    width: number,\n    height: number,\n    imageData: ImageData\n  ): BeforeData {\n    return {\n      icentreX: width * parameters.centreX,\n      icentreY: height * parameters.centreY,\n      width: --width,\n    };\n  }\n\n  callback(\n    x: number,\n    y: number,\n    parameters: CircleParameters,\n    width: number,\n    height: number\n  ): Array<number> {\n    let dx = x - this.data.icentreX,\n      dy = y - this.data.icentreX,\n      theta = Math.atan2(-dy, -dx) + parameters.angle,\n      r = Math.sqrt(dx * dx + dy * dy);\n\n    theta = mod(theta, 2 * Math.PI);\n\n    return [\n      (this.data.width * theta) / parameters.spreadAngle + 0.00001,\n      height * (1 - (r - parameters.radius) / (height + 0.00001)),\n    ];\n  }\n}\n\nexport default CircleEffect;\n","import BaseTransformEffect from \"../BaseTransform\";\n\ninterface BeforeData {\n  sin: number;\n  cos: number;\n  icentreX: number;\n  icentreY: number;\n}\n\nexport interface RotateParameters {\n  angle: number;\n}\n\nclass RotateEffect extends BaseTransformEffect {\n  static getName(): string {\n    return \"rotate\";\n  }\n\n  data: BeforeData = {\n    sin: 0,\n    cos: 0,\n    icentreX: 0,\n    icentreY: 0,\n  };\n\n  getDefaultParameters(): RotateParameters {\n    return {\n      angle: Math.PI,\n    };\n  }\n\n  before(\n    parameters: RotateParameters,\n    width: number,\n    height: number,\n    imageData: ImageData\n  ): BeforeData {\n    return {\n      cos: Math.cos(parameters.angle),\n      sin: Math.sin(parameters.angle),\n      icentreX: width / 2,\n      icentreY: height / 2,\n    };\n  }\n\n  callback(\n    x: number,\n    y: number,\n    parameters: RotateParameters,\n    width: number,\n    height: number\n  ): Array<number> {\n    return [\n      this.data.cos * (x - this.data.icentreX) -\n        this.data.sin * (y - this.data.icentreY) +\n        this.data.icentreY,\n      this.data.sin * (x - this.data.icentreX) -\n        this.data.cos * (y - this.data.icentreY) +\n        this.data.icentreY,\n    ];\n  }\n}\n\nexport default RotateEffect;\n","import BaseTransformEffect from \"../BaseTransform\";\n\nexport interface OffsetParameters {\n  xOffset: number;\n  yOffset: number;\n  wrap: boolean;\n}\n\nclass RotateEffect extends BaseTransformEffect {\n  static getName(): string {\n    return \"offset\";\n  }\n\n  getDefaultParameters(): OffsetParameters {\n    return {\n      xOffset: 100,\n      yOffset: 100,\n      wrap: true,\n    };\n  }\n\n  callback(\n    x: number,\n    y: number,\n    parameters: OffsetParameters,\n    width: number,\n    height: number\n  ): Array<number> {\n    if (parameters.wrap) {\n      return [\n        (x + width - parameters.xOffset) % width,\n        (y + height - parameters.yOffset) % height,\n      ];\n    } else {\n      return [x - parameters.xOffset, y - parameters.yOffset];\n    }\n  }\n}\n\nexport default RotateEffect;\n","import BaseTransformEffect from \"../BaseTransform\";\n\ninterface BeforeData {\n  centreX: number;\n  centreY: number;\n  sqr: (value: number) => number;\n  radius: number;\n}\n\nexport interface PolarParameters {\n  type: string;\n}\n\nclass PolarEffect extends BaseTransformEffect {\n  static getName(): string {\n    return \"polar\";\n  }\n\n  data: BeforeData = {\n    centreX: 0,\n    centreY: 0,\n    sqr: (value: number) => 0,\n    radius: 0,\n  };\n\n  getDefaultParameters(): PolarParameters {\n    return {\n      type: \"RECT_TO_POLAR\", // RECT_TO_POLAR, POLAR_TO_RECT, INVERT_IN_CIRCLE\n    };\n  }\n\n  before(\n    parameters: PolarParameters,\n    width: number,\n    height: number,\n    imageData: ImageData\n  ): BeforeData {\n    return {\n      centreX: width / 2,\n      centreY: height / 2,\n      radius: Math.max(width / 2, height / 2),\n      sqr: function (x) {\n        return x * x;\n      },\n    };\n  }\n\n  callback(\n    x: number,\n    y: number,\n    parameters: PolarParameters,\n    width: number,\n    height: number\n  ): Array<number> {\n    let theta,\n      theta2,\n      t,\n      m,\n      xMax,\n      yMax,\n      nx,\n      ny,\n      xmax,\n      ymax,\n      dx,\n      dy,\n      distance,\n      r = 0;\n\n    switch (parameters.type) {\n      case \"RECT_TO_POLAR\":\n        if (x >= this.data.centreX) {\n          if (y > this.data.centreY) {\n            theta =\n              Math.PI -\n              Math.atan((x - this.data.centreX) / (y - this.data.centreY));\n            r = Math.sqrt(\n              this.data.sqr(x - this.data.centreX) +\n                this.data.sqr(y - this.data.centreY)\n            );\n          } else {\n            if (y < this.data.centreY) {\n              theta = Math.atan(\n                (x - this.data.centreX) / (this.data.centreY - y)\n              );\n              r = Math.sqrt(\n                this.data.sqr(x - this.data.centreX) +\n                  this.data.sqr(this.data.centreY - y)\n              );\n            } else {\n              theta = Math.PI / 2;\n              r = x - this.data.centreX;\n            }\n          }\n        } else {\n          if (x < this.data.centreX) {\n            if (y < this.data.centreY) {\n              theta =\n                Math.PI * 2 -\n                Math.atan((this.data.centreX - x) / (this.data.centreY - y));\n              r = Math.sqrt(\n                this.data.sqr(this.data.centreX - x) +\n                  this.data.sqr(this.data.centreY - y)\n              );\n            } else {\n              if (y > this.data.centreY) {\n                theta =\n                  Math.PI +\n                  Math.atan((this.data.centreX - x) / (y - this.data.centreY));\n                r = Math.sqrt(\n                  this.data.sqr(this.data.centreX - x) +\n                    this.data.sqr(y - this.data.centreY)\n                );\n              } else {\n                theta = 1.5 * Math.PI;\n                r = this.data.centreX - x;\n              }\n            }\n          }\n        }\n        if (x != this.data.centreX) {\n          m = Math.abs((y - this.data.centreY) / (x - this.data.centreX));\n        } else {\n          m = 0;\n        }\n\n        if (m <= height / width) {\n          if (x == this.data.centreX) {\n            xMax = 0;\n            yMax = this.data.centreY;\n          } else {\n            xMax = this.data.centreX;\n            yMax = m * xMax;\n          }\n        } else {\n          yMax = this.data.centreY;\n          xMax = yMax / m;\n        }\n\n        return [\n          width - 1 - (width - 1) / (Math.PI * 2 * theta),\n          (height * r) / this.data.radius,\n        ];\n\n      case \"POLAR_TO_RECT\":\n        theta = (x / width) * Math.PI * 2;\n\n        if (theta >= 1.5 * Math.PI) {\n          theta2 = Math.PI * 2 - theta;\n        } else {\n          if (theta >= Math.PI) {\n            theta2 = theta - Math.PI;\n          } else {\n            if (theta >= 0.5 * Math.PI) {\n              theta2 = Math.PI - theta;\n            } else {\n              theta2 = theta;\n            }\n          }\n        }\n\n        t = Math.tan(theta2);\n        if (t != 0) {\n          m = 1.0 / t;\n        } else {\n          m = 0;\n        }\n\n        if (m <= height / width) {\n          if (theta2 == 0) {\n            xmax = 0;\n            ymax = this.data.centreY;\n          } else {\n            xmax = this.data.centreX;\n            ymax = m * xmax;\n          }\n        } else {\n          ymax = this.data.centreY;\n          xmax = ymax / m;\n        }\n\n        r = this.data.radius * (y / height);\n\n        nx = -r * Math.sin(theta2);\n        ny = r * Math.cos(theta2);\n\n        if (theta >= 1.5 * Math.PI) {\n          return [this.data.centreX - nx, this.data.centreY - ny];\n        } else {\n          if (theta >= Math.PI) {\n            return [this.data.centreX - nx, this.data.centreY + ny];\n          } else {\n            if (theta >= 0.5 * Math.PI) {\n              return [this.data.centreX + nx, this.data.centreY + ny];\n            } else {\n              return [this.data.centreX + nx, this.data.centreY - ny];\n            }\n          }\n        }\n        break; // TODO: ???\n\n      case \"INVERT_IN_CIRCLE\":\n        dx = x - this.data.centreX;\n        dy = y - this.data.centreY;\n        distance = dx * dx + dy * dy;\n\n        return [\n          this.data.centreX +\n            (this.data.centreX * this.data.centreX * dx) / distance,\n          this.data.centreY +\n            (this.data.centreY * this.data.centreY * dy) / distance,\n        ];\n    }\n  }\n}\n\nexport default PolarEffect;\n","import BaseTransformEffect from \"../BaseTransform\";\n\ninterface BeforeData {\n  A: number;\n  B: number;\n  C: number;\n  D: number;\n  E: number;\n  F: number;\n  G: number;\n  H: number;\n  I: number;\n}\n\nexport interface PerspectiveParameters {\n  x0: number;\n  y0: number;\n  x1: number;\n  y1: number;\n  x2: number;\n  y2: number;\n  x3: number;\n  y3: number;\n}\n\nclass PerspectiveEffect extends BaseTransformEffect {\n  static getName(): string {\n    return \"perspective\";\n  }\n\n  data: BeforeData = {\n    A: 0,\n    B: 0,\n    C: 0,\n    D: 0,\n    E: 0,\n    F: 0,\n    G: 0,\n    H: 0,\n    I: 0,\n  };\n\n  getDefaultParameters(): PerspectiveParameters {\n    return {\n      x0: 0,\n      y0: 0,\n      x1: 1,\n      y1: 0,\n      x2: 1,\n      y2: 1,\n      x3: 0,\n      y3: 1,\n    };\n  }\n\n  before(\n    parameters: PerspectiveParameters,\n    width: number,\n    height: number,\n    imageData: ImageData\n  ): BeforeData {\n    function unitSquareToQuad() {\n      let result = {\n          a11: 0,\n          a21: 0,\n          a31: 0,\n          a12: 0,\n          a22: 0,\n          a32: 0,\n          a13: 0,\n          a23: 0,\n          a33: 0,\n          A: 0,\n          B: 0,\n          C: 0,\n          D: 0,\n          E: 0,\n          F: 0,\n          G: 0,\n          H: 0,\n          I: 0,\n        },\n        x0 = Math.floor(width * parameters.x0),\n        y0 = Math.floor(height * parameters.y0),\n        x1 = Math.floor(width * parameters.x1),\n        y1 = Math.floor(height * parameters.y1),\n        x2 = Math.floor(width * parameters.x2),\n        y2 = Math.floor(height * parameters.y2),\n        x3 = Math.floor(width * parameters.x3),\n        y3 = Math.floor(height * parameters.y3),\n        dx1 = x1 - x2,\n        dy1 = y1 - y2,\n        dx2 = x3 - x2,\n        dy2 = y3 - y2,\n        dx3 = x0 - x1 + x2 - x3,\n        dy3 = y0 - y1 + y2 - y3;\n\n      if (dx3 == 0 && dy3 == 0) {\n        result.a11 = x1 - x0;\n        result.a21 = x2 - x1;\n        result.a31 = x0;\n        result.a12 = y1 - y0;\n        result.a22 = y2 - y1;\n        result.a32 = y0;\n        result.a13 = result.a23 = 0;\n      } else {\n        result.a13 = (dx3 * dy2 - dx2 * dy3) / (dx1 * dy2 - dy1 * dx2);\n        result.a23 = (dx1 * dy3 - dy1 * dx3) / (dx1 * dy2 - dy1 * dx2);\n        result.a11 = x1 - x0 + result.a13 * x1;\n        result.a21 = x3 - x0 + result.a23 * x3;\n        result.a31 = x0;\n        result.a12 = y1 - y0 + result.a13 * y1;\n        result.a22 = y3 - y0 + result.a23 * y3;\n        result.a32 = y0;\n      }\n\n      result.a33 = 1;\n\n      return result;\n    }\n\n    let result = unitSquareToQuad();\n\n    result.A = result.a22 * result.a33 - result.a32 * result.a23;\n    result.B = result.a31 * result.a23 - result.a21 * result.a33;\n    result.C = result.a21 * result.a32 - result.a31 * result.a22;\n    result.D = result.a32 * result.a13 - result.a12 * result.a33;\n    result.E = result.a11 * result.a33 - result.a31 * result.a13;\n    result.F = result.a31 * result.a12 - result.a11 * result.a32;\n    result.G = result.a12 * result.a23 - result.a22 * result.a13;\n    result.H = result.a21 * result.a13 - result.a11 * result.a23;\n    result.I = result.a11 * result.a22 - result.a21 * result.a12;\n\n    return result;\n  }\n\n  callback(\n    x: number,\n    y: number,\n    parameters: PerspectiveParameters,\n    width: number,\n    height: number\n  ): Array<number> {\n    return [\n      (width * (this.data.A * x + this.data.B * y + this.data.C)) /\n        (this.data.G * x + this.data.H * y + this.data.I),\n      (height * (this.data.D * x + this.data.E * y + this.data.F)) /\n        (this.data.G * x + this.data.H * y + this.data.I),\n    ];\n  }\n}\n\nexport default PerspectiveEffect;\n","import BaseEffect from \"./Base\";\n\nclass BaseCustomEffect extends BaseEffect {\n  callback(width: number, height: number, parameters: object) {\n    throw \"Extend it.\";\n  }\n\n  run(imageData: ImageData, parameters: object): ImageData {\n    parameters = {\n      ...this.getDefaultParameters(),\n      ...parameters,\n    };\n\n    const imageDataCopy = new Uint8ClampedArray(imageData.data), // copy image data\n      /**\n       * Get ImageData array index from x and y position\n       * @param x\n       * @param y\n       * @returns {Number}\n       */\n      getIndex = function getIndex(x, y) {\n        return y * imageData.width * 4 + x * 4;\n      },\n      normalizePixelValue = function (value) {\n        return Math.min(Math.max(value, 0), 255) | 0;\n      },\n      sandbox = {\n        // object invoked as this in effect callback\n        /**\n         * Get changed pixel\n         * @param {int} x\n         * @param {int} y\n         * @returns {{r: *, g: *, b: *, a: *}}\n         */\n        getPixel: function (\n          x: number,\n          y: number\n        ): {\n          r: number;\n          g: number;\n          b: number;\n          a: number;\n        } {\n          const index = getIndex(x, y);\n          return {\n            r: imageDataCopy[index + 0],\n            g: imageDataCopy[index + 1],\n            b: imageDataCopy[index + 2],\n            a: imageDataCopy[index + 3],\n          };\n        },\n        /**\n         * Get pixel by its index\n         * @param index\n         */\n        getOriginalPixelByIndex: function (index: number): {\n          r: number;\n          g: number;\n          b: number;\n          a: number;\n        } {\n          index *= 4;\n          return {\n            r: imageData.data[index],\n            g: imageData.data[index + 1],\n            b: imageData.data[index + 2],\n            a: imageData.data[index + 3],\n          };\n        },\n        /**\n         * Get original pixel.\n         * @param {int} x\n         * @param {int} y\n         * @returns {{r: *, g: *, b: *, a: *}}\n         */\n        getOriginalPixel: function (\n          x: number,\n          y: number\n        ): {\n          r: number;\n          g: number;\n          b: number;\n          a: number;\n        } {\n          const index = getIndex(x, y);\n          return {\n            r: imageData.data[index + 0],\n            g: imageData.data[index + 1],\n            b: imageData.data[index + 2],\n            a: imageData.data[index + 3],\n          };\n        },\n        /**\n         * Set new pixel\n         * @param {int} x\n         * @param {int} y\n         * @param {Object} rgba\n         */\n        setPixel: function (\n          x: number,\n          y: number,\n          rgba: {\n            r: number;\n            g: number;\n            b: number;\n            a: number;\n          }\n        ): void {\n          const index = getIndex(x, y);\n          imageDataCopy[index + 0] = normalizePixelValue(rgba.r);\n          imageDataCopy[index + 1] = normalizePixelValue(rgba.g);\n          imageDataCopy[index + 2] = normalizePixelValue(rgba.b);\n          imageDataCopy[index + 3] = normalizePixelValue(rgba.a);\n        },\n        /**\n         * Set pixel by index.\n         * @param index\n         * @param rgba\n         */\n        setPixelByIndex: function (\n          index: number,\n          rgba: {\n            r: number;\n            g: number;\n            b: number;\n            a: number;\n          }\n        ) {\n          index *= 4;\n          imageDataCopy[index + 0] = normalizePixelValue(rgba.r);\n          imageDataCopy[index + 1] = normalizePixelValue(rgba.g);\n          imageDataCopy[index + 2] = normalizePixelValue(rgba.b);\n          imageDataCopy[index + 3] = normalizePixelValue(rgba.a);\n        },\n        /**\n         * Data created by effect init function\n         */\n        data: null,\n        /**\n         * ImageData width\n         */\n        width: imageData.width,\n        /**\n         * ImageData height\n         */\n        height: imageData.height,\n      };\n\n    sandbox.data = this.before.call(\n      sandbox,\n      parameters,\n      imageData.width,\n      imageData.height,\n      imageData\n    );\n\n    this.callback.call(sandbox, imageData.width, imageData.height, parameters);\n\n    imageData.data.set(imageDataCopy);\n\n    return imageData;\n  }\n}\n\nexport default BaseCustomEffect;\n","import BaseCustomEffect from \"../BaseCustom\";\nimport { RGBtoCIELab, CIELabToRGB } from \"../../../helpers/color\";\n\nexport interface AutoWhiteBalanceParameters {\n  intensity: number;\n}\n\nclass AutoWhiteBalanceEffect extends BaseCustomEffect {\n  static getName(): string {\n    return \"auto-white-balance\";\n  }\n\n  getDefaultParameters(): AutoWhiteBalanceParameters {\n    return {\n      intensity: 50,\n    };\n  }\n\n  callback(\n    width: number,\n    height: number,\n    parameters: AutoWhiteBalanceParameters\n  ) {\n    let sumA = 0,\n      sumB = 0,\n      pixel,\n      lab,\n      avgSumA,\n      avgSumB,\n      aDelta,\n      bDelta;\n\n    for (let y = 0; y < height; y += 1) {\n      for (let x = 0; x < width; x += 1) {\n        pixel = this.getPixel(x, y);\n        lab = RGBtoCIELab(pixel.r, pixel.g, pixel.b);\n        sumA += lab.a;\n        sumB += lab.b;\n      }\n    }\n\n    avgSumA = 0 - sumA / (width * height);\n    avgSumB = 0 - sumB / (width * height);\n\n    aDelta = avgSumA * (parameters.intensity / 100) * 1.1;\n    bDelta = avgSumB * (parameters.intensity / 100) * 1.1;\n\n    for (let y = 0; y < height; y += 1) {\n      for (let x = 0; x < width; x += 1) {\n        pixel = this.getPixel(x, y);\n\n        lab = RGBtoCIELab(pixel.r, pixel.g, pixel.b);\n\n        lab.a += aDelta;\n        lab.b += bDelta;\n\n        pixel = CIELabToRGB(lab.l, lab.a, lab.b);\n        pixel.a = this.getPixel(x, y).a;\n\n        this.setPixel(x, y, pixel);\n      }\n    }\n  }\n}\n\nexport default AutoWhiteBalanceEffect;\n","import BaseCustomEffect from \"../BaseCustom\";\nimport { hexToRGB } from \"../../../helpers/color\";\n\nexport interface FillColorParameters {\n  color: string;\n}\n\nclass FillColorEffect extends BaseCustomEffect {\n  static getName(): string {\n    return \"fill-color\";\n  }\n\n  getDefaultParameters(): FillColorParameters {\n    return {\n      color: \"transparent\",\n    };\n  }\n\n  callback(width: number, height: number, parameters: FillColorParameters) {\n    let color;\n\n    if (parameters.color === \"transparent\") {\n      color = {\n        r: 0,\n        g: 0,\n        b: 0,\n        a: 0,\n      };\n    } else {\n      color = hexToRGB(parameters.color);\n      color.a = 255;\n    }\n\n    for (let y = 0; y < height; y += 1) {\n      for (let x = 0; x < width; x += 1) {\n        this.setPixel(x, y, color);\n      }\n    }\n  }\n}\n\nexport default FillColorEffect;\n","import BaseCustomEffect from \"../BaseCustom\";\n\nexport interface FlipParameters {\n  operation: string;\n}\n\nclass FlipEffect extends BaseCustomEffect {\n  static getName(): string {\n    return \"flip\";\n  }\n\n  getDefaultParameters() {\n    return {\n      operation: \"FLIP_H\", // FLIP_H, FLIP_V, FLIP_HV, FLIP_90CW, FLIP_90CCW, FLIP_180\n    };\n  }\n\n  callback(width: number, height: number, parameters: FlipParameters) {\n    let x = 0,\n      y = 0,\n      w = width,\n      h = height,\n      newX = 0,\n      newY = 0,\n      newW = w,\n      newH = h,\n      newRow,\n      newCol;\n\n    switch (parameters.operation) {\n      case \"FLIP_H\":\n        newX = width - (x + w);\n        break;\n      case \"FLIP_V\":\n        newY = height - (y + h);\n        break;\n      case \"FLIP_HV\":\n        newW = h;\n        newH = w;\n        newX = y;\n        newY = x;\n        break;\n      case \"FLIP_90CW\":\n        newW = h;\n        newH = w;\n        newX = height - (y + h);\n        newY = x;\n        break;\n      case \"FLIP_90CCW\":\n        newW = h;\n        newH = w;\n        newX = y;\n        newY = width - (x + w);\n        break;\n      case \"FLIP_180\":\n        newX = width - (x + w);\n        newY = height - (y + h);\n        break;\n    }\n\n    for (y = 0; y < height; y += 1) {\n      for (x = 0; x < width; x += 1) {\n        newRow = y;\n        newCol = x;\n\n        switch (parameters.operation) {\n          case \"FLIP_H\":\n            newCol = w - x - 1;\n            break;\n          case \"FLIP_V\":\n            newRow = h - y - 1;\n            break;\n          case \"FLIP_HV\":\n            newRow = x;\n            newCol = y;\n            break;\n          case \"FLIP_90CW\":\n            newRow = x;\n            newCol = h - y - 1;\n            break;\n          case \"FLIP_90CCW\":\n            newRow = w - x - 1;\n            newCol = y;\n            break;\n          case \"FLIP_180\":\n            newRow = h - y - 1;\n            newCol = w - x - 1;\n            break;\n        }\n\n        this.setPixel(newCol, newRow, this.getOriginalPixel(x, y));\n      }\n    }\n  }\n}\n\nexport default FlipEffect;\n","import BaseCustomEffect from \"../BaseCustom\";\n\nexport interface BlockParameters {\n  blockSize: number;\n}\n\nclass BlockEffect extends BaseCustomEffect {\n  static getName(): string {\n    return \"block\";\n  }\n\n  getDefaultParameters(): BlockParameters {\n    return {\n      blockSize: 5,\n    };\n  }\n\n  callback(width: number, height: number, parameters: BlockParameters) {\n    let w, h, t, r, g, b, pixel;\n\n    for (let y = 0; y < height; y += parameters.blockSize) {\n      for (let x = 0; x < width; x += parameters.blockSize) {\n        w = Math.min(parameters.blockSize, width - x);\n        h = Math.min(parameters.blockSize, height - y);\n        t = w * h;\n\n        r = 0;\n        g = 0;\n        b = 0;\n\n        for (let by = 0; by < h; by += 1) {\n          for (let bx = 0; bx < w; bx += 1) {\n            pixel = this.getOriginalPixel(x + bx, y + by);\n\n            r += pixel.r & 0xff;\n            g += pixel.g & 0xff;\n            b += pixel.b & 0xff;\n          }\n        }\n\n        r = r / t;\n        g = g / t;\n        b = b / t;\n\n        for (let by = 0; by < h; by += 1) {\n          for (let bx = 0; bx < w; bx += 1) {\n            this.setPixel(x + bx, y + by, {\n              r: r,\n              g: g,\n              b: b,\n              a: 255,\n            });\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default BlockEffect;\n","import BaseCustomEffect from \"../BaseCustom\";\n\nexport interface BorderParameters {\n  leftBorder: number;\n  rightBorder: number;\n  topBorder: number;\n  bottomBorder: number;\n  borderColor?: {\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n  };\n}\n\nclass BorderEffect extends BaseCustomEffect {\n  static getName(): string {\n    return \"border\";\n  }\n\n  data = {\n    leftBorder: 0,\n    rightBorder: 0,\n    topBorder: 0,\n    bottomBorder: 0,\n    borderColor: {\n      r: 0,\n      g: 0,\n      b: 0,\n      a: 255,\n    },\n  };\n\n  getDefaultParameters(): BorderParameters {\n    return {\n      leftBorder: 10,\n      rightBorder: 10,\n      topBorder: 10,\n      bottomBorder: 10,\n      borderColor: {\n        r: 0,\n        g: 0,\n        b: 0,\n        a: 255,\n      },\n    };\n  }\n\n  before(\n    parameters: BorderParameters,\n    width: number,\n    height: number,\n    imageData: ImageData\n  ): BorderParameters {\n    return {\n      leftBorder: parameters.leftBorder | 0,\n      rightBorder: parameters.rightBorder | 0,\n      topBorder: parameters.topBorder | 0,\n      bottomBorder: parameters.bottomBorder | 0,\n    };\n  }\n\n  callback(width, height, parameters) {\n    for (let y = 0; y < height; y += 1) {\n      for (let x = 0; x < width; x += 1) {\n        if (this.data.leftBorder > 0 && x < this.data.leftBorder) {\n          this.setPixel(x, y, parameters.borderColor);\n        }\n        if (this.data.rightBorder > 0 && width - this.data.rightBorder < x) {\n          this.setPixel(x, y, parameters.borderColor);\n        }\n        if (this.data.topBorder > 0 && y < this.data.topBorder) {\n          this.setPixel(x, y, parameters.borderColor);\n        }\n        if (this.data.bottomBorder > 0 && height - this.data.bottomBorder < y) {\n          this.setPixel(x, y, parameters.borderColor);\n        }\n      }\n    }\n  }\n}\n\nexport default BorderEffect;\n","import BaseCustomEffect from \"../BaseCustom\";\nimport { brightness } from \"../../../helpers/common\";\n\nexport interface EmbossParameters {\n  azimuth: number;\n  elevation: number;\n  width45: number;\n  emboss: boolean;\n}\n\nclass EmbossEffect extends BaseCustomEffect {\n  static getName(): string {\n    return \"emboss\";\n  }\n\n  getDefaultParameters(): EmbossParameters {\n    return {\n      azimuth: (135 * Math.PI) / 180,\n      elevation: (30 * Math.PI) / 180,\n      width45: 3,\n      emboss: true,\n    };\n  }\n\n  callback(width: number, height: number, parameters: EmbossParameters) {\n    let bumpMapWidth = width,\n      bumpPixels = [],\n      Nx,\n      Ny,\n      Nz,\n      Lx,\n      Ly,\n      Lz,\n      Nz2,\n      NzLz,\n      NdotL,\n      s1,\n      s2,\n      s3,\n      shade,\n      background,\n      pixelScale = 255.9,\n      bumpIndex = 0,\n      index = 0,\n      pixel,\n      r,\n      g,\n      b;\n\n    Lx =\n      (Math.cos(parameters.azimuth) *\n        Math.cos(parameters.elevation) *\n        pixelScale) |\n      0;\n    Ly =\n      (Math.sin(parameters.azimuth) *\n        Math.cos(parameters.elevation) *\n        pixelScale) |\n      0;\n    Lz = (Math.sin(parameters.elevation) * pixelScale) | 0;\n\n    Nz = ((6 * 255) / parameters.width45) | 0;\n    Nz2 = Nz * Nz;\n    NzLz = Nz * Lz;\n\n    background = Lz;\n\n    for (let y = 0; y < height; y += 1) {\n      for (let x = 0; x < width; x += 1) {\n        bumpPixels.push(brightness(this.getOriginalPixel(x, y)) | 0);\n      }\n    }\n\n    for (let y = 0; y < height; y += 1, bumpIndex += bumpMapWidth) {\n      s1 = bumpIndex;\n      s2 = s1 + bumpMapWidth;\n      s3 = s2 + bumpMapWidth;\n\n      for (let x = 0; x < width; x += 1, s1 += 1, s2 += 1, s3 += 1) {\n        if (y != 0 && y < height - 2 && x != 0 && x < width - 2) {\n          Nx =\n            bumpPixels[s1 - 1] +\n            bumpPixels[s2 - 1] +\n            bumpPixels[s3 - 1] -\n            bumpPixels[s1 + 1] -\n            bumpPixels[s2 + 1] -\n            bumpPixels[s3 + 1];\n          Ny =\n            bumpPixels[s3 - 1] +\n            bumpPixels[s3] +\n            bumpPixels[s3 + 1] -\n            bumpPixels[s1 - 1] -\n            bumpPixels[s1] -\n            bumpPixels[s1 + 1];\n\n          if (Nx == 0 && Ny == 0) {\n            shade = background;\n          } else {\n            if ((NdotL = Nx * Lx + Ny * Ly + NzLz) < 0) {\n              shade = 0;\n            } else {\n              shade = NdotL / Math.sqrt(Nx * Nx + Ny * Ny + Nz2);\n            }\n          }\n        } else {\n          shade = background;\n        }\n\n        if (parameters.emboss) {\n          pixel = this.getOriginalPixelByIndex(index);\n          r = (pixel.r * shade) >> 8;\n          g = (pixel.g * shade) >> 8;\n          b = (pixel.b * shade) >> 8;\n          this.setPixelByIndex(index++, {\n            r: r,\n            g: g,\n            b: b,\n            a: pixel.a,\n          });\n        } else {\n          this.setPixelByIndex(index++, {\n            r: shade,\n            g: shade << 8,\n            b: shade << 16,\n            a: 255,\n          });\n        }\n      }\n    }\n  }\n}\n\nexport default EmbossEffect;\n","import BaseCustomEffect from \"../BaseCustom\";\n\nclass ComponentStretchingEffect extends BaseCustomEffect {\n  static getName(): string {\n    return \"component-stretching\";\n  }\n\n  callback(width: number, height: number, parameters: object) {\n    let minR = Infinity,\n      minG = Infinity,\n      minB = Infinity,\n      maxR = -1,\n      maxG = -1,\n      maxB = -1,\n      pixel;\n\n    const remap = function remap(value, min, max) {\n      return ((value - min) * 255) / (max - min);\n    };\n\n    for (let y = 0; y < height; y += 1) {\n      for (let x = 0; x < width; x += 1) {\n        pixel = this.getPixel(x, y);\n\n        minR = Math.min(pixel.r, minR);\n        minG = Math.min(pixel.g, minG);\n        minB = Math.min(pixel.b, minB);\n\n        maxR = Math.max(pixel.r, maxR);\n        maxG = Math.max(pixel.g, maxG);\n        maxB = Math.max(pixel.b, maxB);\n      }\n    }\n\n    for (let y = 0; y < height; y += 1) {\n      for (let x = 0; x < width; x += 1) {\n        pixel = this.getPixel(x, y);\n\n        pixel.r = remap(pixel.r, minR, maxR);\n        pixel.g = remap(pixel.g, minG, maxG);\n        pixel.b = remap(pixel.b, minB, maxB);\n\n        this.setPixel(x, y, pixel);\n      }\n    }\n  }\n}\n\nexport default ComponentStretchingEffect;\n","import GrayScale from \"./effects/point/GrayScale\";\nimport Sepia from \"./effects/point/Sepia\";\nimport Contrast from \"./effects/point/Contrast\";\nimport Brightness from \"./effects/point/Brightness\";\nimport Diffusion from \"./effects/point/Diffusion\";\nimport Dither from \"./effects/point/Dither\";\nimport Exposure from \"./effects/point/Exposure\";\nimport Gain from \"./effects/point/Gain\";\nimport Gamma from \"./effects/point/Gamma\";\nimport HSBAdjust from \"./effects/point/HSBAdjust\";\nimport InvertAlpha from \"./effects/point/InvertAlpha\";\nimport Invert from \"./effects/point/Invert\";\nimport Levels from \"./effects/point/Levels\";\nimport Rescale from \"./effects/point/Rescale\";\nimport Solarize from \"./effects/point/Solarize\";\nimport Threshold from \"./effects/point/Threshold\";\nimport Tritone from \"./effects/point/Tritone\";\nimport Dissolve from \"./effects/point/Dissolve\";\nimport Edge from \"./effects/point/Edge\";\nimport ChannelMix from \"./effects/point/ChannelMix\";\nimport AutoContrast from \"./effects/point/AutoContrast\";\n\nimport Diffuse from \"./effects/transform/Diffuse\";\nimport Kaleidoscope from \"./effects/transform/Kaleidoscope\";\nimport Marble from \"./effects/transform/Marble\";\nimport Pinch from \"./effects/transform/Pinch\";\nimport Ripple from \"./effects/transform/Ripple\";\nimport Shear from \"./effects/transform/Shear\";\nimport Sphere from \"./effects/transform/Sphere\";\nimport Swim from \"./effects/transform/Swim\";\nimport Twirl from \"./effects/transform/Twirl\";\nimport Water from \"./effects/transform/Water\";\nimport Circle from \"./effects/transform/Circle\";\nimport Rotate from \"./effects/transform/Rotate\";\nimport Offset from \"./effects/transform/Offset\";\nimport Polar from \"./effects/transform/Polar\";\nimport Perspective from \"./effects/transform/Perspective\";\n\nimport AutoWhiteBalance from \"./effects/custom/AutoWhiteBalance\";\nimport FillColor from \"./effects/custom/FillColor\";\nimport Flip from \"./effects/custom/Flip\";\nimport Block from \"./effects/custom/Block\";\nimport Border from \"./effects/custom/Border\";\nimport Emboss from \"./effects/custom/Emboss\";\nimport ComponentStretching from \"./effects/custom/ComponentStretching\";\n\nconst availableEffects = {};\n\nfunction add(_class) {\n  if (availableEffects[_class.getName()]) {\n    throw `Effect: ${_class.getName()} exists already!`;\n  }\n  availableEffects[_class.getName()] = _class;\n}\n\nadd(GrayScale);\nadd(Sepia);\nadd(Contrast);\nadd(Brightness);\nadd(Diffusion);\nadd(Dither);\nadd(Exposure);\nadd(Gain);\nadd(Gamma);\nadd(HSBAdjust);\nadd(InvertAlpha);\nadd(Invert);\nadd(Levels);\nadd(Rescale);\nadd(Solarize);\nadd(Threshold);\nadd(Tritone);\nadd(Diffuse);\nadd(Dissolve);\nadd(Kaleidoscope);\nadd(Marble);\nadd(Pinch);\nadd(Ripple);\nadd(Shear);\nadd(Sphere);\nadd(Swim);\nadd(Twirl);\nadd(Water);\nadd(Edge);\nadd(ChannelMix);\nadd(Circle);\nadd(Rotate);\nadd(Offset);\nadd(Polar);\nadd(Perspective);\nadd(AutoContrast);\nadd(AutoWhiteBalance);\nadd(FillColor);\nadd(Flip);\nadd(Block);\nadd(Border);\nadd(Emboss);\nadd(ComponentStretching);\n\nclass EffectsRepository {\n  static get(name) {\n    return availableEffects[name];\n  }\n}\n\nexport default EffectsRepository;\n","import CanvasWrapper from \"./CanvasWrapper\";\nimport { cropImageData } from \"../helpers/common\";\nimport EffectsRepository from \"./EffectsRepository\";\nimport Layer from \"./Layer\";\nimport BaseEffect from \"./effects/Base\";\nimport BaseOnLayerObject from \"./BaseOnLayerObject\";\n\ninterface EffectType {\n  name: string;\n  effect: BaseEffect;\n  parameters: object;\n}\n\nclass LayerObject {\n  protected obj: BaseOnLayerObject = null;\n\n  protected layer: Layer = null;\n\n  protected x: number = 0;\n\n  protected y: number = 0;\n\n  protected opts: object = {};\n\n  protected effects: EffectType[] = [];\n\n  constructor(\n    obj: BaseOnLayerObject,\n    layer: Layer,\n    x: number,\n    y: number,\n    opts: object\n  ) {\n    this.obj = obj;\n    this.layer = layer;\n    this.x = x;\n    this.y = y;\n    this.opts = opts;\n  }\n\n  getObject(): BaseOnLayerObject {\n    return this.obj;\n  }\n\n  getX(): number {\n    return this.x;\n  }\n\n  getY(): number {\n    return this.y;\n  }\n\n  getWidth(): number {\n    return this.obj.getWidth();\n  }\n\n  getHeight(): number {\n    return this.obj.getHeight();\n  }\n\n  exportObject(): ImageData {\n    let imageData = this.obj.getImageData();\n    for (let i = 0; i < this.effects.length; i += 1) {\n      imageData = this.effects[i].effect.run(\n        imageData,\n        this.effects[i].parameters\n      );\n    }\n    return imageData;\n  }\n\n  applyEffect(name: string, parameters: object = {}): LayerObject {\n    this.effects.push({\n      name,\n      effect: new (EffectsRepository.get(name))(),\n      parameters,\n    });\n    return this;\n  }\n\n  moveXY(x: number, y: number): LayerObject {\n    this.moveX(x);\n    this.moveY(y);\n    return this;\n  }\n\n  moveX(x: number): LayerObject {\n    this.x += x | 0;\n    return this;\n  }\n\n  moveY(y: number): LayerObject {\n    this.y += y | 0;\n    return this;\n  }\n\n  setXY(x: number, y: number): LayerObject {\n    this.setX(x);\n    this.setY(y);\n    return this;\n  }\n\n  setX(x: number): LayerObject {\n    this.x = x;\n    return this;\n  }\n\n  setY(y: number): LayerObject {\n    this.y = y;\n    return this;\n  }\n\n  resize(\n    newWidth: number,\n    newHeight: number,\n    mode: string,\n    isLayerResize: boolean\n  ): LayerObject {\n    const oldWidth = this.getWidth(),\n      oldHeight = this.getHeight(),\n      ratioX = newWidth / oldWidth,\n      ratioY = newHeight / oldHeight;\n\n    if (isLayerResize) {\n      this.moveXY(-this.getX() * ratioX, -this.getY() * ratioY);\n    }\n\n    if (typeof newHeight === \"undefined\") {\n      this.getObject().resize(oldWidth * newWidth, oldHeight * newWidth, mode);\n    } else {\n      this.getObject().resize(newWidth, newHeight, mode);\n    }\n\n    return this;\n  }\n\n  crop(\n    startX: number,\n    startY: number,\n    width: number,\n    height: number\n  ): LayerObject {\n    const object = this.getObject(),\n      oldImageData = object.getImageData(),\n      canvas = new CanvasWrapper(width, height),\n      newImageData = canvas.getContext().createImageData(width, height),\n      result = cropImageData(\n        oldImageData,\n        newImageData,\n        startX,\n        startY,\n        width,\n        height\n      );\n\n    object.setImageData(result).setWidth(width).setHeight(height);\n\n    this.setXY(startX, startY);\n\n    return this;\n  }\n}\n\nexport default LayerObject;\n","import CanvasWrapper from \"./CanvasWrapper\";\nimport LayerObject from \"./LayerObject\";\nimport { mergeImageData, mergePixelCallback } from \"../helpers/common\";\nimport EffectsRepository from \"./EffectsRepository\";\nimport BaseEffect from \"./effects/Base\";\n\ninterface EffectType {\n  name: string;\n  effect: BaseEffect;\n  parameters: object;\n}\n\nclass Layer {\n  protected objects: LayerObject[] = [];\n\n  protected effects: EffectType[] = [];\n\n  protected x: number = 0;\n\n  protected y: number = 0;\n\n  protected canvas: CanvasWrapper = null;\n\n  protected imageData: ImageData = null;\n\n  protected width: number = 0;\n\n  protected height: number = 0;\n\n  parameters: {\n    backgroundColor?: string;\n    blendingMode?: string;\n  } = {\n    backgroundColor: \"\",\n    blendingMode: \"\",\n  };\n\n  constructor(\n    width: number,\n    height: number,\n    parameters: {\n      backgroundColor?: string;\n      blendingMode?: string;\n    } = {\n      backgroundColor: \"\",\n      blendingMode: \"\",\n    }\n  ) {\n    this.initialize(width, height, parameters);\n\n    if (\n      parameters.backgroundColor &&\n      parameters.backgroundColor !== \"transparent\"\n    ) {\n      this.applyEffect(\"fill-color\", {\n        color: parameters.backgroundColor,\n      });\n    }\n  }\n\n  initialize(width: number, height: number, parameters): void {\n    this.canvas = new CanvasWrapper(width, height);\n    this.imageData = this.canvas.getContext().createImageData(width, height);\n    this.width = width;\n    this.height = height;\n    this.parameters = parameters;\n  }\n\n  put(obj: any, x: number, y: number): LayerObject {\n    const put = new LayerObject(obj, this, x, y, {});\n    this.objects.push(put);\n    return put;\n  }\n\n  exportLayer(): ImageData {\n    for (let i = 0; i < this.objects.length; i += 1) {\n      const layerObject = this.objects[i];\n      this.imageData = mergeImageData(\n        {\n          width: this.width,\n          height: this.height,\n          imageData: this.imageData,\n        },\n        {\n          x: layerObject.getX(),\n          y: layerObject.getY(),\n          width: layerObject.getWidth(),\n          height: layerObject.getHeight(),\n          imageData: layerObject.exportObject(),\n        },\n        mergePixelCallback\n      );\n    }\n\n    for (let i = 0; i < this.effects.length; i++) {\n      this.imageData = this.effects[i].effect.run(\n        this.imageData,\n        this.effects[i].parameters\n      );\n    }\n\n    return this.imageData;\n  }\n\n  applyEffect(name: string, parameters: object): Layer {\n    this.effects.push({\n      name,\n      effect: new (EffectsRepository.get(name))(),\n      parameters,\n    });\n    return this;\n  }\n\n  resize(newWidth: number, newHeight: number, mode: string): Layer {\n    this.canvas.destroy();\n    this.canvas = null;\n    this.imageData = null;\n\n    if (typeof newHeight === \"undefined\") {\n      this.initialize(this.width * newWidth, this.height * newWidth, this.parameters);\n    } else {\n      this.initialize(newWidth, newHeight, this.parameters);\n    }\n\n    for (let i = 0; i < this.objects.length; i += 1) {\n      this.objects[i].resize(newWidth, newHeight, mode, true);\n    }\n\n    return this;\n  }\n\n  crop(startX: number, startY: number, width: number, height: number): Layer {\n    for (let i = 0; i < this.objects.length; i += 1) {\n      this.objects[i].crop(startX, startY, width, height);\n    }\n\n    return this;\n  }\n\n  moveXY(x: number, y: number): Layer {\n    this.moveX(x);\n    this.moveY(y);\n    return this;\n  }\n\n  moveX(x: number): Layer {\n    this.x += x | 0;\n    return this;\n  }\n\n  moveY(y: number): Layer {\n    this.y += y | 0;\n    return this;\n  }\n\n  setX(x: number): Layer {\n    this.x = x;\n    return this;\n  }\n\n  setY(y: number): Layer {\n    this.y = y;\n    return this;\n  }\n\n  setBlendingMode(blendingMode: string): Layer {\n    this.parameters.blendingMode = blendingMode;\n    return this;\n  }\n\n  getX(): number {\n    return this.x;\n  }\n\n  getY(): number {\n    return this.y;\n  }\n\n  getWidth(): number {\n    return this.width;\n  }\n\n  getHeight(): number {\n    return this.height;\n  }\n\n  getParameter(name: string): any {\n    return this.parameters[name];\n  }\n}\n\nexport default Layer;\n","import CanvasWrapper from \"./CanvasWrapper\";\nimport Layer from \"./Layer\";\nimport {\n  mergeImageData,\n  mergePixelCallback,\n  isBrowser,\n} from \"../helpers/common\";\nimport EffectsRepository from \"./EffectsRepository\";\nimport BaseEffect from \"./effects/Base\";\n\ninterface EffectType {\n  name: string;\n  effect: BaseEffect;\n  parameters: object;\n}\n\nclass Project {\n  protected imageData: ImageData = null;\n\n  protected effects: EffectType[] = [];\n\n  protected layers: Layer[] = [];\n\n  protected startTime: Date = new Date();\n\n  protected parameters: object = {};\n\n  protected width: number = 0;\n\n  protected height: number = 0;\n\n  protected canvas: CanvasWrapper = null;\n\n  constructor(width: number, height: number, parameters: object = {}) {\n    this.initialize(width, height, parameters);\n  }\n\n  initialize(width: number, height: number, parameters: object = {}): void {\n    this.parameters = parameters;\n    this.width = width;\n    this.height = height;\n    this.canvas = new CanvasWrapper(width, height);\n    this.imageData = this.canvas.getContext().getImageData(0, 0, width, height);\n  }\n\n  createLayer(\n    parameters: {\n      backgroundColor?: string;\n      blendingMode?: string;\n    } = { backgroundColor: \"\", blendingMode: \"\" }\n  ): Layer {\n    let layer = new Layer(this.width, this.height, parameters);\n    this.layers.push(layer);\n    return layer;\n  }\n\n  getTime(): number {\n    let end = new Date();\n    return end.getTime() - this.startTime.getTime();\n  }\n\n  save(path: string, imageType: string = \"image/png\"): void {\n    if (isBrowser()) {\n      throw new Error(\"Available only in node.js environment\");\n    }\n\n    for (let i = 0; i < this.layers.length; i++) {\n      this.imageData = mergeImageData(\n        {\n          width: this.width,\n          height: this.height,\n          imageData: this.imageData,\n        },\n        {\n          x: this.layers[i].getX(),\n          y: this.layers[i].getY(),\n          width: this.layers[i].getWidth(),\n          height: this.layers[i].getHeight(),\n          imageData: this.layers[i].exportLayer(),\n          blendingMode: this.layers[i].getParameter(\"blendingMode\"),\n        },\n        mergePixelCallback\n      );\n    }\n\n    for (let i = 0; i < this.effects.length; i++) {\n      this.imageData = this.effects[i].effect.run(\n        this.imageData,\n        this.effects[i].parameters\n      );\n    }\n\n    this.canvas.getContext().putImageData(this.imageData, 0, 0);\n\n    const fs = require(\"fs\"),\n      img = this.canvas.toDataURL(),\n      data = img.replace(/^data:image\\/\\w+;base64,/, \"\"),\n      buff = Buffer.from(data, \"base64\");\n\n    fs.writeFileSync(path, buff);\n  }\n\n  render(imageType: string = \"image/png\"): HTMLImageElement {\n    if (!isBrowser()) {\n      throw new Error(\"Available only in browser environment\");\n    }\n\n    const exportedImage = new window.Image();\n\n    for (let i = 0; i < this.layers.length; i++) {\n      this.imageData = mergeImageData(\n        {\n          width: this.width,\n          height: this.height,\n          imageData: this.imageData,\n        },\n        {\n          x: this.layers[i].getX(),\n          y: this.layers[i].getY(),\n          width: this.layers[i].getWidth(),\n          height: this.layers[i].getHeight(),\n          imageData: this.layers[i].exportLayer(),\n          blendingMode: this.layers[i].getParameter(\"blendingMode\"),\n        },\n        mergePixelCallback\n      );\n    }\n\n    for (let i = 0; i < this.effects.length; i++) {\n      this.imageData = this.effects[i].effect.run(\n        this.imageData,\n        this.effects[i].parameters\n      );\n    }\n\n    this.canvas.getContext().putImageData(this.imageData, 0, 0);\n\n    exportedImage.src = this.canvas.toDataURL(imageType);\n    return exportedImage;\n  }\n\n  applyEffect(name: string, parameters: object = {}): Project {\n    this.effects.push({\n      name,\n      effect: new (EffectsRepository.get(name))(),\n      parameters,\n    });\n    return this;\n  }\n\n  resize(newWidth: number, newHeight: number, mode: string = \"nearest-neighbour\"): Project {\n    this.canvas.destroy();\n    this.canvas = null;\n    this.imageData = null;\n\n    if (typeof newHeight === \"undefined\") {\n      this.initialize((this.width * newWidth) | 0, (this.height * newWidth) | 0)\n    } else {\n      this.initialize(newWidth, newHeight);\n    }\n\n    for (let i = 0; i < this.layers.length; i += 1) {\n      this.layers[i].resize(newWidth, newHeight, mode);\n    }\n\n    return this;\n  }\n}\n\nexport default Project;\n","export function resizeNearestNeighbour(\n  oldImageData: ImageData,\n  newImageData: ImageData,\n  newWidth: number,\n  newHeight: number\n): ImageData {\n  let oldWidth = oldImageData.width,\n    oldHeight = oldImageData.height,\n    ratioX = oldWidth / newWidth,\n    ratioY = oldHeight / newHeight,\n    oldPixelIndex,\n    newPixelIndex,\n    x,\n    y;\n\n  for (y = 0; y < newHeight; y += 1) {\n    for (x = 0; x < newWidth; x += 1) {\n      oldPixelIndex =\n        Math.floor(y * ratioY) * oldWidth * 4 + Math.floor(x * ratioX) * 4;\n      newPixelIndex = y * newWidth * 4 + x * 4;\n\n      newImageData.data[newPixelIndex + 0] =\n        oldImageData.data[oldPixelIndex + 0];\n      newImageData.data[newPixelIndex + 1] =\n        oldImageData.data[oldPixelIndex + 1];\n      newImageData.data[newPixelIndex + 2] =\n        oldImageData.data[oldPixelIndex + 2];\n      newImageData.data[newPixelIndex + 3] =\n        oldImageData.data[oldPixelIndex + 3];\n    }\n  }\n\n  return newImageData;\n}\n\nexport function resizeBilinearInterpolation(\n  oldImageData: ImageData,\n  newImageData: ImageData,\n  newWidth: number,\n  newHeight: number\n): ImageData {\n  let oldWidth = oldImageData.width,\n    oldHeight = oldImageData.height,\n    ratioX = oldWidth / newWidth,\n    ratioY = oldHeight / newHeight,\n    newPixelIndex,\n    x,\n    y,\n    x0,\n    y0,\n    dx,\n    dy,\n    x1,\n    y1,\n    oldPixelIndex00,\n    oldPixelIndex01,\n    oldPixelIndex10,\n    oldPixelIndex11,\n    i,\n    j;\n\n  for (i = 0; i < newHeight; i += 1) {\n    for (j = 0; j < newWidth; j += 1) {\n      x = j * ratioX;\n      y = i * ratioY;\n      x0 = Math.floor(x);\n      y0 = Math.floor(y);\n      dx = x - x0;\n      dy = y - y0;\n      x1 = x0 + 1;\n      y1 = y0 + 1;\n\n      if (x1 >= oldWidth) {\n        x1 = x0;\n      }\n      if (y1 >= oldHeight) {\n        y1 = y0;\n      }\n\n      oldPixelIndex00 = (y0 * oldWidth + x0) * 4;\n      oldPixelIndex01 = (y0 * oldWidth + x1) * 4;\n      oldPixelIndex10 = (y1 * oldWidth + x0) * 4;\n      oldPixelIndex11 = (y1 * oldWidth + x1) * 4;\n      newPixelIndex = (i * newWidth + j) * 4;\n\n      newImageData.data[newPixelIndex] =\n        (1.0 - dy) *\n          ((1.0 - dx) * oldImageData.data[oldPixelIndex00] +\n            dx * oldImageData.data[oldPixelIndex01]) +\n        dy *\n          ((1.0 - dx) * oldImageData.data[oldPixelIndex10] +\n            dx * oldImageData.data[oldPixelIndex11]);\n      newImageData.data[newPixelIndex + 1] =\n        (1.0 - dy) *\n          ((1.0 - dx) * oldImageData.data[oldPixelIndex00 + 1] +\n            dx * oldImageData.data[oldPixelIndex01 + 1]) +\n        dy *\n          ((1.0 - dx) * oldImageData.data[oldPixelIndex10 + 1] +\n            dx * oldImageData.data[oldPixelIndex11 + 1]);\n      newImageData.data[newPixelIndex + 2] =\n        (1.0 - dy) *\n          ((1.0 - dx) * oldImageData.data[oldPixelIndex00 + 2] +\n            dx * oldImageData.data[oldPixelIndex01 + 2]) +\n        dy *\n          ((1.0 - dx) * oldImageData.data[oldPixelIndex10 + 2] +\n            dx * oldImageData.data[oldPixelIndex11 + 2]);\n      newImageData.data[newPixelIndex + 3] =\n        (1.0 - dy) *\n          ((1.0 - dx) * oldImageData.data[oldPixelIndex00 + 3] +\n            dx * oldImageData.data[oldPixelIndex01 + 3]) +\n        dy *\n          ((1.0 - dx) * oldImageData.data[oldPixelIndex10 + 3] +\n            dx * oldImageData.data[oldPixelIndex11 + 3]);\n    }\n  }\n\n  return newImageData;\n}\n\nexport function resizeBiquadraticInterpolation(\n  oldImageData: ImageData,\n  newImageData: ImageData,\n  newWidth: number,\n  newHeight: number\n): ImageData {\n  let interpolate = function interpolate(f1, f2, f3, d) {\n      return f2 + (f3 - f1) * d + (f1 - 2 * f2 + f3) * d * d;\n    },\n    interpolateNormalize = function interpolateNormalize(f1, f2, f3, d) {\n      let result = interpolate(f1, f2, f3, d);\n      if (result > 255) {\n        return 255;\n      }\n      if (result < 0) {\n        return 0;\n      }\n      return Math.floor(result);\n    },\n    oldWidth = oldImageData.width,\n    oldHeight = oldImageData.height,\n    ratioX = oldWidth / newWidth,\n    ratioY = oldHeight / newHeight,\n    x,\n    y,\n    x0,\n    y0,\n    x1,\n    y1,\n    x2,\n    y2,\n    dx,\n    dy,\n    oldPixelIndex00,\n    oldPixelIndex01,\n    oldPixelIndex02,\n    oldPixelIndex10,\n    oldPixelIndex11,\n    oldPixelIndex12,\n    oldPixelIndex20,\n    oldPixelIndex21,\n    oldPixelIndex22,\n    newPixelIndex,\n    i,\n    j;\n\n  for (i = 0; i < newHeight; i += 1) {\n    for (j = 0; j < newWidth; j += 1) {\n      x = j * ratioX;\n      y = i * ratioY;\n\n      x1 = Math.floor(x);\n      y1 = Math.floor(y);\n      dx = (x - x1) * 0.5;\n      dy = (y - y1) * 0.5;\n\n      if (x1 - 1 >= 0) {\n        x0 = x1 - 1;\n      } else {\n        x0 = x1;\n      }\n\n      if (y1 - 1 >= 0) {\n        y0 = y1 - 1;\n      } else {\n        y0 = y1;\n      }\n\n      if (x1 + 1 >= oldWidth) {\n        x2 = x1;\n      } else {\n        x2 = x1 + 1;\n      }\n\n      if (y1 + 1 >= oldWidth) {\n        y2 = y1;\n      } else {\n        y2 = y1 + 1;\n      }\n\n      oldPixelIndex00 = (y0 * oldWidth + x0) * 4;\n      oldPixelIndex01 = (y0 * oldWidth + x1) * 4;\n      oldPixelIndex02 = (y0 * oldWidth + x2) * 4;\n      oldPixelIndex10 = (y1 * oldWidth + x0) * 4;\n      oldPixelIndex11 = (y1 * oldWidth + x1) * 4;\n      oldPixelIndex12 = (y1 * oldWidth + x2) * 4;\n      oldPixelIndex20 = (y2 * oldWidth + x0) * 4;\n      oldPixelIndex21 = (y2 * oldWidth + x1) * 4;\n      oldPixelIndex22 = (y2 * oldWidth + x2) * 4;\n\n      newPixelIndex = (i * newWidth + j) * 4;\n\n      newImageData.data[newPixelIndex] = interpolateNormalize(\n        interpolate(\n          oldImageData.data[oldPixelIndex00],\n          oldImageData.data[oldPixelIndex01],\n          oldImageData.data[oldPixelIndex02],\n          dx\n        ),\n        interpolate(\n          oldImageData.data[oldPixelIndex10],\n          oldImageData.data[oldPixelIndex11],\n          oldImageData.data[oldPixelIndex12],\n          dx\n        ),\n        interpolate(\n          oldImageData.data[oldPixelIndex20],\n          oldImageData.data[oldPixelIndex21],\n          oldImageData.data[oldPixelIndex22],\n          dx\n        ),\n        dy\n      );\n\n      newImageData.data[newPixelIndex + 1] = interpolateNormalize(\n        interpolate(\n          oldImageData.data[oldPixelIndex00 + 1],\n          oldImageData.data[oldPixelIndex01 + 1],\n          oldImageData.data[oldPixelIndex02 + 1],\n          dx\n        ),\n        interpolate(\n          oldImageData.data[oldPixelIndex10 + 1],\n          oldImageData.data[oldPixelIndex11 + 1],\n          oldImageData.data[oldPixelIndex12 + 1],\n          dx\n        ),\n        interpolate(\n          oldImageData.data[oldPixelIndex20 + 1],\n          oldImageData.data[oldPixelIndex21 + 1],\n          oldImageData.data[oldPixelIndex22 + 1],\n          dx\n        ),\n        dy\n      );\n\n      newImageData.data[newPixelIndex + 2] = interpolateNormalize(\n        interpolate(\n          oldImageData.data[oldPixelIndex00 + 2],\n          oldImageData.data[oldPixelIndex01 + 2],\n          oldImageData.data[oldPixelIndex02 + 2],\n          dx\n        ),\n        interpolate(\n          oldImageData.data[oldPixelIndex10 + 2],\n          oldImageData.data[oldPixelIndex11 + 2],\n          oldImageData.data[oldPixelIndex12 + 2],\n          dx\n        ),\n        interpolate(\n          oldImageData.data[oldPixelIndex20 + 2],\n          oldImageData.data[oldPixelIndex21 + 2],\n          oldImageData.data[oldPixelIndex22 + 2],\n          dx\n        ),\n        dy\n      );\n\n      newImageData.data[newPixelIndex + 3] = interpolateNormalize(\n        interpolate(\n          oldImageData.data[oldPixelIndex00 + 3],\n          oldImageData.data[oldPixelIndex01 + 3],\n          oldImageData.data[oldPixelIndex02 + 3],\n          dx\n        ),\n        interpolate(\n          oldImageData.data[oldPixelIndex10 + 3],\n          oldImageData.data[oldPixelIndex11 + 3],\n          oldImageData.data[oldPixelIndex12 + 3],\n          dx\n        ),\n        interpolate(\n          oldImageData.data[oldPixelIndex20 + 3],\n          oldImageData.data[oldPixelIndex21 + 3],\n          oldImageData.data[oldPixelIndex22 + 3],\n          dx\n        ),\n        dy\n      );\n    }\n  }\n\n  return newImageData;\n}\n","import BaseOnLayerObject from \"./BaseOnLayerObject\";\nimport CanvasWrapper from \"./CanvasWrapper\";\nimport { isBrowser } from \"../helpers/common\";\nimport { Image as ImageType } from \"canvas/types\";\n\nclass Image extends BaseOnLayerObject {\n  protected url: string = null;\n\n  protected image: HTMLImageElement | ImageType = null;\n\n  constructor() {\n    super();\n\n    if (!isBrowser()) {\n      const canvas = require(\"canvas\");\n      this.image = new canvas.Image();\n    } else {\n      this.image = new window.Image();\n\n      // hide from viewport\n      this.image.style.position = \"absolute\";\n      this.image.style.left = \"-99999px\";\n      this.image.style.top = \"-99999px\";\n    }\n  }\n\n  load(url: string, callback: () => void): void {\n    const load = () => {\n      this.setWidth(!isBrowser() ? this.image.width : this.image.clientWidth);\n      this.setHeight(\n        !isBrowser() ? this.image.height : this.image.clientHeight\n      );\n\n      // get image data\n      this.canvas = new CanvasWrapper(this.getWidth(), this.getHeight());\n      this.canvas\n        .getContext()\n        .drawImage(this.image, 0, 0, this.getWidth(), this.getHeight());\n\n      if (isBrowser()) {\n        document.body.removeChild(this.image);\n      }\n\n      if (typeof callback === \"function\") {\n        callback.call(this);\n      }\n    };\n\n    this.url = url;\n\n    if (isBrowser()) {\n      document.body.appendChild(this.image);\n      this.image.onload = function () {\n        load();\n      };\n      this.image.src = url;\n    } else {\n      const fs = require(\"fs\");\n      this.image.src = fs.readFileSync(url);\n      load();\n    }\n  }\n}\n\nexport default Image;\n","import CanvasWrapper from \"./CanvasWrapper\";\nimport {\n  resizeNearestNeighbour,\n  resizeBilinearInterpolation,\n  resizeBiquadraticInterpolation,\n} from \"../helpers/resize\";\n\nclass BaseOnLayerObject {\n  protected imageData: ImageData = null;\n\n  protected canvas: CanvasWrapper = null;\n\n  protected width: number = 0;\n\n  protected height: number = 0;\n\n  getWidth(): number {\n    return this.width;\n  }\n\n  getHeight(): number {\n    return this.height;\n  }\n\n  setWidth(value: number): BaseOnLayerObject {\n    this.width = value;\n    return this;\n  }\n\n  setHeight(value: number): BaseOnLayerObject {\n    this.height = value;\n    return this;\n  }\n\n  getImageData(): ImageData {\n    if (!this.imageData) {\n      this.imageData = this.canvas\n        .getContext()\n        .getImageData(0, 0, this.getWidth(), this.getHeight());\n    }\n    return this.imageData;\n  }\n\n  setImageData(value: ImageData): BaseOnLayerObject {\n    this.imageData = value;\n    return this;\n  }\n\n  resize(\n    newWidth: number,\n    newHeight: number,\n    mode: string = \"nearest-neighbour\"\n  ): BaseOnLayerObject {\n    const oldImageData = this.getImageData(),\n      canvas = new CanvasWrapper(newWidth, newHeight);\n    let newImageData = canvas.getContext().createImageData(newWidth, newHeight);\n\n    switch (mode) {\n      case \"nearest-neighbour\":\n        newImageData = resizeNearestNeighbour(\n          oldImageData,\n          newImageData,\n          newWidth,\n          newHeight\n        );\n        break;\n\n      case \"bilinear-interpolation\":\n        newImageData = resizeBilinearInterpolation(\n          oldImageData,\n          newImageData,\n          newWidth,\n          newHeight\n        );\n        break;\n\n      case \"biquadratic-interpolation\":\n        newImageData = resizeBiquadraticInterpolation(\n          oldImageData,\n          newImageData,\n          newWidth,\n          newHeight\n        );\n        break;\n\n      default:\n        canvas.destroy();\n        return this;\n    }\n\n    canvas.destroy();\n\n    return this.setWidth(newWidth)\n      .setHeight(newHeight)\n      .setImageData(newImageData);\n  }\n}\n\nexport default BaseOnLayerObject;\n"],"names":["module","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","blendingModes","lighten","bottomPixel","topPixel","darken","multiply","average","add","Math","min","subtract","difference","abs","negation","screen","exclusion","overlay","softLight","hardLight","colorDodge","colorBurn","max","linearDodge","linearBurn","linearLight","vividLight","pinLight","hardMix","reflect","glow","phoenix","mergeImageData","bottom","top","pixelCallback","x","y","xx","yy","firstOldPixelIndex","firstNewPixelIndex","pixelResult","height","width","imageData","data","g","b","a","blendingMode","mergePixelCallback","parameters","mergedR","mergedG","mergedB","mergedA","rootA","outA","rootR","rootG","rootB","mod","floor","triangle","brightness","pixel","isBrowser","window","CanvasWrapper","this","initialize","canvas","document","createElement","style","position","left","setWidth","setHeight","body","appendChild","createCanvas","setAttribute","context","getContext","type","toDataURL","removeChild","BaseEffect","opts","BasePointEffect","firstPixelIndex","result","getDefaultParameters","imageDataCopy","Uint8ClampedArray","getIndex","normalizePixelValue","sandbox","getPixel","index","getOriginalPixel","setPixel","rgba","before","callback","set","GrayScaleEffect","newRGB","SepiaEffect","sepiaValue","tmp","ContrastEffect","factor","contrast","BrightnessEffect","DiffusionEffect","map","div","sum","matrix","levels","colorDither","granulate","i","length","red2","green2","blue2","tmpPixel","tmpRed","tmpGreen","tmpBlue","iy","jx","w","grayScale","red1","green1","blue1","j","DitherEffect","cols","rows","matrices","ditherMagic4x4Matrix","ditherOrdered4x4Matrix","ditherLines4x4Matrix","dither90Halftone6x6Matrix","ditherOrdered6x6Matrix","ditherOrdered8x8Matrix","ditherCluster3Matrix","ditherCluster4Matrix","ditherCluster8Matrix","sqrt","col","row","v","red","green","blue","ExposureEffect","exposure","exp","GainEffect","gain","bias","GammaEffect","table","gammaRed","gammaGreen","gammaBlue","pow","mixColors","t","rgb1","rgb2","RGBtoCIELab","xyz","let_R","let_G","let_B","z","RGBtoXYZ","let_X","let_Y","let_Z","l","HSBAdjustEffect","h","s","hsb","hue","saturation","cmax","cmin","redc","greenc","bluec","RGBtoHSB","PI","f","p","q","parseInt","HSBtoRGB","InvertAlphaEffect","InvertEffect","LevelsEffect","lut","low","high","lowOutput","highOutput","histogram","offset","stride","Array","minValue","maxValue","minFrequency","maxFrequency","mean","numSamples","isGray","Infinity","getNumSamples","getFrequency","channel","getMinFrequency","getMaxFrequency","getMinValue","getMaxValue","getMeanValue","RescaleEffect","scale","SolarizeEffect","ThresholdEffect","TritoneEffect","shadowColor","midColor","highColor","DissolveEffect","minDensity","maxDensity","density","softness","random","smoothStep","EdgeEffect","hEdgeMatrix","vEdgeMatrix","matrixes","robertsV","robertsH","prewittV","prewittH","sobelV","sobelH","freiChenV","freiChenH","_hEdgeMatrix","_vEdgeMatrix","ix","mOffset","pixel2","rh","gh","bh","rv","gv","bv","ChannelMixEffect","blueGreen","redBlue","greenRed","intoR","intoG","intoB","AutoContrastEffect","remap","BaseTransformEffect","newXY","newX","newY","oldPixelIndex","newPixelIndex","DiffuseEffect","sinTable","cosTable","angle","sin","cos","distance","KaleidoscopeEffect","icentreX","icentreY","centreX","centreY","angle2","sides","radius","dx","dy","theta","atan2","c","radiusC","isInit","init","B","BM","N","P","G1","G2","G3","k","normalize2","normalize3","arr","sCurve","lerp","noise1","bx0","bx1","rx0","rx1","sx","u","noise2","by0","by1","b00","b10","b01","b11","ry0","ry1","sy","noise3","bz0","bz1","rz0","rz1","sz","turbulence3","octaves","MarbleEffect","displacementMap","xScale","yScale","amount","turbulence","noiseHelper","displacement","PinchEffect","radius2","e","RippleEffect","xAmplitude","yAmplitude","xWaveLength","yWaveLength","waveType","fx","fy","nx","ny","noise","ShearEffect","shx","shy","xAngle","yAngle","xOffset","yOffset","SphereEffect","a2","b2","refractionIndex","x2","y2","rRefraction","z2","acos","angle1","asin","ret","tan","SwimEffect","m00","m01","m10","m11","time","stretch","TwirlEffect","iCentreX","iCentreY","WaterEffect","waveLength","amplitude","phase","distance2","CircleEffect","spreadAngle","RotateEffect","wrap","PolarEffect","sqr","theta2","atan","PerspectiveEffect","A","C","D","E","F","G","H","I","x0","y0","x1","y1","x3","y3","a11","a21","a31","a12","a22","a32","a13","a23","a33","dx1","dy1","dx2","dy2","dx3","dy3","unitSquareToQuad","BaseCustomEffect","getOriginalPixelByIndex","setPixelByIndex","AutoWhiteBalanceEffect","intensity","lab","avgSumB","aDelta","bDelta","sumA","sumB","CIELabToXYZ","FillColorEffect","color","hex","_hex","replace","FlipEffect","operation","newRow","newCol","BlockEffect","blockSize","by","bx","BorderEffect","leftBorder","rightBorder","topBorder","bottomBorder","borderColor","EmbossEffect","azimuth","elevation","width45","emboss","Nx","Ny","Nz","Lx","Ly","Lz","Nz2","NzLz","NdotL","s1","s2","s3","shade","background","bumpMapWidth","bumpPixels","pixelScale","bumpIndex","push","ComponentStretchingEffect","minR","minG","minB","maxR","maxG","maxB","availableEffects","_class","getName","GrayScale","Sepia","Contrast","Brightness","Diffusion","Dither","Exposure","Gain","Gamma","HSBAdjust","InvertAlpha","Invert","Levels","Rescale","Solarize","Threshold","Tritone","Diffuse","Dissolve","Kaleidoscope","Marble","Pinch","Ripple","Shear","Sphere","Swim","Twirl","Water","Edge","ChannelMix","Circle","Rotate","Offset","Polar","Perspective","AutoContrast","AutoWhiteBalance","FillColor","Flip","Block","Border","Emboss","ComponentStretching","EffectsRepository","name","LayerObject","layer","getWidth","getHeight","getImageData","effects","effect","run","moveX","moveY","setX","setY","newWidth","newHeight","mode","isLayerResize","oldWidth","oldHeight","ratioX","ratioY","moveXY","getX","getY","getObject","resize","startX","startY","object","oldImageData","newImageData","cropImageData","createImageData","setImageData","setXY","Layer","backgroundColor","applyEffect","put","objects","layerObject","exportObject","destroy","crop","Project","Date","layers","getTime","startTime","path","Error","exportLayer","getParameter","putImageData","fs","buff","Buffer","from","writeFileSync","imageType","exportedImage","Image","src","resizeNearestNeighbour","resizeBilinearInterpolation","oldPixelIndex00","oldPixelIndex01","oldPixelIndex10","oldPixelIndex11","resizeBiquadraticInterpolation","oldPixelIndex02","oldPixelIndex12","oldPixelIndex20","oldPixelIndex21","oldPixelIndex22","interpolate","f1","f2","f3","interpolateNormalize","image","url","load","clientWidth","clientHeight","drawImage","onload","readFileSync","BaseOnLayerObject"],"sourceRoot":""}