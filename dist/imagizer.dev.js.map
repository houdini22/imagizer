{"version":3,"file":"imagizer.dev.js","mappings":"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C,EAAiD;AAC/C,UAAIoT,CAAC,GAAGxI,IAAI,CAACyI,MAAL,EAAR;AAAA,UACEC,CAAC,GAAGT,2DAAU,CAAC,KAAK/I,IAAL,CAAUiJ,UAAX,EAAuB,KAAKjJ,IAAL,CAAUkJ,UAAjC,EAA6CI,CAA7C,CADhB;AAEA9I,MAAAA,KAAK,CAACe,CAAN,GAAUf,KAAK,CAACe,CAAN,GAAUiI,CAApB;AACA,aAAOhJ,KAAP;AACD;;;WA7BD,mBAAiB;AACf,aAAO,UAAP;AACD;;;;EAH0BuB;;AAiC7B,iEAAeiH,cAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpCA;;IAEMS;;;;;;;;;;;;;WAaJ,gCAAuB;AACrB,aAAO;AACLC,QAAAA,QAAQ,EAAE;AACRC,UAAAA,oBAAoB,EAAE,CACpB,CADoB,EACjB,EADiB,EACb,CADa,EACV,EADU,EACN,EADM,EACF,CADE,EACC,CADD,EACI,CADJ,EACO,EADP,EACW,CADX,EACc,EADd,EACkB,CADlB,EACqB,CADrB,EACwB,CADxB,EAC2B,CAD3B,EAC8B,EAD9B,CADd;AAIRC,UAAAA,sBAAsB,EAAE,CACtB,CADsB,EACnB,CADmB,EAChB,CADgB,EACb,EADa,EACT,EADS,EACL,CADK,EACF,EADE,EACE,CADF,EACK,CADL,EACQ,EADR,EACY,CADZ,EACe,CADf,EACkB,EADlB,EACsB,CADtB,EACyB,EADzB,EAC6B,CAD7B,CAJhB;AAORC,UAAAA,oBAAoB,EAAE,CACpB,CADoB,EACjB,CADiB,EACd,CADc,EACX,CADW,EACR,CADQ,EACL,CADK,EACF,CADE,EACC,CADD,EACI,CADJ,EACO,CADP,EACU,EADV,EACc,EADd,EACkB,EADlB,EACsB,EADtB,EAC0B,EAD1B,EAC8B,EAD9B,CAPd;AAURC,UAAAA,yBAAyB,EAAE,CACzB,EADyB,EACrB,EADqB,EACjB,EADiB,EACb,EADa,EACT,EADS,EACL,EADK,EACD,EADC,EACG,CADH,EACM,CADN,EACS,CADT,EACY,EADZ,EACgB,EADhB,EACoB,EADpB,EACwB,CADxB,EAC2B,CAD3B,EAC8B,CAD9B,EACiC,CADjC,EACoC,EADpC,EACwC,EADxC,EAEzB,CAFyB,EAEtB,CAFsB,EAEnB,CAFmB,EAEhB,EAFgB,EAEZ,EAFY,EAER,EAFQ,EAEJ,EAFI,EAEA,EAFA,EAEI,EAFJ,EAEQ,EAFR,EAEY,EAFZ,EAEgB,EAFhB,EAEoB,EAFpB,EAEwB,EAFxB,EAE4B,EAF5B,EAEgC,EAFhC,EAEoC,EAFpC,CAVnB;AAcRC,UAAAA,sBAAsB,EAAE,CACtB,CADsB,EACnB,EADmB,EACf,EADe,EACX,EADW,EACP,CADO,EACJ,EADI,EACA,EADA,EACI,EADJ,EACQ,EADR,EACY,EADZ,EACgB,EADhB,EACoB,EADpB,EACwB,EADxB,EAC4B,EAD5B,EACgC,EADhC,EACoC,EADpC,EACwC,CADxC,EAC2C,EAD3C,EAEtB,CAFsB,EAEnB,EAFmB,EAEf,EAFe,EAEX,EAFW,EAEP,CAFO,EAEJ,EAFI,EAEA,EAFA,EAEI,EAFJ,EAEQ,EAFR,EAEY,EAFZ,EAEgB,EAFhB,EAEoB,EAFpB,EAEwB,EAFxB,EAE4B,EAF5B,EAEgC,CAFhC,EAEmC,EAFnC,EAEuC,EAFvC,EAE2C,EAF3C,EAGtB,CAHsB,EAGnB,EAHmB,EAGf,EAHe,EAGX,EAHW,EAGP,EAHO,EAGH,EAHG,EAGC,EAHD,EAGK,EAHL,EAGS,EAHT,EAGa,EAHb,EAGiB,EAHjB,EAGqB,EAHrB,EAGyB,EAHzB,EAG6B,EAH7B,EAGiC,CAHjC,EAGoC,EAHpC,EAGwC,CAHxC,EAG2C,EAH3C,EAItB,CAJsB,EAInB,EAJmB,EAIf,EAJe,EAIX,EAJW,EAIP,EAJO,EAIH,EAJG,EAIC,EAJD,EAIK,EAJL,EAIS,EAJT,EAIa,EAJb,CAdhB;AAoBRC,UAAAA,sBAAsB,EAAE,CACtB,CADsB,EACnB,GADmB,EACd,EADc,EACV,GADU,EACL,EADK,EACD,GADC,EACI,EADJ,EACQ,GADR,EACa,CADb,EACgB,GADhB,EACqB,EADrB,EACyB,GADzB,EAC8B,EAD9B,EACkC,GADlC,EACuC,EADvC,EAC2C,GAD3C,EAEtB,GAFsB,EAEjB,EAFiB,EAEb,GAFa,EAER,GAFQ,EAEH,GAFG,EAEE,EAFF,EAEM,GAFN,EAEW,GAFX,EAEgB,GAFhB,EAEqB,EAFrB,EAEyB,GAFzB,EAE8B,GAF9B,EAEmC,GAFnC,EAEwC,EAFxC,EAE4C,GAF5C,EAGtB,GAHsB,EAGjB,EAHiB,EAGb,GAHa,EAGR,EAHQ,EAGJ,GAHI,EAGC,EAHD,EAGK,GAHL,EAGU,EAHV,EAGc,GAHd,EAGmB,EAHnB,EAGuB,GAHvB,EAG4B,EAH5B,EAGgC,GAHhC,EAGqC,EAHrC,EAGyC,GAHzC,EAItB,EAJsB,EAIlB,GAJkB,EAIb,GAJa,EAIR,EAJQ,EAIJ,GAJI,EAIC,EAJD,EAIK,GAJL,EAIU,GAJV,EAIe,GAJf,EAIoB,EAJpB,EAIwB,GAJxB,EAI6B,EAJ7B,EAIiC,GAJjC,EAIsC,EAJtC,EAI0C,GAJ1C,EAKtB,GALsB,EAKjB,GALiB,EAKZ,EALY,EAKR,CALQ,EAKL,GALK,EAKA,EALA,EAKI,GALJ,EAKS,CALT,EAKY,GALZ,EAKiB,EALjB,EAKqB,GALrB,EAK0B,EAL1B,EAK8B,GAL9B,EAKmC,EALnC,EAKuC,GALvC,EAK4C,CAL5C,EAMtB,GANsB,EAMjB,EANiB,EAMb,GANa,EAMR,GANQ,EAMH,EANG,EAMC,GAND,EAMM,GANN,EAMW,GANX,EAMgB,EANhB,EAMoB,GANpB,EAMyB,GANzB,EAM8B,GAN9B,EAMmC,EANnC,EAMuC,GANvC,EAM4C,GAN5C,EAOtB,GAPsB,EAOjB,EAPiB,EAOb,GAPa,EAOR,GAPQ,EAOH,EAPG,EAOC,GAPD,EAOM,EAPN,EAOU,GAPV,EAOe,EAPf,EAOmB,GAPnB,EAOwB,EAPxB,EAO4B,GAP5B,EAOiC,EAPjC,EAOqC,GAPrC,EAO0C,EAP1C,EAQtB,GARsB,EAQjB,EARiB,EAQb,GARa,EAQR,EARQ,EAQJ,GARI,EAQC,GARD,EAQM,GARN,EAQW,GARX,EAQgB,EARhB,EAQoB,GARpB,EAQyB,GARzB,EAQ8B,GAR9B,EAQmC,EARnC,EAQuC,GARvC,EAQ4C,GAR5C,EAStB,GATsB,EASjB,EATiB,EASb,GATa,EASR,GATQ,EASH,GATG,EASE,EATF,EASM,CATN,EASS,GATT,EASc,EATd,EASkB,GATlB,EASuB,EATvB,EAS2B,GAT3B,EASgC,EAThC,EASoC,GATpC,EASyC,CATzC,EAS4C,GAT5C,EAUtB,EAVsB,EAUlB,GAVkB,EAUb,EAVa,EAUT,GAVS,EAUJ,EAVI,EAUA,GAVA,EAUK,GAVL,EAUU,EAVV,EAUc,GAVd,EAUmB,GAVnB,EAUwB,GAVxB,EAU6B,EAV7B,EAUiC,GAVjC,EAUsC,GAVtC,EAU2C,GAV3C,EAWtB,EAXsB,EAWlB,GAXkB,EAWb,GAXa,EAWR,GAXQ,EAWH,EAXG,EAWC,GAXD,EAWM,GAXN,EAWW,EAXX,EAWe,GAXf,EAWoB,EAXpB,EAWwB,GAXxB,EAW6B,EAX7B,EAWiC,GAXjC,EAWsC,EAXtC,EAW0C,GAX1C,EAYtB,EAZsB,EAYlB,GAZkB,EAYb,EAZa,EAYT,GAZS,EAYJ,EAZI,EAYA,GAZA,EAYK,EAZL,EAYS,GAZT,EAYc,GAZd,EAYmB,EAZnB,EAYuB,GAZvB,EAY4B,EAZ5B,EAYgC,GAZhC,EAYqC,GAZrC,EAY0C,GAZ1C,EAatB,EAbsB,EAalB,GAbkB,EAab,EAba,EAaT,GAbS,EAaJ,EAbI,EAaA,GAbA,EAaK,GAbL,EAaU,GAbV,EAae,EAbf,EAamB,EAbnB,EAauB,GAbvB,EAa4B,EAb5B,EAagC,GAbhC,EAaqC,CAbrC,EAawC,GAbxC,EAa6C,EAb7C,EActB,GAdsB,EAcjB,CAdiB,EAcd,GAdc,EAcT,EAdS,EAcL,GAdK,EAcA,CAdA,EAcG,GAdH,EAcQ,EAdR,EAcY,GAdZ,EAciB,GAdjB,EAcsB,EAdtB,EAc0B,GAd1B,EAc+B,GAd/B,EAcoC,GAdpC,EAcyC,EAdzC,EAetB,GAfsB,EAejB,GAfiB,EAeZ,GAfY,EAeP,EAfO,EAeH,GAfG,EAeE,GAfF,EAeO,GAfP,EAeY,EAfZ,EAegB,GAfhB,EAeqB,GAfrB,EAe0B,EAf1B,EAe8B,GAf9B,EAemC,EAfnC,EAeuC,GAfvC,EAe4C,EAf5C,EAgBtB,GAhBsB,EAgBjB,EAhBiB,EAgBb,GAhBa,EAgBR,EAhBQ,EAgBJ,GAhBI,EAgBC,EAhBD,EAgBK,GAhBL,EAgBU,EAhBV,EAgBc,GAhBd,EAgBmB,EAhBnB,EAgBuB,GAhBvB,EAgB4B,GAhB5B,EAgBiC,GAhBjC,EAgBsC,GAhBtC,EAgB2C,EAhB3C,EAiBtB,GAjBsB,EAiBjB,GAjBiB,EAiBZ,GAjBY,EAiBP,EAjBO,EAiBH,GAjBG,EAiBE,GAjBF,EAiBO,GAjBP,EAiBY,EAjBZ,EAiBgB,GAjBhB,EAiBqB,GAjBrB,EAiB0B,GAjB1B,EAiB+B,EAjB/B,CApBhB;AAuCRC,UAAAA,oBAAoB,EAAE,CACpB,CADoB,EACjB,EADiB,EACb,EADa,EACT,CADS,EACN,CADM,EACH,CADG,EACA,EADA,EACI,EADJ,EACQ,EADR,EACY,CADZ,EACe,CADf,EACkB,CADlB,EACqB,EADrB,EACyB,EADzB,EAC6B,EAD7B,EACiC,CADjC,EACoC,CADpC,EACuC,CADvC,EAC0C,CAD1C,EAC6C,CAD7C,EACgD,CADhD,EAEpB,CAFoB,EAEjB,EAFiB,EAEb,EAFa,EAET,CAFS,EAEN,CAFM,EAEH,CAFG,EAEA,EAFA,EAEI,EAFJ,EAEQ,EAFR,EAEY,CAFZ,EAEe,CAFf,EAEkB,CAFlB,EAEqB,EAFrB,EAEyB,EAFzB,EAE6B,EAF7B,CAvCd;AA2CRC,UAAAA,oBAAoB,EAAE,CACpB,EADoB,EAChB,EADgB,EACZ,EADY,EACR,EADQ,EACJ,EADI,EACA,EADA,EACI,EADJ,EACQ,EADR,EACY,EADZ,EACgB,EADhB,EACoB,EADpB,EACwB,EADxB,EAC4B,CAD5B,EAC+B,CAD/B,EACkC,CADlC,EACqC,CADrC,EACwC,EADxC,EAC4C,EAD5C,EAEpB,EAFoB,EAEhB,EAFgB,EAEZ,CAFY,EAET,CAFS,EAEN,CAFM,EAEH,EAFG,EAEC,EAFD,EAEK,EAFL,EAES,EAFT,EAEa,EAFb,EAEiB,CAFjB,EAEoB,CAFpB,EAEuB,CAFvB,EAE0B,EAF1B,EAE8B,EAF9B,EAEkC,EAFlC,EAEsC,EAFtC,EAE0C,EAF1C,EAE8C,EAF9C,EAGpB,EAHoB,EAGhB,EAHgB,EAGZ,EAHY,EAGR,CAHQ,EAGL,CAHK,EAGF,CAHE,EAGC,CAHD,EAGI,EAHJ,EAGQ,EAHR,EAGY,EAHZ,EAGgB,EAHhB,EAGoB,CAHpB,EAGuB,CAHvB,EAG0B,CAH1B,EAG6B,EAH7B,EAGiC,EAHjC,EAGqC,EAHrC,EAGyC,EAHzC,EAG6C,EAH7C,EAIpB,CAJoB,EAIjB,CAJiB,EAId,CAJc,EAIX,EAJW,EAIP,EAJO,EAIH,EAJG,EAIC,EAJD,EAIK,EAJL,CA3Cd;AAiDRC,UAAAA,oBAAoB,EAAE,CACpB,EADoB,EAChB,EADgB,EACZ,EADY,EACR,EADQ,EACJ,EADI,EACA,EADA,EACI,EADJ,EACQ,EADR,EACY,EADZ,EACgB,EADhB,EACoB,EADpB,EACwB,EADxB,EAC4B,EAD5B,EACgC,EADhC,EACoC,EADpC,EACwC,EADxC,EAC4C,EAD5C,EAEpB,EAFoB,EAEhB,GAFgB,EAEX,GAFW,EAEN,GAFM,EAED,EAFC,EAEG,EAFH,EAEO,EAFP,EAEW,EAFX,EAEe,EAFf,EAEmB,EAFnB,EAEuB,EAFvB,EAE2B,EAF3B,EAE+B,EAF/B,EAEmC,EAFnC,EAEuC,EAFvC,EAE2C,EAF3C,EAGpB,GAHoB,EAGf,GAHe,EAGV,GAHU,EAGL,GAHK,EAGA,GAHA,EAGK,EAHL,EAGS,EAHT,EAGa,EAHb,EAGiB,EAHjB,EAGqB,EAHrB,EAGyB,EAHzB,EAG6B,EAH7B,EAGiC,EAHjC,EAGqC,EAHrC,EAGyC,EAHzC,EAG6C,EAH7C,EAIpB,GAJoB,EAIf,GAJe,EAIV,GAJU,EAIL,GAJK,EAIA,GAJA,EAIK,GAJL,EAIU,EAJV,EAIc,EAJd,EAIkB,EAJlB,EAIsB,CAJtB,EAIyB,CAJzB,EAI4B,CAJ5B,EAI+B,CAJ/B,EAIkC,EAJlC,EAIsC,EAJtC,EAI0C,EAJ1C,EAI8C,GAJ9C,EAKpB,GALoB,EAKf,GALe,EAKV,GALU,EAKL,GALK,EAKA,GALA,EAKK,EALL,EAKS,EALT,EAKa,EALb,EAKiB,CALjB,EAKoB,CALpB,EAKuB,CALvB,EAK0B,EAL1B,EAK8B,EAL9B,EAKkC,EALlC,EAKsC,EALtC,EAK0C,GAL1C,EAMpB,GANoB,EAMf,GANe,EAMV,GANU,EAML,GANK,EAMA,EANA,EAMI,EANJ,EAMQ,EANR,EAMY,EANZ,EAMgB,CANhB,EAMmB,CANnB,EAMsB,CANtB,EAMyB,EANzB,EAM6B,EAN7B,EAMiC,EANjC,EAMqC,EANrC,EAMyC,EANzC,EAM6C,GAN7C,EAOpB,GAPoB,EAOf,GAPe,EAOV,EAPU,EAON,EAPM,EAOF,EAPE,EAOE,EAPF,EAOM,EAPN,EAOU,EAPV,EAOc,EAPd,EAOkB,EAPlB,EAOsB,EAPtB,EAO0B,EAP1B,EAO8B,EAP9B,EAOkC,EAPlC,EAOsC,EAPtC,EAO0C,EAP1C,EAO8C,EAP9C,EAQpB,EARoB,EAQhB,EARgB,EAQZ,EARY,EAQR,EARQ,EAQJ,EARI,EAQA,EARA,EAQI,EARJ,EAQQ,EARR,EAQY,EARZ,EAQgB,EARhB,EAQoB,EARpB,EAQwB,EARxB,EAQ4B,EAR5B,EAQgC,EARhC,EAQoC,EARpC,EAQwC,EARxC,EAQ4C,EAR5C,EASpB,EAToB,EAShB,EATgB,EASZ,EATY,EASR,EATQ,EASJ,EATI,EASA,EATA,EASI,EATJ,EASQ,EATR,EASY,EATZ,EASgB,EAThB,EASoB,EATpB,EASwB,EATxB,EAS4B,EAT5B,EASgC,EAThC,EASoC,EATpC,EASwC,EATxC,EAS4C,EAT5C,EAUpB,EAVoB,EAUhB,EAVgB,EAUZ,EAVY,EAUR,EAVQ,EAUJ,GAVI,EAUC,GAVD,EAUM,GAVN,EAUW,EAVX,EAUe,EAVf,EAUmB,EAVnB,EAUuB,EAVvB,EAU2B,EAV3B,EAU+B,EAV/B,EAUmC,EAVnC,EAUuC,EAVvC,EAU2C,EAV3C,EAU+C,EAV/C,EAWpB,EAXoB,EAWhB,EAXgB,EAWZ,GAXY,EAWP,GAXO,EAWF,GAXE,EAWG,GAXH,EAWQ,GAXR,EAWa,EAXb,EAWiB,EAXjB,EAWqB,EAXrB,EAWyB,EAXzB,EAW6B,CAX7B,EAWgC,CAXhC,EAWmC,CAXnC,EAWsC,CAXtC,EAWyC,EAXzC,EAW6C,EAX7C,EAYpB,EAZoB,EAYhB,GAZgB,EAYX,GAZW,EAYN,GAZM,EAYD,GAZC,EAYI,GAZJ,EAYS,GAZT,EAYc,EAZd,EAYkB,EAZlB,EAYsB,EAZtB,EAY0B,CAZ1B,EAY6B,CAZ7B,EAYgC,CAZhC,EAYmC,EAZnC,EAYuC,EAZvC,EAY2C,EAZ3C,EAY+C,EAZ/C,EAapB,GAboB,EAaf,GAbe,EAaV,GAbU,EAaL,GAbK,EAaA,GAbA,EAaK,GAbL,EAaU,EAbV,EAac,EAbd,EAakB,EAblB,EAasB,CAbtB,EAayB,CAbzB,EAa4B,CAb5B,EAa+B,EAb/B,EAamC,EAbnC,EAauC,EAbvC,EAa2C,EAb3C,EAcpB,GAdoB,EAcf,GAde,EAcV,GAdU,EAcL,GAdK,EAcA,GAdA,EAcK,EAdL,EAcS,EAdT,EAca,EAdb,EAciB,EAdjB,EAcqB,EAdrB,EAcyB,EAdzB,EAc6B,EAd7B,EAciC,EAdjC,EAcqC,EAdrC,EAcyC,EAdzC,EAc6C,EAd7C,EAepB,EAfoB,EAehB,GAfgB,EAeX,GAfW,EAeN,GAfM,EAeD,EAfC,EAeG,EAfH,EAeO,EAfP,EAeW,EAfX,EAee,EAff,EAemB,EAfnB,EAeuB,EAfvB,EAe2B,EAf3B,EAe+B,EAf/B,EAemC,EAfnC,EAeuC,EAfvC,EAe2C,EAf3C,EAe+C,EAf/C,EAgBpB,EAhBoB,EAgBhB,EAhBgB,EAgBZ,EAhBY,EAgBR,EAhBQ,EAgBJ,EAhBI,EAgBA,EAhBA;AAjDd,SADL;AAqELrC,QAAAA,MAAM,EAAE,CArEH;AAsELD,QAAAA,MAAM,EAAE,sBAtEH;AAuELE,QAAAA,WAAW,EAAE;AAvER,OAAP;AAyED;;;WAED,gBAAOvL,UAAP,EAAmBvG,KAAnB,EAA0BC,MAA1B,EAAkCE,SAAlC,EAA6C;AAC3C,UAAIyR,MAAM,GAAGrL,UAAU,CAACqL,MAAxB;AAAA,UACEuC,IADF;AAAA,UAEEC,IAFF;AAAA,UAGE3C,GAAG,GAAG,EAHR;AAAA,UAIEC,GAAG,GAAG,EAJR;AAAA,UAKE2C,GAAG,GAAG,EALR;AAAA,UAMEnN,CANF;;AAQA,UAAI,OAAO0K,MAAP,KAAkB,QAAtB,EAAgC;AAC9BA,QAAAA,MAAM,GAAGrL,UAAU,CAACkN,QAAX,CAAoB7B,MAApB,CAAT;AACD;;AAEDuC,MAAAA,IAAI,GAAGtJ,IAAI,CAACsF,IAAL,CAAUyB,MAAM,CAACzK,MAAjB,CAAP;AACAiN,MAAAA,IAAI,GAAGvJ,IAAI,CAACsF,IAAL,CAAUyB,MAAM,CAACzK,MAAjB,CAAP;;AAEA,WAAKD,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGX,UAAU,CAACsL,MAA3B,EAAmC3K,CAAC,IAAI,CAAxC,EAA2C;AACzCuK,QAAAA,GAAG,CAACvK,CAAD,CAAH,GAAU,MAAMA,CAAP,IAAaX,UAAU,CAACsL,MAAX,GAAoB,CAAjC,CAAT;AACD;;AAED,WAAK3K,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,GAAhB,EAAqBA,CAAC,IAAI,CAA1B,EAA6B;AAC3BwK,QAAAA,GAAG,CAACxK,CAAD,CAAH,GAAW,CAACX,UAAU,CAACsL,MAAX,GAAoB,CAArB,IAA0B3K,CAA3B,GAAgC,GAAjC,GAAwC,CAAjD;AACAmN,QAAAA,GAAG,CAACnN,CAAD,CAAH,GAAWA,CAAC,IAAIiN,IAAI,GAAGC,IAAP,GAAc,CAAlB,CAAF,GAA0B,GAA3B,GAAkC,CAA3C;AACD;;AAED,aAAO;AACLxC,QAAAA,MAAM,EAAEA,MADH;AAELH,QAAAA,GAAG,EAAEA,GAFA;AAGLC,QAAAA,GAAG,EAAEA,GAHA;AAIL2C,QAAAA,GAAG,EAAEA,GAJA;AAKLD,QAAAA,IAAI,EAAEA,IALD;AAMLD,QAAAA,IAAI,EAAEA;AAND,OAAP;AAQD;;;WAED,kBAAS5J,KAAT,EAAgB1D,CAAhB,EAAmBC,CAAnB,EAAsBP,UAAtB,EAAkCvG,KAAlC,EAAyCC,MAAzC,EAAiD;AAC/C,UAAIqU,GAAG,GAAGzN,CAAC,GAAG,KAAKkD,IAAL,CAAUqK,IAAxB;AAAA,UACEG,GAAG,GAAGzN,CAAC,GAAG,KAAKiD,IAAL,CAAUoK,IADtB;AAAA,UAEEd,CAAC,GAAG9M,UAAU,CAACqL,MAAX,CAAkB2C,GAAG,GAAG,KAAKxK,IAAL,CAAUqK,IAAhB,GAAuBE,GAAzC,CAFN;AAAA,UAGEE,GAAG,GAAGjK,KAAK,CAACY,CAHd;AAAA,UAIEsJ,KAAK,GAAGlK,KAAK,CAACa,CAJhB;AAAA,UAKEsJ,IAAI,GAAGnK,KAAK,CAACc,CALf;AAAA,UAMErC,MAAM,GAAG;AAAEsC,QAAAA,CAAC,EAAEf,KAAK,CAACe,CAAX;AAAcH,QAAAA,CAAC,EAAE,CAAjB;AAAoBC,QAAAA,CAAC,EAAE,CAAvB;AAA0BC,QAAAA,CAAC,EAAE;AAA7B,OANX;AAAA,UAOEnL,KAPF;;AASA,UAAIqG,UAAU,CAACuL,WAAf,EAA4B;AAC1B9I,QAAAA,MAAM,CAACmC,CAAP,GACE,KAAKpB,IAAL,CAAU0H,GAAV,CACE,KAAK1H,IAAL,CAAUsK,GAAV,CAAcG,GAAd,IAAqBnB,CAArB,GAAyB,KAAKtJ,IAAL,CAAU2H,GAAV,CAAc8C,GAAd,IAAqB,CAA9C,GAAkD,KAAKzK,IAAL,CAAU2H,GAAV,CAAc8C,GAAd,CADpD,CADF;AAIAxL,QAAAA,MAAM,CAACoC,CAAP,GACE,KAAKrB,IAAL,CAAU0H,GAAV,CACE,KAAK1H,IAAL,CAAUsK,GAAV,CAAcI,KAAd,IAAuBpB,CAAvB,GACI,KAAKtJ,IAAL,CAAU2H,GAAV,CAAc+C,KAAd,IAAuB,CAD3B,GAEI,KAAK1K,IAAL,CAAU2H,GAAV,CAAc+C,KAAd,CAHN,CADF;AAMAzL,QAAAA,MAAM,CAACqC,CAAP,GACE,KAAKtB,IAAL,CAAU0H,GAAV,CACE,KAAK1H,IAAL,CAAUsK,GAAV,CAAcK,IAAd,IAAsBrB,CAAtB,GACI,KAAKtJ,IAAL,CAAU2H,GAAV,CAAcgD,IAAd,IAAsB,CAD1B,GAEI,KAAK3K,IAAL,CAAU2H,GAAV,CAAcgD,IAAd,CAHN,CADF;AAMD,OAjBD,MAiBO;AACLxU,QAAAA,KAAK,GAAG,CAACsU,GAAG,GAAGC,KAAN,GAAcC,IAAf,IAAuB,CAA/B;AACA1L,QAAAA,MAAM,CAACmC,CAAP,GACEnC,MAAM,CAACoC,CAAP,GACApC,MAAM,CAACqC,CAAP,GACE,KAAKtB,IAAL,CAAU0H,GAAV,CACE,KAAK1H,IAAL,CAAUsK,GAAV,CAAcnU,KAAd,IAAuBmT,CAAvB,GACI,KAAKtJ,IAAL,CAAU2H,GAAV,CAAcxR,KAAd,IAAuB,CAD3B,GAEI,KAAK6J,IAAL,CAAU2H,GAAV,CAAcxR,KAAd,CAHN,CAHJ;AAQD;;AAED,aAAO8I,MAAP;AACD;;;WAnKD,mBAAiB;AACf,aAAO,QAAP;AACD;;;;EAHwB8C;;AAuK3B,iEAAe0H,YAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzKA;;IAEMmB;;;;;;;;;;;;;;;;2DAKG;AACLC,MAAAA,WAAW,EAAE,EADR;AAELC,MAAAA,WAAW,EAAE;AAFR;;;;;;;WAKP,gCAAuB;AACrB,aAAO;AACLC,QAAAA,QAAQ,EAAE;AACRC,UAAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAC,CAAR,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B,CADF;AAERC,UAAAA,QAAQ,EAAE,CAAC,CAAC,CAAF,EAAK,CAAL,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B,CAFF;AAGRC,UAAAA,QAAQ,EAAE,CAAC,CAAC,CAAF,EAAK,CAAL,EAAQ,CAAR,EAAW,CAAC,CAAZ,EAAe,CAAf,EAAkB,CAAlB,EAAqB,CAAC,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,CAHF;AAIRC,UAAAA,QAAQ,EAAE,CAAC,CAAC,CAAF,EAAK,CAAC,CAAN,EAAS,CAAC,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,CAJF;AAKRC,UAAAA,MAAM,EAAE,CAAC,CAAC,CAAF,EAAK,CAAL,EAAQ,CAAR,EAAW,CAAC,CAAZ,EAAe,CAAf,EAAkB,CAAlB,EAAqB,CAAC,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,CALA;AAMRC,UAAAA,MAAM,EAAE,CAAC,CAAC,CAAF,EAAK,CAAC,CAAN,EAAS,CAAC,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,CANA;AAORC,UAAAA,SAAS,EAAE,CAAC,CAAC,CAAF,EAAK,CAAL,EAAQ,CAAR,EAAW,CAACxK,IAAI,CAACsF,IAAL,CAAU,CAAV,CAAZ,EAA0B,CAA1B,EAA6BtF,IAAI,CAACsF,IAAL,CAAU,CAAV,CAA7B,EAA2C,CAAC,CAA5C,EAA+C,CAA/C,EAAkD,CAAlD,CAPH;AAQRmF,UAAAA,SAAS,EAAE,CAAC,CAAC,CAAF,EAAK,CAACzK,IAAI,CAACsF,IAAL,CAAU,CAAV,CAAN,EAAoB,CAAC,CAArB,EAAwB,CAAxB,EAA2B,CAA3B,EAA8B,CAA9B,EAAiC,CAAjC,EAAoCtF,IAAI,CAACsF,IAAL,CAAU,CAAV,CAApC,EAAkD,CAAlD;AARH,SADL;AAWLyE,QAAAA,WAAW,EAAE,QAXR;AAYLC,QAAAA,WAAW,EAAE;AAZR,OAAP;AAcD;;;WAED,gBAAOtO,UAAP,EAAmBvG,KAAnB,EAA0BC,MAA1B,EAAkCE,SAAlC,EAA6C;AAC3C,UAAIyU,WAAW,GAAGrO,UAAU,CAACqO,WAA7B;AAAA,UACEC,WAAW,GAAGtO,UAAU,CAACsO,WAD3B;;AAGA,UAAI,OAAOD,WAAP,KAAuB,QAA3B,EAAqC;AACnCA,QAAAA,WAAW,GAAGrO,UAAU,CAACuO,QAAX,CAAoBvO,UAAU,CAACqO,WAA/B,CAAd;AACD;;AACD,UAAI,OAAOC,WAAP,KAAuB,QAA3B,EAAqC;AACnCA,QAAAA,WAAW,GAAGtO,UAAU,CAACuO,QAAX,CAAoBvO,UAAU,CAACsO,WAA/B,CAAd;AACD;;AACD,aAAO;AACLD,QAAAA,WAAW,EAAEA,WADR;AAELC,QAAAA,WAAW,EAAEA;AAFR,OAAP;AAID;;;WAED,kBAAStK,KAAT,EAAgB1D,CAAhB,EAAmBC,CAAnB,EAAsBP,UAAtB,EAAkCvG,KAAlC,EAAyCC,MAAzC,EAAiD;AAC/C,UAAIkL,CAAC,GAAG,CAAR;AAAA,UACEC,CAAC,GAAG,CADN;AAAA,UAEEC,CAAC,GAAG,CAFN;AAAA,UAGEkK,EAAE,GAAG,CAHP;AAAA,UAIEC,EAAE,GAAG,CAJP;AAAA,UAKEC,EAAE,GAAG,CALP;AAAA,UAMEC,EAAE,GAAG,CANP;AAAA,UAOEC,EAAE,GAAG,CAPP;AAAA,UAQEC,EAAE,GAAG,CARP;AAAA,UASErB,GATF;AAAA,UAUE5B,EAVF;AAAA,UAWE2B,GAXF;AAAA,UAYEuB,EAZF;AAAA,UAaEC,OAbF;AAAA,UAcEC,MAdF;AAAA,UAeE1I,CAfF;AAAA,UAgBEgG,CAhBF;;AAkBA,WAAKkB,GAAG,GAAG,CAAC,CAAZ,EAAeA,GAAG,IAAI,CAAtB,EAAyBA,GAAG,IAAI,CAAhC,EAAmC;AACjC5B,QAAAA,EAAE,GAAG7L,CAAC,GAAGyN,GAAT;;AACA,YAAI,EAAE,KAAK5B,EAAL,IAAWA,EAAE,GAAG1S,MAAlB,CAAJ,EAA+B;AAC7B0S,UAAAA,EAAE,GAAG7L,CAAL;AACD;;AACDgP,QAAAA,OAAO,GAAG,KAAKvB,GAAG,GAAG,CAAX,IAAgB,CAA1B;;AACA,aAAKD,GAAG,GAAG,CAAC,CAAZ,EAAeA,GAAG,IAAI,CAAtB,EAAyBA,GAAG,IAAI,CAAhC,EAAmC;AACjCuB,UAAAA,EAAE,GAAGhP,CAAC,GAAGyN,GAAT;;AACA,cAAI,EAAE,KAAKuB,EAAL,IAAWA,EAAE,GAAG7V,KAAlB,CAAJ,EAA8B;AAC5B6V,YAAAA,EAAE,GAAGhP,CAAL;AACD;;AACDkP,UAAAA,MAAM,GAAG,KAAKvK,gBAAL,CAAsBqK,EAAtB,EAA0BlD,EAA1B,CAAT;AACAtF,UAAAA,CAAC,GAAG,KAAKtD,IAAL,CAAU6K,WAAV,CAAsBkB,OAAO,GAAGxB,GAAhC,CAAJ;AACAjB,UAAAA,CAAC,GAAG,KAAKtJ,IAAL,CAAU8K,WAAV,CAAsBiB,OAAO,GAAGxB,GAAhC,CAAJ;AAEAnJ,UAAAA,CAAC,GAAG4K,MAAM,CAAC5K,CAAX;AACAC,UAAAA,CAAC,GAAG2K,MAAM,CAAC3K,CAAX;AACAC,UAAAA,CAAC,GAAG0K,MAAM,CAAC1K,CAAX;AAEAkK,UAAAA,EAAE,IAAI1K,IAAI,CAACmL,KAAL,CAAW3I,CAAC,GAAGlC,CAAf,CAAN;AACAqK,UAAAA,EAAE,IAAI3K,IAAI,CAACmL,KAAL,CAAW3I,CAAC,GAAGjC,CAAf,CAAN;AACAqK,UAAAA,EAAE,IAAI5K,IAAI,CAACmL,KAAL,CAAW3I,CAAC,GAAGhC,CAAf,CAAN;AAEAqK,UAAAA,EAAE,IAAI7K,IAAI,CAACmL,KAAL,CAAW3C,CAAC,GAAGlI,CAAf,CAAN;AACAwK,UAAAA,EAAE,IAAI9K,IAAI,CAACmL,KAAL,CAAW3C,CAAC,GAAGjI,CAAf,CAAN;AACAwK,UAAAA,EAAE,IAAI/K,IAAI,CAACmL,KAAL,CAAW3C,CAAC,GAAGhI,CAAf,CAAN;AACD;AACF;;AACDF,MAAAA,CAAC,GAAGN,IAAI,CAACmL,KAAL,CAAWnL,IAAI,CAACsF,IAAL,CAAUoF,EAAE,GAAGA,EAAL,GAAUG,EAAE,GAAGA,EAAzB,IAA+B,GAA1C,CAAJ;AACAtK,MAAAA,CAAC,GAAGP,IAAI,CAACmL,KAAL,CAAWnL,IAAI,CAACsF,IAAL,CAAUqF,EAAE,GAAGA,EAAL,GAAUG,EAAE,GAAGA,EAAzB,IAA+B,GAA1C,CAAJ;AACAtK,MAAAA,CAAC,GAAGR,IAAI,CAACmL,KAAL,CAAWnL,IAAI,CAACsF,IAAL,CAAUsF,EAAE,GAAGA,EAAL,GAAUG,EAAE,GAAGA,EAAzB,IAA+B,GAA1C,CAAJ;AACA,aAAO;AACLzK,QAAAA,CAAC,EAAEA,CADE;AAELC,QAAAA,CAAC,EAAEA,CAFE;AAGLC,QAAAA,CAAC,EAAEA,CAHE;AAILC,QAAAA,CAAC,EAAEf,KAAK,CAACe;AAJJ,OAAP;AAMD;;;WAlGD,mBAAiB;AACf,aAAO,MAAP;AACD;;;;EAHsBQ;;AAsGzB,iEAAe6I,UAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxGA;;IAEMsB;;;;;;;;;;;;;WAKJ,gCAAuB;AACrB,aAAO;AACLC,QAAAA,QAAQ,EAAE;AADL,OAAP;AAGD;;;WAED,kBAAS3L,KAAT,EAAgB1D,CAAhB,EAAmBC,CAAnB,EAAsBP,UAAtB,EAAkCvG,KAAlC,EAAyCC,MAAzC,EAAiD;AAC/CsK,MAAAA,KAAK,CAACY,CAAN,GAAU,CAAC,IAAIN,IAAI,CAACsL,GAAL,CAAU,CAAC5L,KAAK,CAACY,CAAP,GAAW,GAAZ,GAAmB5E,UAAU,CAAC2P,QAAvC,CAAL,IAAyD,GAAnE;AACA3L,MAAAA,KAAK,CAACa,CAAN,GAAU,CAAC,IAAIP,IAAI,CAACsL,GAAL,CAAU,CAAC5L,KAAK,CAACa,CAAP,GAAW,GAAZ,GAAmB7E,UAAU,CAAC2P,QAAvC,CAAL,IAAyD,GAAnE;AACA3L,MAAAA,KAAK,CAACc,CAAN,GAAU,CAAC,IAAIR,IAAI,CAACsL,GAAL,CAAU,CAAC5L,KAAK,CAACc,CAAP,GAAW,GAAZ,GAAmB9E,UAAU,CAAC2P,QAAvC,CAAL,IAAyD,GAAnE;AAEA,aAAO3L,KAAP;AACD;;;WAhBD,mBAAiB;AACf,aAAO,UAAP;AACD;;;;EAH0BuB;;AAoB7B,iEAAemK,cAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBA;;IAEMG;;;;;;;;;;;;;WAKJ,gCAAuB;AACrB,aAAO;AACLC,QAAAA,IAAI,EAAE,CADD;AAELC,QAAAA,IAAI,EAAE;AAFD,OAAP;AAID;;;WAED,kBAAS/L,KAAT,EAAgB1D,CAAhB,EAAmBC,CAAnB,EAAsBP,UAAtB,EAAkCvG,KAAlC,EAAyCC,MAAzC,EAAiD;AAC/C,UAAIuU,GAAG,GAAG,CAAC,IAAIjO,UAAU,CAAC8P,IAAf,GAAsB,CAAvB,KAA6B,IAAK,IAAI9L,KAAK,CAACY,CAAX,GAAgB,GAAjD,CAAV;AAAA,UACEsJ,KAAK,GAAG,CAAC,IAAIlO,UAAU,CAAC8P,IAAf,GAAsB,CAAvB,KAA6B,IAAK,IAAI9L,KAAK,CAACa,CAAX,GAAgB,GAAjD,CADV;AAAA,UAEEsJ,IAAI,GAAG,CAAC,IAAInO,UAAU,CAAC8P,IAAf,GAAsB,CAAvB,KAA6B,IAAK,IAAI9L,KAAK,CAACc,CAAX,GAAgB,GAAjD,CAFT;;AAIA,UAAId,KAAK,CAACY,CAAN,GAAU,GAAV,GAAgB,GAApB,EAAyB;AACvBqJ,QAAAA,GAAG,GAAGjK,KAAK,CAACY,CAAN,GAAU,GAAV,GAAgBqJ,GAAhB,GAAsB,CAA5B;AACD,OAFD,MAEO;AACLA,QAAAA,GAAG,GAAG,CAACA,GAAG,GAAGjK,KAAK,CAACY,CAAN,GAAU,GAAjB,KAAyBqJ,GAAG,GAAG,CAA/B,CAAN;AACD;;AAED,UAAIjK,KAAK,CAACa,CAAN,GAAU,GAAV,GAAgB,GAApB,EAAyB;AACvBqJ,QAAAA,KAAK,GAAGlK,KAAK,CAACa,CAAN,GAAU,GAAV,GAAgBqJ,KAAhB,GAAwB,CAAhC;AACD,OAFD,MAEO;AACLA,QAAAA,KAAK,GAAG,CAACA,KAAK,GAAGlK,KAAK,CAACa,CAAN,GAAU,GAAnB,KAA2BqJ,KAAK,GAAG,CAAnC,CAAR;AACD;;AAED,UAAIlK,KAAK,CAACc,CAAN,GAAU,GAAV,GAAgB,GAApB,EAAyB;AACvBqJ,QAAAA,IAAI,GAAGnK,KAAK,CAACc,CAAN,GAAU,GAAV,GAAgBqJ,IAAhB,GAAuB,CAA9B;AACD,OAFD,MAEO;AACLA,QAAAA,IAAI,GAAG,CAACA,IAAI,GAAGnK,KAAK,CAACc,CAAN,GAAU,GAAlB,KAA0BqJ,IAAI,GAAG,CAAjC,CAAP;AACD;;AAEDF,MAAAA,GAAG,GAAGA,GAAG,IAAI,CAAC,IAAIjO,UAAU,CAAC+P,IAAf,GAAsB,CAAvB,KAA6B,IAAI9B,GAAjC,IAAwC,CAA5C,CAAT;AACAC,MAAAA,KAAK,GAAGA,KAAK,IAAI,CAAC,IAAIlO,UAAU,CAAC+P,IAAf,GAAsB,CAAvB,KAA6B,IAAI7B,KAAjC,IAA0C,CAA9C,CAAb;AACAC,MAAAA,IAAI,GAAGA,IAAI,IAAI,CAAC,IAAInO,UAAU,CAAC+P,IAAf,GAAsB,CAAvB,KAA6B,IAAI5B,IAAjC,IAAyC,CAA7C,CAAX;AAEAnK,MAAAA,KAAK,CAACY,CAAN,GAAUqJ,GAAG,GAAG,GAAhB;AACAjK,MAAAA,KAAK,CAACa,CAAN,GAAUqJ,KAAK,GAAG,GAAlB;AACAlK,MAAAA,KAAK,CAACc,CAAN,GAAUqJ,IAAI,GAAG,GAAjB;AAEA,aAAOnK,KAAP;AACD;;;WA3CD,mBAAiB;AACf,aAAO,MAAP;AACD;;;;EAHsBuB;;AA+CzB,iEAAesK,UAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjDA;;IAEMG;;;;;;;;;;;;;;;;2DAKG;AACLC,MAAAA,KAAK,EAAE;AACLrL,QAAAA,CAAC,EAAE,EADE;AAELC,QAAAA,CAAC,EAAE,EAFE;AAGLC,QAAAA,CAAC,EAAE;AAHE;AADF;;;;;;;WAQP,gCAAuB;AACrB,aAAO;AACLoL,QAAAA,QAAQ,EAAE,CADL;AAELC,QAAAA,UAAU,EAAE,CAFP;AAGLC,QAAAA,SAAS,EAAE;AAHN,OAAP;AAKD;;;WAED,kBAKE;AAAA,UAJApQ,UAIA,uEAJa;AAAEkQ,QAAAA,QAAQ,EAAE,CAAZ;AAAeC,QAAAA,UAAU,EAAE,CAA3B;AAA8BC,QAAAA,SAAS,EAAE;AAAzC,OAIb;AAAA,UAHA3W,KAGA;AAAA,UAFAC,MAEA;AAAA,UADAE,SACA;AACA,UAAIqW,KAAK,GAAG;AACRrL,QAAAA,CAAC,EAAE,EADK;AAERC,QAAAA,CAAC,EAAE,EAFK;AAGRC,QAAAA,CAAC,EAAE;AAHK,OAAZ;AAAA,UAKEnE,CALF;;AAOA,WAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,GAAhB,EAAqBA,CAAC,IAAI,CAA1B,EAA6B;AAC3BsP,QAAAA,KAAK,CAACrL,CAAN,CAAQjE,CAAR,IAAc,MAAM2D,IAAI,CAAC+L,GAAL,CAAS1P,CAAC,GAAG,GAAb,EAAkB,IAAIX,UAAU,CAACkQ,QAAjC,CAAN,GAAmD,GAApD,GAA2D,CAAxE;AACAD,QAAAA,KAAK,CAACpL,CAAN,CAAQlE,CAAR,IACG,MAAM2D,IAAI,CAAC+L,GAAL,CAAS1P,CAAC,GAAG,GAAb,EAAkB,IAAIX,UAAU,CAACmQ,UAAjC,CAAN,GAAqD,GAAtD,GAA6D,CAD/D;AAEAF,QAAAA,KAAK,CAACnL,CAAN,CAAQnE,CAAR,IACG,MAAM2D,IAAI,CAAC+L,GAAL,CAAS1P,CAAC,GAAG,GAAb,EAAkB,IAAIX,UAAU,CAACoQ,SAAjC,CAAN,GAAoD,GAArD,GAA4D,CAD9D;AAED;;AAED,aAAO;AACLH,QAAAA,KAAK,EAAEA;AADF,OAAP;AAGD;;;WAED,kBAASjM,KAAT,EAAgB1D,CAAhB,EAAmBC,CAAnB,EAAsBP,UAAtB,EAAkCvG,KAAlC,EAAyCC,MAAzC,EAAiD;AAC/C,aAAO;AACLkL,QAAAA,CAAC,EAAE,KAAKpB,IAAL,CAAUyM,KAAV,CAAgBrL,CAAhB,CAAkBZ,KAAK,CAACY,CAAxB,CADE;AAELC,QAAAA,CAAC,EAAE,KAAKrB,IAAL,CAAUyM,KAAV,CAAgBpL,CAAhB,CAAkBb,KAAK,CAACa,CAAxB,CAFE;AAGLC,QAAAA,CAAC,EAAE,KAAKtB,IAAL,CAAUyM,KAAV,CAAgBnL,CAAhB,CAAkBd,KAAK,CAACc,CAAxB,CAHE;AAILC,QAAAA,CAAC,EAAEf,KAAK,CAACe;AAJJ,OAAP;AAMD;;;WArDD,mBAAiB;AACf,aAAO,OAAP;AACD;;;;EAHuBQ;;AAyD1B,iEAAeyK,WAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3DA;;IAEMM;;;;;;;;;;;;;WAKJ,kBAAStM,KAAT,EAAgB1D,CAAhB,EAAmBC,CAAnB,EAAsBP,UAAtB,EAAkCvG,KAAlC,EAAyCC,MAAzC,EAAiD;AAC/C,UAAI6W,MAAM,GAAG,QAAQvM,KAAK,CAACY,CAAd,GAAkB,QAAQZ,KAAK,CAACa,CAAhC,GAAoC,QAAQb,KAAK,CAACc,CAA/D;AACA,aAAO;AACLF,QAAAA,CAAC,EAAE2L,MADE;AAEL1L,QAAAA,CAAC,EAAE0L,MAFE;AAGLzL,QAAAA,CAAC,EAAEyL,MAHE;AAILxL,QAAAA,CAAC,EAAEf,KAAK,CAACe;AAJJ,OAAP;AAMD;;;WAZD,mBAAiB;AACf,aAAO,YAAP;AACD;;;;EAH2BQ;;AAgB9B,iEAAe+K,eAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBA;AACA;;IAEMI;;;;;;;;;;;;;WAKJ,gCAAuB;AACrB,aAAO;AACL5J,QAAAA,CAAC,EAAE,CADE;AAEL6J,QAAAA,CAAC,EAAE,CAFE;AAGL7L,QAAAA,CAAC,EAAE;AAHE,OAAP;AAKD;;;WAED,kBAASd,KAAT,EAAgB1D,CAAhB,EAAmBC,CAAnB,EAAsBP,UAAtB,EAAkCvG,KAAlC,EAAyCC,MAAzC,EAAiD;AAC/C,UAAIkX,GAAG,GAAGJ,wDAAQ,CAACxM,KAAK,CAACY,CAAP,EAAUZ,KAAK,CAACa,CAAhB,EAAmBb,KAAK,CAACc,CAAzB,CAAlB;AAEA8L,MAAAA,GAAG,CAAC9J,CAAJ,IAAS9G,UAAU,CAAC8G,CAApB;;AACA,aAAO8J,GAAG,CAAC9J,CAAJ,GAAQ,CAAf,EAAkB;AAChB8J,QAAAA,GAAG,CAAC9J,CAAJ,IAASxC,IAAI,CAAC8D,EAAL,GAAU,CAAnB;AACD;;AAEDwI,MAAAA,GAAG,CAACD,CAAJ,IAAS3Q,UAAU,CAAC2Q,CAApB;AACAC,MAAAA,GAAG,CAACD,CAAJ,GAAQrM,IAAI,CAACE,GAAL,CAASF,IAAI,CAACC,GAAL,CAASqM,GAAG,CAACD,CAAb,EAAgB,CAAhB,CAAT,EAA6B,CAA7B,CAAR;AAEAC,MAAAA,GAAG,CAAC9L,CAAJ,IAAS9E,UAAU,CAAC8E,CAApB;AACA8L,MAAAA,GAAG,CAAC9L,CAAJ,GAAQR,IAAI,CAACE,GAAL,CAASF,IAAI,CAACC,GAAL,CAASqM,GAAG,CAAC9L,CAAb,EAAgB,CAAhB,CAAT,EAA6B,CAA7B,CAAR;AAEA,UAAIrC,MAAM,GAAGgO,wDAAQ,CAACG,GAAG,CAAC9J,CAAL,EAAQ8J,GAAG,CAACD,CAAZ,EAAeC,GAAG,CAAC9L,CAAnB,CAArB;AACAd,MAAAA,KAAK,CAACY,CAAN,GAAUnC,MAAM,CAACmC,CAAjB;AACAZ,MAAAA,KAAK,CAACa,CAAN,GAAUpC,MAAM,CAACoC,CAAjB;AACAb,MAAAA,KAAK,CAACc,CAAN,GAAUrC,MAAM,CAACqC,CAAjB;AAEA,aAAOd,KAAP;AACD;;;WAhCD,mBAAiB;AACf,aAAO,YAAP;AACD;;;;EAH2BuB;;AAoC9B,iEAAemL,eAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvCA;;IAEMG;;;;;;;;;;;;;WAKJ,kBAAS7M,KAAT,EAAgB1D,CAAhB,EAAmBC,CAAnB,EAAsBP,UAAtB,EAAkCvG,KAAlC,EAAyCC,MAAzC,EAAiD;AAC/CsK,MAAAA,KAAK,CAACY,CAAN,GAAU,MAAMZ,KAAK,CAACY,CAAtB;AACAZ,MAAAA,KAAK,CAACa,CAAN,GAAU,MAAMb,KAAK,CAACa,CAAtB;AACAb,MAAAA,KAAK,CAACc,CAAN,GAAU,MAAMd,KAAK,CAACc,CAAtB;AACA,aAAOd,KAAP;AACD;;;WATD,mBAAiB;AACf,aAAO,QAAP;AACD;;;;EAHwBuB;;AAa3B,iEAAesL,YAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfA;;IAEMC;;;;;;;;;;;;;WAKJ,kBAAS9M,KAAT,EAAgB1D,CAAhB,EAAmBC,CAAnB,EAAsBP,UAAtB,EAAkCvG,KAAlC,EAAyCC,MAAzC,EAAiD;AAC/CsK,MAAAA,KAAK,CAACe,CAAN,GAAU,MAAMf,KAAK,CAACe,CAAtB;AACA,aAAOf,KAAP;AACD;;;WAPD,mBAAiB;AACf,aAAO,cAAP;AACD;;;;EAH6BuB;;AAWhC,iEAAeuL,iBAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbA;;IAEMC;;;;;;;;;;;;;;;;2DAKG;AACLC,MAAAA,GAAG,EAAE;AACH,WAAG,EADA;AAEH,WAAG,EAFA;AAGH,WAAG;AAHA;AADA;;;;;;;WAQP,gCAAuB;AACrB,aAAO;AACLC,QAAAA,GAAG,EAAE,CADA;AAELC,QAAAA,IAAI,EAAE,CAFD;AAGLC,QAAAA,SAAS,EAAE,CAHN;AAILC,QAAAA,UAAU,EAAE;AAJP,OAAP;AAMD;;;WAED,gBAAOpR,UAAP,EAAmBvG,KAAnB,EAA0BC,MAA1B,EAAkCE,SAAlC,EAA6C;AAC3C,UAAIyX,SAAS,GAAG,SAAZA,SAAY,CAAUzX,SAAV,EAAqBH,KAArB,EAA4BC,MAA5B,EAAoC4X,MAApC,EAA4CC,MAA5C,EAAoD;AAClE,YAAI5Q,CAAJ;AAAA,YACEwL,CADF;AAAA,YAEExH,KAFF;AAAA,YAGErE,CAHF;AAAA,YAIEC,CAJF;AAAA,YAKEiR,SAAS,GAAG,IAAIC,KAAJ,CAAU,CAAV,CALd;AAAA,YAMEC,QAAQ,GAAG,IAAID,KAAJ,CAAU,CAAV,CANb;AAAA,YAOEE,QAAQ,GAAG,IAAIF,KAAJ,CAAU,CAAV,CAPb;AAAA,YAQEG,YAAY,GAAG,IAAIH,KAAJ,CAAU,CAAV,CARjB;AAAA,YASEI,YAAY,GAAG,IAAIJ,KAAJ,CAAU,CAAV,CATjB;AAAA,YAUEK,IAAI,GAAG,IAAIL,KAAJ,CAAU,CAAV,CAVT;AAAA,YAWEM,UAAU,GAAGtY,KAAK,GAAGC,MAXvB;AAAA,YAYEsY,MAAM,GAAG,IAZX;AAAA,YAaEC,GAAG,GAAG,CAbR;AAAA,YAcEC,KAAK,GAAG,CAdV;AAAA,YAeEC,IAAI,GAAG,CAfT;AAAA,YAgBEC,IAAI,GAAG,CAhBT;;AAkBA,aAAKzR,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG6Q,SAAS,CAAC5Q,MAA1B,EAAkCD,CAAC,IAAI,CAAvC,EAA0C;AACxC6Q,UAAAA,SAAS,CAAC7Q,CAAD,CAAT,GAAe,IAAI8Q,KAAJ,CAAU,GAAV,CAAf;;AACA,eAAKtF,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,GAAhB,EAAqBA,CAAC,IAAI,CAA1B,EAA6B;AAC3BqF,YAAAA,SAAS,CAAC7Q,CAAD,CAAT,CAAawL,CAAb,IAAkB,CAAlB;AACD;AACF;;AAED,aAAK5L,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG7G,MAAhB,EAAwB6G,CAAC,IAAI,CAA7B,EAAgC;AAC9B,eAAKD,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG7G,KAAhB,EAAuB6G,CAAC,IAAI,CAA5B,EAA+B;AAC7BqE,YAAAA,KAAK,GAAGpE,CAAC,GAAG9G,KAAJ,GAAY,CAAZ,GAAgB6G,CAAC,GAAG,CAA5B;AACAkR,YAAAA,SAAS,CAACS,GAAD,CAAT,CAAerY,SAAS,CAAC4J,IAAV,CAAemB,KAAf,CAAf;AACA6M,YAAAA,SAAS,CAACU,KAAD,CAAT,CAAiBtY,SAAS,CAAC4J,IAAV,CAAemB,KAAK,GAAG,CAAvB,CAAjB;AACA6M,YAAAA,SAAS,CAACW,IAAD,CAAT,CAAgBvY,SAAS,CAAC4J,IAAV,CAAemB,KAAK,GAAG,CAAvB,CAAhB;AACD;AACF;;AAED,aAAKhE,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,GAAhB,EAAqBA,CAAC,IAAI,CAA1B,EAA6B;AAC3B,cACE6Q,SAAS,CAACS,GAAD,CAAT,CAAetR,CAAf,MAAsB6Q,SAAS,CAACU,KAAD,CAAT,CAAiBvR,CAAjB,CAAtB,IACA6Q,SAAS,CAACU,KAAD,CAAT,CAAiBvR,CAAjB,MAAwB6Q,SAAS,CAACW,IAAD,CAAT,CAAgBxR,CAAhB,CAF1B,EAGE;AACAqR,YAAAA,MAAM,GAAG,KAAT;AACA;AACD;AACF;;AAED,aAAKrR,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,CAAhB,EAAmBA,CAAC,IAAI,CAAxB,EAA2B;AACzB,eAAKwL,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,GAAhB,EAAqBA,CAAC,IAAI,CAA1B,EAA6B;AAC3B,gBAAIqF,SAAS,CAAC7Q,CAAD,CAAT,CAAawL,CAAb,IAAkB,CAAtB,EAAyB;AACvBuF,cAAAA,QAAQ,CAAC/Q,CAAD,CAAR,GAAcwL,CAAd;AACA;AACD;AACF;;AACD,eAAKA,CAAC,GAAG,GAAT,EAAcA,CAAC,IAAI,CAAnB,EAAsBA,CAAC,IAAI,CAA3B,EAA8B;AAC5B,gBAAIqF,SAAS,CAAC7Q,CAAD,CAAT,CAAawL,CAAb,IAAkB,CAAtB,EAAyB;AACvBwF,cAAAA,QAAQ,CAAChR,CAAD,CAAR,GAAcwL,CAAd;AACA;AACD;AACF;;AACDyF,UAAAA,YAAY,CAACjR,CAAD,CAAZ,GAAkB+G,QAAlB;AACAmK,UAAAA,YAAY,CAAClR,CAAD,CAAZ,GAAkB,CAAlB;;AACA,eAAKwL,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,GAAhB,EAAqBA,CAAC,IAAI,CAA1B,EAA6B;AAC3ByF,YAAAA,YAAY,CAACjR,CAAD,CAAZ,GAAkB2D,IAAI,CAACC,GAAL,CAASqN,YAAY,CAACjR,CAAD,CAArB,EAA0B6Q,SAAS,CAAC7Q,CAAD,CAAT,CAAawL,CAAb,CAA1B,CAAlB;AACA0F,YAAAA,YAAY,CAAClR,CAAD,CAAZ,GAAkB2D,IAAI,CAACE,GAAL,CAASqN,YAAY,CAAClR,CAAD,CAArB,EAA0B6Q,SAAS,CAAC7Q,CAAD,CAAT,CAAawL,CAAb,CAA1B,CAAlB;AACA2F,YAAAA,IAAI,CAACnR,CAAD,CAAJ,IAAWwL,CAAC,GAAGqF,SAAS,CAAC7Q,CAAD,CAAT,CAAawL,CAAb,CAAf;AACD;;AACD2F,UAAAA,IAAI,CAACnR,CAAD,CAAJ,IAAWoR,UAAX;AACAL,UAAAA,QAAQ,CAACU,IAAD,CAAR,GAAiB9N,IAAI,CAACC,GAAL,CACfmN,QAAQ,CAACO,GAAD,CADO,EAEfP,QAAQ,CAACQ,KAAD,CAFO,EAGfR,QAAQ,CAACS,IAAD,CAHO,CAAjB;AAKAR,UAAAA,QAAQ,CAACS,IAAD,CAAR,GAAiB9N,IAAI,CAACE,GAAL,CACfmN,QAAQ,CAACM,GAAD,CADO,EAEfN,QAAQ,CAACO,KAAD,CAFO,EAGfP,QAAQ,CAACQ,IAAD,CAHO,CAAjB;AAKD;;AAED,aAAKE,aAAL,GAAqB,YAAY;AAC/B,iBAAON,UAAP;AACD,SAFD;;AAIA,aAAKC,MAAL,GAAc,YAAY;AACxB,iBAAOA,MAAP;AACD,SAFD;;AAIA,aAAKM,YAAL,GAAoB,UAAUC,OAAV,EAAmB5Y,KAAnB,EAA0B;AAC5C,cAAI,CAACA,KAAL,EAAY;AACV,gBAAIoY,UAAU,GAAG,CAAb,IAAkBC,MAAlB,IAA4BrY,KAAK,IAAI,CAArC,IAA0CA,KAAK,IAAI,GAAvD,EAA4D;AAC1D,qBAAO6X,SAAS,CAAC,CAAD,CAAT,CAAa7X,KAAb,CAAP;AACD;;AACD,mBAAO,CAAC,CAAR;AACD;;AACD,cACEoY,UAAU,GAAG,CAAb,IACAQ,OAAO,GAAG,CADV,IAEAA,OAAO,GAAG,CAFV,IAGA5Y,KAAK,GAAG,CAHR,IAIAA,KAAK,GAAG,GALV,EAME;AACA,mBAAO,CAAC,CAAR;AACD;;AACD,iBAAO6X,SAAS,CAACe,OAAD,CAAT,CAAmB5Y,KAAnB,CAAP;AACD,SAjBD;;AAmBA,aAAK6Y,eAAL,GAAuB,UAAUD,OAAV,EAAmB;AACxC,cAAI,CAACA,OAAL,EAAc;AACZ,gBAAIR,UAAU,GAAG,CAAb,IAAkBC,MAAtB,EAA8B;AAC5B,qBAAOJ,YAAY,CAAC,CAAD,CAAnB;AACD;;AACD,mBAAO,CAAC,CAAR;AACD;;AACD,cAAIG,UAAU,GAAG,CAAb,IAAkBQ,OAAO,GAAG,CAA5B,IAAiCA,OAAO,GAAG,CAA/C,EAAkD;AAChD,mBAAO,CAAC,CAAR;AACD;;AACD,iBAAOX,YAAY,CAACW,OAAD,CAAnB;AACD,SAXD;;AAaA,aAAKE,eAAL,GAAuB,UAAUF,OAAV,EAAmB;AACxC,cAAI,CAACA,OAAL,EAAc;AACZ,gBAAIR,UAAU,GAAG,CAAb,IAAkBC,MAAtB,EAA8B;AAC5B,qBAAOH,YAAY,CAAC,CAAD,CAAnB;AACD;;AACD,mBAAO,CAAC,CAAR;AACD;;AACD,cAAIE,UAAU,GAAG,CAAb,IAAkBQ,OAAO,GAAG,CAA5B,IAAiCA,OAAO,GAAG,CAA/C,EAAkD;AAChD,mBAAO,CAAC,CAAR;AACD;;AACD,iBAAOV,YAAY,CAACU,OAAD,CAAnB;AACD,SAXD;;AAaA,aAAKG,WAAL,GAAmB,UAAUH,OAAV,EAAmB;AACpC,cAAI,CAACA,OAAL,EAAc;AACZ,gBAAIR,UAAU,GAAG,CAAb,IAAkBC,MAAtB,EAA8B;AAC5B,qBAAON,QAAQ,CAAC,CAAD,CAAf;AACD;;AACD,mBAAO,CAAC,CAAR;AACD;;AACD,iBAAOA,QAAQ,CAACa,OAAD,CAAf;AACD,SARD;;AAUA,aAAKI,WAAL,GAAmB,UAAUJ,OAAV,EAAmB;AACpC,cAAI,CAACA,OAAL,EAAc;AACZ,gBAAIR,UAAU,GAAG,CAAb,IAAkBC,MAAtB,EAA8B;AAC5B,qBAAOL,QAAQ,CAAC,CAAD,CAAf;AACD;;AACD,mBAAO,CAAC,CAAR;AACD;;AACD,iBAAOA,QAAQ,CAACY,OAAD,CAAf;AACD,SARD;;AAUA,aAAKK,YAAL,GAAoB,UAAUL,OAAV,EAAmB;AACrC,cAAI,CAACA,OAAL,EAAc;AACZ,gBAAIR,UAAU,GAAG,CAAb,IAAkBC,MAAtB,EAA8B;AAC5B,qBAAOF,IAAI,CAAC,CAAD,CAAX;AACD;;AACD,mBAAO,CAAC,CAAR;AACD;;AACD,iBAAOA,IAAI,CAACS,OAAD,CAAX;AACD,SARD;AASD,OAhKD;;AAkKA,UAAIf,SAAS,GAAG,IAAIH,SAAJ,CAAczX,SAAd,EAAyBH,KAAzB,EAAgCC,MAAhC,EAAwC,CAAxC,EAA2CD,KAA3C,CAAhB;AAAA,UACEuX,GAAG,GAAG,IAAIS,KAAJ,CAAU,CAAV,CADR;AAAA,UAEER,GAAG,GAAGjR,UAAU,CAACiR,GAAX,GAAiB,GAFzB;AAAA,UAGEC,IAAI,GAAGlR,UAAU,CAACkR,IAAX,GAAkB,GAH3B;AAAA,UAIEvQ,CAJF;AAAA,UAKEwL,CALF;;AAOA,WAAKxL,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGqQ,GAAG,CAACpQ,MAApB,EAA4BD,CAAC,IAAI,CAAjC,EAAoC;AAClCqQ,QAAAA,GAAG,CAACrQ,CAAD,CAAH,GAAS,IAAI8Q,KAAJ,CAAU,GAAV,CAAT;AACD;;AACD,UAAIR,GAAG,KAAKC,IAAZ,EAAkB;AAChBA,QAAAA,IAAI;AACL;;AAED,WAAKvQ,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,CAAhB,EAAmBA,CAAC,IAAI,CAAxB,EAA2B;AACzB,aAAKwL,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,GAAhB,EAAqBA,CAAC,IAAI,CAA1B,EAA6B;AAC3B6E,UAAAA,GAAG,CAACrQ,CAAD,CAAH,CAAOwL,CAAP,IACE,OACCnM,UAAU,CAACmR,SAAX,GACE,CAACnR,UAAU,CAACoR,UAAX,GAAwBpR,UAAU,CAACmR,SAApC,KAAkDhF,CAAC,GAAG8E,GAAtD,CAAD,IACGC,IAAI,GAAGD,GADV,CAFF,CADF;AAKD;AACF;;AAEDO,MAAAA,SAAS,CAACQ,MAAV,GA3L2C,CA2LvB;;AAEpB,aAAO;AACLhB,QAAAA,GAAG,EAAEA;AADA,OAAP;AAGD;;;WAED,kBAAShN,KAAT,EAAgB1D,CAAhB,EAAmBC,CAAnB,EAAsBP,UAAtB,EAAkCvG,KAAlC,EAAyCC,MAAzC,EAAiD;AAC/C,aAAO;AACLkL,QAAAA,CAAC,EAAE,KAAKpB,IAAL,CAAUwN,GAAV,CAAc,CAAd,EAAiBhN,KAAK,CAACY,CAAvB,CADE;AAELC,QAAAA,CAAC,EAAE,KAAKrB,IAAL,CAAUwN,GAAV,CAAc,CAAd,EAAiBhN,KAAK,CAACa,CAAvB,CAFE;AAGLC,QAAAA,CAAC,EAAE,KAAKtB,IAAL,CAAUwN,GAAV,CAAc,CAAd,EAAiBhN,KAAK,CAACc,CAAvB,CAHE;AAILC,QAAAA,CAAC,EAAEf,KAAK,CAACe;AAJJ,OAAP;AAMD;;;WA9ND,mBAAiB;AACf,aAAO,QAAP;AACD;;;;EAHwBQ;;AAkO3B,iEAAewL,YAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpOA;;IAEM8B;;;;;;;;;;;;;WAKJ,gCAAuB;AACrB,aAAO;AACLC,QAAAA,KAAK,EAAE;AADF,OAAP;AAGD;;;WAED,kBAAS9O,KAAT,EAAgB1D,CAAhB,EAAmBC,CAAnB,EAAsBP,UAAtB,EAAkCvG,KAAlC,EAAyCC,MAAzC,EAAiD;AAC/CsK,MAAAA,KAAK,CAACY,CAAN,GAAU5E,UAAU,CAAC8S,KAAX,GAAmB9O,KAAK,CAACY,CAAnC;AACAZ,MAAAA,KAAK,CAACa,CAAN,GAAU7E,UAAU,CAAC8S,KAAX,GAAmB9O,KAAK,CAACa,CAAnC;AACAb,MAAAA,KAAK,CAACc,CAAN,GAAU9E,UAAU,CAAC8S,KAAX,GAAmB9O,KAAK,CAACc,CAAnC;AAEA,aAAOd,KAAP;AACD;;;WAhBD,mBAAiB;AACf,aAAO,SAAP;AACD;;;;EAHyBuB;;AAoB5B,iEAAesN,aAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBA;;IAEMvC;;;;;;;;;;;;;WAKJ,gCAAuB;AACrB,aAAO;AACLyC,QAAAA,UAAU,EAAE;AADP,OAAP;AAGD;;;WAED,kBAAS/O,KAAT,EAAgB1D,CAAhB,EAAmBC,CAAnB,EAAsBP,UAAtB,EAAkCvG,KAAlC,EAAyCC,MAAzC,EAAiD;AAC/C,UAAIsZ,GAAG,GAAG,QAAQhP,KAAK,CAACY,CAAd,GAAkB,QAAQZ,KAAK,CAACa,CAAhC,GAAoC,QAAQb,KAAK,CAACc,CAA5D;AAEAd,MAAAA,KAAK,CAACY,CAAN,GAAUoO,GAAG,GAAG,IAAIhT,UAAU,CAAC+S,UAA/B;AACA/O,MAAAA,KAAK,CAACa,CAAN,GAAUmO,GAAG,GAAGhT,UAAU,CAAC+S,UAA3B;AACA/O,MAAAA,KAAK,CAACc,CAAN,GAAUkO,GAAV;AAEA,aAAOhP,KAAP;AACD;;;WAlBD,mBAAiB;AACf,aAAO,OAAP;AACD;;;;EAH2BuB;;AAsB9B,iEAAe+K,eAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;;IAEM2C;;;;;;;;;;;;;WAKJ,kBAASjP,KAAT,EAAgB1D,CAAhB,EAAmBC,CAAnB,EAAsBP,UAAtB,EAAkCvG,KAAlC,EAAyCC,MAAzC,EAAiD;AAC/C,UAAIuU,GAAG,GACHjK,KAAK,CAACY,CAAN,GAAU,GAAV,GAAgB,GAAhB,GACI,KAAKZ,KAAK,CAACY,CAAN,GAAU,GAAV,GAAgB,GAArB,CADJ,GAEI,KAAK,MAAMZ,KAAK,CAACY,CAAN,GAAU,GAArB,CAHR;AAAA,UAIEsJ,KAAK,GACHlK,KAAK,CAACa,CAAN,GAAU,GAAV,GAAgB,GAAhB,GACI,KAAKb,KAAK,CAACa,CAAN,GAAU,GAAV,GAAgB,GAArB,CADJ,GAEI,KAAK,MAAMb,KAAK,CAACa,CAAN,GAAU,GAArB,CAPR;AAAA,UAQEsJ,IAAI,GACFnK,KAAK,CAACc,CAAN,GAAU,GAAV,GAAgB,GAAhB,GACI,KAAKd,KAAK,CAACc,CAAN,GAAU,GAAV,GAAgB,GAArB,CADJ,GAEI,KAAK,MAAMd,KAAK,CAACc,CAAN,GAAU,GAArB,CAXR;AAaA,aAAO;AACLF,QAAAA,CAAC,EAAEqJ,GAAG,GAAG,GADJ;AAELpJ,QAAAA,CAAC,EAAEqJ,KAAK,GAAG,GAFN;AAGLpJ,QAAAA,CAAC,EAAEqJ,IAAI,GAAG,GAHL;AAILpJ,QAAAA,CAAC,EAAEf,KAAK,CAACe;AAJJ,OAAP;AAMD;;;WAxBD,mBAAiB;AACf,aAAO,UAAP;AACD;;;;EAH0BQ;;AA4B7B,iEAAe0N,cAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9BA;;IAEMC;;;;;;;;;;;;;WAKJ,kBAASlP,KAAT,EAAgB1D,CAAhB,EAAmBC,CAAnB,EAAsBP,UAAtB,EAAkCvG,KAAlC,EAAyCC,MAAzC,EAAiD;AAC/C,UAAIyZ,SAAS,GAAG,CAACnP,KAAK,CAACY,CAAN,GAAUZ,KAAK,CAACa,CAAhB,GAAoBb,KAAK,CAACc,CAA3B,IAAgC,CAAhD;;AAEA,UAAIqO,SAAS,IAAI,GAAjB,EAAsB;AACpB,eAAO;AACLvO,UAAAA,CAAC,EAAE,GADE;AAELC,UAAAA,CAAC,EAAE,GAFE;AAGLC,UAAAA,CAAC,EAAE,GAHE;AAILC,UAAAA,CAAC,EAAEf,KAAK,CAACe;AAJJ,SAAP;AAMD;;AAED,aAAO;AACLH,QAAAA,CAAC,EAAE,CADE;AAELC,QAAAA,CAAC,EAAE,CAFE;AAGLC,QAAAA,CAAC,EAAE,CAHE;AAILC,QAAAA,CAAC,EAAEf,KAAK,CAACe;AAJJ,OAAP;AAMD;;;WAtBD,mBAAiB;AACf,aAAO,WAAP;AACD;;;;EAH2BQ;;AA0B9B,iEAAe2N,eAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5BA;AACA;;IAEMG;;;;;;;;;;;;;;;;2DAKG;AACLrC,MAAAA,GAAG,EAAE;AADA;;;;;;;WAIP,gCAAuB;AACrB,aAAO;AACLsC,QAAAA,WAAW,EAAE;AACX1O,UAAAA,CAAC,EAAE,CADQ;AAEXC,UAAAA,CAAC,EAAE,CAFQ;AAGXC,UAAAA,CAAC,EAAE,CAHQ;AAIXC,UAAAA,CAAC,EAAE;AAJQ,SADR;AAOLwO,QAAAA,QAAQ,EAAE;AACR3O,UAAAA,CAAC,EAAE,GADK;AAERC,UAAAA,CAAC,EAAE,GAFK;AAGRC,UAAAA,CAAC,EAAE,GAHK;AAIRC,UAAAA,CAAC,EAAE;AAJK,SAPL;AAaLyO,QAAAA,SAAS,EAAE;AACT5O,UAAAA,CAAC,EAAE,GADM;AAETC,UAAAA,CAAC,EAAE,GAFM;AAGTC,UAAAA,CAAC,EAAE,GAHM;AAITC,UAAAA,CAAC,EAAE;AAJM;AAbN,OAAP;AAoBD;;;WAED,gBAAO/E,UAAP,EAAmB;AACjB,UAAIgR,GAAG,GAAG,EAAV;AAAA,UACErQ,CADF;AAAA,UAEEoG,CAFF;;AAIA,WAAKpG,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,GAAhB,EAAqBA,CAAC,IAAI,CAA1B,EAA6B;AAC3BoG,QAAAA,CAAC,GAAGpG,CAAC,GAAG,GAAR;AACAqQ,QAAAA,GAAG,CAACrQ,CAAD,CAAH,GAASyS,yDAAS,CAACrM,CAAD,EAAI/G,UAAU,CAACsT,WAAf,EAA4BtT,UAAU,CAACuT,QAAvC,CAAlB;AACD;;AACD,WAAK5S,CAAC,GAAG,GAAT,EAAcA,CAAC,GAAG,GAAlB,EAAuBA,CAAC,IAAI,CAA5B,EAA+B;AAC7BoG,QAAAA,CAAC,GAAG,CAACpG,CAAC,GAAG,GAAL,IAAY,GAAhB;AACAqQ,QAAAA,GAAG,CAACrQ,CAAD,CAAH,GAASyS,yDAAS,CAACrM,CAAD,EAAI/G,UAAU,CAACuT,QAAf,EAAyBvT,UAAU,CAACwT,SAApC,CAAlB;AACD;;AACD,aAAO;AACLxC,QAAAA,GAAG,EAAEA;AADA,OAAP;AAGD;;;WAED,kBAAShN,KAAT,EAAgB1D,CAAhB,EAAmBC,CAAnB,EAAsBP,UAAtB,EAAkCvG,KAAlC,EAAyCC,MAAzC,EAAiD;AAC/C,UAAIuO,UAAU,GAAG3D,IAAI,CAACmL,KAAL,CAAW,CAACzL,KAAK,CAACY,CAAN,GAAUZ,KAAK,CAACa,CAAhB,GAAoBb,KAAK,CAACc,CAA3B,IAAgC,CAA3C,CAAjB;AACA,aAAO,KAAKtB,IAAL,CAAUwN,GAAV,CAAc/I,UAAd,CAAP;AACD;;;WApDD,mBAAiB;AACf,aAAO,SAAP;AACD;;;;EAHyB1C;;AAwD5B,iEAAe8N,aAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3DA;AACA;;IAEMI;;;;;;;;;;;;;;;;2DAKG;AACLC,MAAAA,QAAQ,EAAE,CADL;AAELja,MAAAA,KAAK,EAAE;AAFF;;;;;;;WAKP,gCAAuB;AACrB,aAAO;AACLka,QAAAA,MAAM,EAAE,EADH;AAELja,QAAAA,MAAM,EAAE,EAFH;AAGLka,QAAAA,KAAK,EAAE,CAHF;AAILC,QAAAA,WAAW,EAAEvP,IAAI,CAAC8D,EAJb;AAKL0L,QAAAA,OAAO,EAAE,GALJ;AAMLC,QAAAA,OAAO,EAAE;AANJ,OAAP;AAQD;;;WAED,gBAAO/T,UAAP,EAAmBvG,KAAnB,EAA0BC,MAA1B,EAAkCE,SAAlC,EAA6C;AAC3C,aAAO;AACL8Z,QAAAA,QAAQ,EAAEja,KAAK,GAAGuG,UAAU,CAAC8T,OADxB;AAELE,QAAAA,QAAQ,EAAEta,MAAM,GAAGsG,UAAU,CAAC+T,OAFzB;AAGLta,QAAAA,KAAK,EAAE,EAAEA;AAHJ,OAAP;AAKD;;;WAED,kBAAS6G,CAAT,EAAYC,CAAZ,EAAeP,UAAf,EAA2BvG,KAA3B,EAAkCC,MAAlC,EAA0C;AACxC,UAAIua,EAAE,GAAG3T,CAAC,GAAG,KAAKkD,IAAL,CAAUkQ,QAAvB;AAAA,UACEQ,EAAE,GAAG3T,CAAC,GAAG,KAAKiD,IAAL,CAAUkQ,QADrB;AAAA,UAEES,KAAK,GAAG7P,IAAI,CAAC8P,KAAL,CAAW,CAACF,EAAZ,EAAgB,CAACD,EAAjB,IAAuBjU,UAAU,CAAC4T,KAF5C;AAAA,UAGEhP,CAAC,GAAGN,IAAI,CAACsF,IAAL,CAAUqK,EAAE,GAAGA,EAAL,GAAUC,EAAE,GAAGA,EAAzB,CAHN;AAKAC,MAAAA,KAAK,GAAGrG,oDAAG,CAACqG,KAAD,EAAQ,IAAI7P,IAAI,CAAC8D,EAAjB,CAAX;AAEA,aAAO,CACJ,KAAK5E,IAAL,CAAU/J,KAAV,GAAkB0a,KAAnB,GAA4BnU,UAAU,CAAC6T,WAAvC,GAAqD,OADhD,EAELna,MAAM,IAAI,IAAI,CAACkL,CAAC,GAAG5E,UAAU,CAAC2T,MAAhB,KAA2Bja,MAAM,GAAG,OAApC,CAAR,CAFD,CAAP;AAID;;;WAxCD,mBAAiB;AACf,aAAO,QAAP;AACD;;;;EAHwB+L;;AA4C3B,iEAAegO,YAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/CA;;IAEMY;;;;;;;;;;;;;;;;2DAKG;AACLC,MAAAA,QAAQ,EAAE,EADL;AAELC,MAAAA,QAAQ,EAAE;AAFL;;;;;;;WAKP,gCAAuB;AACrB,aAAO;AACLzB,QAAAA,KAAK,EAAE;AADF,OAAP;AAGD;;;WAED,gBAAO9S,UAAP,EAAmBvG,KAAnB,EAA0BC,MAA1B,EAAkCE,SAAlC,EAA6C;AAC3C,UAAI0a,QAAQ,GAAG,IAAI7C,KAAJ,CAAU,GAAV,CAAf;AAAA,UACE8C,QAAQ,GAAG,IAAI9C,KAAJ,CAAU,GAAV,CADb;AAAA,UAEE9Q,CAFF;AAAA,UAGEiT,KAHF;;AAIA,WAAKjT,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,GAAhB,EAAqBA,CAAC,IAAI,CAA1B,EAA6B;AAC3BiT,QAAAA,KAAK,GAAItP,IAAI,CAAC8D,EAAL,GAAU,CAAV,GAAczH,CAAf,GAAoB,GAA5B;AACA2T,QAAAA,QAAQ,CAAC3T,CAAD,CAAR,GAAcX,UAAU,CAAC8S,KAAX,GAAmBxO,IAAI,CAACqF,GAAL,CAASiK,KAAT,CAAjC;AACAW,QAAAA,QAAQ,CAAC5T,CAAD,CAAR,GAAcX,UAAU,CAAC8S,KAAX,GAAmBxO,IAAI,CAACoF,GAAL,CAASkK,KAAT,CAAjC;AACD;;AACD,aAAO;AACLU,QAAAA,QAAQ,EAAEA,QADL;AAELC,QAAAA,QAAQ,EAAEA;AAFL,OAAP;AAID;;;WAED,kBAASjU,CAAT,EAAYC,CAAZ,EAAeP,UAAf,EAA2B;AACzB,UAAI4T,KAAK,GAAItP,IAAI,CAACyI,MAAL,KAAgB,GAAjB,GAAwB,CAApC;AAAA,UACEyH,QAAQ,GAAGlQ,IAAI,CAACyI,MAAL,EADb;AAGA,aAAO,CACLzM,CAAC,GAAGkU,QAAQ,GAAG,KAAKhR,IAAL,CAAU8Q,QAAV,CAAmBV,KAAnB,CADV,EAELrT,CAAC,GAAGiU,QAAQ,GAAG,KAAKhR,IAAL,CAAU+Q,QAAV,CAAmBX,KAAnB,CAFV,CAAP;AAID;;;WAvCD,mBAAiB;AACf,aAAO,SAAP;AACD;;;;EAHyBnO;;AA2C5B,iEAAe4O,aAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7CA;AACA;;IAEMK;;;;;;;;;;;;;;;;2DAKG;AACLhB,MAAAA,QAAQ,EAAE,CADL;AAELM,MAAAA,QAAQ,EAAE;AAFL;;;;;;;WAKP,gCAAuB;AACrB,aAAO;AACLF,QAAAA,OAAO,EAAE,GADJ;AAELC,QAAAA,OAAO,EAAE,GAFJ;AAGLH,QAAAA,KAAK,EAAE,CAHF;AAILe,QAAAA,MAAM,EAAE,CAJH;AAKLC,QAAAA,KAAK,EAAE,CALF;AAMLjB,QAAAA,MAAM,EAAE;AANH,OAAP;AAQD;;;WAED,gBAAO3T,UAAP,EAAmBvG,KAAnB,EAA0BC,MAA1B,EAAkCE,SAAlC,EAA6C;AAC3C,aAAO;AACL8Z,QAAAA,QAAQ,EAAEja,KAAK,GAAGuG,UAAU,CAAC8T,OADxB;AAELE,QAAAA,QAAQ,EAAEta,MAAM,GAAGsG,UAAU,CAAC+T;AAFzB,OAAP;AAID;;;WAED,kBAASzT,CAAT,EAAYC,CAAZ,EAAeP,UAAf,EAA2B;AACzB,UAAIiU,EAAE,GAAG3T,CAAC,GAAG,KAAKkD,IAAL,CAAUkQ,QAAvB;AAAA,UACEQ,EAAE,GAAG3T,CAAC,GAAG,KAAKiD,IAAL,CAAUwQ,QADrB;AAAA,UAEEpP,CAAC,GAAGN,IAAI,CAACsF,IAAL,CAAUqK,EAAE,GAAGA,EAAL,GAAUC,EAAE,GAAGA,EAAzB,CAFN;AAAA,UAGEC,KAAK,GAAG7P,IAAI,CAAC8P,KAAL,CAAWF,EAAX,EAAeD,EAAf,IAAqBjU,UAAU,CAAC4T,KAAhC,GAAwC5T,UAAU,CAAC2U,MAH7D;AAKAR,MAAAA,KAAK,GAAGM,yDAAQ,CAAEN,KAAK,GAAG7P,IAAI,CAAC8D,EAAd,GAAoBpI,UAAU,CAAC4U,KAA/B,GAAuC,GAAxC,CAAhB;;AAEA,UAAI5U,UAAU,CAAC2T,MAAX,KAAsB,CAA1B,EAA6B;AAC3B,YAAIkB,CAAC,GAAGvQ,IAAI,CAACoF,GAAL,CAASyK,KAAT,CAAR;AAAA,YACEW,OAAO,GAAG9U,UAAU,CAAC2T,MAAX,GAAoBkB,CADhC;AAEAjQ,QAAAA,CAAC,GAAGkQ,OAAO,GAAGL,yDAAQ,CAAC7P,CAAC,GAAGkQ,OAAL,CAAtB;AACD;;AAEDX,MAAAA,KAAK,IAAInU,UAAU,CAAC4T,KAApB;AAEA,aAAO,CACL,KAAKpQ,IAAL,CAAUkQ,QAAV,GAAqB9O,CAAC,GAAGN,IAAI,CAACoF,GAAL,CAASyK,KAAT,CADpB,EAEL,KAAK3Q,IAAL,CAAUwQ,QAAV,GAAqBpP,CAAC,GAAGN,IAAI,CAACqF,GAAL,CAASwK,KAAT,CAFpB,CAAP;AAID;;;WA/CD,mBAAiB;AACf,aAAO,cAAP;AACD;;;;EAH8B1O;;AAmDjC,iEAAeiP,kBAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtDA;AACA;;IAEMM;;;;;;;;;;;;;;;;2DAKG;AACLV,MAAAA,QAAQ,EAAE,EADL;AAELC,MAAAA,QAAQ,EAAE,EAFL;AAGLU,MAAAA,eAAe,EAAE,yBAAC3U,CAAD,EAAYC,CAAZ;AAAA,eAA0B,CAA1B;AAAA;AAHZ;;;;;;;WAMP,gCAAuB;AACrB,aAAO;AACL2U,QAAAA,MAAM,EAAE,CADH;AAELC,QAAAA,MAAM,EAAE,CAFH;AAGLC,QAAAA,MAAM,EAAE,CAHH;AAILC,QAAAA,UAAU,EAAE;AAJP,OAAP;AAMD;;;WAED,gBAAOrV,UAAP,EAAmBvG,KAAnB,EAA0BC,MAA1B,EAAkCE,SAAlC,EAA6C;AAC3C,UAAI0a,QAAQ,GAAG,IAAI7C,KAAJ,CAAU,GAAV,CAAf;AAAA,UACE8C,QAAQ,GAAG,IAAI9C,KAAJ,CAAU,GAAV,CADb;AAAA,UAEE9Q,CAAC,GAAG,CAFN;AAAA,UAGEiT,KAHF;;AAKA,WAAKjT,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,GAAhB,EAAqBA,CAAC,IAAI,CAA1B,EAA6B;AAC3BiT,QAAAA,KAAK,GAAKtP,IAAI,CAAC8D,EAAL,GAAU,CAAV,GAAczH,CAAf,GAAoB,GAArB,GAA4BX,UAAU,CAACqV,UAA/C;AACAf,QAAAA,QAAQ,CAAC3T,CAAD,CAAR,GAAc,CAACX,UAAU,CAACmV,MAAZ,GAAqB7Q,IAAI,CAACqF,GAAL,CAASiK,KAAT,CAAnC;AACAW,QAAAA,QAAQ,CAAC5T,CAAD,CAAR,GAAcX,UAAU,CAACmV,MAAX,GAAoB7Q,IAAI,CAACoF,GAAL,CAASkK,KAAT,CAAlC;AACD;;AACD,aAAO;AACLU,QAAAA,QAAQ,EAAEA,QADL;AAELC,QAAAA,QAAQ,EAAEA,QAFL;AAGLU,QAAAA,eAAe,EAAE,yBAAU3U,CAAV,EAAaC,CAAb,EAAgB;AAC/B,cAAIkC,MAAM,GACR,OACC,IACCsS,0DAAA,CAAmBzU,CAAC,GAAGN,UAAU,CAACkV,MAAlC,EAA0C3U,CAAC,GAAGP,UAAU,CAACmV,MAAzD,CAFF,CADF;AAIA,iBAAO7Q,IAAI,CAACC,GAAL,CAAS,GAAT,EAAcD,IAAI,CAACE,GAAL,CAAS,CAAT,EAAY/B,MAAZ,CAAd,CAAP;AACD;AATI,OAAP;AAWD;;;WAED,kBAASnC,CAAT,EAAYC,CAAZ,EAAeP,UAAf,EAA2B;AACzB,UAAIuV,YAAY,GAAGjR,IAAI,CAACmL,KAAL,CAAW,KAAKjM,IAAL,CAAUyR,eAAV,CAA0B3U,CAA1B,EAA6BC,CAA7B,CAAX,CAAnB;AACA,aAAO,CACLD,CAAC,GAAG,KAAKkD,IAAL,CAAU8Q,QAAV,CAAmBiB,YAAnB,CADC,EAELhV,CAAC,GAAG,KAAKiD,IAAL,CAAU+Q,QAAV,CAAmBgB,YAAnB,CAFC,CAAP;AAID;;;WAjDD,mBAAiB;AACf,aAAO,QAAP;AACD;;;;EAHwB9P;;AAqD3B,iEAAeuP,YAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxDA;;IAEMQ;;;;;;;;;;;;;WAKJ,gCAAuB;AACrB,aAAO;AACLC,QAAAA,OAAO,EAAE,GADJ;AAELC,QAAAA,OAAO,EAAE,GAFJ;AAGLC,QAAAA,IAAI,EAAE;AAHD,OAAP;AAKD;;;WAED,kBAASrV,CAAT,EAAYC,CAAZ,EAAeP,UAAf,EAA2BvG,KAA3B,EAAkCC,MAAlC,EAA0C;AACxC,UAAIsG,UAAU,CAAC2V,IAAf,EAAqB;AACnB,eAAO,CACL,CAACrV,CAAC,GAAG7G,KAAJ,GAAYuG,UAAU,CAACyV,OAAxB,IAAmChc,KAD9B,EAEL,CAAC8G,CAAC,GAAG7G,MAAJ,GAAasG,UAAU,CAAC0V,OAAzB,IAAoChc,MAF/B,CAAP;AAID,OALD,MAKO;AACL,eAAO,CAAC4G,CAAC,GAAGN,UAAU,CAACyV,OAAhB,EAAyBlV,CAAC,GAAGP,UAAU,CAAC0V,OAAxC,CAAP;AACD;AACF;;;WArBD,mBAAiB;AACf,aAAO,QAAP;AACD;;;;EAHwBjQ;;AAyB3B,iEAAe+P,YAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3BA;;IAEMI;;;;;;;;;;;;;;;;2DAKG;AACLC,MAAAA,CAAC,EAAE,CADE;AAELC,MAAAA,CAAC,EAAE,CAFE;AAGLC,MAAAA,CAAC,EAAE,CAHE;AAILC,MAAAA,CAAC,EAAE,CAJE;AAKLC,MAAAA,CAAC,EAAE,CALE;AAMLC,MAAAA,CAAC,EAAE,CANE;AAOLC,MAAAA,CAAC,EAAE,CAPE;AAQLC,MAAAA,CAAC,EAAE,CARE;AASLC,MAAAA,CAAC,EAAE;AATE;;;;;;;WAYP,gCAAuB;AACrB,aAAO;AACLC,QAAAA,EAAE,EAAE,CADC;AAELC,QAAAA,EAAE,EAAE,CAFC;AAGLC,QAAAA,EAAE,EAAE,CAHC;AAILC,QAAAA,EAAE,EAAE,CAJC;AAKLC,QAAAA,EAAE,EAAE,CALC;AAMLC,QAAAA,EAAE,EAAE,CANC;AAOLC,QAAAA,EAAE,EAAE,CAPC;AAQLC,QAAAA,EAAE,EAAE;AARC,OAAP;AAUD;;;WAED,gBAAO7W,UAAP,EAAmBvG,KAAnB,EAA0BC,MAA1B,EAAkCE,SAAlC,EAA6C;AAC3C,eAASkd,gBAAT,GAA4B;AAC1B,YAAIrU,MAAM,GAAG;AACTsU,UAAAA,GAAG,EAAE,CADI;AAETC,UAAAA,GAAG,EAAE,CAFI;AAGTC,UAAAA,GAAG,EAAE,CAHI;AAITC,UAAAA,GAAG,EAAE,CAJI;AAKTC,UAAAA,GAAG,EAAE,CALI;AAMTC,UAAAA,GAAG,EAAE,CANI;AAOTC,UAAAA,GAAG,EAAE,CAPI;AAQTC,UAAAA,GAAG,EAAE,CARI;AASTC,UAAAA,GAAG,EAAE,CATI;AAUT1B,UAAAA,CAAC,EAAE,CAVM;AAWTC,UAAAA,CAAC,EAAE,CAXM;AAYTC,UAAAA,CAAC,EAAE,CAZM;AAaTC,UAAAA,CAAC,EAAE,CAbM;AAcTC,UAAAA,CAAC,EAAE,CAdM;AAeTC,UAAAA,CAAC,EAAE,CAfM;AAgBTC,UAAAA,CAAC,EAAE,CAhBM;AAiBTC,UAAAA,CAAC,EAAE,CAjBM;AAkBTC,UAAAA,CAAC,EAAE;AAlBM,SAAb;AAAA,YAoBEC,EAAE,GAAGhS,IAAI,CAACmL,KAAL,CAAWhW,KAAK,GAAGuG,UAAU,CAACsW,EAA9B,CApBP;AAAA,YAqBEC,EAAE,GAAGjS,IAAI,CAACmL,KAAL,CAAW/V,MAAM,GAAGsG,UAAU,CAACuW,EAA/B,CArBP;AAAA,YAsBEC,EAAE,GAAGlS,IAAI,CAACmL,KAAL,CAAWhW,KAAK,GAAGuG,UAAU,CAACwW,EAA9B,CAtBP;AAAA,YAuBEC,EAAE,GAAGnS,IAAI,CAACmL,KAAL,CAAW/V,MAAM,GAAGsG,UAAU,CAACyW,EAA/B,CAvBP;AAAA,YAwBEC,EAAE,GAAGpS,IAAI,CAACmL,KAAL,CAAWhW,KAAK,GAAGuG,UAAU,CAAC0W,EAA9B,CAxBP;AAAA,YAyBEC,EAAE,GAAGrS,IAAI,CAACmL,KAAL,CAAW/V,MAAM,GAAGsG,UAAU,CAAC2W,EAA/B,CAzBP;AAAA,YA0BEC,EAAE,GAAGtS,IAAI,CAACmL,KAAL,CAAWhW,KAAK,GAAGuG,UAAU,CAAC4W,EAA9B,CA1BP;AAAA,YA2BEC,EAAE,GAAGvS,IAAI,CAACmL,KAAL,CAAW/V,MAAM,GAAGsG,UAAU,CAAC6W,EAA/B,CA3BP;AAAA,YA4BEW,GAAG,GAAGhB,EAAE,GAAGE,EA5Bb;AAAA,YA6BEe,GAAG,GAAGhB,EAAE,GAAGE,EA7Bb;AAAA,YA8BEe,GAAG,GAAGd,EAAE,GAAGF,EA9Bb;AAAA,YA+BEiB,GAAG,GAAGd,EAAE,GAAGF,EA/Bb;AAAA,YAgCEiB,GAAG,GAAGtB,EAAE,GAAGE,EAAL,GAAUE,EAAV,GAAeE,EAhCvB;AAAA,YAiCEiB,GAAG,GAAGtB,EAAE,GAAGE,EAAL,GAAUE,EAAV,GAAeE,EAjCvB;;AAmCA,YAAIe,GAAG,IAAI,CAAP,IAAYC,GAAG,IAAI,CAAvB,EAA0B;AACxBpV,UAAAA,MAAM,CAACsU,GAAP,GAAaP,EAAE,GAAGF,EAAlB;AACA7T,UAAAA,MAAM,CAACuU,GAAP,GAAaN,EAAE,GAAGF,EAAlB;AACA/T,UAAAA,MAAM,CAACwU,GAAP,GAAaX,EAAb;AACA7T,UAAAA,MAAM,CAACyU,GAAP,GAAaT,EAAE,GAAGF,EAAlB;AACA9T,UAAAA,MAAM,CAAC0U,GAAP,GAAaR,EAAE,GAAGF,EAAlB;AACAhU,UAAAA,MAAM,CAAC2U,GAAP,GAAab,EAAb;AACA9T,UAAAA,MAAM,CAAC4U,GAAP,GAAa5U,MAAM,CAAC6U,GAAP,GAAa,CAA1B;AACD,SARD,MAQO;AACL7U,UAAAA,MAAM,CAAC4U,GAAP,GAAa,CAACO,GAAG,GAAGD,GAAN,GAAYD,GAAG,GAAGG,GAAnB,KAA2BL,GAAG,GAAGG,GAAN,GAAYF,GAAG,GAAGC,GAA7C,CAAb;AACAjV,UAAAA,MAAM,CAAC6U,GAAP,GAAa,CAACE,GAAG,GAAGK,GAAN,GAAYJ,GAAG,GAAGG,GAAnB,KAA2BJ,GAAG,GAAGG,GAAN,GAAYF,GAAG,GAAGC,GAA7C,CAAb;AACAjV,UAAAA,MAAM,CAACsU,GAAP,GAAaP,EAAE,GAAGF,EAAL,GAAU7T,MAAM,CAAC4U,GAAP,GAAab,EAApC;AACA/T,UAAAA,MAAM,CAACuU,GAAP,GAAaJ,EAAE,GAAGN,EAAL,GAAU7T,MAAM,CAAC6U,GAAP,GAAaV,EAApC;AACAnU,UAAAA,MAAM,CAACwU,GAAP,GAAaX,EAAb;AACA7T,UAAAA,MAAM,CAACyU,GAAP,GAAaT,EAAE,GAAGF,EAAL,GAAU9T,MAAM,CAAC4U,GAAP,GAAaZ,EAApC;AACAhU,UAAAA,MAAM,CAAC0U,GAAP,GAAaN,EAAE,GAAGN,EAAL,GAAU9T,MAAM,CAAC6U,GAAP,GAAaT,EAApC;AACApU,UAAAA,MAAM,CAAC2U,GAAP,GAAab,EAAb;AACD;;AAED9T,QAAAA,MAAM,CAAC8U,GAAP,GAAa,CAAb;AAEA,eAAO9U,MAAP;AACD;;AAED,UAAIA,MAAM,GAAGqU,gBAAgB,EAA7B;AAEArU,MAAAA,MAAM,CAACoT,CAAP,GAAWpT,MAAM,CAAC0U,GAAP,GAAa1U,MAAM,CAAC8U,GAApB,GAA0B9U,MAAM,CAAC2U,GAAP,GAAa3U,MAAM,CAAC6U,GAAzD;AACA7U,MAAAA,MAAM,CAACqT,CAAP,GAAWrT,MAAM,CAACwU,GAAP,GAAaxU,MAAM,CAAC6U,GAApB,GAA0B7U,MAAM,CAACuU,GAAP,GAAavU,MAAM,CAAC8U,GAAzD;AACA9U,MAAAA,MAAM,CAACsT,CAAP,GAAWtT,MAAM,CAACuU,GAAP,GAAavU,MAAM,CAAC2U,GAApB,GAA0B3U,MAAM,CAACwU,GAAP,GAAaxU,MAAM,CAAC0U,GAAzD;AACA1U,MAAAA,MAAM,CAACuT,CAAP,GAAWvT,MAAM,CAAC2U,GAAP,GAAa3U,MAAM,CAAC4U,GAApB,GAA0B5U,MAAM,CAACyU,GAAP,GAAazU,MAAM,CAAC8U,GAAzD;AACA9U,MAAAA,MAAM,CAACwT,CAAP,GAAWxT,MAAM,CAACsU,GAAP,GAAatU,MAAM,CAAC8U,GAApB,GAA0B9U,MAAM,CAACwU,GAAP,GAAaxU,MAAM,CAAC4U,GAAzD;AACA5U,MAAAA,MAAM,CAACyT,CAAP,GAAWzT,MAAM,CAACwU,GAAP,GAAaxU,MAAM,CAACyU,GAApB,GAA0BzU,MAAM,CAACsU,GAAP,GAAatU,MAAM,CAAC2U,GAAzD;AACA3U,MAAAA,MAAM,CAAC0T,CAAP,GAAW1T,MAAM,CAACyU,GAAP,GAAazU,MAAM,CAAC6U,GAApB,GAA0B7U,MAAM,CAAC0U,GAAP,GAAa1U,MAAM,CAAC4U,GAAzD;AACA5U,MAAAA,MAAM,CAAC2T,CAAP,GAAW3T,MAAM,CAACuU,GAAP,GAAavU,MAAM,CAAC4U,GAApB,GAA0B5U,MAAM,CAACsU,GAAP,GAAatU,MAAM,CAAC6U,GAAzD;AACA7U,MAAAA,MAAM,CAAC4T,CAAP,GAAW5T,MAAM,CAACsU,GAAP,GAAatU,MAAM,CAAC0U,GAApB,GAA0B1U,MAAM,CAACuU,GAAP,GAAavU,MAAM,CAACyU,GAAzD;AAEA,aAAOzU,MAAP;AACD;;;WAED,kBAASnC,CAAT,EAAYC,CAAZ,EAAeP,UAAf,EAA2BvG,KAA3B,EAAkCC,MAAlC,EAA0C;AACxC,aAAO,CACJD,KAAK,IAAI,KAAK+J,IAAL,CAAUqS,CAAV,GAAcvV,CAAd,GAAkB,KAAKkD,IAAL,CAAUsS,CAAV,GAAcvV,CAAhC,GAAoC,KAAKiD,IAAL,CAAUuS,CAAlD,CAAN,IACG,KAAKvS,IAAL,CAAU2S,CAAV,GAAc7V,CAAd,GAAkB,KAAKkD,IAAL,CAAU4S,CAAV,GAAc7V,CAAhC,GAAoC,KAAKiD,IAAL,CAAU6S,CADjD,CADK,EAGJ3c,MAAM,IAAI,KAAK8J,IAAL,CAAUwS,CAAV,GAAc1V,CAAd,GAAkB,KAAKkD,IAAL,CAAUyS,CAAV,GAAc1V,CAAhC,GAAoC,KAAKiD,IAAL,CAAU0S,CAAlD,CAAP,IACG,KAAK1S,IAAL,CAAU2S,CAAV,GAAc7V,CAAd,GAAkB,KAAKkD,IAAL,CAAU4S,CAAV,GAAc7V,CAAhC,GAAoC,KAAKiD,IAAL,CAAU6S,CADjD,CAHK,CAAP;AAMD;;;WAhHD,mBAAiB;AACf,aAAO,aAAP;AACD;;;;EAH6B5Q;;AAoHhC,iEAAemQ,iBAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtHA;;IAEMkC;;;;;;;;;;;;;;;;2DAKG;AACLpE,MAAAA,QAAQ,EAAE,CADL;AAELM,MAAAA,QAAQ,EAAE,CAFL;AAGL+D,MAAAA,OAAO,EAAE;AAHJ;;;;;;;WAMP,gCAAuB;AACrB,aAAO;AACLnE,QAAAA,KAAK,EAAE,CADF;AAELE,QAAAA,OAAO,EAAE,GAFJ;AAGLC,QAAAA,OAAO,EAAE,GAHJ;AAILJ,QAAAA,MAAM,EAAE,GAJH;AAKLyB,QAAAA,MAAM,EAAE;AALH,OAAP;AAOD;;;WAED,gBAAOpV,UAAP,EAAmBvG,KAAnB,EAA0BC,MAA1B,EAAkCE,SAAlC,EAA6C;AAC3C,UAAI8Z,QAAQ,GAAGja,KAAK,GAAGuG,UAAU,CAAC8T,OAAlC;AAAA,UACEE,QAAQ,GAAGta,MAAM,GAAGsG,UAAU,CAAC+T,OADjC;AAAA,UAEEJ,MAAM,GAAG3T,UAAU,CAAC2T,MAFtB;AAAA,UAGEoE,OAHF;;AAIA,UAAIpE,MAAM,KAAK,CAAf,EAAkB;AAChBA,QAAAA,MAAM,GAAGrP,IAAI,CAACC,GAAL,CAASmP,QAAT,EAAmBM,QAAnB,CAAT;AACD;;AACD+D,MAAAA,OAAO,GAAGpE,MAAM,GAAGA,MAAnB;AACA,aAAO;AACLD,QAAAA,QAAQ,EAAEA,QADL;AAELM,QAAAA,QAAQ,EAAEA,QAFL;AAGLL,QAAAA,MAAM,EAAEA,MAHH;AAILoE,QAAAA,OAAO,EAAEA;AAJJ,OAAP;AAMD;;;WAED,kBAASzX,CAAT,EAAYC,CAAZ,EAAeP,UAAf,EAA2B;AACzB,UAAIiU,EAAE,GAAG3T,CAAC,GAAG,KAAKkD,IAAL,CAAUkQ,QAAvB;AAAA,UACEQ,EAAE,GAAG3T,CAAC,GAAG,KAAKiD,IAAL,CAAUwQ,QADrB;AAAA,UAEEQ,QAAQ,GAAGP,EAAE,GAAGA,EAAL,GAAUC,EAAE,GAAGA,EAF5B;AAAA,UAGErH,CAHF;AAAA,UAIE9F,CAJF;AAAA,UAKEiR,CALF;AAAA,UAMEjT,CANF;AAAA,UAOE4L,CAPF;AAAA,UAQEkE,CARF;;AAUA,UAAIL,QAAQ,GAAG,KAAKhR,IAAL,CAAUuU,OAArB,IAAgCvD,QAAQ,KAAK,CAAjD,EAAoD;AAClD,eAAO,CAAClU,CAAD,EAAIC,CAAJ,CAAP;AACD;;AACDsM,MAAAA,CAAC,GAAGvI,IAAI,CAACsF,IAAL,CAAU4K,QAAQ,GAAG,KAAKhR,IAAL,CAAUuU,OAA/B,CAAJ;AACAhR,MAAAA,CAAC,GAAGzC,IAAI,CAAC+L,GAAL,CAAS/L,IAAI,CAACqF,GAAL,CAASrF,IAAI,CAAC8D,EAAL,GAAU,GAAV,GAAgByE,CAAzB,CAAT,EAAsC,CAAC7M,UAAU,CAACoV,MAAlD,CAAJ;AAEAnB,MAAAA,EAAE,IAAIlN,CAAN;AACAmN,MAAAA,EAAE,IAAInN,CAAN;AAEAiR,MAAAA,CAAC,GAAG,IAAInL,CAAR;AACA9H,MAAAA,CAAC,GAAG/E,UAAU,CAAC4T,KAAX,GAAmBoE,CAAnB,GAAuBA,CAA3B;AAEArH,MAAAA,CAAC,GAAGrM,IAAI,CAACqF,GAAL,CAAS5E,CAAT,CAAJ;AACA8P,MAAAA,CAAC,GAAGvQ,IAAI,CAACoF,GAAL,CAAS3E,CAAT,CAAJ;AAEA,aAAO,CACL,KAAKvB,IAAL,CAAUkQ,QAAV,GAAqBmB,CAAC,GAAGZ,EAAzB,GAA8BtD,CAAC,GAAGuD,EAD7B,EAEL,KAAK1Q,IAAL,CAAUwQ,QAAV,GAAqBrD,CAAC,GAAGsD,EAAzB,GAA8BY,CAAC,GAAGX,EAF7B,CAAP;AAID;;;WAnED,mBAAiB;AACf,aAAO,OAAP;AACD;;;;EAHuBzO;;AAuE1B,iEAAeqS,WAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzEA;;IAEMG;;;;;;;;;;;;;;;;2DAKG;AACLnE,MAAAA,OAAO,EAAE,CADJ;AAELC,MAAAA,OAAO,EAAE,CAFJ;AAGLmE,MAAAA,GAAG,EAAE,aAACve,KAAD;AAAA,eAAmB,CAAnB;AAAA,OAHA;AAILga,MAAAA,MAAM,EAAE;AAJH;;;;;;;WAOP,gCAAuB;AACrB,aAAO;AACLjY,QAAAA,IAAI,EAAE,eADD,CACkB;;AADlB,OAAP;AAGD;;;WAED,gBAAOsE,UAAP,EAAmBvG,KAAnB,EAA0BC,MAA1B,EAAkCE,SAAlC,EAA6C;AAC3C,aAAO;AACLka,QAAAA,OAAO,EAAEra,KAAK,GAAG,CADZ;AAELsa,QAAAA,OAAO,EAAEra,MAAM,GAAG,CAFb;AAGLia,QAAAA,MAAM,EAAErP,IAAI,CAACE,GAAL,CAAS/K,KAAK,GAAG,CAAjB,EAAoBC,MAAM,GAAG,CAA7B,CAHH;AAILwe,QAAAA,GAAG,EAAE,aAAU5X,CAAV,EAAa;AAChB,iBAAOA,CAAC,GAAGA,CAAX;AACD;AANI,OAAP;AAQD;;;WAED,kBAASA,CAAT,EAAYC,CAAZ,EAAeP,UAAf,EAA2BvG,KAA3B,EAAkCC,MAAlC,EAA0C;AACxC,UAAIya,KAAJ;AAAA,UACEgE,MADF;AAAA,UAEEpR,CAFF;AAAA,UAGEqR,CAHF;AAAA,UAIEC,IAJF;AAAA,UAKEC,IALF;AAAA,UAMEC,EANF;AAAA,UAOEC,EAPF;AAAA,UAQEC,IARF;AAAA,UASEC,IATF;AAAA,UAUEzE,EAVF;AAAA,UAWEC,EAXF;AAAA,UAYEM,QAZF;AAAA,UAaE5P,CAAC,GAAG,CAbN;;AAeA,cAAQ5E,UAAU,CAACtE,IAAnB;AACE,aAAK,eAAL;AACE,cAAI4E,CAAC,IAAI,KAAKkD,IAAL,CAAUsQ,OAAnB,EAA4B;AAC1B,gBAAIvT,CAAC,GAAG,KAAKiD,IAAL,CAAUuQ,OAAlB,EAA2B;AACzBI,cAAAA,KAAK,GACH7P,IAAI,CAAC8D,EAAL,GACA9D,IAAI,CAACqU,IAAL,CAAU,CAACrY,CAAC,GAAG,KAAKkD,IAAL,CAAUsQ,OAAf,KAA2BvT,CAAC,GAAG,KAAKiD,IAAL,CAAUuQ,OAAzC,CAAV,CAFF;AAGAnP,cAAAA,CAAC,GAAGN,IAAI,CAACsF,IAAL,CACF,KAAKpG,IAAL,CAAU0U,GAAV,CAAc5X,CAAC,GAAG,KAAKkD,IAAL,CAAUsQ,OAA5B,IACE,KAAKtQ,IAAL,CAAU0U,GAAV,CAAc3X,CAAC,GAAG,KAAKiD,IAAL,CAAUuQ,OAA5B,CAFA,CAAJ;AAID,aARD,MAQO;AACL,kBAAIxT,CAAC,GAAG,KAAKiD,IAAL,CAAUuQ,OAAlB,EAA2B;AACzBI,gBAAAA,KAAK,GAAG7P,IAAI,CAACqU,IAAL,CACN,CAACrY,CAAC,GAAG,KAAKkD,IAAL,CAAUsQ,OAAf,KAA2B,KAAKtQ,IAAL,CAAUuQ,OAAV,GAAoBxT,CAA/C,CADM,CAAR;AAGAqE,gBAAAA,CAAC,GAAGN,IAAI,CAACsF,IAAL,CACF,KAAKpG,IAAL,CAAU0U,GAAV,CAAc5X,CAAC,GAAG,KAAKkD,IAAL,CAAUsQ,OAA5B,IACE,KAAKtQ,IAAL,CAAU0U,GAAV,CAAc,KAAK1U,IAAL,CAAUuQ,OAAV,GAAoBxT,CAAlC,CAFA,CAAJ;AAID,eARD,MAQO;AACL4T,gBAAAA,KAAK,GAAG7P,IAAI,CAAC8D,EAAL,GAAU,CAAlB;AACAxD,gBAAAA,CAAC,GAAGtE,CAAC,GAAG,KAAKkD,IAAL,CAAUsQ,OAAlB;AACD;AACF;AACF,WAvBD,MAuBO;AACL,gBAAIxT,CAAC,GAAG,KAAKkD,IAAL,CAAUsQ,OAAlB,EAA2B;AACzB,kBAAIvT,CAAC,GAAG,KAAKiD,IAAL,CAAUuQ,OAAlB,EAA2B;AACzBI,gBAAAA,KAAK,GACH7P,IAAI,CAAC8D,EAAL,GAAU,CAAV,GACA9D,IAAI,CAACqU,IAAL,CAAU,CAAC,KAAKnV,IAAL,CAAUsQ,OAAV,GAAoBxT,CAArB,KAA2B,KAAKkD,IAAL,CAAUuQ,OAAV,GAAoBxT,CAA/C,CAAV,CAFF;AAGAqE,gBAAAA,CAAC,GAAGN,IAAI,CAACsF,IAAL,CACF,KAAKpG,IAAL,CAAU0U,GAAV,CAAc,KAAK1U,IAAL,CAAUsQ,OAAV,GAAoBxT,CAAlC,IACE,KAAKkD,IAAL,CAAU0U,GAAV,CAAc,KAAK1U,IAAL,CAAUuQ,OAAV,GAAoBxT,CAAlC,CAFA,CAAJ;AAID,eARD,MAQO;AACL,oBAAIA,CAAC,GAAG,KAAKiD,IAAL,CAAUuQ,OAAlB,EAA2B;AACzBI,kBAAAA,KAAK,GACH7P,IAAI,CAAC8D,EAAL,GACA9D,IAAI,CAACqU,IAAL,CAAU,CAAC,KAAKnV,IAAL,CAAUsQ,OAAV,GAAoBxT,CAArB,KAA2BC,CAAC,GAAG,KAAKiD,IAAL,CAAUuQ,OAAzC,CAAV,CAFF;AAGAnP,kBAAAA,CAAC,GAAGN,IAAI,CAACsF,IAAL,CACF,KAAKpG,IAAL,CAAU0U,GAAV,CAAc,KAAK1U,IAAL,CAAUsQ,OAAV,GAAoBxT,CAAlC,IACE,KAAKkD,IAAL,CAAU0U,GAAV,CAAc3X,CAAC,GAAG,KAAKiD,IAAL,CAAUuQ,OAA5B,CAFA,CAAJ;AAID,iBARD,MAQO;AACLI,kBAAAA,KAAK,GAAG,MAAM7P,IAAI,CAAC8D,EAAnB;AACAxD,kBAAAA,CAAC,GAAG,KAAKpB,IAAL,CAAUsQ,OAAV,GAAoBxT,CAAxB;AACD;AACF;AACF;AACF;;AACD,cAAIA,CAAC,IAAI,KAAKkD,IAAL,CAAUsQ,OAAnB,EAA4B;AAC1BsE,YAAAA,CAAC,GAAG9T,IAAI,CAACsU,GAAL,CAAS,CAACrY,CAAC,GAAG,KAAKiD,IAAL,CAAUuQ,OAAf,KAA2BzT,CAAC,GAAG,KAAKkD,IAAL,CAAUsQ,OAAzC,CAAT,CAAJ;AACD,WAFD,MAEO;AACLsE,YAAAA,CAAC,GAAG,CAAJ;AACD;;AAED,cAAIA,CAAC,IAAI1e,MAAM,GAAGD,KAAlB,EAAyB;AACvB,gBAAI6G,CAAC,IAAI,KAAKkD,IAAL,CAAUsQ,OAAnB,EAA4B;AAC1BuE,cAAAA,IAAI,GAAG,CAAP;AACAC,cAAAA,IAAI,GAAG,KAAK9U,IAAL,CAAUuQ,OAAjB;AACD,aAHD,MAGO;AACLsE,cAAAA,IAAI,GAAG,KAAK7U,IAAL,CAAUsQ,OAAjB;AACAwE,cAAAA,IAAI,GAAGF,CAAC,GAAGC,IAAX;AACD;AACF,WARD,MAQO;AACLC,YAAAA,IAAI,GAAG,KAAK9U,IAAL,CAAUuQ,OAAjB;AACAsE,YAAAA,IAAI,GAAGC,IAAI,GAAGF,CAAd;AACD;;AAED,iBAAO,CACL3e,KAAK,GAAG,CAAR,GAAY,CAACA,KAAK,GAAG,CAAT,KAAe6K,IAAI,CAAC8D,EAAL,GAAU,CAAV,GAAc+L,KAA7B,CADP,EAEJza,MAAM,GAAGkL,CAAV,GAAe,KAAKpB,IAAL,CAAUmQ,MAFpB,CAAP;;AAKF,aAAK,eAAL;AACEQ,UAAAA,KAAK,GAAI7T,CAAC,GAAG7G,KAAL,GAAc6K,IAAI,CAAC8D,EAAnB,GAAwB,CAAhC;;AAEA,cAAI+L,KAAK,IAAI,MAAM7P,IAAI,CAAC8D,EAAxB,EAA4B;AAC1B+P,YAAAA,MAAM,GAAG7T,IAAI,CAAC8D,EAAL,GAAU,CAAV,GAAc+L,KAAvB;AACD,WAFD,MAEO;AACL,gBAAIA,KAAK,IAAI7P,IAAI,CAAC8D,EAAlB,EAAsB;AACpB+P,cAAAA,MAAM,GAAGhE,KAAK,GAAG7P,IAAI,CAAC8D,EAAtB;AACD,aAFD,MAEO;AACL,kBAAI+L,KAAK,IAAI,MAAM7P,IAAI,CAAC8D,EAAxB,EAA4B;AAC1B+P,gBAAAA,MAAM,GAAG7T,IAAI,CAAC8D,EAAL,GAAU+L,KAAnB;AACD,eAFD,MAEO;AACLgE,gBAAAA,MAAM,GAAGhE,KAAT;AACD;AACF;AACF;;AAEDpN,UAAAA,CAAC,GAAGzC,IAAI,CAACuU,GAAL,CAASV,MAAT,CAAJ;;AACA,cAAIpR,CAAC,IAAI,CAAT,EAAY;AACVqR,YAAAA,CAAC,GAAG,MAAMrR,CAAV;AACD,WAFD,MAEO;AACLqR,YAAAA,CAAC,GAAG,CAAJ;AACD;;AAED,cAAIA,CAAC,IAAI1e,MAAM,GAAGD,KAAlB,EAAyB;AACvB,gBAAI0e,MAAM,IAAI,CAAd,EAAiB;AACfM,cAAAA,IAAI,GAAG,CAAP;AACAC,cAAAA,IAAI,GAAG,KAAKlV,IAAL,CAAUuQ,OAAjB;AACD,aAHD,MAGO;AACL0E,cAAAA,IAAI,GAAG,KAAKjV,IAAL,CAAUsQ,OAAjB;AACA4E,cAAAA,IAAI,GAAGN,CAAC,GAAGK,IAAX;AACD;AACF,WARD,MAQO;AACLC,YAAAA,IAAI,GAAG,KAAKlV,IAAL,CAAUuQ,OAAjB;AACA0E,YAAAA,IAAI,GAAGC,IAAI,GAAGN,CAAd;AACD;;AAEDxT,UAAAA,CAAC,GAAG,KAAKpB,IAAL,CAAUmQ,MAAV,IAAoBpT,CAAC,GAAG7G,MAAxB,CAAJ;AAEA6e,UAAAA,EAAE,GAAG,CAAC3T,CAAD,GAAKN,IAAI,CAACqF,GAAL,CAASwO,MAAT,CAAV;AACAK,UAAAA,EAAE,GAAG5T,CAAC,GAAGN,IAAI,CAACoF,GAAL,CAASyO,MAAT,CAAT;;AAEA,cAAIhE,KAAK,IAAI,MAAM7P,IAAI,CAAC8D,EAAxB,EAA4B;AAC1B,mBAAO,CAAC,KAAK5E,IAAL,CAAUsQ,OAAV,GAAoByE,EAArB,EAAyB,KAAK/U,IAAL,CAAUuQ,OAAV,GAAoByE,EAA7C,CAAP;AACD,WAFD,MAEO;AACL,gBAAIrE,KAAK,IAAI7P,IAAI,CAAC8D,EAAlB,EAAsB;AACpB,qBAAO,CAAC,KAAK5E,IAAL,CAAUsQ,OAAV,GAAoByE,EAArB,EAAyB,KAAK/U,IAAL,CAAUuQ,OAAV,GAAoByE,EAA7C,CAAP;AACD,aAFD,MAEO;AACL,kBAAIrE,KAAK,IAAI,MAAM7P,IAAI,CAAC8D,EAAxB,EAA4B;AAC1B,uBAAO,CAAC,KAAK5E,IAAL,CAAUsQ,OAAV,GAAoByE,EAArB,EAAyB,KAAK/U,IAAL,CAAUuQ,OAAV,GAAoByE,EAA7C,CAAP;AACD,eAFD,MAEO;AACL,uBAAO,CAAC,KAAKhV,IAAL,CAAUsQ,OAAV,GAAoByE,EAArB,EAAyB,KAAK/U,IAAL,CAAUuQ,OAAV,GAAoByE,EAA7C,CAAP;AACD;AACF;AACF;;AACD;AAAO;;AAET,aAAK,kBAAL;AACEvE,UAAAA,EAAE,GAAG3T,CAAC,GAAG,KAAKkD,IAAL,CAAUsQ,OAAnB;AACAI,UAAAA,EAAE,GAAG3T,CAAC,GAAG,KAAKiD,IAAL,CAAUuQ,OAAnB;AACAS,UAAAA,QAAQ,GAAGP,EAAE,GAAGA,EAAL,GAAUC,EAAE,GAAGA,EAA1B;AAEA,iBAAO,CACL,KAAK1Q,IAAL,CAAUsQ,OAAV,GACG,KAAKtQ,IAAL,CAAUsQ,OAAV,GAAoB,KAAKtQ,IAAL,CAAUsQ,OAA9B,GAAwCG,EAAzC,GAA+CO,QAF5C,EAGL,KAAKhR,IAAL,CAAUuQ,OAAV,GACG,KAAKvQ,IAAL,CAAUuQ,OAAV,GAAoB,KAAKvQ,IAAL,CAAUuQ,OAA9B,GAAwCG,EAAzC,GAA+CM,QAJ5C,CAAP;AAzIJ;AAgJD;;;WA5LD,mBAAiB;AACf,aAAO,OAAP;AACD;;;;EAHuB/O;;AAgM1B,iEAAewS,WAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClMA;AACA;AACA;;IAEMc;;;;;;;;;;;;;WAKJ,gCAAuB;AACrB,aAAO;AACLC,QAAAA,UAAU,EAAE,CADP;AAELC,QAAAA,UAAU,EAAE,CAFP;AAGLC,QAAAA,WAAW,EAAE,EAHR;AAILC,QAAAA,WAAW,EAAE,EAJR;AAKLC,QAAAA,QAAQ,EAAE,MALL,CAKa;;AALb,OAAP;AAOD;;;WAED,kBAAS9Y,CAAT,EAAYC,CAAZ,EAAeP,UAAf,EAA2B;AACzB,UAAIuY,EAAE,GAAGhY,CAAC,GAAGP,UAAU,CAACkZ,WAAxB;AAAA,UACEV,EAAE,GAAGlY,CAAC,GAAGN,UAAU,CAACmZ,WADtB;AAAA,UAEEE,EAFF;AAAA,UAGEC,EAHF;;AAKA,cAAQtZ,UAAU,CAACoZ,QAAnB;AACE,aAAK,MAAL;AACA;AACEC,UAAAA,EAAE,GAAG/U,IAAI,CAACqF,GAAL,CAAS4O,EAAT,CAAL;AACAe,UAAAA,EAAE,GAAGhV,IAAI,CAACqF,GAAL,CAAS6O,EAAT,CAAL;AACA;;AAEF,aAAK,UAAL;AACEa,UAAAA,EAAE,GAAGvL,oDAAG,CAACyK,EAAD,EAAK,CAAL,CAAR;AACAe,UAAAA,EAAE,GAAGxL,oDAAG,CAAC0K,EAAD,EAAK,CAAL,CAAR;AACA;;AAEF,aAAK,UAAL;AACEa,UAAAA,EAAE,GAAG5E,yDAAQ,CAAC8D,EAAD,CAAb;AACAe,UAAAA,EAAE,GAAG7E,yDAAQ,CAAC+D,EAAD,CAAb;AACA;;AAEF,aAAK,OAAL;AACEa,UAAAA,EAAE,GAAGP,0DAAA,CAAaP,EAAb,CAAL;AACAe,UAAAA,EAAE,GAAGR,0DAAA,CAAaN,EAAb,CAAL;AACA;AApBJ;;AAuBA,aAAO,CAAClY,CAAC,GAAGN,UAAU,CAACgZ,UAAX,GAAwBK,EAA7B,EAAiC9Y,CAAC,GAAGP,UAAU,CAACiZ,UAAX,GAAwBK,EAA7D,CAAP;AACD;;;WA5CD,mBAAiB;AACf,aAAO,QAAP;AACD;;;;EAHwB7T;;AAgD3B,iEAAesT,YAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpDA;;IAEMvD;;;;;;;;;;;;;;;;2DAKG;AACL7L,MAAAA,GAAG,EAAE,CADA;AAELD,MAAAA,GAAG,EAAE,CAFA;AAGLgK,MAAAA,QAAQ,EAAE,CAHL;AAILM,MAAAA,QAAQ,EAAE;AAJL;;;;;;;WAOP,gCAAuB;AACrB,aAAO;AACLJ,QAAAA,KAAK,EAAEtP,IAAI,CAAC8D;AADP,OAAP;AAGD;;;WAED,gBAAOpI,UAAP,EAAmBvG,KAAnB,EAA0BC,MAA1B,EAAkCE,SAAlC,EAA6C;AAC3C,aAAO;AACL8P,QAAAA,GAAG,EAAEpF,IAAI,CAACoF,GAAL,CAAS1J,UAAU,CAAC4T,KAApB,CADA;AAELjK,QAAAA,GAAG,EAAErF,IAAI,CAACqF,GAAL,CAAS3J,UAAU,CAAC4T,KAApB,CAFA;AAGLF,QAAAA,QAAQ,EAAEja,KAAK,GAAG,CAHb;AAILua,QAAAA,QAAQ,EAAEta,MAAM,GAAG;AAJd,OAAP;AAMD;;;WAED,kBAAS4G,CAAT,EAAYC,CAAZ,EAAeP,UAAf,EAA2BvG,KAA3B,EAAkCC,MAAlC,EAA0C;AACxC,aAAO,CACL,KAAK8J,IAAL,CAAUkG,GAAV,IAAiBpJ,CAAC,GAAG,KAAKkD,IAAL,CAAUkQ,QAA/B,IACE,KAAKlQ,IAAL,CAAUmG,GAAV,IAAiBpJ,CAAC,GAAG,KAAKiD,IAAL,CAAUwQ,QAA/B,CADF,GAEE,KAAKxQ,IAAL,CAAUwQ,QAHP,EAIL,KAAKxQ,IAAL,CAAUmG,GAAV,IAAiBrJ,CAAC,GAAG,KAAKkD,IAAL,CAAUkQ,QAA/B,IACE,KAAKlQ,IAAL,CAAUkG,GAAV,IAAiBnJ,CAAC,GAAG,KAAKiD,IAAL,CAAUwQ,QAA/B,CADF,GAEE,KAAKxQ,IAAL,CAAUwQ,QANP,CAAP;AAQD;;;WAnCD,mBAAiB;AACf,aAAO,QAAP;AACD;;;;EAHwBvO;;AAuC3B,iEAAe+P,YAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzCA;;IAEMgE;;;;;;;;;;;;;;;;2DAKG;AACLC,MAAAA,GAAG,EAAE,CADA;AAELC,MAAAA,GAAG,EAAE;AAFA;;;;;;;WAKP,gCAAuB;AACrB,aAAO;AACLC,QAAAA,MAAM,EAAE,CADH;AAELC,QAAAA,MAAM,EAAE,CAFH;AAGLnE,QAAAA,OAAO,EAAE,CAHJ;AAILC,QAAAA,OAAO,EAAE;AAJJ,OAAP;AAMD;;;WAED,gBAAO1V,UAAP,EAAmBvG,KAAnB,EAA0BC,MAA1B,EAAkC;AAChC,aAAO;AACL+f,QAAAA,GAAG,EAAEnV,IAAI,CAACqF,GAAL,CAAS3J,UAAU,CAAC2Z,MAApB,CADA;AAELD,QAAAA,GAAG,EAAEpV,IAAI,CAACqF,GAAL,CAAS3J,UAAU,CAAC4Z,MAApB;AAFA,OAAP;AAID;;;WAED,kBAAStZ,CAAT,EAAYC,CAAZ,EAAeP,UAAf,EAA2B;AACzB,aAAO,CACLM,CAAC,GAAGN,UAAU,CAACyV,OAAf,GAAyBlV,CAAC,GAAG,KAAKiD,IAAL,CAAUiW,GADlC,EAELlZ,CAAC,GAAGP,UAAU,CAAC0V,OAAf,GAAyBpV,CAAC,GAAG,KAAKkD,IAAL,CAAUkW,GAFlC,CAAP;AAID;;;WA9BD,mBAAiB;AACf,aAAO,OAAP;AACD;;;;EAHuBjU;;AAkC1B,iEAAe+T,WAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpCA;;IAEMK;;;;;;;;;;;;;;;;2DAKG;AACLnG,MAAAA,QAAQ,EAAE,CADL;AAELM,MAAAA,QAAQ,EAAE,CAFL;AAGL8F,MAAAA,EAAE,EAAE,CAHC;AAILC,MAAAA,EAAE,EAAE,CAJC;AAKLhV,MAAAA,CAAC,EAAE,CALE;AAMLD,MAAAA,CAAC,EAAE;AANE;;;;;;;WASP,gCAAuB;AACrB,aAAO;AACLC,QAAAA,CAAC,EAAE,CADE;AAELD,QAAAA,CAAC,EAAE,CAFE;AAGLgP,QAAAA,OAAO,EAAE,GAHJ;AAILC,QAAAA,OAAO,EAAE,GAJJ;AAKLiG,QAAAA,eAAe,EAAE;AALZ,OAAP;AAOD;;;WAED,gBAAOha,UAAP,EAAmBvG,KAAnB,EAA0BC,MAA1B,EAAkC;AAChC,UAAIga,QAAQ,GAAGja,KAAK,GAAGuG,UAAU,CAAC8T,OAAlC;AAAA,UACEE,QAAQ,GAAGta,MAAM,GAAGsG,UAAU,CAAC+T,OADjC;AAAA,UAEEhP,CAAC,GAAG/E,UAAU,CAAC+E,CAFjB;AAAA,UAGED,CAAC,GAAG9E,UAAU,CAAC8E,CAHjB;AAAA,UAIEgV,EAJF;AAAA,UAKEC,EALF;;AAMA,UAAIhV,CAAC,KAAK,CAAV,EAAa;AACXA,QAAAA,CAAC,GAAGtL,KAAK,GAAG,CAAZ;AACD;;AACD,UAAIqL,CAAC,KAAK,CAAV,EAAa;AACXA,QAAAA,CAAC,GAAGpL,MAAM,GAAG,CAAb;AACD;;AACDogB,MAAAA,EAAE,GAAG/U,CAAC,GAAGA,CAAT;AACAgV,MAAAA,EAAE,GAAGjV,CAAC,GAAGA,CAAT;AAEA,aAAO;AACL4O,QAAAA,QAAQ,EAAEA,QADL;AAELM,QAAAA,QAAQ,EAAEA,QAFL;AAGLjP,QAAAA,CAAC,EAAEA,CAHE;AAILD,QAAAA,CAAC,EAAEA,CAJE;AAKLgV,QAAAA,EAAE,EAAEA,EALC;AAMLC,QAAAA,EAAE,EAAEA;AANC,OAAP;AAQD;;;WAED,kBAASzZ,CAAT,EAAYC,CAAZ,EAAeP,UAAf,EAA2B;AACzB,UAAIiU,EAAE,GAAG3T,CAAC,GAAG,KAAKkD,IAAL,CAAUkQ,QAAvB;AAAA,UACEQ,EAAE,GAAG3T,CAAC,GAAG,KAAKiD,IAAL,CAAUwQ,QADrB;AAAA,UAEE0C,EAAE,GAAGzC,EAAE,GAAGA,EAFZ;AAAA,UAGE0C,EAAE,GAAGzC,EAAE,GAAGA,EAHZ;AAAA,UAIE+F,WAAW,GAAG,IAAIja,UAAU,CAACga,eAJ/B;AAAA,UAKEE,CAAC,GAAG5V,IAAI,CAACsF,IAAL,CACF,CAAC,IAAI8M,EAAE,GAAG,KAAKlT,IAAL,CAAUsW,EAAnB,GAAwBnD,EAAE,GAAG,KAAKnT,IAAL,CAAUuW,EAAxC,KACG,KAAKvW,IAAL,CAAUuB,CAAV,GAAc,KAAKvB,IAAL,CAAUsB,CAD3B,CADE,CALN;AAAA,UASEqV,EAAE,GAAGD,CAAC,GAAGA,CATX;AAAA,UAUEP,MAAM,GAAGrV,IAAI,CAAC8V,IAAL,CAAUnG,EAAE,GAAG3P,IAAI,CAACsF,IAAL,CAAU8M,EAAE,GAAGyD,EAAf,CAAf,CAVX;AAAA,UAWEE,MAAM,GAAG/V,IAAI,CAAC8D,EAAL,GAAU,CAAV,GAAcuR,MAXzB;AAAA,UAYEhF,MAAM,GAAGrQ,IAAI,CAACgW,IAAL,CAAUhW,IAAI,CAACqF,GAAL,CAAS0Q,MAAT,IAAmBJ,WAA7B,CAZX;AAAA,UAaEL,MAAM,GAAGtV,IAAI,CAAC8V,IAAL,CAAUlG,EAAE,GAAG5P,IAAI,CAACsF,IAAL,CAAU+M,EAAE,GAAGwD,EAAf,CAAf,CAbX;AAAA,UAcEI,GAAG,GAAG,IAAI9I,KAAJ,CAAU,CAAV,CAdR;;AAgBA,UAAIkF,EAAE,IAAI,KAAKnT,IAAL,CAAUuW,EAAV,GAAe,KAAKvW,IAAL,CAAUuW,EAAV,GAAerD,EAAf,GAAoB,KAAKlT,IAAL,CAAUsW,EAAvD,EAA2D;AACzD,eAAO,CAACxZ,CAAD,EAAIC,CAAJ,CAAP;AACD;;AAEDoU,MAAAA,MAAM,GAAGrQ,IAAI,CAAC8D,EAAL,GAAU,CAAV,GAAcuR,MAAd,GAAuBhF,MAAhC;AACA4F,MAAAA,GAAG,CAAC,CAAD,CAAH,GAASja,CAAC,GAAGgE,IAAI,CAACuU,GAAL,CAASlE,MAAT,IAAmBuF,CAAhC;AAEAG,MAAAA,MAAM,GAAG/V,IAAI,CAAC8D,EAAL,GAAU,CAAV,GAAcwR,MAAvB;AACAjF,MAAAA,MAAM,GAAGrQ,IAAI,CAACgW,IAAL,CAAUhW,IAAI,CAACqF,GAAL,CAAS0Q,MAAT,IAAmBJ,WAA7B,CAAT;AACAtF,MAAAA,MAAM,GAAGrQ,IAAI,CAAC8D,EAAL,GAAU,CAAV,GAAcwR,MAAd,GAAuBjF,MAAhC;AACA4F,MAAAA,GAAG,CAAC,CAAD,CAAH,GAASha,CAAC,GAAG+D,IAAI,CAACuU,GAAL,CAASlE,MAAT,IAAmBuF,CAAhC;AACA,aAAOK,GAAP;AACD;;;WA9ED,mBAAiB;AACf,aAAO,QAAP;AACD;;;;EAHwB9U;;AAkF3B,iEAAeoU,YAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpFA;AACA;;IAEMW;;;;;;;;;;;;;;;;2DAKG;AACLC,MAAAA,GAAG,EAAE,CADA;AAELC,MAAAA,GAAG,EAAE,CAFA;AAGLC,MAAAA,GAAG,EAAE,CAHA;AAILC,MAAAA,GAAG,EAAE;AAJA;;;;;;;WAOP,gCAAuB;AACrB,aAAO;AACL9H,QAAAA,KAAK,EAAE,EADF;AAELuC,QAAAA,UAAU,EAAE,CAFP;AAGLD,QAAAA,MAAM,EAAE,CAHH;AAILyF,QAAAA,IAAI,EAAE,CAJD;AAKLjH,QAAAA,KAAK,EAAE,CALF;AAMLkH,QAAAA,OAAO,EAAE;AANJ,OAAP;AAQD;;;WAED,gBAAO9a,UAAP,EAAmBvG,KAAnB,EAA0BC,MAA1B,EAAkC;AAChC,UAAIgQ,GAAG,GAAGpF,IAAI,CAACoF,GAAL,CAAS1J,UAAU,CAAC4T,KAApB,CAAV;AAAA,UACEjK,GAAG,GAAGrF,IAAI,CAACqF,GAAL,CAAS3J,UAAU,CAAC4T,KAApB,CADR;AAGA,aAAO;AACL6G,QAAAA,GAAG,EAAE/Q,GADA;AAELgR,QAAAA,GAAG,EAAE/Q,GAFA;AAGLgR,QAAAA,GAAG,EAAE,CAAChR,GAHD;AAILiR,QAAAA,GAAG,EAAElR;AAJA,OAAP;AAMD;;;WAED,kBAASpJ,CAAT,EAAYC,CAAZ,EAAeP,UAAf,EAA2B;AACzB,UAAIuY,EAAE,GAAG,KAAK/U,IAAL,CAAUiX,GAAV,GAAgBna,CAAhB,GAAoB,KAAKkD,IAAL,CAAUkX,GAAV,GAAgBna,CAA7C;AAAA,UACEiY,EAAE,GAAG,KAAKhV,IAAL,CAAUmX,GAAV,GAAgBra,CAAhB,GAAoB,KAAKkD,IAAL,CAAUoX,GAAV,GAAgBra,CAD3C;AAGAgY,MAAAA,EAAE,IAAIvY,UAAU,CAAC8S,KAAjB;AACA0F,MAAAA,EAAE,IAAIxY,UAAU,CAAC8S,KAAX,GAAmB9S,UAAU,CAAC8a,OAApC;;AAEA,UAAI9a,UAAU,CAACqV,UAAX,KAA0B,CAA9B,EAAiC;AAC/B,eAAO,CACL/U,CAAC,GAAGN,UAAU,CAACoV,MAAX,GAAoB0D,0DAAA,CAAaP,EAAE,GAAG,GAAlB,EAAuBC,EAAvB,EAA2BxY,UAAU,CAAC6a,IAAtC,CADnB,EAELta,CAAC,GAAGP,UAAU,CAACoV,MAAX,GAAoB0D,0DAAA,CAAaP,EAAb,EAAiBC,EAAE,GAAG,GAAtB,EAA2BxY,UAAU,CAAC6a,IAAtC,CAFnB,CAAP;AAID;;AACD,aAAO,CACLva,CAAC,GACCN,UAAU,CAACoV,MAAX,GACE0D,+DAAA,CACEP,EAAE,GAAG,GADP,EAEEC,EAFF,EAGExY,UAAU,CAACqV,UAHb,EAIErV,UAAU,CAAC6a,IAJb,CAHC,EASLta,CAAC,GACCP,UAAU,CAACoV,MAAX,GACE0D,+DAAA,CACEP,EADF,EAEEC,EAAE,GAAG,GAFP,EAGExY,UAAU,CAACqV,UAHb,EAIErV,UAAU,CAAC6a,IAJb,CAXC,CAAP;AAkBD;;;WAjED,mBAAiB;AACf,aAAO,MAAP;AACD;;;;EAHsBpV;;AAqEzB,iEAAe+U,UAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxEA;;IAEMS;;;;;;;;;;;;;;;;2DAKG;AACLC,MAAAA,QAAQ,EAAE,CADL;AAELC,MAAAA,QAAQ,EAAE;AAFL;;;;;;;WAKP,gCAAuB;AACrB,aAAO;AACLvH,QAAAA,KAAK,EAAE,CADF;AAELE,QAAAA,OAAO,EAAE,GAFJ;AAGLC,QAAAA,OAAO,EAAE,GAHJ;AAILJ,QAAAA,MAAM,EAAE;AAJH,OAAP;AAMD;;;WAED,gBAAO3T,UAAP,EAAmBvG,KAAnB,EAA0BC,MAA1B,EAAkC;AAChC,UAAIwhB,QAAQ,GAAGzhB,KAAK,GAAGuG,UAAU,CAAC8T,OAAlC;AAAA,UACEqH,QAAQ,GAAGzhB,MAAM,GAAGsG,UAAU,CAAC+T,OADjC;AAAA,UAEEJ,MAAM,GAAG3T,UAAU,CAAC2T,MAFtB;AAAA,UAGEoE,OAHF;;AAKA,UAAIpE,MAAM,KAAK,CAAf,EAAkB;AAChBA,QAAAA,MAAM,GAAGrP,IAAI,CAACC,GAAL,CAAS2W,QAAT,EAAmBC,QAAnB,CAAT;AACD;;AACDpD,MAAAA,OAAO,GAAGpE,MAAM,GAAGA,MAAnB;AAEA,aAAO;AACLuH,QAAAA,QAAQ,EAAEA,QADL;AAELC,QAAAA,QAAQ,EAAEA,QAFL;AAGLxH,QAAAA,MAAM,EAAEA,MAHH;AAILoE,QAAAA,OAAO,EAAEA;AAJJ,OAAP;AAMD;;;WAED,kBAASzX,CAAT,EAAYC,CAAZ,EAAeP,UAAf,EAA2B;AACzB,UAAIiU,EAAE,GAAG3T,CAAC,GAAG,KAAKkD,IAAL,CAAU0X,QAAvB;AAAA,UACEhH,EAAE,GAAG3T,CAAC,GAAG,KAAKiD,IAAL,CAAU2X,QADrB;AAAA,UAEE3G,QAAQ,GAAGP,EAAE,GAAGA,EAAL,GAAUC,EAAE,GAAGA,EAF5B;AAAA,UAGEnP,CAHF;;AAKA,UAAIyP,QAAQ,GAAGxU,UAAU,CAAC+X,OAA1B,EAAmC;AACjC,eAAO,CAACzX,CAAD,EAAIC,CAAJ,CAAP;AACD;;AAEDiU,MAAAA,QAAQ,GAAGlQ,IAAI,CAACsF,IAAL,CAAU4K,QAAV,CAAX;AACAzP,MAAAA,CAAC,GACCT,IAAI,CAAC8P,KAAL,CAAWF,EAAX,EAAeD,EAAf,IACCjU,UAAU,CAAC4T,KAAX,IAAoB5T,UAAU,CAAC2T,MAAX,GAAoBa,QAAxC,CAAD,GAAsDxU,UAAU,CAAC2T,MAFnE;AAIA,aAAO,CACL,KAAKnQ,IAAL,CAAU0X,QAAV,GAAqB1G,QAAQ,GAAGlQ,IAAI,CAACoF,GAAL,CAAS3E,CAAT,CAD3B,EAEL,KAAKvB,IAAL,CAAU2X,QAAV,GAAqB3G,QAAQ,GAAGlQ,IAAI,CAACqF,GAAL,CAAS5E,CAAT,CAF3B,CAAP;AAID;;;WAxDD,mBAAiB;AACf,aAAO,OAAP;AACD;;;;EAHuBU;;AA4D1B,iEAAewV,WAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9DA;;IAEMG;;;;;;;;;;;;;;;;2DAKG;AACLF,MAAAA,QAAQ,EAAE,CADL;AAELC,MAAAA,QAAQ,EAAE,CAFL;AAGLpD,MAAAA,OAAO,EAAE;AAHJ;;;;;;;WAMP,gCAAuB;AACrB,aAAO;AACLsD,QAAAA,UAAU,EAAE,EADP;AAELC,QAAAA,SAAS,EAAE,EAFN;AAGLC,QAAAA,KAAK,EAAE,CAHF;AAILzH,QAAAA,OAAO,EAAE,GAJJ;AAKLC,QAAAA,OAAO,EAAE,GALJ;AAMLJ,QAAAA,MAAM,EAAE;AANH,OAAP;AAQD;;;WAED,gBAAO3T,UAAP,EAAmBvG,KAAnB,EAA0BC,MAA1B,EAAkC;AAChC,UAAIwhB,QAAQ,GAAGzhB,KAAK,GAAGuG,UAAU,CAAC8T,OAAlC;AAAA,UACEqH,QAAQ,GAAGzhB,MAAM,GAAGsG,UAAU,CAAC+T,OADjC;AAAA,UAEEJ,MAAM,GAAG3T,UAAU,CAAC2T,MAFtB;AAAA,UAGEoE,OAHF;;AAKA,UAAIpE,MAAM,KAAK,CAAf,EAAkB;AAChBA,QAAAA,MAAM,GAAGrP,IAAI,CAACC,GAAL,CAAS2W,QAAT,EAAmBC,QAAnB,CAAT;AACD;;AACDpD,MAAAA,OAAO,GAAGpE,MAAM,GAAGA,MAAnB;AAEA,aAAO;AACLuH,QAAAA,QAAQ,EAAEA,QADL;AAELC,QAAAA,QAAQ,EAAEA,QAFL;AAGLxH,QAAAA,MAAM,EAAEA,MAHH;AAILoE,QAAAA,OAAO,EAAEA;AAJJ,OAAP;AAMD;;;WAED,kBAASzX,CAAT,EAAYC,CAAZ,EAAeP,UAAf,EAA2B;AACzB,UAAIiU,EAAE,GAAG3T,CAAC,GAAG,KAAKkD,IAAL,CAAU0X,QAAvB;AAAA,UACEhH,EAAE,GAAG3T,CAAC,GAAG,KAAKiD,IAAL,CAAU2X,QADrB;AAAA,UAEEK,SAAS,GAAGvH,EAAE,GAAGA,EAAL,GAAUC,EAAE,GAAGA,EAF7B;AAAA,UAGEM,QAHF;AAAA,UAIEY,MAJF;;AAMA,UAAIoG,SAAS,GAAG,KAAKhY,IAAL,CAAUuU,OAA1B,EAAmC;AACjC,eAAO,CAACzX,CAAD,EAAIC,CAAJ,CAAP;AACD;;AACDiU,MAAAA,QAAQ,GAAGlQ,IAAI,CAACsF,IAAL,CAAU4R,SAAV,CAAX;AACApG,MAAAA,MAAM,GACJpV,UAAU,CAACsb,SAAX,GACAhX,IAAI,CAACqF,GAAL,CACG6K,QAAQ,GAAGxU,UAAU,CAACqb,UAAvB,GAAqC/W,IAAI,CAAC8D,EAA1C,GAA+C,CAA/C,GAAmDpI,UAAU,CAACub,KADhE,CAFF;AAKAnG,MAAAA,MAAM,IAAI,CAACpV,UAAU,CAAC2T,MAAX,GAAoBa,QAArB,IAAiCxU,UAAU,CAAC2T,MAAtD;;AACA,UAAIa,QAAQ,KAAK,CAAjB,EAAoB;AAClBY,QAAAA,MAAM,IAAIpV,UAAU,CAACqb,UAAX,GAAwB7G,QAAlC;AACD;;AACD,aAAO,CAAClU,CAAC,GAAG2T,EAAE,GAAGmB,MAAV,EAAkB7U,CAAC,GAAG2T,EAAE,GAAGkB,MAA3B,CAAP;AACD;;;WA7DD,mBAAiB;AACf,aAAO,OAAP;AACD;;;;EAHuB3P;;AAiE1B,iEAAe2V,WAAf;;;;;;;;;;;;;;;;;;;;;;ACnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS5K,QAAT,CACL5L,CADK,EAELC,CAFK,EAGLC,CAHK,EAQL;AACA,MAAI2W,GAAJ;AAAA,MACEC,UADF;AAAA,MAEEzT,UAFF;AAAA,MAGE0T,IAAI,GAAGrX,IAAI,CAACE,GAAL,CAASI,CAAT,EAAYC,CAAZ,EAAeC,CAAf,CAHT;AAAA,MAIE8W,IAAI,GAAGtX,IAAI,CAACC,GAAL,CAASK,CAAT,EAAYC,CAAZ,EAAeC,CAAf,CAJT;AAMAmD,EAAAA,UAAU,GAAG0T,IAAI,GAAG,GAApB;;AACA,MAAIA,IAAI,KAAK,CAAb,EAAgB;AACdD,IAAAA,UAAU,GAAG,CAACC,IAAI,GAAGC,IAAR,IAAgBD,IAA7B;AACD,GAFD,MAEO;AACLD,IAAAA,UAAU,GAAG,CAAb;AACD;;AAED,MAAIA,UAAU,KAAK,CAAnB,EAAsB;AACpBD,IAAAA,GAAG,GAAG,CAAN;AACD,GAFD,MAEO;AACL,QAAII,IAAI,GAAG,CAACF,IAAI,GAAG/W,CAAR,KAAc+W,IAAI,GAAGC,IAArB,CAAX;AAAA,QACEE,MAAM,GAAG,CAACH,IAAI,GAAG9W,CAAR,KAAc8W,IAAI,GAAGC,IAArB,CADX;AAAA,QAEEG,KAAK,GAAG,CAACJ,IAAI,GAAG7W,CAAR,KAAc6W,IAAI,GAAGC,IAArB,CAFV;;AAIA,QAAIhX,CAAC,KAAK+W,IAAV,EAAgB;AACdF,MAAAA,GAAG,GAAGM,KAAK,GAAGD,MAAd;AACD,KAFD,MAEO;AACL,UAAIjX,CAAC,KAAK8W,IAAV,EAAgB;AACdF,QAAAA,GAAG,GAAG,IAAII,IAAJ,GAAWE,KAAjB;AACD,OAFD,MAEO;AACLN,QAAAA,GAAG,GAAG,IAAIK,MAAJ,GAAaD,IAAnB;AACD;AACF;;AAEDJ,IAAAA,GAAG,IAAI,CAAP;;AACA,QAAIA,GAAG,GAAG,CAAV,EAAa;AACXA,MAAAA,GAAG,IAAI,CAAP;AACD;AACF;;AAED,SAAO;AACL3U,IAAAA,CAAC,EAAE2U,GADE;AAEL9K,IAAAA,CAAC,EAAE+K,UAFE;AAGL5W,IAAAA,CAAC,EAAEmD;AAHE,GAAP;AAKD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAASwI,QAAT,CACLgL,GADK,EAELC,UAFK,EAGLzT,UAHK,EAQL;AACA,MAAIgG,GAAJ,EAASC,KAAT,EAAgBC,IAAhB;;AACA,MAAIuN,UAAU,KAAK,CAAnB,EAAsB;AACpBzN,IAAAA,GAAG,GAAGhG,UAAU,GAAG,GAAb,GAAmB,GAAzB;AACAiG,IAAAA,KAAK,GAAGjG,UAAU,GAAG,GAAb,GAAmB,GAA3B;AACAkG,IAAAA,IAAI,GAAGlG,UAAU,GAAG,GAAb,GAAmB,GAA1B;AACD,GAJD,MAIO;AACL,QAAInB,CAAC,GAAG,CAAC2U,GAAG,GAAGnX,IAAI,CAACmL,KAAL,CAAWgM,GAAX,CAAP,IAA0B,CAAlC;AAAA,QACEzO,CAAC,GAAGlG,CAAC,GAAGxC,IAAI,CAACmL,KAAL,CAAW3I,CAAX,CADV;AAAA,QAEEkV,CAAC,GAAG/T,UAAU,IAAI,IAAIyT,UAAR,CAFhB;AAAA,QAGEO,CAAC,GAAGhU,UAAU,IAAI,IAAIyT,UAAU,GAAG1O,CAArB,CAHhB;AAAA,QAIEjG,CAAC,GAAGkB,UAAU,IAAI,IAAIyT,UAAU,IAAI,IAAI1O,CAAR,CAAlB,CAJhB;;AAMA,YAAQlG,CAAC,GAAG,CAAZ;AACE,WAAK,CAAL;AACEmH,QAAAA,GAAG,GAAGhG,UAAU,GAAG,GAAb,GAAmB,GAAzB;AACAiG,QAAAA,KAAK,GAAGnH,CAAC,GAAG,GAAJ,GAAU,GAAlB;AACAoH,QAAAA,IAAI,GAAG6N,CAAC,GAAG,GAAJ,GAAU,GAAjB;AACA;;AAEF,WAAK,CAAL;AACE/N,QAAAA,GAAG,GAAGgO,CAAC,GAAG,GAAJ,GAAU,GAAhB;AACA/N,QAAAA,KAAK,GAAGjG,UAAU,GAAG,GAAb,GAAmB,GAA3B;AACAkG,QAAAA,IAAI,GAAG6N,CAAC,GAAG,GAAJ,GAAU,GAAjB;AACA;;AAEF,WAAK,CAAL;AACE/N,QAAAA,GAAG,GAAG+N,CAAC,GAAG,GAAJ,GAAU,GAAhB;AACA9N,QAAAA,KAAK,GAAGjG,UAAU,GAAG,GAAb,GAAmB,GAA3B;AACAkG,QAAAA,IAAI,GAAGpH,CAAC,GAAG,GAAJ,GAAU,GAAjB;AACA;;AAEF,WAAK,CAAL;AACEkH,QAAAA,GAAG,GAAG+N,CAAC,GAAG,GAAJ,GAAU,GAAhB;AACA9N,QAAAA,KAAK,GAAG+N,CAAC,GAAG,GAAJ,GAAU,GAAlB;AACA9N,QAAAA,IAAI,GAAGlG,UAAU,GAAG,GAAb,GAAmB,GAA1B;AACA;;AAEF,WAAK,CAAL;AACEgG,QAAAA,GAAG,GAAGlH,CAAC,GAAG,GAAJ,GAAU,GAAhB;AACAmH,QAAAA,KAAK,GAAG8N,CAAC,GAAG,GAAJ,GAAU,GAAlB;AACA7N,QAAAA,IAAI,GAAGlG,UAAU,GAAG,GAAb,GAAmB,GAA1B;AACA;;AAEF,WAAK,CAAL;AACEgG,QAAAA,GAAG,GAAGhG,UAAU,GAAG,GAAb,GAAmB,GAAzB;AACAiG,QAAAA,KAAK,GAAG8N,CAAC,GAAG,GAAJ,GAAU,GAAlB;AACA7N,QAAAA,IAAI,GAAG8N,CAAC,GAAG,GAAJ,GAAU,GAAjB;AACA;;AAEF;AACEhO,QAAAA,GAAG,GAAG,CAAN;AACAC,QAAAA,KAAK,GAAG,CAAR;AACAC,QAAAA,IAAI,GAAG,CAAP;AACA;AAzCJ;AA2CD;;AACD,SAAO;AACLvJ,IAAAA,CAAC,EAAEsX,QAAQ,CAACjO,GAAD,CADN;AAELpJ,IAAAA,CAAC,EAAEqX,QAAQ,CAAChO,KAAD,CAFN;AAGLpJ,IAAAA,CAAC,EAAEoX,QAAQ,CAAC/N,IAAD;AAHN,GAAP;AAKD;AAEM,SAASiF,SAAT,CACLrM,CADK,EAELoV,IAFK,EAQLC,IARK,EAmBL;AACA,SAAO;AACLxX,IAAAA,CAAC,EAAEuX,IAAI,CAACvX,CAAL,GAASmC,CAAC,IAAIqV,IAAI,CAACxX,CAAL,GAASuX,IAAI,CAACvX,CAAlB,CADR;AAELC,IAAAA,CAAC,EAAEsX,IAAI,CAACtX,CAAL,GAASkC,CAAC,IAAIqV,IAAI,CAACvX,CAAL,GAASsX,IAAI,CAACtX,CAAlB,CAFR;AAGLC,IAAAA,CAAC,EAAEqX,IAAI,CAACrX,CAAL,GAASiC,CAAC,IAAIqV,IAAI,CAACtX,CAAL,GAASqX,IAAI,CAACrX,CAAlB,CAHR;AAILC,IAAAA,CAAC,EAAEoX,IAAI,CAACpX,CAAL,GAASgC,CAAC,IAAIqV,IAAI,CAACrX,CAAL,GAASoX,IAAI,CAACpX,CAAlB;AAJR,GAAP;AAMD;AAEM,SAAS8E,QAAT,CAAkBwS,GAAlB,EAIL;AACA,MAAMC,IAAI,GAAGJ,QAAQ,CAACG,GAAG,CAAC5Y,OAAJ,CAAY,GAAZ,EAAiB,EAAjB,CAAD,EAAuB,EAAvB,CAArB;;AACA,MAAImB,CAAC,GAAG0X,IAAI,IAAI,EAAhB;AACA,MAAIzX,CAAC,GAAIyX,IAAI,IAAI,CAAT,GAAc,IAAtB;AACA,MAAIxX,CAAC,GAAGwX,IAAI,GAAG,IAAf;AACA,SAAO;AACL1X,IAAAA,CAAC,EAAEA,CADE;AAELC,IAAAA,CAAC,EAAEA,CAFE;AAGLC,IAAAA,CAAC,EAAEA;AAHE,GAAP;AAKD;AAEM,SAASyX,QAAT,CAAkBvY,KAAlB,EAA8D;AACnE,MAAIwY,GAAG,GAAIxY,KAAK,CAACY,CAAN,IAAW,EAAZ,GAAmBZ,KAAK,CAACa,CAAN,IAAW,CAA9B,GAAmCb,KAAK,CAACc,CAAnD;AACA,SAAQ,UAAUgC,CAAV,EAAa;AACnB,WAAO,IAAI2K,KAAJ,CAAU,IAAI3K,CAAC,CAAClG,MAAhB,EAAwB6b,IAAxB,CAA6B,GAA7B,IAAoC3V,CAA3C;AACD,GAFM,CAEJ0V,GAAG,CAACE,QAAJ,CAAa,EAAb,EAAiBC,WAAjB,EAFI,CAAP;AAGD;AAEM,SAASC,QAAT,CACLhY,CADK,EAELC,CAFK,EAGLC,CAHK,EAQL;AACA,MAAI+X,KAAK,GAAGjY,CAAC,GAAG,GAAhB;AACA,MAAIkY,KAAK,GAAGjY,CAAC,GAAG,GAAhB;AACA,MAAIkY,KAAK,GAAGjY,CAAC,GAAG,GAAhB;;AAEA,MAAI+X,KAAK,GAAG,OAAZ,EAAqB;AACnBA,IAAAA,KAAK,GAAGvY,IAAI,CAAC+L,GAAL,CAAS,CAACwM,KAAK,GAAG,KAAT,IAAkB,KAA3B,EAAkC,GAAlC,CAAR;AACD,GAFD,MAEO;AACLA,IAAAA,KAAK,GAAGA,KAAK,GAAG,KAAhB;AACD;;AAED,MAAIC,KAAK,GAAG,OAAZ,EAAqB;AACnBA,IAAAA,KAAK,GAAGxY,IAAI,CAAC+L,GAAL,CAAS,CAACyM,KAAK,GAAG,KAAT,IAAkB,KAA3B,EAAkC,GAAlC,CAAR;AACD,GAFD,MAEO;AACLA,IAAAA,KAAK,GAAGA,KAAK,GAAG,KAAhB;AACD;;AAED,MAAIC,KAAK,GAAG,OAAZ,EAAqB;AACnBA,IAAAA,KAAK,GAAGzY,IAAI,CAAC+L,GAAL,CAAS,CAAC0M,KAAK,GAAG,KAAT,IAAkB,KAA3B,EAAkC,GAAlC,CAAR;AACD,GAFD,MAEO;AACLA,IAAAA,KAAK,GAAGA,KAAK,GAAG,KAAhB;AACD;;AAEDF,EAAAA,KAAK,GAAGA,KAAK,GAAG,GAAhB;AACAC,EAAAA,KAAK,GAAGA,KAAK,GAAG,GAAhB;AACAC,EAAAA,KAAK,GAAGA,KAAK,GAAG,GAAhB;AAEA,SAAO;AACLzc,IAAAA,CAAC,EAAEuc,KAAK,GAAG,MAAR,GAAiBC,KAAK,GAAG,MAAzB,GAAkCC,KAAK,GAAG,MADxC;AAELxc,IAAAA,CAAC,EAAEsc,KAAK,GAAG,MAAR,GAAiBC,KAAK,GAAG,MAAzB,GAAkCC,KAAK,GAAG,MAFxC;AAGL7C,IAAAA,CAAC,EAAE2C,KAAK,GAAG,MAAR,GAAiBC,KAAK,GAAG,MAAzB,GAAkCC,KAAK,GAAG;AAHxC,GAAP;AAKD;AAEM,SAAShX,WAAT,CACLnB,CADK,EAELC,CAFK,EAGLC,CAHK,EAQL;AACA,MAAIkY,GAAG,GAAGJ,QAAQ,CAAChY,CAAD,EAAIC,CAAJ,EAAOC,CAAP,CAAlB;AAEA,MAAImY,KAAK,GAAGD,GAAG,CAAC1c,CAAJ,GAAQ,MAApB,CAHA,CAG4B;;AAC5B,MAAI4c,KAAK,GAAGF,GAAG,CAACzc,CAAJ,GAAQ,GAApB,CAJA,CAIyB;;AACzB,MAAI4c,KAAK,GAAGH,GAAG,CAAC9C,CAAJ,GAAQ,OAApB,CALA,CAK6B;;AAE7B,MAAI+C,KAAK,GAAG,QAAZ,EAAsB;AACpBA,IAAAA,KAAK,GAAG3Y,IAAI,CAAC+L,GAAL,CAAS4M,KAAT,EAAgB,IAAI,CAApB,CAAR;AACD,GAFD,MAEO;AACLA,IAAAA,KAAK,GAAG,QAAQA,KAAR,GAAgB,KAAK,GAA7B;AACD;;AAED,MAAIC,KAAK,GAAG,QAAZ,EAAsB;AACpBA,IAAAA,KAAK,GAAG5Y,IAAI,CAAC+L,GAAL,CAAS6M,KAAT,EAAgB,IAAI,CAApB,CAAR;AACD,GAFD,MAEO;AACLA,IAAAA,KAAK,GAAG,QAAQA,KAAR,GAAgB,KAAK,GAA7B;AACD;;AAED,MAAIC,KAAK,GAAG,QAAZ,EAAsB;AACpBA,IAAAA,KAAK,GAAG7Y,IAAI,CAAC+L,GAAL,CAAS8M,KAAT,EAAgB,IAAI,CAApB,CAAR;AACD,GAFD,MAEO;AACLA,IAAAA,KAAK,GAAG,QAAQA,KAAR,GAAgB,KAAK,GAA7B;AACD;;AAED,SAAO;AACLzW,IAAAA,CAAC,EAAE,MAAMwW,KAAN,GAAc,EADZ;AAELnY,IAAAA,CAAC,EAAE,OAAOkY,KAAK,GAAGC,KAAf,CAFE;AAGLpY,IAAAA,CAAC,EAAE,OAAOoY,KAAK,GAAGC,KAAf;AAHE,GAAP;AAKD;AAEM,SAASC,WAAT,CACL1W,CADK,EAEL3B,CAFK,EAGLD,CAHK,EAQL;AACA,MAAIoY,KAAK,GAAG,CAACxW,CAAC,GAAG,EAAL,IAAW,GAAvB;AACA,MAAIuW,KAAK,GAAGlY,CAAC,GAAG,GAAJ,GAAUmY,KAAtB;AACA,MAAIC,KAAK,GAAGD,KAAK,GAAGpY,CAAC,GAAG,GAAxB;;AAEA,MAAIR,IAAI,CAAC+L,GAAL,CAAS6M,KAAT,EAAgB,CAAhB,IAAqB,QAAzB,EAAmC;AACjCA,IAAAA,KAAK,GAAG5Y,IAAI,CAAC+L,GAAL,CAAS6M,KAAT,EAAgB,CAAhB,CAAR;AACD,GAFD,MAEO;AACLA,IAAAA,KAAK,GAAG,CAACA,KAAK,GAAG,KAAK,GAAd,IAAqB,KAA7B;AACD;;AAED,MAAI5Y,IAAI,CAAC+L,GAAL,CAAS4M,KAAT,EAAgB,CAAhB,IAAqB,QAAzB,EAAmC;AACjCA,IAAAA,KAAK,GAAG3Y,IAAI,CAAC+L,GAAL,CAAS4M,KAAT,EAAgB,CAAhB,CAAR;AACD,GAFD,MAEO;AACLA,IAAAA,KAAK,GAAG,CAACA,KAAK,GAAG,KAAK,GAAd,IAAqB,KAA7B;AACD;;AAED,MAAI3Y,IAAI,CAAC+L,GAAL,CAAS8M,KAAT,EAAgB,CAAhB,IAAqB,QAAzB,EAAmC;AACjCA,IAAAA,KAAK,GAAG7Y,IAAI,CAAC+L,GAAL,CAAS8M,KAAT,EAAgB,CAAhB,CAAR;AACD,GAFD,MAEO;AACLA,IAAAA,KAAK,GAAG,CAACA,KAAK,GAAG,KAAK,GAAd,IAAqB,KAA7B;AACD;;AAED,SAAO;AACL7c,IAAAA,CAAC,EAAE,SAAS2c,KADP;AACc;AACnB1c,IAAAA,CAAC,EAAE,MAAM2c,KAFJ;AAEW;AAChBhD,IAAAA,CAAC,EAAE,UAAUiD,KAHR,CAGe;;AAHf,GAAP;AAKD;AAEM,SAASnX,WAAT,CACLU,CADK,EAEL3B,CAFK,EAGLD,CAHK,EAQL;AACA,MAAIkY,GAAG,GAAGI,WAAW,CAAC1W,CAAD,EAAI3B,CAAJ,EAAOD,CAAP,CAArB;AAEA,MAAImY,KAAK,GAAGD,GAAG,CAAC1c,CAAJ,GAAQ,GAApB;AACA,MAAI4c,KAAK,GAAGF,GAAG,CAACzc,CAAJ,GAAQ,GAApB;AACA,MAAI4c,KAAK,GAAGH,GAAG,CAAC9C,CAAJ,GAAQ,GAApB;AAEA,MAAI2C,KAAK,GAAGI,KAAK,GAAG,MAAR,GAAiBC,KAAK,GAAG,CAAC,MAA1B,GAAmCC,KAAK,GAAG,CAAC,MAAxD;AACA,MAAIL,KAAK,GAAGG,KAAK,GAAG,CAAC,MAAT,GAAkBC,KAAK,GAAG,MAA1B,GAAmCC,KAAK,GAAG,MAAvD;AACA,MAAIJ,KAAK,GAAGE,KAAK,GAAG,MAAR,GAAiBC,KAAK,GAAG,CAAC,KAA1B,GAAkCC,KAAK,GAAG,KAAtD;;AAEA,MAAIN,KAAK,GAAG,SAAZ,EAAuB;AACrBA,IAAAA,KAAK,GAAG,QAAQvY,IAAI,CAAC+L,GAAL,CAASwM,KAAT,EAAgB,IAAI,GAApB,CAAR,GAAmC,KAA3C;AACD,GAFD,MAEO;AACLA,IAAAA,KAAK,GAAG,QAAQA,KAAhB;AACD;;AAED,MAAIC,KAAK,GAAG,SAAZ,EAAuB;AACrBA,IAAAA,KAAK,GAAG,QAAQxY,IAAI,CAAC+L,GAAL,CAASyM,KAAT,EAAgB,IAAI,GAApB,CAAR,GAAmC,KAA3C;AACD,GAFD,MAEO;AACLA,IAAAA,KAAK,GAAG,QAAQA,KAAhB;AACD;;AAED,MAAIC,KAAK,GAAG,SAAZ,EAAuB;AACrBA,IAAAA,KAAK,GAAG,QAAQzY,IAAI,CAAC+L,GAAL,CAAS0M,KAAT,EAAgB,IAAI,GAApB,CAAR,GAAmC,KAA3C;AACD,GAFD,MAEO;AACLA,IAAAA,KAAK,GAAG,QAAQA,KAAhB;AACD;;AAED,SAAO;AACLnY,IAAAA,CAAC,EAAEiY,KAAK,GAAG,GADN;AAELhY,IAAAA,CAAC,EAAEiY,KAAK,GAAG,GAFN;AAGLhY,IAAAA,CAAC,EAAEiY,KAAK,GAAG;AAHN,GAAP;AAKD;;;;;;;;;;;;;;;;;;;;;AC/VD,IAAMM,aAAa,GAAG;AACpBC,EAAAA,OAAO,EAAE,iBAAUC,WAAV,EAA+BC,QAA/B,EAAyD;AAChE,WAAOA,QAAQ,GAAGD,WAAX,GAAyBC,QAAzB,GAAoCD,WAA3C;AACD,GAHmB;AAIpBE,EAAAA,MAAM,EAAE,gBAAUF,WAAV,EAA+BC,QAA/B,EAAyD;AAC/D,WAAOA,QAAQ,GAAGD,WAAX,GAAyBA,WAAzB,GAAuCC,QAA9C;AACD,GANmB;AAOpBE,EAAAA,QAAQ,EAAE,kBAAUH,WAAV,EAA+BC,QAA/B,EAAyD;AACjE,WAAQD,WAAW,GAAGC,QAAf,GAA2B,GAAlC;AACD,GATmB;AAUpBG,EAAAA,OAAO,EAAE,iBAAUJ,WAAV,EAA+BC,QAA/B,EAAyD;AAChE,WAAOD,WAAW,GAAGC,QAAQ,GAAG,CAAhC;AACD,GAZmB;AAapB/e,EAAAA,GAAG,EAAE,aAAU8e,WAAV,EAA+BC,QAA/B,EAAyD;AAC5D,WAAOlZ,IAAI,CAACC,GAAL,CAAS,GAAT,EAAcgZ,WAAW,GAAGC,QAA5B,CAAP;AACD,GAfmB;AAgBpBI,EAAAA,QAAQ,EAAE,kBAAUL,WAAV,EAA+BC,QAA/B,EAAyD;AACjE,WAAOD,WAAW,GAAGC,QAAd,GAAyB,GAAzB,GAA+B,CAA/B,GAAmCD,WAAW,GAAGC,QAAd,GAAyB,GAAnE;AACD,GAlBmB;AAmBpBK,EAAAA,UAAU,EAAE,oBAAUN,WAAV,EAA+BC,QAA/B,EAAyD;AACnE,WAAOlZ,IAAI,CAACsU,GAAL,CAAS2E,WAAW,GAAGC,QAAvB,CAAP;AACD,GArBmB;AAsBpBM,EAAAA,QAAQ,EAAE,kBAAUP,WAAV,EAA+BC,QAA/B,EAAyD;AACjE,WAAO,MAAMlZ,IAAI,CAACsU,GAAL,CAAS,MAAM2E,WAAN,GAAoBC,QAA7B,CAAb;AACD,GAxBmB;AAyBpBO,EAAAA,MAAM,EAAE,gBAAUR,WAAV,EAA+BC,QAA/B,EAAyD;AAC/D,WAAO,OAAQ,CAAC,MAAMD,WAAP,KAAuB,MAAMC,QAA7B,CAAD,IAA4C,CAAnD,CAAP;AACD,GA3BmB;AA4BpBQ,EAAAA,SAAS,EAAE,mBAAUT,WAAV,EAA+BC,QAA/B,EAAyD;AAClE,WAAOD,WAAW,GAAGC,QAAd,GAA0B,IAAID,WAAJ,GAAkBC,QAAnB,GAA+B,GAA/D;AACD,GA9BmB;AA+BpBS,EAAAA,OAAO,EAAE,iBAAUV,WAAV,EAA+BC,QAA/B,EAAyD;AAChE,WAAOA,QAAQ,GAAG,GAAX,GACF,IAAID,WAAJ,GAAkBC,QAAnB,GAA+B,GAD5B,GAEH,MAAO,KAAK,MAAMD,WAAX,KAA2B,MAAMC,QAAjC,CAAD,GAA+C,GAFzD;AAGD,GAnCmB;AAoCpBU,EAAAA,SAAS,EAAE,mBAAUX,WAAV,EAA+BC,QAA/B,EAAyD;AAClE,WAAOA,QAAQ,GAAG,GAAX,GACH,KAAK,CAACD,WAAW,IAAI,CAAhB,IAAqB,EAA1B,KAAiCC,QAAQ,GAAG,GAA5C,CADG,GAEH,MAAO,KAAK,OAAO,CAACD,WAAW,IAAI,CAAhB,IAAqB,EAA5B,CAAL,KAAyC,MAAMC,QAA/C,CAAD,GAA6D,GAFvE;AAGD,GAxCmB;AAyCpBW,EAAAA,SAAS,EAAE,mBAAUZ,WAAV,EAA+BC,QAA/B,EAAyD;AAClE,WAAOH,aAAa,CAACa,SAAd,CAAwBV,QAAxB,EAAkCD,WAAlC,CAAP;AACD,GA3CmB;AA4CpBa,EAAAA,UAAU,EAAE,oBAAUb,WAAV,EAA+BC,QAA/B,EAAyD;AACnE,WAAOA,QAAQ,KAAK,GAAb,GACHA,QADG,GAEHlZ,IAAI,CAACC,GAAL,CAAS,GAAT,EAAc,CAACgZ,WAAW,IAAI,CAAhB,KAAsB,MAAMC,QAA5B,CAAd,CAFJ;AAGD,GAhDmB;AAiDpBa,EAAAA,SAAS,EAAE,mBAAUd,WAAV,EAA+BC,QAA/B,EAAyD;AAClE,WAAOA,QAAQ,KAAK,CAAb,GACHA,QADG,GAEHlZ,IAAI,CAACE,GAAL,CAAS,CAAT,EAAY,MAAM,CAAE,MAAM+Y,WAAP,IAAuB,CAAxB,IAA6BC,QAA/C,CAFJ;AAGD,GArDmB;AAsDpBc,EAAAA,WAAW,EAAE,qBAAUf,WAAV,EAA+BC,QAA/B,EAAyD;AACpE,WAAOH,aAAa,CAAC5e,GAAd,CAAkB8e,WAAlB,EAA+BC,QAA/B,CAAP;AACD,GAxDmB;AAyDpBe,EAAAA,UAAU,EAAE,oBAAUhB,WAAV,EAA+BC,QAA/B,EAAyD;AACnE,WAAOH,aAAa,CAACO,QAAd,CAAuBL,WAAvB,EAAoCC,QAApC,CAAP;AACD,GA3DmB;AA4DpBgB,EAAAA,WAAW,EAAE,qBAAUjB,WAAV,EAA+BC,QAA/B,EAAyD;AACpE,WAAOA,QAAQ,GAAG,GAAX,GACHH,aAAa,CAACkB,UAAd,CAAyBhB,WAAzB,EAAsC,IAAIC,QAA1C,CADG,GAEHH,aAAa,CAACiB,WAAd,CAA0Bf,WAA1B,EAAuC,KAAKC,QAAQ,GAAG,GAAhB,CAAvC,CAFJ;AAGD,GAhEmB;AAiEpBiB,EAAAA,UAAU,EAAE,oBAAUlB,WAAV,EAA+BC,QAA/B,EAAyD;AACnE,WAAOA,QAAQ,GAAG,GAAX,GACHH,aAAa,CAACgB,SAAd,CAAwBd,WAAxB,EAAqC,IAAIC,QAAzC,CADG,GAEHH,aAAa,CAACe,UAAd,CAAyBb,WAAzB,EAAsC,KAAKC,QAAQ,GAAG,GAAhB,CAAtC,CAFJ;AAGD,GArEmB;AAsEpBkB,EAAAA,QAAQ,EAAE,kBAAUnB,WAAV,EAA+BC,QAA/B,EAAyD;AACjE,WAAOA,QAAQ,GAAG,GAAX,GACHH,aAAa,CAACI,MAAd,CAAqBF,WAArB,EAAkC,IAAIC,QAAtC,CADG,GAEHH,aAAa,CAACC,OAAd,CAAsBC,WAAtB,EAAmC,KAAKC,QAAQ,GAAG,GAAhB,CAAnC,CAFJ;AAGD,GA1EmB;AA2EpBmB,EAAAA,OAAO,EAAE,iBAAUpB,WAAV,EAA+BC,QAA/B,EAAyD;AAChE,WAAOH,aAAa,CAACoB,UAAd,CAAyBlB,WAAzB,EAAsCC,QAAtC,IAAkD,GAAlD,GAAwD,CAAxD,GAA4D,GAAnE;AACD,GA7EmB;AA8EpBoB,EAAAA,OAAO,EAAE,iBAAUrB,WAAV,EAA+BC,QAA/B,EAAyD;AAChE,WAAOA,QAAQ,KAAK,GAAb,GACHA,QADG,GAEHlZ,IAAI,CAACC,GAAL,CAAS,GAAT,EAAegZ,WAAW,GAAGA,WAAf,IAA+B,MAAMC,QAArC,CAAd,CAFJ;AAGD,GAlFmB;AAmFpBqB,EAAAA,IAAI,EAAE,cAAUtB,WAAV,EAA+BC,QAA/B,EAAyD;AAC7D,WAAOH,aAAa,CAACuB,OAAd,CAAsBpB,QAAtB,EAAgCD,WAAhC,CAAP;AACD,GArFmB;AAsFpBuB,EAAAA,OAAO,EAAE,iBAAUvB,WAAV,EAA+BC,QAA/B,EAAyD;AAChE,WACElZ,IAAI,CAACC,GAAL,CAASgZ,WAAT,EAAsBC,QAAtB,IAAkClZ,IAAI,CAACE,GAAL,CAAS+Y,WAAT,EAAsBC,QAAtB,CAAlC,GAAoE,GADtE;AAGD;AA1FmB,CAAtB;AA6FO,SAAS3d,cAAT,CAAwBkf,MAAxB,EAAgC1jB,GAAhC,EAAqC2jB,aAArC,EAAoD;AACzD,MAAI1e,CAAJ,EAAOC,CAAP,EAAU0e,EAAV,EAAcC,EAAd,EAAkBC,kBAAlB,EAAsCC,kBAAtC,EAA0DC,WAA1D;;AAEA,OACE9e,CAAC,GAAGlF,GAAG,CAACkF,CAAR,EAAW2e,EAAE,GAAG,CADlB,EAEE3e,CAAC,GAAGwe,MAAM,CAACrlB,MAAX,IAAqBwlB,EAAE,GAAG7jB,GAAG,CAAC3B,MAFhC,EAGE6G,CAAC,IAAI,CAAL,EAAQ2e,EAAE,IAAI,CAHhB,EAIE;AACA,SACE5e,CAAC,GAAGjF,GAAG,CAACiF,CAAR,EAAW2e,EAAE,GAAG,CADlB,EAEE3e,CAAC,GAAGye,MAAM,CAACtlB,KAAX,IAAoBwlB,EAAE,GAAG5jB,GAAG,CAAC5B,KAF/B,EAGE6G,CAAC,IAAI,CAAL,EAAQ2e,EAAE,IAAI,CAHhB,EAIE;AACA,UAAIA,EAAE,GAAG5jB,GAAG,CAAC5B,KAAT,IAAkBylB,EAAE,GAAG7jB,GAAG,CAAC3B,MAA/B,EAAuC;AACrC;AACAylB,QAAAA,kBAAkB,GAAG5e,CAAC,GAAGwe,MAAM,CAACtlB,KAAX,GAAmB,CAAnB,GAAuB6G,CAAC,GAAG,CAAhD;AACA8e,QAAAA,kBAAkB,GAAGF,EAAE,GAAG7jB,GAAG,CAAC5B,KAAT,GAAiB,CAAjB,GAAqBwlB,EAAE,GAAG,CAA/C;AAEAI,QAAAA,WAAW,GAAGL,aAAa,CACzB;AACEpa,UAAAA,CAAC,EAAEma,MAAM,CAACnlB,SAAP,CAAiB4J,IAAjB,CAAsB2b,kBAAkB,GAAG,CAA3C,CADL;AAEEta,UAAAA,CAAC,EAAEka,MAAM,CAACnlB,SAAP,CAAiB4J,IAAjB,CAAsB2b,kBAAkB,GAAG,CAA3C,CAFL;AAGEra,UAAAA,CAAC,EAAEia,MAAM,CAACnlB,SAAP,CAAiB4J,IAAjB,CAAsB2b,kBAAkB,GAAG,CAA3C,CAHL;AAIEpa,UAAAA,CAAC,EAAEga,MAAM,CAACnlB,SAAP,CAAiB4J,IAAjB,CAAsB2b,kBAAkB,GAAG,CAA3C;AAJL,SADyB,EAOzB;AACEva,UAAAA,CAAC,EAAEvJ,GAAG,CAACzB,SAAJ,CAAc4J,IAAd,CAAmB4b,kBAAkB,GAAG,CAAxC,CADL;AAEEva,UAAAA,CAAC,EAAExJ,GAAG,CAACzB,SAAJ,CAAc4J,IAAd,CAAmB4b,kBAAkB,GAAG,CAAxC,CAFL;AAGEta,UAAAA,CAAC,EAAEzJ,GAAG,CAACzB,SAAJ,CAAc4J,IAAd,CAAmB4b,kBAAkB,GAAG,CAAxC,CAHL;AAIEra,UAAAA,CAAC,EAAE1J,GAAG,CAACzB,SAAJ,CAAc4J,IAAd,CAAmB4b,kBAAkB,GAAG,CAAxC;AAJL,SAPyB,EAazB9e,CAbyB,EAczBC,CAdyB,EAezB;AACEL,UAAAA,YAAY,EAAE7E,GAAG,CAAC6E;AADpB,SAfyB,CAA3B;;AAoBA,YAAImf,WAAW,KAAK,KAApB,EAA2B;AACzB;AACAN,UAAAA,MAAM,CAACnlB,SAAP,CAAiB4J,IAAjB,CAAsB2b,kBAAkB,GAAG,CAA3C,IAAgDE,WAAW,CAACza,CAA5D;AACAma,UAAAA,MAAM,CAACnlB,SAAP,CAAiB4J,IAAjB,CAAsB2b,kBAAkB,GAAG,CAA3C,IAAgDE,WAAW,CAACxa,CAA5D;AACAka,UAAAA,MAAM,CAACnlB,SAAP,CAAiB4J,IAAjB,CAAsB2b,kBAAkB,GAAG,CAA3C,IAAgDE,WAAW,CAACva,CAA5D;AACAia,UAAAA,MAAM,CAACnlB,SAAP,CAAiB4J,IAAjB,CAAsB2b,kBAAkB,GAAG,CAA3C,IAAgDE,WAAW,CAACta,CAA5D;AACD;AACF;AACF;AACF;;AACD,SAAOga,MAAM,CAACnlB,SAAd;AACD;AAEM,SAASkG,kBAAT,CACLyd,WADK,EAELC,QAFK,EAGLld,CAHK,EAILC,CAJK,EAKLP,UALK,EAMqD;AAC1D,MAAIwd,QAAQ,CAACzY,CAAT,KAAe,CAAnB,EAAsB;AACpB,WAAO,KAAP,CADoB,CACN;AACf,GAHyD,CAK1D;;;AACA,MAAIua,OAAJ;AAAA,MACEC,OADF;AAAA,MAEEC,OAFF;AAAA,MAGEC,OAAO,GAAGjC,QAAQ,CAACzY,CAAT,GAAa,GAHzB;AAAA,MAIE2a,KAAK,GAAInC,WAAW,CAACxY,CAAZ,GAAgB,GAAjB,IAAyB,IAAI0a,OAA7B,CAJV;AAAA,MAKEE,IAAI,GAAGF,OAAO,GAAIlC,WAAW,CAACxY,CAAZ,IAAiB,IAAI0a,OAArB,CAAD,GAAkC,GALrD;;AAOA,UAAQzf,UAAU,CAACE,YAAnB;AACE,SAAK,SAAL;AACA,SAAK,QAAL;AACA,SAAK,UAAL;AACA,SAAK,SAAL;AACA,SAAK,KAAL;AACA,SAAK,UAAL;AACA,SAAK,YAAL;AACA,SAAK,UAAL;AACA,SAAK,QAAL;AACA,SAAK,WAAL;AACA,SAAK,SAAL;AACA,SAAK,WAAL;AACA,SAAK,WAAL;AACA,SAAK,YAAL;AACA,SAAK,WAAL;AACA,SAAK,aAAL;AACA,SAAK,YAAL;AACA,SAAK,aAAL;AACA,SAAK,YAAL;AACA,SAAK,UAAL;AACA,SAAK,SAAL;AACA,SAAK,SAAL;AACA,SAAK,MAAL;AACA,SAAK,SAAL;AACEsd,MAAAA,QAAQ,CAAC5Y,CAAT,GAAayY,aAAa,CAACrd,UAAU,CAACE,YAAZ,CAAb,CACXqd,WAAW,CAAC3Y,CADD,EAEX4Y,QAAQ,CAAC5Y,CAFE,CAAb;AAIA4Y,MAAAA,QAAQ,CAAC3Y,CAAT,GAAawY,aAAa,CAACrd,UAAU,CAACE,YAAZ,CAAb,CACXqd,WAAW,CAAC1Y,CADD,EAEX2Y,QAAQ,CAAC3Y,CAFE,CAAb;AAIA2Y,MAAAA,QAAQ,CAAC1Y,CAAT,GAAauY,aAAa,CAACrd,UAAU,CAACE,YAAZ,CAAb,CACXqd,WAAW,CAACzY,CADD,EAEX0Y,QAAQ,CAAC1Y,CAFE,CAAb;AAIA;;AAEF;AACE;AAxCJ;;AA2CA,MAAI8a,KAAK,GAAGrC,WAAW,CAAC3Y,CAAxB;AACA,MAAIib,KAAK,GAAGtC,WAAW,CAAC1Y,CAAxB;AACA,MAAIib,KAAK,GAAGvC,WAAW,CAACzY,CAAxB;AAEAwa,EAAAA,OAAO,GAAG9B,QAAQ,CAAC5Y,CAAT,GAAa6a,OAAb,GAAuBG,KAAK,GAAGF,KAAzC;AACAH,EAAAA,OAAO,GAAG/B,QAAQ,CAAC3Y,CAAT,GAAa4a,OAAb,GAAuBI,KAAK,GAAGH,KAAzC;AACAF,EAAAA,OAAO,GAAGhC,QAAQ,CAAC1Y,CAAT,GAAa2a,OAAb,GAAuBK,KAAK,GAAGJ,KAAzC;AAEAJ,EAAAA,OAAO,GAAGK,IAAI,KAAK,CAAT,GAAa,CAAb,GAAiBL,OAAO,GAAGK,IAArC;AACAJ,EAAAA,OAAO,GAAGI,IAAI,KAAK,CAAT,GAAa,CAAb,GAAiBJ,OAAO,GAAGI,IAArC;AACAH,EAAAA,OAAO,GAAGG,IAAI,KAAK,CAAT,GAAa,CAAb,GAAiBH,OAAO,GAAGG,IAArC;AAEA,SAAO;AACL/a,IAAAA,CAAC,EAAEN,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,GAAL,CAAS,CAAT,EAAY8a,OAAZ,CAAT,EAA+B,GAA/B,IAAsC,CADpC;AAELza,IAAAA,CAAC,EAAEP,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,GAAL,CAAS,CAAT,EAAY+a,OAAZ,CAAT,EAA+B,GAA/B,IAAsC,CAFpC;AAGLza,IAAAA,CAAC,EAAER,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,GAAL,CAAS,CAAT,EAAYgb,OAAZ,CAAT,EAA+B,GAA/B,IAAsC,CAHpC;AAILza,IAAAA,CAAC,EAAG,MAAM4a,IAAP,GAAe;AAJb,GAAP;AAMD;AAEM,SAAS/d,aAAT,CACLvH,YADK,EAELC,YAFK,EAGLiH,MAHK,EAILC,MAJK,EAKL/H,KALK,EAMLC,MANK,EAOM;AACX,MAAIwI,QAAQ,GAAG7H,YAAY,CAACZ,KAA5B;AAAA,MACES,QAAQ,GAAGI,YAAY,CAACb,KAD1B;AAAA,MAEE6G,CAFF;AAAA,MAGEC,CAHF;AAAA,MAIE0e,EAJF;AAAA,MAKEC,EALF;AAAA,MAMEC,kBANF;AAAA,MAOEC,kBAPF;;AASA,OACE7e,CAAC,GAAGiB,MAAJ,EAAY0d,EAAE,GAAG,CADnB,EAEE3e,CAAC,GAAGiB,MAAM,GAAG9H,MAAb,IAAuBwlB,EAAE,GAAGxlB,MAF9B,EAGE6G,CAAC,IAAI,CAAL,EAAQ2e,EAAE,IAAI,CAHhB,EAIE;AACA,SACE5e,CAAC,GAAGiB,MAAJ,EAAY0d,EAAE,GAAG,CADnB,EAEE3e,CAAC,GAAGiB,MAAM,GAAG9H,KAAb,IAAsBwlB,EAAE,GAAGxlB,KAF7B,EAGE6G,CAAC,IAAI,CAAL,EAAQ2e,EAAE,IAAI,CAHhB,EAIE;AACAE,MAAAA,kBAAkB,GAAG5e,CAAC,GAAG2B,QAAJ,GAAe,CAAf,GAAmB5B,CAAC,GAAG,CAA5C;AACA8e,MAAAA,kBAAkB,GAAGF,EAAE,GAAGhlB,QAAL,GAAgB,CAAhB,GAAoB+kB,EAAE,GAAG,CAA9C;AAEA3kB,MAAAA,YAAY,CAACkJ,IAAb,CAAkB4b,kBAAlB,IACE/kB,YAAY,CAACmJ,IAAb,CAAkB2b,kBAAlB,CADF;AAEA7kB,MAAAA,YAAY,CAACkJ,IAAb,CAAkB4b,kBAAkB,GAAG,CAAvC,IACE/kB,YAAY,CAACmJ,IAAb,CAAkB2b,kBAAkB,GAAG,CAAvC,CADF;AAEA7kB,MAAAA,YAAY,CAACkJ,IAAb,CAAkB4b,kBAAkB,GAAG,CAAvC,IACE/kB,YAAY,CAACmJ,IAAb,CAAkB2b,kBAAkB,GAAG,CAAvC,CADF;AAEA7kB,MAAAA,YAAY,CAACkJ,IAAb,CAAkB4b,kBAAkB,GAAG,CAAvC,IACE/kB,YAAY,CAACmJ,IAAb,CAAkB2b,kBAAkB,GAAG,CAAvC,CADF;AAED;AACF;;AAED,SAAO7kB,YAAP;AACD;AAEM,SAASwT,GAAT,CAAa/I,CAAb,EAAwBD,CAAxB,EAA2C;AAChD,MAAIib,CAAC,GAAGzb,IAAI,CAACmL,KAAL,CAAW1K,CAAC,GAAGD,CAAf,CAAR;AACAC,EAAAA,CAAC,IAAIgb,CAAC,GAAGjb,CAAT;;AACA,MAAIC,CAAC,GAAG,CAAR,EAAW;AACT,WAAOA,CAAC,GAAGD,CAAX;AACD;;AACD,SAAOC,CAAP;AACD;AAEM,SAAS0P,QAAT,CAAkBnU,CAAlB,EAA6B;AAClC,MAAIsE,CAAC,GAAGkJ,GAAG,CAACxN,CAAD,EAAI,CAAJ,CAAX;AACA,SAAO,KAAKsE,CAAC,GAAG,GAAJ,GAAUA,CAAV,GAAc,IAAIA,CAAvB,CAAP;AACD;AAEM,SAAS2H,UAAT,CAAoBxH,CAApB,EAA+BD,CAA/B,EAA0CxE,CAA1C,EAA6D;AAClE,MAAIA,CAAC,GAAGyE,CAAR,EAAW;AACT,WAAO,CAAP;AACD;;AACD,MAAIzE,CAAC,IAAIwE,CAAT,EAAY;AACV,WAAO,CAAP;AACD;;AACDxE,EAAAA,CAAC,GAAG,CAACA,CAAC,GAAGyE,CAAL,KAAWD,CAAC,GAAGC,CAAf,CAAJ;AACA,SAAOzE,CAAC,GAAGA,CAAJ,IAAS,IAAI,IAAIA,CAAjB,CAAP;AACD;AAEM,SAAS2H,UAAT,CAAoBjE,KAApB,EAAgE;AACrE,SAAO,CAACA,KAAK,CAACY,CAAN,GAAUZ,KAAK,CAACa,CAAhB,GAAoBb,KAAK,CAACc,CAA3B,IAAgC,CAAvC;AACD;AAEM,SAASlK,SAAT,GAA8B;AACnC,SAAO,OAAOoE,MAAP,KAAkB,WAAzB;AACD;;;;;;;;;;;;;;AC7SD,IAAMgB,UAQL,GAAG,EARJ;AASA,IAAIggB,MAAM,GAAG,KAAb;AAEA,IAAIlH,KAAK,GAAG;AACVmH,EAAAA,IAAI,EAAE,gBAAqB;AACzB,QAAID,MAAJ,EAAY;AACV,aAAO,KAAP;AACD;;AACDA,IAAAA,MAAM,GAAG,IAAT;AAEAhgB,IAAAA,UAAU,CAAC8V,CAAX,GAAe,KAAf;AACA9V,IAAAA,UAAU,CAACkgB,EAAX,GAAgB,IAAhB;AACAlgB,IAAAA,UAAU,CAACmgB,CAAX,GAAe,MAAf;AAEAngB,IAAAA,UAAU,CAACogB,CAAX,GAAe,IAAI3O,KAAJ,CAAUzR,UAAU,CAAC8V,CAAX,GAAe9V,UAAU,CAAC8V,CAA1B,GAA8B,CAAxC,CAAf;AACA9V,IAAAA,UAAU,CAACqgB,EAAX,GAAgB,IAAI5O,KAAJ,CAAUzR,UAAU,CAAC8V,CAAX,GAAe9V,UAAU,CAAC8V,CAA1B,GAA8B,CAAxC,CAAhB;AACA9V,IAAAA,UAAU,CAACsgB,EAAX,GAAgB,IAAI7O,KAAJ,CAAUzR,UAAU,CAAC8V,CAAX,GAAe9V,UAAU,CAAC8V,CAA1B,GAA8B,CAAxC,CAAhB;;AACA,SAAK,IAAInV,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAGX,UAAU,CAACsgB,EAAX,CAAc1f,MAAlC,EAA0CD,EAAC,IAAI,CAA/C,EAAkD;AAChDX,MAAAA,UAAU,CAACsgB,EAAX,CAAc3f,EAAd,IAAmB,IAAI8Q,KAAJ,CAAU,CAAV,CAAnB;AACD;;AACDzR,IAAAA,UAAU,CAACugB,EAAX,GAAgB,IAAI9O,KAAJ,CAAUzR,UAAU,CAAC8V,CAAX,GAAe9V,UAAU,CAAC8V,CAA1B,GAA8B,CAAxC,CAAhB;;AACA,SAAK,IAAInV,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAGX,UAAU,CAACugB,EAAX,CAAc3f,MAAlC,EAA0CD,GAAC,IAAI,CAA/C,EAAkD;AAChDX,MAAAA,UAAU,CAACugB,EAAX,CAAc5f,GAAd,IAAmB,IAAI8Q,KAAJ,CAAU,CAAV,CAAnB;AACD;;AACD,QAAI9Q,CAAJ,EAAOwL,CAAP,EAAUqU,CAAV;;AAEA,SAAK7f,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGX,UAAU,CAAC8V,CAA3B,EAA8BnV,CAAC,IAAI,CAAnC,EAAsC;AACpCX,MAAAA,UAAU,CAACogB,CAAX,CAAazf,CAAb,IAAkBA,CAAlB;AACAX,MAAAA,UAAU,CAACqgB,EAAX,CAAc1f,CAAd,IACE,CAAE,KAAKoM,MAAL,MAAiB/M,UAAU,CAAC8V,CAAX,GAAe9V,UAAU,CAAC8V,CAA3C,CAAD,GAAkD9V,UAAU,CAAC8V,CAA9D,IACA9V,UAAU,CAAC8V,CAFb;AAGA9V,MAAAA,UAAU,CAACsgB,EAAX,CAAc3f,CAAd,IAAmB,EAAnB;;AACA,WAAKwL,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,CAAhB,EAAmBA,CAAC,IAAI,CAAxB,EAA2B;AACzBnM,QAAAA,UAAU,CAACsgB,EAAX,CAAc3f,CAAd,EAAiBwL,CAAjB,IACE,CAAE,KAAKY,MAAL,MAAiB/M,UAAU,CAAC8V,CAAX,GAAe9V,UAAU,CAAC8V,CAA3C,CAAD,GAAkD9V,UAAU,CAAC8V,CAA9D,IACA9V,UAAU,CAAC8V,CAFb;AAGD;;AACD9V,MAAAA,UAAU,CAACsgB,EAAX,CAAc3f,CAAd,IAAmB,KAAK8f,UAAL,CAAgBzgB,UAAU,CAACsgB,EAAX,CAAc3f,CAAd,CAAhB,CAAnB;AAEAX,MAAAA,UAAU,CAACugB,EAAX,CAAc5f,CAAd,IAAmB,EAAnB;;AACA,WAAKwL,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,CAAhB,EAAmBA,CAAC,IAAI,CAAxB,EAA2B;AACzBnM,QAAAA,UAAU,CAACugB,EAAX,CAAc5f,CAAd,EAAiBwL,CAAjB,IACE,CAAE,KAAKY,MAAL,MAAiB/M,UAAU,CAAC8V,CAAX,GAAe9V,UAAU,CAAC8V,CAA3C,CAAD,GAAkD9V,UAAU,CAAC8V,CAA9D,IACA9V,UAAU,CAAC8V,CAFb;AAGD;;AACD9V,MAAAA,UAAU,CAACugB,EAAX,CAAc5f,CAAd,IAAmB,KAAK+f,UAAL,CAAgB1gB,UAAU,CAACugB,EAAX,CAAc5f,CAAd,CAAhB,CAAnB;AACD;;AAED,SAAKA,CAAC,GAAGX,UAAU,CAAC8V,CAAX,GAAe,CAAxB,EAA2BnV,CAAC,IAAI,CAAhC,EAAmCA,CAAC,IAAI,CAAxC,EAA2C;AACzC6f,MAAAA,CAAC,GAAGxgB,UAAU,CAACogB,CAAX,CAAazf,CAAb,CAAJ;AACAX,MAAAA,UAAU,CAACogB,CAAX,CAAazf,CAAb,IAAkBX,UAAU,CAACogB,CAAX,CAAcjU,CAAC,GAAG,KAAKY,MAAL,KAAgB/M,UAAU,CAAC8V,CAA7C,CAAlB;AACA9V,MAAAA,UAAU,CAACogB,CAAX,CAAajU,CAAb,IAAkBqU,CAAlB;AACD;;AAED,SAAK7f,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGX,UAAU,CAAC8V,CAAX,GAAe,CAA/B,EAAkCnV,CAAC,IAAI,CAAvC,EAA0C;AACxCX,MAAAA,UAAU,CAACogB,CAAX,CAAapgB,UAAU,CAAC8V,CAAX,GAAenV,CAA5B,IAAiCX,UAAU,CAACogB,CAAX,CAAazf,CAAb,CAAjC;AACAX,MAAAA,UAAU,CAACqgB,EAAX,CAAcrgB,UAAU,CAAC8V,CAAX,GAAenV,CAA7B,IAAkCX,UAAU,CAACqgB,EAAX,CAAc1f,CAAd,CAAlC;;AACA,WAAKwL,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,CAAhB,EAAmBA,CAAC,IAAI,CAAxB,EAA2B;AACzBnM,QAAAA,UAAU,CAACsgB,EAAX,CAActgB,UAAU,CAAC8V,CAAX,GAAenV,CAA7B,EAAgCwL,CAAhC,IAAqCnM,UAAU,CAACsgB,EAAX,CAAc3f,CAAd,EAAiBwL,CAAjB,CAArC;AACD;;AACD,WAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,CAAhB,EAAmBA,CAAC,EAApB,EAAwB;AACtBnM,QAAAA,UAAU,CAACugB,EAAX,CAAcvgB,UAAU,CAAC8V,CAAX,GAAenV,CAA7B,EAAgCwL,CAAhC,IAAqCnM,UAAU,CAACugB,EAAX,CAAc5f,CAAd,EAAiBwL,CAAjB,CAArC;AACD;AACF;AACF,GA7DS;AA8DVY,EAAAA,MAAM,EAAE,kBAAoB;AAC1B,WAAO,CAAEzI,IAAI,CAACyI,MAAL,KAAgB,GAAhB,GAAsB,GAAvB,GAA8B,CAA/B,IAAoC,UAA3C;AACD,GAhES;AAiEV0T,EAAAA,UAAU,EAAE,oBAAUE,GAAV,EAA6B;AACvC,QAAIhQ,CAAC,GAAGrM,IAAI,CAACsF,IAAL,CAAU+W,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAAZ,GAAkBA,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAA9B,GAAoCA,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAA1D,CAAR;AACAA,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAAH,GAAShQ,CAAlB;AACAgQ,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAAH,GAAShQ,CAAlB;AACAgQ,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAAH,GAAShQ,CAAlB;AACA,WAAOgQ,GAAP;AACD,GAvES;AAwEVD,EAAAA,UAAU,EAAE,oBAAUC,GAAV,EAA6B;AACvC,QAAIhQ,CAAC,GAAGrM,IAAI,CAACsF,IAAL,CAAU+W,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAAZ,GAAkBA,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAAxC,CAAR;AACAA,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAAH,GAAShQ,CAAlB;AACAgQ,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAAH,GAAShQ,CAAlB;AACA,WAAOgQ,GAAP;AACD,GA7ES;AA8EVC,EAAAA,MAAM,EAAE,gBAAU7Z,CAAV,EAA6B;AACnC,WAAOA,CAAC,GAAGA,CAAJ,IAAS,MAAM,MAAMA,CAArB,CAAP;AACD,GAhFS;AAiFV8Z,EAAAA,IAAI,EAAE,cAAU9Z,CAAV,EAAqBhC,CAArB,EAAgCD,CAAhC,EAAmD;AACvD,WAAOC,CAAC,GAAGgC,CAAC,IAAIjC,CAAC,GAAGC,CAAR,CAAZ;AACD,GAnFS;;AAoFV;AACF;AACA;AACA;AACEwU,EAAAA,MAAM,EAAE,gBAAUjZ,CAAV,EAA6B;AACnC,QAAIwgB,GAAJ,EAASC,GAAT,EAAcC,GAAd,EAAmBC,GAAnB,EAAwBC,EAAxB,EAA4Bna,CAA5B,EAA+Boa,CAA/B,EAAkCrU,CAAlC;AAEA,SAAKmT,IAAL;AAEAlZ,IAAAA,CAAC,GAAGzG,CAAC,GAAGN,UAAU,CAACmgB,CAAnB;AACAW,IAAAA,GAAG,GAAG5E,QAAQ,CAACnV,CAAD,CAAR,GAAc/G,UAAU,CAACkgB,EAA/B;AACAa,IAAAA,GAAG,GAAID,GAAG,GAAG,CAAP,GAAY9gB,UAAU,CAACkgB,EAA7B;AACAc,IAAAA,GAAG,GAAGja,CAAC,GAAGmV,QAAQ,CAACnV,CAAD,CAAlB;AACAka,IAAAA,GAAG,GAAGD,GAAG,GAAG,CAAZ;AAEAE,IAAAA,EAAE,GAAG,KAAKN,MAAL,CAAYI,GAAZ,CAAL;AAEAG,IAAAA,CAAC,GAAGH,GAAG,GAAGhhB,UAAU,CAACqgB,EAAX,CAAcrgB,UAAU,CAACogB,CAAX,CAAaU,GAAb,CAAd,CAAV;AACAhU,IAAAA,CAAC,GAAGmU,GAAG,GAAGjhB,UAAU,CAACqgB,EAAX,CAAcrgB,UAAU,CAACogB,CAAX,CAAaW,GAAb,CAAd,CAAV;AAEA,WAAO,MAAM,KAAKF,IAAL,CAAUK,EAAV,EAAcC,CAAd,EAAiBrU,CAAjB,CAAb;AACD,GAzGS;;AA0GV;AACF;AACA;AACA;AACA;AACA;AACEwI,EAAAA,MAAM,EAAE,gBAAUhV,CAAV,EAAqBC,CAArB,EAAwC;AAC9C,QAAIugB,GAAJ;AAAA,QACEC,GADF;AAAA,QAEEK,GAFF;AAAA,QAGEC,GAHF;AAAA,QAIEC,GAJF;AAAA,QAKEC,GALF;AAAA,QAMEC,GANF;AAAA,QAOEC,GAPF;AAAA,QAQET,GARF;AAAA,QASEC,GATF;AAAA,QAUES,GAVF;AAAA,QAWEC,GAXF;AAAA,QAYE1F,CAAC,GAAG,EAZN;AAAA,QAaEiF,EAbF;AAAA,QAcEU,EAdF;AAAA,QAeE7c,CAfF;AAAA,QAgBED,CAhBF;AAAA,QAiBEiC,CAjBF;AAAA,QAkBEoa,CAlBF;AAAA,QAmBErU,CAnBF;AAAA,QAoBEnM,CApBF;AAAA,QAqBEwL,CArBF;AAuBA,SAAK8T,IAAL;AAEAlZ,IAAAA,CAAC,GAAGzG,CAAC,GAAGN,UAAU,CAACmgB,CAAnB;AACAW,IAAAA,GAAG,GAAG5E,QAAQ,CAACnV,CAAD,CAAR,GAAc/G,UAAU,CAACkgB,EAA/B;AACAa,IAAAA,GAAG,GAAID,GAAG,GAAG,CAAP,GAAY9gB,UAAU,CAACkgB,EAA7B;AACAc,IAAAA,GAAG,GAAGja,CAAC,GAAGmV,QAAQ,CAACnV,CAAD,CAAlB;AACAka,IAAAA,GAAG,GAAGD,GAAG,GAAG,CAAZ;AAEAja,IAAAA,CAAC,GAAGxG,CAAC,GAAGP,UAAU,CAACmgB,CAAnB;AACAiB,IAAAA,GAAG,GAAGlF,QAAQ,CAACnV,CAAD,CAAR,GAAc/G,UAAU,CAACkgB,EAA/B;AACAmB,IAAAA,GAAG,GAAID,GAAG,GAAG,CAAP,GAAYphB,UAAU,CAACkgB,EAA7B;AACAwB,IAAAA,GAAG,GAAG3a,CAAC,GAAGmV,QAAQ,CAACnV,CAAD,CAAlB;AACA4a,IAAAA,GAAG,GAAGD,GAAG,GAAG,CAAZ;AAEA/gB,IAAAA,CAAC,GAAGX,UAAU,CAACogB,CAAX,CAAaU,GAAb,CAAJ;AACA3U,IAAAA,CAAC,GAAGnM,UAAU,CAACogB,CAAX,CAAaW,GAAb,CAAJ;AAEAO,IAAAA,GAAG,GAAGthB,UAAU,CAACogB,CAAX,CAAazf,CAAC,GAAGygB,GAAjB,CAAN;AACAG,IAAAA,GAAG,GAAGvhB,UAAU,CAACogB,CAAX,CAAajU,CAAC,GAAGiV,GAAjB,CAAN;AACAI,IAAAA,GAAG,GAAGxhB,UAAU,CAACogB,CAAX,CAAazf,CAAC,GAAG0gB,GAAjB,CAAN;AACAI,IAAAA,GAAG,GAAGzhB,UAAU,CAACogB,CAAX,CAAajU,CAAC,GAAGkV,GAAjB,CAAN;AAEAH,IAAAA,EAAE,GAAG,KAAKN,MAAL,CAAYI,GAAZ,CAAL;AACAY,IAAAA,EAAE,GAAG,KAAKhB,MAAL,CAAYc,GAAZ,CAAL;AAEAzF,IAAAA,CAAC,GAAGjc,UAAU,CAACsgB,EAAX,CAAcgB,GAAd,CAAJ;AACAH,IAAAA,CAAC,GAAGH,GAAG,GAAG/E,CAAC,CAAC,CAAD,CAAP,GAAayF,GAAG,GAAGzF,CAAC,CAAC,CAAD,CAAxB;AACAA,IAAAA,CAAC,GAAGjc,UAAU,CAACsgB,EAAX,CAAciB,GAAd,CAAJ;AACAzU,IAAAA,CAAC,GAAGmU,GAAG,GAAGhF,CAAC,CAAC,CAAD,CAAP,GAAayF,GAAG,GAAGzF,CAAC,CAAC,CAAD,CAAxB;AACAlX,IAAAA,CAAC,GAAG,KAAK8b,IAAL,CAAUK,EAAV,EAAcC,CAAd,EAAiBrU,CAAjB,CAAJ;AAEAmP,IAAAA,CAAC,GAAGjc,UAAU,CAACsgB,EAAX,CAAckB,GAAd,CAAJ;AACAL,IAAAA,CAAC,GAAGH,GAAG,GAAG/E,CAAC,CAAC,CAAD,CAAP,GAAa0F,GAAG,GAAG1F,CAAC,CAAC,CAAD,CAAxB;AACAA,IAAAA,CAAC,GAAGjc,UAAU,CAACsgB,EAAX,CAAcmB,GAAd,CAAJ;AACA3U,IAAAA,CAAC,GAAGmU,GAAG,GAAGhF,CAAC,CAAC,CAAD,CAAP,GAAa0F,GAAG,GAAG1F,CAAC,CAAC,CAAD,CAAxB;AACAnX,IAAAA,CAAC,GAAG,KAAK+b,IAAL,CAAUK,EAAV,EAAcC,CAAd,EAAiBrU,CAAjB,CAAJ;AAEA,WAAO,MAAM,KAAK+T,IAAL,CAAUe,EAAV,EAAc7c,CAAd,EAAiBD,CAAjB,CAAb;AACD,GA9KS;;AA+KV;AACF;AACA;AACA;AACA;AACA;AACEiW,EAAAA,MAAM,EAAE,gBAAUza,CAAV,EAAqBC,CAArB,EAAgC2Z,CAAhC,EAAmD;AACzD,QAAI4G,GAAJ,EACEC,GADF,EAEEK,GAFF,EAGEC,GAHF,EAIEQ,GAJF,EAKEC,GALF,EAMER,GANF,EAOEC,GAPF,EAQEC,GARF,EASEC,GATF,EAUET,GAVF,EAWEC,GAXF,EAYES,GAZF,EAaEC,GAbF,EAcEI,GAdF,EAeEC,GAfF,EAgBE/F,CAhBF,EAiBE2F,EAjBF,EAkBEK,EAlBF,EAmBEld,CAnBF,EAoBED,CApBF,EAqBE+P,CArBF,EAsBEhI,CAtBF,EAuBE9F,CAvBF,EAwBEoa,CAxBF,EAyBErU,CAzBF,EA0BEnM,CA1BF,EA2BEwL,CA3BF;AA6BA,SAAK8T,IAAL;AAEAlZ,IAAAA,CAAC,GAAGzG,CAAC,GAAGN,UAAU,CAACmgB,CAAnB;AACAW,IAAAA,GAAG,GAAG5E,QAAQ,CAACnV,CAAD,CAAR,GAAc/G,UAAU,CAACkgB,EAA/B;AACAa,IAAAA,GAAG,GAAID,GAAG,GAAG,CAAP,GAAY9gB,UAAU,CAACkgB,EAA7B;AACAc,IAAAA,GAAG,GAAGja,CAAC,GAAGmV,QAAQ,CAACnV,CAAD,CAAlB;AACAka,IAAAA,GAAG,GAAGD,GAAG,GAAG,CAAZ;AAEAja,IAAAA,CAAC,GAAGxG,CAAC,GAAGP,UAAU,CAACmgB,CAAnB;AACAiB,IAAAA,GAAG,GAAGlF,QAAQ,CAACnV,CAAD,CAAR,GAAc/G,UAAU,CAACkgB,EAA/B;AACAmB,IAAAA,GAAG,GAAID,GAAG,GAAG,CAAP,GAAYphB,UAAU,CAACkgB,EAA7B;AACAwB,IAAAA,GAAG,GAAG3a,CAAC,GAAGmV,QAAQ,CAACnV,CAAD,CAAlB;AACA4a,IAAAA,GAAG,GAAGD,GAAG,GAAG,CAAZ;AAEA3a,IAAAA,CAAC,GAAGmT,CAAC,GAAGla,UAAU,CAACmgB,CAAnB;AACA0B,IAAAA,GAAG,GAAG3F,QAAQ,CAACnV,CAAD,CAAR,GAAc/G,UAAU,CAACkgB,EAA/B;AACA4B,IAAAA,GAAG,GAAID,GAAG,GAAG,CAAP,GAAY7hB,UAAU,CAACkgB,EAA7B;AACA6B,IAAAA,GAAG,GAAGhb,CAAC,GAAGmV,QAAQ,CAACnV,CAAD,CAAlB;AACAib,IAAAA,GAAG,GAAGD,GAAG,GAAG,CAAZ;AAEAphB,IAAAA,CAAC,GAAGX,UAAU,CAACogB,CAAX,CAAaU,GAAb,CAAJ;AACA3U,IAAAA,CAAC,GAAGnM,UAAU,CAACogB,CAAX,CAAaW,GAAb,CAAJ;AAEAO,IAAAA,GAAG,GAAGthB,UAAU,CAACogB,CAAX,CAAazf,CAAC,GAAGygB,GAAjB,CAAN;AACAG,IAAAA,GAAG,GAAGvhB,UAAU,CAACogB,CAAX,CAAajU,CAAC,GAAGiV,GAAjB,CAAN;AACAI,IAAAA,GAAG,GAAGxhB,UAAU,CAACogB,CAAX,CAAazf,CAAC,GAAG0gB,GAAjB,CAAN;AACAI,IAAAA,GAAG,GAAGzhB,UAAU,CAACogB,CAAX,CAAajU,CAAC,GAAGkV,GAAjB,CAAN;AAEAta,IAAAA,CAAC,GAAG,KAAK6Z,MAAL,CAAYI,GAAZ,CAAJ;AACAY,IAAAA,EAAE,GAAG,KAAKhB,MAAL,CAAYc,GAAZ,CAAL;AACAO,IAAAA,EAAE,GAAG,KAAKrB,MAAL,CAAYmB,GAAZ,CAAL;AAEA9F,IAAAA,CAAC,GAAGjc,UAAU,CAACugB,EAAX,CAAce,GAAG,GAAGO,GAApB,CAAJ;AACAV,IAAAA,CAAC,GAAGH,GAAG,GAAG/E,CAAC,CAAC,CAAD,CAAP,GAAayF,GAAG,GAAGzF,CAAC,CAAC,CAAD,CAApB,GAA0B8F,GAAG,GAAG9F,CAAC,CAAC,CAAD,CAArC;AACAA,IAAAA,CAAC,GAAGjc,UAAU,CAACugB,EAAX,CAAcgB,GAAG,GAAGM,GAApB,CAAJ;AACA/U,IAAAA,CAAC,GAAGmU,GAAG,GAAGhF,CAAC,CAAC,CAAD,CAAP,GAAayF,GAAG,GAAGzF,CAAC,CAAC,CAAD,CAApB,GAA0B8F,GAAG,GAAG9F,CAAC,CAAC,CAAD,CAArC;AACAlX,IAAAA,CAAC,GAAG,KAAK8b,IAAL,CAAU9Z,CAAV,EAAaoa,CAAb,EAAgBrU,CAAhB,CAAJ;AAEAmP,IAAAA,CAAC,GAAGjc,UAAU,CAACugB,EAAX,CAAciB,GAAG,GAAGK,GAApB,CAAJ;AACAV,IAAAA,CAAC,GAAGH,GAAG,GAAG/E,CAAC,CAAC,CAAD,CAAP,GAAa0F,GAAG,GAAG1F,CAAC,CAAC,CAAD,CAApB,GAA0B8F,GAAG,GAAG9F,CAAC,CAAC,CAAD,CAArC;AACAA,IAAAA,CAAC,GAAGjc,UAAU,CAACugB,EAAX,CAAckB,GAAG,GAAGI,GAApB,CAAJ;AACA/U,IAAAA,CAAC,GAAGmU,GAAG,GAAGhF,CAAC,CAAC,CAAD,CAAP,GAAa0F,GAAG,GAAG1F,CAAC,CAAC,CAAD,CAApB,GAA0B8F,GAAG,GAAG9F,CAAC,CAAC,CAAD,CAArC;AACAnX,IAAAA,CAAC,GAAG,KAAK+b,IAAL,CAAU9Z,CAAV,EAAaoa,CAAb,EAAgBrU,CAAhB,CAAJ;AAEA+H,IAAAA,CAAC,GAAG,KAAKgM,IAAL,CAAUe,EAAV,EAAc7c,CAAd,EAAiBD,CAAjB,CAAJ;AAEAmX,IAAAA,CAAC,GAAGjc,UAAU,CAACugB,EAAX,CAAce,GAAG,GAAGQ,GAApB,CAAJ;AACAX,IAAAA,CAAC,GAAGH,GAAG,GAAG/E,CAAC,CAAC,CAAD,CAAP,GAAayF,GAAG,GAAGzF,CAAC,CAAC,CAAD,CAApB,GAA0B+F,GAAG,GAAG/F,CAAC,CAAC,CAAD,CAArC;AACAA,IAAAA,CAAC,GAAGjc,UAAU,CAACugB,EAAX,CAAcgB,GAAG,GAAGO,GAApB,CAAJ;AACAhV,IAAAA,CAAC,GAAGmU,GAAG,GAAGhF,CAAC,CAAC,CAAD,CAAP,GAAayF,GAAG,GAAGzF,CAAC,CAAC,CAAD,CAApB,GAA0B+F,GAAG,GAAG/F,CAAC,CAAC,CAAD,CAArC;AACAlX,IAAAA,CAAC,GAAG,KAAK8b,IAAL,CAAU9Z,CAAV,EAAaoa,CAAb,EAAgBrU,CAAhB,CAAJ;AAEAmP,IAAAA,CAAC,GAAGjc,UAAU,CAACugB,EAAX,CAAciB,GAAG,GAAGM,GAApB,CAAJ;AACAX,IAAAA,CAAC,GAAGH,GAAG,GAAG/E,CAAC,CAAC,CAAD,CAAP,GAAa0F,GAAG,GAAG1F,CAAC,CAAC,CAAD,CAApB,GAA0B+F,GAAG,GAAG/F,CAAC,CAAC,CAAD,CAArC;AACAA,IAAAA,CAAC,GAAGjc,UAAU,CAACugB,EAAX,CAAckB,GAAG,GAAGK,GAApB,CAAJ;AACAhV,IAAAA,CAAC,GAAGmU,GAAG,GAAGhF,CAAC,CAAC,CAAD,CAAP,GAAa0F,GAAG,GAAG1F,CAAC,CAAC,CAAD,CAApB,GAA0B+F,GAAG,GAAG/F,CAAC,CAAC,CAAD,CAArC;AACAnX,IAAAA,CAAC,GAAG,KAAK+b,IAAL,CAAU9Z,CAAV,EAAaoa,CAAb,EAAgBrU,CAAhB,CAAJ;AAEAD,IAAAA,CAAC,GAAG,KAAKgU,IAAL,CAAUe,EAAV,EAAc7c,CAAd,EAAiBD,CAAjB,CAAJ;AAEA,WAAO,MAAM,KAAK+b,IAAL,CAAUoB,EAAV,EAAcpN,CAAd,EAAiBhI,CAAjB,CAAb;AACD,GAhRS;;AAiRV;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACEmO,EAAAA,WAAW,EAAE,qBAAU1a,CAAV,EAAqBC,CAArB,EAAgC2Z,CAAhC,EAA2CgI,OAA3C,EAA4D;AACvE,QAAInb,CAAC,GAAG,CAAR;AAAA,QACEpG,CADF;;AAEA,SAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,IAAIuhB,OAAjB,EAA0BvhB,CAAC,IAAI,CAA/B,EAAkC;AAChCoG,MAAAA,CAAC,IAAIzC,IAAI,CAACsU,GAAL,CAAS,KAAKmC,MAAL,CAAYpa,CAAC,GAAGL,CAAhB,EAAmBK,CAAC,GAAGJ,CAAvB,EAA0BI,CAAC,GAAGuZ,CAA9B,CAAT,IAA6CvZ,CAAlD;AACD;;AACD,WAAOoG,CAAP;AACD;AAhSS,CAAZ;AAmSA,iEAAe+R,KAAf;;;;;;;;;;;;;;;;AC9SO,SAASzf,sBAAT,CACLgB,YADK,EAELC,YAFK,EAGLJ,QAHK,EAILC,SAJK,EAKM;AACX,MAAI+H,QAAQ,GAAG7H,YAAY,CAACZ,KAA5B;AAAA,MACE0I,SAAS,GAAG9H,YAAY,CAACX,MAD3B;AAAA,MAEE0I,MAAM,GAAGF,QAAQ,GAAGhI,QAFtB;AAAA,MAGEmI,MAAM,GAAGF,SAAS,GAAGhI,SAHvB;AAAA,MAIE0L,aAJF;AAAA,MAKEC,aALF;AAAA,MAMExF,CANF;AAAA,MAOEC,CAPF;;AASA,OAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGpG,SAAhB,EAA2BoG,CAAC,IAAI,CAAhC,EAAmC;AACjC,SAAKD,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGpG,QAAhB,EAA0BoG,CAAC,IAAI,CAA/B,EAAkC;AAChCuF,MAAAA,aAAa,GACXvB,IAAI,CAACmL,KAAL,CAAWlP,CAAC,GAAG8B,MAAf,IAAyBH,QAAzB,GAAoC,CAApC,GAAwCoC,IAAI,CAACmL,KAAL,CAAWnP,CAAC,GAAG8B,MAAf,IAAyB,CADnE;AAEA0D,MAAAA,aAAa,GAAGvF,CAAC,GAAGrG,QAAJ,GAAe,CAAf,GAAmBoG,CAAC,GAAG,CAAvC;AAEAhG,MAAAA,YAAY,CAACkJ,IAAb,CAAkBsC,aAAa,GAAG,CAAlC,IACEzL,YAAY,CAACmJ,IAAb,CAAkBqC,aAAa,GAAG,CAAlC,CADF;AAEAvL,MAAAA,YAAY,CAACkJ,IAAb,CAAkBsC,aAAa,GAAG,CAAlC,IACEzL,YAAY,CAACmJ,IAAb,CAAkBqC,aAAa,GAAG,CAAlC,CADF;AAEAvL,MAAAA,YAAY,CAACkJ,IAAb,CAAkBsC,aAAa,GAAG,CAAlC,IACEzL,YAAY,CAACmJ,IAAb,CAAkBqC,aAAa,GAAG,CAAlC,CADF;AAEAvL,MAAAA,YAAY,CAACkJ,IAAb,CAAkBsC,aAAa,GAAG,CAAlC,IACEzL,YAAY,CAACmJ,IAAb,CAAkBqC,aAAa,GAAG,CAAlC,CADF;AAED;AACF;;AAED,SAAOvL,YAAP;AACD;AAEM,SAAShB,2BAAT,CACLe,YADK,EAELC,YAFK,EAGLJ,QAHK,EAILC,SAJK,EAKM;AACX,MAAI+H,QAAQ,GAAG7H,YAAY,CAACZ,KAA5B;AAAA,MACE0I,SAAS,GAAG9H,YAAY,CAACX,MAD3B;AAAA,MAEE0I,MAAM,GAAGF,QAAQ,GAAGhI,QAFtB;AAAA,MAGEmI,MAAM,GAAGF,SAAS,GAAGhI,SAHvB;AAAA,MAIE2L,aAJF;AAAA,MAKExF,CALF;AAAA,MAMEC,CANF;AAAA,MAOE+V,EAPF;AAAA,MAQEC,EARF;AAAA,MASEtC,EATF;AAAA,MAUEC,EAVF;AAAA,MAWEsC,EAXF;AAAA,MAYEC,EAZF;AAAA,MAaE0L,eAbF;AAAA,MAcEC,eAdF;AAAA,MAeEC,eAfF;AAAA,MAgBEC,eAhBF;AAAA,MAiBE3hB,CAjBF;AAAA,MAkBEwL,CAlBF;;AAoBA,OAAKxL,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGxG,SAAhB,EAA2BwG,CAAC,IAAI,CAAhC,EAAmC;AACjC,SAAKwL,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGjS,QAAhB,EAA0BiS,CAAC,IAAI,CAA/B,EAAkC;AAChC7L,MAAAA,CAAC,GAAG6L,CAAC,GAAG/J,MAAR;AACA7B,MAAAA,CAAC,GAAGI,CAAC,GAAG0B,MAAR;AACAiU,MAAAA,EAAE,GAAGhS,IAAI,CAACmL,KAAL,CAAWnP,CAAX,CAAL;AACAiW,MAAAA,EAAE,GAAGjS,IAAI,CAACmL,KAAL,CAAWlP,CAAX,CAAL;AACA0T,MAAAA,EAAE,GAAG3T,CAAC,GAAGgW,EAAT;AACApC,MAAAA,EAAE,GAAG3T,CAAC,GAAGgW,EAAT;AACAC,MAAAA,EAAE,GAAGF,EAAE,GAAG,CAAV;AACAG,MAAAA,EAAE,GAAGF,EAAE,GAAG,CAAV;;AAEA,UAAIC,EAAE,IAAItU,QAAV,EAAoB;AAClBsU,QAAAA,EAAE,GAAGF,EAAL;AACD;;AACD,UAAIG,EAAE,IAAItU,SAAV,EAAqB;AACnBsU,QAAAA,EAAE,GAAGF,EAAL;AACD;;AAED4L,MAAAA,eAAe,GAAG,CAAC5L,EAAE,GAAGrU,QAAL,GAAgBoU,EAAjB,IAAuB,CAAzC;AACA8L,MAAAA,eAAe,GAAG,CAAC7L,EAAE,GAAGrU,QAAL,GAAgBsU,EAAjB,IAAuB,CAAzC;AACA6L,MAAAA,eAAe,GAAG,CAAC5L,EAAE,GAAGvU,QAAL,GAAgBoU,EAAjB,IAAuB,CAAzC;AACAgM,MAAAA,eAAe,GAAG,CAAC7L,EAAE,GAAGvU,QAAL,GAAgBsU,EAAjB,IAAuB,CAAzC;AACA1Q,MAAAA,aAAa,GAAG,CAACnF,CAAC,GAAGzG,QAAJ,GAAeiS,CAAhB,IAAqB,CAArC;AAEA7R,MAAAA,YAAY,CAACkJ,IAAb,CAAkBsC,aAAlB,IACE,CAAC,MAAMoO,EAAP,KACG,CAAC,MAAMD,EAAP,IAAa5Z,YAAY,CAACmJ,IAAb,CAAkB2e,eAAlB,CAAb,GACClO,EAAE,GAAG5Z,YAAY,CAACmJ,IAAb,CAAkB4e,eAAlB,CAFT,IAGAlO,EAAE,IACC,CAAC,MAAMD,EAAP,IAAa5Z,YAAY,CAACmJ,IAAb,CAAkB6e,eAAlB,CAAb,GACCpO,EAAE,GAAG5Z,YAAY,CAACmJ,IAAb,CAAkB8e,eAAlB,CAFP,CAJJ;AAOAhoB,MAAAA,YAAY,CAACkJ,IAAb,CAAkBsC,aAAa,GAAG,CAAlC,IACE,CAAC,MAAMoO,EAAP,KACG,CAAC,MAAMD,EAAP,IAAa5Z,YAAY,CAACmJ,IAAb,CAAkB2e,eAAe,GAAG,CAApC,CAAb,GACClO,EAAE,GAAG5Z,YAAY,CAACmJ,IAAb,CAAkB4e,eAAe,GAAG,CAApC,CAFT,IAGAlO,EAAE,IACC,CAAC,MAAMD,EAAP,IAAa5Z,YAAY,CAACmJ,IAAb,CAAkB6e,eAAe,GAAG,CAApC,CAAb,GACCpO,EAAE,GAAG5Z,YAAY,CAACmJ,IAAb,CAAkB8e,eAAe,GAAG,CAApC,CAFP,CAJJ;AAOAhoB,MAAAA,YAAY,CAACkJ,IAAb,CAAkBsC,aAAa,GAAG,CAAlC,IACE,CAAC,MAAMoO,EAAP,KACG,CAAC,MAAMD,EAAP,IAAa5Z,YAAY,CAACmJ,IAAb,CAAkB2e,eAAe,GAAG,CAApC,CAAb,GACClO,EAAE,GAAG5Z,YAAY,CAACmJ,IAAb,CAAkB4e,eAAe,GAAG,CAApC,CAFT,IAGAlO,EAAE,IACC,CAAC,MAAMD,EAAP,IAAa5Z,YAAY,CAACmJ,IAAb,CAAkB6e,eAAe,GAAG,CAApC,CAAb,GACCpO,EAAE,GAAG5Z,YAAY,CAACmJ,IAAb,CAAkB8e,eAAe,GAAG,CAApC,CAFP,CAJJ;AAOAhoB,MAAAA,YAAY,CAACkJ,IAAb,CAAkBsC,aAAa,GAAG,CAAlC,IACE,CAAC,MAAMoO,EAAP,KACG,CAAC,MAAMD,EAAP,IAAa5Z,YAAY,CAACmJ,IAAb,CAAkB2e,eAAe,GAAG,CAApC,CAAb,GACClO,EAAE,GAAG5Z,YAAY,CAACmJ,IAAb,CAAkB4e,eAAe,GAAG,CAApC,CAFT,IAGAlO,EAAE,IACC,CAAC,MAAMD,EAAP,IAAa5Z,YAAY,CAACmJ,IAAb,CAAkB6e,eAAe,GAAG,CAApC,CAAb,GACCpO,EAAE,GAAG5Z,YAAY,CAACmJ,IAAb,CAAkB8e,eAAe,GAAG,CAApC,CAFP,CAJJ;AAOD;AACF;;AAED,SAAOhoB,YAAP;AACD;AAEM,SAASf,8BAAT,CACLc,YADK,EAELC,YAFK,EAGLJ,QAHK,EAILC,SAJK,EAKM;AACX,MAAIooB,WAAW,GAAG,SAASA,WAAT,CAAqBC,EAArB,EAAyBC,EAAzB,EAA6BC,EAA7B,EAAiC7V,CAAjC,EAAoC;AAClD,WAAO4V,EAAE,GAAG,CAACC,EAAE,GAAGF,EAAN,IAAY3V,CAAjB,GAAqB,CAAC2V,EAAE,GAAG,IAAIC,EAAT,GAAcC,EAAf,IAAqB7V,CAArB,GAAyBA,CAArD;AACD,GAFH;AAAA,MAGE8V,oBAAoB,GAAG,SAASA,oBAAT,CAA8BH,EAA9B,EAAkCC,EAAlC,EAAsCC,EAAtC,EAA0C7V,CAA1C,EAA6C;AAClE,QAAIpK,MAAM,GAAG8f,WAAW,CAACC,EAAD,EAAKC,EAAL,EAASC,EAAT,EAAa7V,CAAb,CAAxB;;AACA,QAAIpK,MAAM,GAAG,GAAb,EAAkB;AAChB,aAAO,GAAP;AACD;;AACD,QAAIA,MAAM,GAAG,CAAb,EAAgB;AACd,aAAO,CAAP;AACD;;AACD,WAAO6B,IAAI,CAACmL,KAAL,CAAWhN,MAAX,CAAP;AACD,GAZH;AAAA,MAaEP,QAAQ,GAAG7H,YAAY,CAACZ,KAb1B;AAAA,MAcE0I,SAAS,GAAG9H,YAAY,CAACX,MAd3B;AAAA,MAeE0I,MAAM,GAAGF,QAAQ,GAAGhI,QAftB;AAAA,MAgBEmI,MAAM,GAAGF,SAAS,GAAGhI,SAhBvB;AAAA,MAiBEmG,CAjBF;AAAA,MAkBEC,CAlBF;AAAA,MAmBE+V,EAnBF;AAAA,MAoBEC,EApBF;AAAA,MAqBEC,EArBF;AAAA,MAsBEC,EAtBF;AAAA,MAuBEC,EAvBF;AAAA,MAwBEC,EAxBF;AAAA,MAyBE1C,EAzBF;AAAA,MA0BEC,EA1BF;AAAA,MA2BEiO,eA3BF;AAAA,MA4BEC,eA5BF;AAAA,MA6BEQ,eA7BF;AAAA,MA8BEP,eA9BF;AAAA,MA+BEC,eA/BF;AAAA,MAgCEO,eAhCF;AAAA,MAiCEC,eAjCF;AAAA,MAkCEC,eAlCF;AAAA,MAmCEC,eAnCF;AAAA,MAoCEld,aApCF;AAAA,MAqCEnF,CArCF;AAAA,MAsCEwL,CAtCF;;AAwCA,OAAKxL,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGxG,SAAhB,EAA2BwG,CAAC,IAAI,CAAhC,EAAmC;AACjC,SAAKwL,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGjS,QAAhB,EAA0BiS,CAAC,IAAI,CAA/B,EAAkC;AAChC7L,MAAAA,CAAC,GAAG6L,CAAC,GAAG/J,MAAR;AACA7B,MAAAA,CAAC,GAAGI,CAAC,GAAG0B,MAAR;AAEAmU,MAAAA,EAAE,GAAGlS,IAAI,CAACmL,KAAL,CAAWnP,CAAX,CAAL;AACAmW,MAAAA,EAAE,GAAGnS,IAAI,CAACmL,KAAL,CAAWlP,CAAX,CAAL;AACA0T,MAAAA,EAAE,GAAG,CAAC3T,CAAC,GAAGkW,EAAL,IAAW,GAAhB;AACAtC,MAAAA,EAAE,GAAG,CAAC3T,CAAC,GAAGkW,EAAL,IAAW,GAAhB;;AAEA,UAAID,EAAE,GAAG,CAAL,IAAU,CAAd,EAAiB;AACfF,QAAAA,EAAE,GAAGE,EAAE,GAAG,CAAV;AACD,OAFD,MAEO;AACLF,QAAAA,EAAE,GAAGE,EAAL;AACD;;AAED,UAAIC,EAAE,GAAG,CAAL,IAAU,CAAd,EAAiB;AACfF,QAAAA,EAAE,GAAGE,EAAE,GAAG,CAAV;AACD,OAFD,MAEO;AACLF,QAAAA,EAAE,GAAGE,EAAL;AACD;;AAED,UAAID,EAAE,GAAG,CAAL,IAAUtU,QAAd,EAAwB;AACtBwU,QAAAA,EAAE,GAAGF,EAAL;AACD,OAFD,MAEO;AACLE,QAAAA,EAAE,GAAGF,EAAE,GAAG,CAAV;AACD;;AAED,UAAIC,EAAE,GAAG,CAAL,IAAUvU,QAAd,EAAwB;AACtByU,QAAAA,EAAE,GAAGF,EAAL;AACD,OAFD,MAEO;AACLE,QAAAA,EAAE,GAAGF,EAAE,GAAG,CAAV;AACD;;AAED0L,MAAAA,eAAe,GAAG,CAAC5L,EAAE,GAAGrU,QAAL,GAAgBoU,EAAjB,IAAuB,CAAzC;AACA8L,MAAAA,eAAe,GAAG,CAAC7L,EAAE,GAAGrU,QAAL,GAAgBsU,EAAjB,IAAuB,CAAzC;AACAoM,MAAAA,eAAe,GAAG,CAACrM,EAAE,GAAGrU,QAAL,GAAgBwU,EAAjB,IAAuB,CAAzC;AACA2L,MAAAA,eAAe,GAAG,CAAC5L,EAAE,GAAGvU,QAAL,GAAgBoU,EAAjB,IAAuB,CAAzC;AACAgM,MAAAA,eAAe,GAAG,CAAC7L,EAAE,GAAGvU,QAAL,GAAgBsU,EAAjB,IAAuB,CAAzC;AACAqM,MAAAA,eAAe,GAAG,CAACpM,EAAE,GAAGvU,QAAL,GAAgBwU,EAAjB,IAAuB,CAAzC;AACAoM,MAAAA,eAAe,GAAG,CAACnM,EAAE,GAAGzU,QAAL,GAAgBoU,EAAjB,IAAuB,CAAzC;AACAyM,MAAAA,eAAe,GAAG,CAACpM,EAAE,GAAGzU,QAAL,GAAgBsU,EAAjB,IAAuB,CAAzC;AACAwM,MAAAA,eAAe,GAAG,CAACrM,EAAE,GAAGzU,QAAL,GAAgBwU,EAAjB,IAAuB,CAAzC;AAEA5Q,MAAAA,aAAa,GAAG,CAACnF,CAAC,GAAGzG,QAAJ,GAAeiS,CAAhB,IAAqB,CAArC;AAEA7R,MAAAA,YAAY,CAACkJ,IAAb,CAAkBsC,aAAlB,IAAmC6c,oBAAoB,CACrDJ,WAAW,CACTloB,YAAY,CAACmJ,IAAb,CAAkB2e,eAAlB,CADS,EAET9nB,YAAY,CAACmJ,IAAb,CAAkB4e,eAAlB,CAFS,EAGT/nB,YAAY,CAACmJ,IAAb,CAAkBof,eAAlB,CAHS,EAIT3O,EAJS,CAD0C,EAOrDsO,WAAW,CACTloB,YAAY,CAACmJ,IAAb,CAAkB6e,eAAlB,CADS,EAEThoB,YAAY,CAACmJ,IAAb,CAAkB8e,eAAlB,CAFS,EAGTjoB,YAAY,CAACmJ,IAAb,CAAkBqf,eAAlB,CAHS,EAIT5O,EAJS,CAP0C,EAarDsO,WAAW,CACTloB,YAAY,CAACmJ,IAAb,CAAkBsf,eAAlB,CADS,EAETzoB,YAAY,CAACmJ,IAAb,CAAkBuf,eAAlB,CAFS,EAGT1oB,YAAY,CAACmJ,IAAb,CAAkBwf,eAAlB,CAHS,EAIT/O,EAJS,CAb0C,EAmBrDC,EAnBqD,CAAvD;AAsBA5Z,MAAAA,YAAY,CAACkJ,IAAb,CAAkBsC,aAAa,GAAG,CAAlC,IAAuC6c,oBAAoB,CACzDJ,WAAW,CACTloB,YAAY,CAACmJ,IAAb,CAAkB2e,eAAe,GAAG,CAApC,CADS,EAET9nB,YAAY,CAACmJ,IAAb,CAAkB4e,eAAe,GAAG,CAApC,CAFS,EAGT/nB,YAAY,CAACmJ,IAAb,CAAkBof,eAAe,GAAG,CAApC,CAHS,EAIT3O,EAJS,CAD8C,EAOzDsO,WAAW,CACTloB,YAAY,CAACmJ,IAAb,CAAkB6e,eAAe,GAAG,CAApC,CADS,EAEThoB,YAAY,CAACmJ,IAAb,CAAkB8e,eAAe,GAAG,CAApC,CAFS,EAGTjoB,YAAY,CAACmJ,IAAb,CAAkBqf,eAAe,GAAG,CAApC,CAHS,EAIT5O,EAJS,CAP8C,EAazDsO,WAAW,CACTloB,YAAY,CAACmJ,IAAb,CAAkBsf,eAAe,GAAG,CAApC,CADS,EAETzoB,YAAY,CAACmJ,IAAb,CAAkBuf,eAAe,GAAG,CAApC,CAFS,EAGT1oB,YAAY,CAACmJ,IAAb,CAAkBwf,eAAe,GAAG,CAApC,CAHS,EAIT/O,EAJS,CAb8C,EAmBzDC,EAnByD,CAA3D;AAsBA5Z,MAAAA,YAAY,CAACkJ,IAAb,CAAkBsC,aAAa,GAAG,CAAlC,IAAuC6c,oBAAoB,CACzDJ,WAAW,CACTloB,YAAY,CAACmJ,IAAb,CAAkB2e,eAAe,GAAG,CAApC,CADS,EAET9nB,YAAY,CAACmJ,IAAb,CAAkB4e,eAAe,GAAG,CAApC,CAFS,EAGT/nB,YAAY,CAACmJ,IAAb,CAAkBof,eAAe,GAAG,CAApC,CAHS,EAIT3O,EAJS,CAD8C,EAOzDsO,WAAW,CACTloB,YAAY,CAACmJ,IAAb,CAAkB6e,eAAe,GAAG,CAApC,CADS,EAEThoB,YAAY,CAACmJ,IAAb,CAAkB8e,eAAe,GAAG,CAApC,CAFS,EAGTjoB,YAAY,CAACmJ,IAAb,CAAkBqf,eAAe,GAAG,CAApC,CAHS,EAIT5O,EAJS,CAP8C,EAazDsO,WAAW,CACTloB,YAAY,CAACmJ,IAAb,CAAkBsf,eAAe,GAAG,CAApC,CADS,EAETzoB,YAAY,CAACmJ,IAAb,CAAkBuf,eAAe,GAAG,CAApC,CAFS,EAGT1oB,YAAY,CAACmJ,IAAb,CAAkBwf,eAAe,GAAG,CAApC,CAHS,EAIT/O,EAJS,CAb8C,EAmBzDC,EAnByD,CAA3D;AAsBA5Z,MAAAA,YAAY,CAACkJ,IAAb,CAAkBsC,aAAa,GAAG,CAAlC,IAAuC6c,oBAAoB,CACzDJ,WAAW,CACTloB,YAAY,CAACmJ,IAAb,CAAkB2e,eAAe,GAAG,CAApC,CADS,EAET9nB,YAAY,CAACmJ,IAAb,CAAkB4e,eAAe,GAAG,CAApC,CAFS,EAGT/nB,YAAY,CAACmJ,IAAb,CAAkBof,eAAe,GAAG,CAApC,CAHS,EAIT3O,EAJS,CAD8C,EAOzDsO,WAAW,CACTloB,YAAY,CAACmJ,IAAb,CAAkB6e,eAAe,GAAG,CAApC,CADS,EAEThoB,YAAY,CAACmJ,IAAb,CAAkB8e,eAAe,GAAG,CAApC,CAFS,EAGTjoB,YAAY,CAACmJ,IAAb,CAAkBqf,eAAe,GAAG,CAApC,CAHS,EAIT5O,EAJS,CAP8C,EAazDsO,WAAW,CACTloB,YAAY,CAACmJ,IAAb,CAAkBsf,eAAe,GAAG,CAApC,CADS,EAETzoB,YAAY,CAACmJ,IAAb,CAAkBuf,eAAe,GAAG,CAApC,CAFS,EAGT1oB,YAAY,CAACmJ,IAAb,CAAkBwf,eAAe,GAAG,CAApC,CAHS,EAIT/O,EAJS,CAb8C,EAmBzDC,EAnByD,CAA3D;AAqBD;AACF;;AAED,SAAO5Z,YAAP;AACD;;;;;;;;;;AC9SD;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;ACNA;AACA","sources":["webpack://imagizer/./src/classes/BaseOnLayer.tsx","webpack://imagizer/./src/classes/CanvasWrapper.tsx","webpack://imagizer/./src/classes/EffectsRepository.tsx","webpack://imagizer/./src/classes/Image.tsx","webpack://imagizer/./src/classes/Layer.tsx","webpack://imagizer/./src/classes/LayerObject.tsx","webpack://imagizer/./src/classes/Project.tsx","webpack://imagizer/./src/classes/effects/Base.tsx","webpack://imagizer/./src/classes/effects/BaseCustom.tsx","webpack://imagizer/./src/classes/effects/BasePoint.tsx","webpack://imagizer/./src/classes/effects/BaseTransform.tsx","webpack://imagizer/./src/classes/effects/custom/AutoWhiteBalance.tsx","webpack://imagizer/./src/classes/effects/custom/Block.tsx","webpack://imagizer/./src/classes/effects/custom/Border.tsx","webpack://imagizer/./src/classes/effects/custom/ComponentStretching.tsx","webpack://imagizer/./src/classes/effects/custom/Emboss.tsx","webpack://imagizer/./src/classes/effects/custom/FillColor.tsx","webpack://imagizer/./src/classes/effects/custom/Flip.tsx","webpack://imagizer/./src/classes/effects/point/AutoContrast.tsx","webpack://imagizer/./src/classes/effects/point/Brightness.tsx","webpack://imagizer/./src/classes/effects/point/ChannelMix.tsx","webpack://imagizer/./src/classes/effects/point/Contrast.tsx","webpack://imagizer/./src/classes/effects/point/Diffusion.tsx","webpack://imagizer/./src/classes/effects/point/Dissolve.tsx","webpack://imagizer/./src/classes/effects/point/Dither.tsx","webpack://imagizer/./src/classes/effects/point/Edge.tsx","webpack://imagizer/./src/classes/effects/point/Exposure.tsx","webpack://imagizer/./src/classes/effects/point/Gain.tsx","webpack://imagizer/./src/classes/effects/point/Gamma.tsx","webpack://imagizer/./src/classes/effects/point/GrayScale.tsx","webpack://imagizer/./src/classes/effects/point/HSBAdjust.tsx","webpack://imagizer/./src/classes/effects/point/Invert.tsx","webpack://imagizer/./src/classes/effects/point/InvertAlpha.tsx","webpack://imagizer/./src/classes/effects/point/Levels.tsx","webpack://imagizer/./src/classes/effects/point/Rescale.tsx","webpack://imagizer/./src/classes/effects/point/Sepia.tsx","webpack://imagizer/./src/classes/effects/point/Solarize.tsx","webpack://imagizer/./src/classes/effects/point/Threshold.tsx","webpack://imagizer/./src/classes/effects/point/Tritone.tsx","webpack://imagizer/./src/classes/effects/transform/Circle.tsx","webpack://imagizer/./src/classes/effects/transform/Diffuse.tsx","webpack://imagizer/./src/classes/effects/transform/Kaleidoscope.tsx","webpack://imagizer/./src/classes/effects/transform/Marble.tsx","webpack://imagizer/./src/classes/effects/transform/Offset.tsx","webpack://imagizer/./src/classes/effects/transform/Perspective.tsx","webpack://imagizer/./src/classes/effects/transform/Pinch.tsx","webpack://imagizer/./src/classes/effects/transform/Polar.tsx","webpack://imagizer/./src/classes/effects/transform/Ripple.tsx","webpack://imagizer/./src/classes/effects/transform/Rotate.tsx","webpack://imagizer/./src/classes/effects/transform/Shear.tsx","webpack://imagizer/./src/classes/effects/transform/Sphere.tsx","webpack://imagizer/./src/classes/effects/transform/Swim.tsx","webpack://imagizer/./src/classes/effects/transform/Twirl.tsx","webpack://imagizer/./src/classes/effects/transform/Water.tsx","webpack://imagizer/./src/helpers/color.tsx","webpack://imagizer/./src/helpers/common.tsx","webpack://imagizer/./src/helpers/noise.tsx","webpack://imagizer/./src/helpers/resize.tsx","webpack://imagizer/external \"canvas\"","webpack://imagizer/external \"fs\"","webpack://imagizer/webpack/bootstrap","webpack://imagizer/webpack/runtime/define property getters","webpack://imagizer/webpack/runtime/hasOwnProperty shorthand","webpack://imagizer/webpack/runtime/make namespace object","webpack://imagizer/./src/main.tsx"],"sourcesContent":["import CanvasWrapper from \"./CanvasWrapper\";\nimport {\n  resizeNearestNeighbour,\n  resizeBilinearInterpolation,\n  resizeBiquadraticInterpolation,\n} from \"../helpers/resize\";\n\nclass BaseOnLayerObject {\n  imageData = null;\n\n  canvas = null;\n\n  width: number = 0;\n\n  height: number = 0;\n\n  getWidth() {\n    return this.width;\n  }\n\n  getHeight() {\n    return this.height;\n  }\n\n  setWidth(value: number) {\n    this.width = value;\n    return this;\n  }\n\n  setHeight(value: number) {\n    this.height = value;\n    return this;\n  }\n\n  getImageData() {\n    if (!this.imageData) {\n      this.imageData = this.canvas\n        .getContext()\n        .getImageData(0, 0, this.getWidth(), this.getHeight());\n    }\n    return this.imageData;\n  }\n\n  setImageData(value: ImageData) {\n    this.imageData = value;\n    return this;\n  }\n\n  resize(\n    newWidth: number,\n    newHeight: number,\n    mode: string = \"nearest-neighbour\"\n  ) {\n    const oldImageData = this.getImageData(),\n      canvas = new CanvasWrapper(newWidth, newHeight);\n    let newImageData = canvas.getContext().createImageData(newWidth, newHeight);\n\n    switch (mode) {\n      case \"nearest-neighbour\":\n        newImageData = resizeNearestNeighbour(\n          oldImageData,\n          newImageData,\n          newWidth,\n          newHeight\n        );\n        break;\n\n      case \"bilinear-interpolation\":\n        newImageData = resizeBilinearInterpolation(\n          oldImageData,\n          newImageData,\n          newWidth,\n          newHeight\n        );\n        break;\n\n      case \"biquadratic-interpolation\":\n        newImageData = resizeBiquadraticInterpolation(\n          oldImageData,\n          newImageData,\n          newWidth,\n          newHeight\n        );\n        break;\n\n      default:\n        canvas.destroy();\n        return this;\n    }\n\n    canvas.destroy();\n\n    return this.setWidth(newWidth)\n      .setHeight(newHeight)\n      .setImageData(newImageData);\n  }\n}\n\nexport default BaseOnLayerObject;\n","import { isBrowser } from \"../helpers/common\";\nimport { NodeCanvasRenderingContext2D, Canvas } from \"canvas/types/index\";\n\nclass CanvasWrapper {\n  canvas: Canvas | HTMLCanvasElement = null;\n\n  context: NodeCanvasRenderingContext2D | RenderingContext = null;\n\n  width: number = 0;\n\n  height: number = 0;\n\n  constructor(width: number, height: number) {\n    this.initialize(width, height);\n  }\n\n  initialize(width: number = 0, height: number = 0) {\n    if (!isBrowser()) {\n      const { createCanvas } = require(\"canvas\");\n      this.canvas = createCanvas(width, height);\n    } else {\n      this.canvas = document.createElement(\"canvas\");\n\n      // hide from viewport\n      this.canvas.style.position = \"absolute\";\n      this.canvas.style.left = \"-99999px\";\n      this.canvas.style.top = \"-99999px\";\n\n      this.setWidth(width);\n      this.setHeight(height);\n\n      document.body.appendChild(this.canvas);\n    }\n  }\n\n  setWidth(value: number) {\n    this.canvas.setAttribute(\"width\", \"\" + value);\n    this.width = value;\n    return this;\n  }\n\n  setHeight(value: number) {\n    this.canvas.setAttribute(\"height\", \"\" + value);\n    this.height = value;\n    return this;\n  }\n\n  getContext() {\n    if (!this.context) {\n      this.context = this.canvas.getContext(\"2d\");\n    }\n    return this.context;\n  }\n\n  getCanvas() {\n    return this.canvas;\n  }\n\n  toDataURL(type: string = \"image/png\") {\n    return this.canvas.toDataURL(type);\n  }\n\n  destroy() {\n    if (isBrowser()) {\n      document.body.removeChild(this.canvas);\n    }\n    this.canvas = null;\n    this.context = null;\n  }\n}\n\nexport default CanvasWrapper;\n","import GrayScale from \"./effects/point/GrayScale\";\nimport Sepia from \"./effects/point/Sepia\";\nimport Contrast from \"./effects/point/Contrast\";\nimport Brightness from \"./effects/point/Brightness\";\nimport Diffusion from \"./effects/point/Diffusion\";\nimport Dither from \"./effects/point/Dither\";\nimport Exposure from \"./effects/point/Exposure\";\nimport Gain from \"./effects/point/Gain\";\nimport Gamma from \"./effects/point/Gamma\";\nimport HSBAdjust from \"./effects/point/HSBAdjust\";\nimport InvertAlpha from \"./effects/point/InvertAlpha\";\nimport Invert from \"./effects/point/Invert\";\nimport Levels from \"./effects/point/Levels\";\nimport Rescale from \"./effects/point/Rescale\";\nimport Solarize from \"./effects/point/Solarize\";\nimport Threshold from \"./effects/point/Threshold\";\nimport Tritone from \"./effects/point/Tritone\";\nimport Dissolve from \"./effects/point/Dissolve\";\nimport Edge from \"./effects/point/Edge\";\nimport ChannelMix from \"./effects/point/ChannelMix\";\nimport AutoContrast from \"./effects/point/AutoContrast\";\n\nimport Diffuse from \"./effects/transform/Diffuse\";\nimport Kaleidoscope from \"./effects/transform/Kaleidoscope\";\nimport Marble from \"./effects/transform/Marble\";\nimport Pinch from \"./effects/transform/Pinch\";\nimport Ripple from \"./effects/transform/Ripple\";\nimport Shear from \"./effects/transform/Shear\";\nimport Sphere from \"./effects/transform/Sphere\";\nimport Swim from \"./effects/transform/Swim\";\nimport Twirl from \"./effects/transform/Twirl\";\nimport Water from \"./effects/transform/Water\";\nimport Circle from \"./effects/transform/Circle\";\nimport Rotate from \"./effects/transform/Rotate\";\nimport Offset from \"./effects/transform/Offset\";\nimport Polar from \"./effects/transform/Polar\";\nimport Perspective from \"./effects/transform/Perspective\";\n\nimport AutoWhiteBalance from \"./effects/custom/AutoWhiteBalance\";\nimport FillColor from \"./effects/custom/FillColor\";\nimport Flip from \"./effects/custom/Flip\";\nimport Block from \"./effects/custom/Block\";\nimport Border from \"./effects/custom/Border\";\nimport Emboss from \"./effects/custom/Emboss\";\nimport ComponentStretching from \"./effects/custom/ComponentStretching\";\n\nconst availableEffects = {};\n\nfunction add(_class) {\n  if (availableEffects[_class.getName()]) {\n    throw `Effect: ${_class.getName()} exists already!`;\n  }\n  availableEffects[_class.getName()] = _class;\n}\n\nadd(GrayScale);\nadd(Sepia);\nadd(Contrast);\nadd(Brightness);\nadd(Diffusion);\nadd(Dither);\nadd(Exposure);\nadd(Gain);\nadd(Gamma);\nadd(HSBAdjust);\nadd(InvertAlpha);\nadd(Invert);\nadd(Levels);\nadd(Rescale);\nadd(Solarize);\nadd(Threshold);\nadd(Tritone);\nadd(Diffuse);\nadd(Dissolve);\nadd(Kaleidoscope);\nadd(Marble);\nadd(Pinch);\nadd(Ripple);\nadd(Shear);\nadd(Sphere);\nadd(Swim);\nadd(Twirl);\nadd(Water);\nadd(Edge);\nadd(ChannelMix);\nadd(Circle);\nadd(Rotate);\nadd(Offset);\nadd(Polar);\nadd(Perspective);\nadd(AutoContrast);\nadd(AutoWhiteBalance);\nadd(FillColor);\nadd(Flip);\nadd(Block);\nadd(Border);\nadd(Emboss);\nadd(ComponentStretching);\n\nclass EffectsRepository {\n  static get(name) {\n    return availableEffects[name];\n  }\n}\n\nexport default EffectsRepository;\n","import BaseOnLayerObject from \"./BaseOnLayer\";\nimport CanvasWrapper from \"./CanvasWrapper\";\nimport { isBrowser } from \"../helpers/common\";\nimport { Image as ImageType } from \"canvas/types/index\";\n\nclass Image extends BaseOnLayerObject {\n  url: string = null;\n\n  image: HTMLImageElement | ImageType = null;\n\n  constructor() {\n    super();\n\n    if (!isBrowser()) {\n      const canvas = require(\"canvas\");\n      this.image = new canvas.Image();\n    } else {\n      this.image = new window.Image();\n\n      // hide from viewport\n      this.image.style.position = \"absolute\";\n      this.image.style.left = \"-99999px\";\n      this.image.style.top = \"-99999px\";\n    }\n  }\n\n  load(url: string, callback: () => void) {\n    const load = () => {\n      this.setWidth(!isBrowser() ? this.image.width : this.image.clientWidth);\n      this.setHeight(\n        !isBrowser() ? this.image.height : this.image.clientHeight\n      );\n\n      // get image data\n      this.canvas = new CanvasWrapper(this.getWidth(), this.getHeight());\n      this.canvas\n        .getContext()\n        .drawImage(this.image, 0, 0, this.getWidth(), this.getHeight());\n\n      if (isBrowser()) {\n        document.body.removeChild(this.image);\n      }\n\n      if (typeof callback === \"function\") {\n        callback.call(this);\n      }\n    };\n\n    this.url = url;\n\n    if (isBrowser()) {\n      document.body.appendChild(this.image);\n      this.image.onload = function () {\n        load();\n      };\n      this.image.src = url;\n    } else {\n      const fs = require(\"fs\");\n      this.image.src = fs.readFileSync(url);\n      load();\n    }\n  }\n}\n\nexport default Image;\n","import CanvasWrapper from \"./CanvasWrapper\";\nimport LayerObject from \"./LayerObject\";\nimport { mergeImageData, mergePixelCallback } from \"../helpers/common\";\nimport EffectsRepository from \"./EffectsRepository\";\n\nclass Layer {\n  objects = [];\n\n  effects = [];\n\n  x: number = 0;\n\n  y: number = 0;\n\n  canvas: CanvasWrapper = null;\n\n  imageData: ImageData = null;\n\n  width: number = 0;\n\n  height: number = 0;\n\n  parameters: {\n    background_color?: string;\n    blendingMode?: string;\n  } = {\n    background_color: \"\",\n    blendingMode: \"\",\n  };\n\n  constructor(\n    width: number,\n    height: number,\n    parameters: {\n      background_color?: string;\n      blendingMode?: string;\n    } = {\n      background_color: \"\",\n      blendingMode: \"\",\n    }\n  ) {\n    this.initialize(width, height, parameters);\n\n    if (\n      parameters.background_color &&\n      parameters.background_color !== \"transparent\"\n    ) {\n      this.applyEffect(\"fill-color\", {\n        color: parameters.background_color,\n      });\n    }\n  }\n\n  initialize(width: number, height: number, parameters) {\n    this.canvas = new CanvasWrapper(width, height);\n    this.imageData = this.canvas.getContext().createImageData(width, height);\n    this.width = width;\n    this.height = height;\n    this.parameters = parameters;\n  }\n\n  put(obj: any, x: number, y: number) {\n    const put = new LayerObject(obj, this, x, y, {});\n    this.objects.push(put);\n    return put;\n  }\n\n  exportLayer() {\n    for (let i = 0; i < this.objects.length; i += 1) {\n      const layerObject = this.objects[i];\n      this.imageData = mergeImageData(\n        {\n          width: this.width,\n          height: this.height,\n          imageData: this.imageData,\n        },\n        {\n          x: layerObject.getX(),\n          y: layerObject.getY(),\n          width: layerObject.getWidth(),\n          height: layerObject.getHeight(),\n          imageData: layerObject.exportObject(),\n        },\n        mergePixelCallback\n      );\n    }\n\n    for (let i = 0; i < this.effects.length; i++) {\n      this.imageData = this.effects[i].effect.run(\n        this.imageData,\n        this.effects[i].params\n      );\n    }\n\n    return this.imageData;\n  }\n\n  applyEffect(name: string, parameters) {\n    this.effects.push({\n      name,\n      effect: new (EffectsRepository.get(name))(),\n      parameters,\n    });\n  }\n\n  resize(newWidth: number, newHeight: number, mode: string) {\n    this.canvas.destroy();\n    this.canvas = null;\n    this.imageData = null;\n\n    this.initialize(newWidth, newHeight, this.parameters);\n\n    for (let i = 0; i < this.objects.length; i += 1) {\n      this.objects[i].resize(newWidth, newHeight, mode, true);\n    }\n\n    return this;\n  }\n\n  crop(startX: number, startY: number, width: number, height: number) {\n    for (let i = 0; i < this.objects.length; i += 1) {\n      this.objects[i].crop(startX, startY, width, height);\n    }\n\n    return this;\n  }\n\n  moveXY(x: number, y: number) {\n    this.moveX(x);\n    this.moveY(y);\n    return this;\n  }\n\n  moveX(x: number) {\n    this.x += x | 0;\n    return this;\n  }\n\n  moveY(y: number) {\n    this.y += y | 0;\n    return this;\n  }\n\n  setX(x: number) {\n    this.x = x;\n    return this;\n  }\n\n  setY(y: number) {\n    this.y = y;\n    return this;\n  }\n\n  setBlendingMode(blendingMode: string) {\n    this.parameters.blendingMode = blendingMode;\n  }\n\n  getX() {\n    return this.x;\n  }\n\n  getY() {\n    return this.y;\n  }\n\n  getWidth() {\n    return this.width;\n  }\n\n  getHeight() {\n    return this.height;\n  }\n\n  getParameter(name: string) {\n    return this.parameters[name];\n  }\n}\n\nexport default Layer;\n","import CanvasWrapper from \"./CanvasWrapper\";\nimport { cropImageData } from \"../helpers/common\";\nimport EffectsRepository from \"./EffectsRepository\";\nimport Image from \"./Image\";\nimport Layer from \"./Layer\";\n\nclass LayerObject {\n  obj: Image = null;\n\n  layer = null;\n\n  x: number = 0;\n\n  y: number = 0;\n\n  opts: object = {};\n\n  effects = [];\n\n  constructor(obj: Image, layer: Layer, x: number, y: number, opts: object) {\n    this.obj = obj;\n    this.layer = layer;\n    this.x = x;\n    this.y = y;\n    this.opts = opts;\n  }\n\n  getObject() {\n    return this.obj;\n  }\n\n  getX() {\n    return this.x;\n  }\n\n  getY() {\n    return this.y;\n  }\n\n  getWidth() {\n    return this.obj.getWidth();\n  }\n\n  getHeight() {\n    return this.obj.getHeight();\n  }\n\n  exportObject() {\n    let imageData = this.obj.getImageData();\n    for (let i = 0; i < this.effects.length; i += 1) {\n      imageData = this.effects[i].effect.run(imageData, this.effects[i].params);\n    }\n    return imageData;\n  }\n\n  applyEffect(name: string, parameters: object = {}) {\n    this.effects.push({\n      name,\n      effect: new (EffectsRepository.get(name))(),\n      parameters,\n    });\n  }\n\n  moveXY(x: number, y: number) {\n    this.moveX(x);\n    this.moveY(y);\n    return this;\n  }\n\n  moveX(x: number) {\n    this.x += x | 0;\n    return this;\n  }\n\n  moveY(y: number) {\n    this.y += y | 0;\n    return this;\n  }\n\n  setXY(x: number, y: number) {\n    this.setX(x);\n    this.setY(y);\n    return this;\n  }\n\n  setX(x: number) {\n    this.x = x;\n    return this;\n  }\n\n  setY(y: number) {\n    this.y = y;\n    return this;\n  }\n\n  resize(\n    newWidth: number,\n    newHeight: number,\n    mode: string,\n    isLayerResize: boolean\n  ) {\n    const oldWidth = this.getWidth(),\n      oldHeight = this.getHeight(),\n      ratioX = newWidth / oldWidth,\n      ratioY = newHeight / oldHeight;\n\n    if (isLayerResize) {\n      this.moveXY(-this.getX() * ratioX, -this.getY() * ratioY);\n    }\n\n    this.getObject().resize(newWidth, newHeight, mode);\n\n    return this;\n  }\n\n  crop(startX: number, startY: number, width: number, height: number) {\n    const object = this.getObject(),\n      oldImageData = object.getImageData(),\n      canvas = new CanvasWrapper(width, height),\n      newImageData = canvas.getContext().createImageData(width, height),\n      result = cropImageData(\n        oldImageData,\n        newImageData,\n        startX,\n        startY,\n        width,\n        height\n      );\n\n    object.setImageData(result).setWidth(width).setHeight(height);\n\n    this.setXY(startX, startY);\n\n    return this;\n  }\n}\n\nexport default LayerObject;\n","import CanvasWrapper from \"./CanvasWrapper\";\nimport Layer from \"./Layer\";\nimport {\n  mergeImageData,\n  mergePixelCallback,\n  isBrowser,\n} from \"../helpers/common\";\nimport EffectsRepository from \"./EffectsRepository\";\nimport BaseEffect from \"./effects/Base\";\n\nclass Project {\n  imageData: ImageData = null;\n\n  effects = [];\n\n  layers: Layer[] = [];\n\n  startTime: Date = new Date();\n\n  parameters: object = {};\n\n  width: number = 0;\n\n  height: number = 0;\n\n  canvas: CanvasWrapper = null;\n\n  constructor(width: number, height: number, parameters: object = {}) {\n    this.initialize(width, height, parameters);\n  }\n\n  initialize(width: number, height: number, parameters: object = {}) {\n    this.parameters = parameters;\n    this.width = width;\n    this.height = height;\n    this.canvas = new CanvasWrapper(width, height);\n    this.imageData = this.canvas.getContext().getImageData(0, 0, width, height);\n  }\n\n  createLayer(\n    parameters: {\n      background_color?: string;\n      blendingMode?: string;\n    } = { background_color: \"\", blendingMode: \"\" }\n  ) {\n    let layer = new Layer(this.width, this.height, parameters);\n    this.layers.push(layer);\n    return layer;\n  }\n\n  getTime() {\n    let end = new Date();\n    return end.getTime() - this.startTime.getTime();\n  }\n\n  save(path: string, imageType: string = \"image/png\") {\n    if (isBrowser()) {\n      throw new Error(\"Available only in node.js environment\");\n    }\n\n    for (let i = 0; i < this.layers.length; i++) {\n      this.imageData = mergeImageData(\n        {\n          width: this.width,\n          height: this.height,\n          imageData: this.imageData,\n        },\n        {\n          x: this.layers[i].getX(),\n          y: this.layers[i].getY(),\n          width: this.layers[i].getWidth(),\n          height: this.layers[i].getHeight(),\n          imageData: this.layers[i].exportLayer(),\n          blendingMode: this.layers[i].getParameter(\"blendingMode\"),\n        },\n        mergePixelCallback\n      );\n    }\n\n    for (let i = 0; i < this.effects.length; i++) {\n      this.imageData = this.effects[i].effect.run(\n        this.imageData,\n        this.effects[i].parameters\n      );\n    }\n\n    this.canvas.getContext().putImageData(this.imageData, 0, 0);\n\n    const fs = require(\"fs\"),\n      img = this.canvas.toDataURL(),\n      data = img.replace(/^data:image\\/\\w+;base64,/, \"\"),\n      buff = new Buffer(data, \"base64\");\n\n    fs.writeFileSync(path, buff);\n  }\n\n  render(imageType: string = \"image/png\") {\n    if (!isBrowser()) {\n      throw new Error(\"Available only in browser environment\");\n    }\n\n    const exportedImage = new window.Image();\n\n    for (let i = 0; i < this.layers.length; i++) {\n      this.imageData = mergeImageData(\n        {\n          width: this.width,\n          height: this.height,\n          imageData: this.imageData,\n        },\n        {\n          x: this.layers[i].getX(),\n          y: this.layers[i].getY(),\n          width: this.layers[i].getWidth(),\n          height: this.layers[i].getHeight(),\n          imageData: this.layers[i].exportLayer(),\n          blendingMode: this.layers[i].getParameter(\"blendingMode\"),\n        },\n        mergePixelCallback\n      );\n    }\n\n    for (let i = 0; i < this.effects.length; i++) {\n      this.imageData = this.effects[i].effect.run(\n        this.imageData,\n        this.effects[i].parameters\n      );\n    }\n\n    this.canvas.getContext().putImageData(this.imageData, 0, 0);\n\n    exportedImage.src = this.canvas.toDataURL(imageType);\n    return exportedImage;\n  }\n\n  applyEffect(name: string, parameters: object = {}) {\n    this.effects.push({\n      name,\n      effect: new (EffectsRepository.get(name))(),\n      parameters,\n    });\n  }\n\n  resize(newWidth: number, newHeight: number, mode: string) {\n    this.canvas.destroy();\n    this.canvas = null;\n    this.imageData = null;\n    this.initialize(newWidth, newHeight);\n\n    for (let i = 0; i < this.layers.length; i += 1) {\n      this.layers[i].resize(newWidth, newHeight, mode);\n    }\n\n    return this;\n  }\n}\n\nexport default Project;\n","class BaseEffect {\n  opts = {};\n\n  constructor(opts: object = {}) {\n    this.opts = opts;\n  }\n\n  getDefaultParameters() {\n    return {};\n  }\n\n  before(parameters: object, width: number, height: number, imageData: any) {\n    return {};\n  }\n\n  static getName() {\n    throw \"Extend it.\";\n  }\n}\n\nexport default BaseEffect;\n","import BaseEffect from \"./Base\";\n\nclass BaseCustomEffect extends BaseEffect {\n  callback(\n    pixel,\n    x: number,\n    y: number,\n    parameters: object,\n    width: number,\n    height: number\n  ) {\n    throw \"Extend it.\";\n  }\n\n  run(imageData: any, parameters: object) {\n    parameters = {\n      ...this.getDefaultParameters(),\n      ...parameters,\n    };\n\n    const imageDataCopy = new Uint8ClampedArray(imageData.data), // copy image data\n      /**\n       * Get ImageData array index from x and y position\n       * @param x\n       * @param y\n       * @returns {number}\n       */\n      getIndex = function getIndex(x, y) {\n        return y * imageData.width * 4 + x * 4;\n      },\n      normalizePixelValue = function (value) {\n        return Math.min(Math.max(value, 0), 255) | 0;\n      },\n      sandbox = {\n        // object invoked as this in effect callback\n        /**\n         * Get changed pixel\n         * @param {int} x\n         * @param {int} y\n         * @returns {{r: *, g: *, b: *, a: *}}\n         */\n        getPixel: function (x, y) {\n          const index = getIndex(x, y);\n          return {\n            r: imageDataCopy[index + 0],\n            g: imageDataCopy[index + 1],\n            b: imageDataCopy[index + 2],\n            a: imageDataCopy[index + 3],\n          };\n        },\n        /**\n         * Get pixel by its index\n         * @param index\n         */\n        getOriginalPixelByIndex: function (index) {\n          index *= 4;\n          return {\n            r: imageData.data[index],\n            g: imageData.data[index + 1],\n            b: imageData.data[index + 2],\n            a: imageData.data[index + 3],\n          };\n        },\n        /**\n         * Get original pixel.\n         * @param {int} x\n         * @param {int} y\n         * @returns {{r: *, g: *, b: *, a: *}}\n         */\n        getOriginalPixel: function (x, y) {\n          const index = getIndex(x, y);\n          return {\n            r: imageData.data[index + 0],\n            g: imageData.data[index + 1],\n            b: imageData.data[index + 2],\n            a: imageData.data[index + 3],\n          };\n        },\n        /**\n         * Set new pixel\n         * @param {int} x\n         * @param {int} y\n         * @param {object} rgba\n         */\n        setPixel: function (x, y, rgba) {\n          const index = getIndex(x, y);\n          imageDataCopy[index + 0] = normalizePixelValue(rgba.r);\n          imageDataCopy[index + 1] = normalizePixelValue(rgba.g);\n          imageDataCopy[index + 2] = normalizePixelValue(rgba.b);\n          imageDataCopy[index + 3] = normalizePixelValue(rgba.a);\n        },\n        /**\n         * Set pixel by index.\n         * @param index\n         * @param rgba\n         */\n        setPixelByIndex: function (index, rgba) {\n          index *= 4;\n          imageDataCopy[index + 0] = normalizePixelValue(rgba.r);\n          imageDataCopy[index + 1] = normalizePixelValue(rgba.g);\n          imageDataCopy[index + 2] = normalizePixelValue(rgba.b);\n          imageDataCopy[index + 3] = normalizePixelValue(rgba.a);\n        },\n        /**\n         * Data created by effect init function\n         */\n        data: null,\n        /**\n         * ImageData width\n         */\n        width: imageData.width,\n        /**\n         * ImageData height\n         */\n        height: imageData.height,\n      };\n\n    sandbox.data = this.before.call(\n      sandbox,\n      parameters,\n      imageData.width,\n      imageData.height,\n      imageData\n    );\n\n    this.callback.call(sandbox, imageData.width, imageData.height, parameters);\n\n    imageData.data.set(imageDataCopy);\n\n    return imageData;\n  }\n}\n\nexport default BaseCustomEffect;\n","import BaseEffect from \"./Base\";\n\nclass BasePointEffect extends BaseEffect {\n  callback(\n    pixel,\n    x: number,\n    y: number,\n    parameters: object,\n    width: number,\n    height: number\n  ) {\n    throw \"Extend it.\";\n  }\n\n  run(imageData: any, parameters: object) {\n    parameters = parameters = {\n      ...this.getDefaultParameters(),\n      ...parameters,\n    };\n\n    let x, y, firstPixelIndex, result;\n    const imageDataCopy = new Uint8ClampedArray(imageData.data), // copy image data\n      /**\n       * Get ImageData array index from x and y position\n       * @param x\n       * @param y\n       * @returns {number}\n       */\n      getIndex = function getIndex(x, y) {\n        return y * imageData.width * 4 + x * 4;\n      },\n      normalizePixelValue = function (value) {\n        return Math.min(Math.max(value, 0), 255) | 0;\n      },\n      sandbox = {\n        // object invoked as this in effect callback\n        /**\n         * Get changed pixel\n         * @param {int} x\n         * @param {int} y\n         * @returns {{r: *, g: *, b: *, a: *}}\n         */\n        getPixel: function (x, y) {\n          let index = getIndex(x, y);\n          return {\n            r: imageDataCopy[index + 0],\n            g: imageDataCopy[index + 1],\n            b: imageDataCopy[index + 2],\n            a: imageDataCopy[index + 3],\n          };\n        },\n        /**\n         * Get original pixel.\n         * @param {int} x\n         * @param {int} y\n         * @returns {{r: *, g: *, b: *, a: *}}\n         */\n        getOriginalPixel: function (x, y) {\n          let index = getIndex(x, y);\n          return {\n            r: imageData.data[index + 0],\n            g: imageData.data[index + 1],\n            b: imageData.data[index + 2],\n            a: imageData.data[index + 3],\n          };\n        },\n        /**\n         * Set new pixel\n         * @param {int} x\n         * @param {int} y\n         * @param {object} rgba\n         */\n        setPixel: function (x, y, rgba) {\n          let index = getIndex(x, y);\n          imageDataCopy[index + 0] = normalizePixelValue(rgba.r);\n          imageDataCopy[index + 1] = normalizePixelValue(rgba.g);\n          imageDataCopy[index + 2] = normalizePixelValue(rgba.b);\n          imageDataCopy[index + 3] = normalizePixelValue(rgba.a);\n        },\n        /**\n         * Data created by effect init function\n         */\n        data: null,\n        /**\n         * ImageData width\n         */\n        width: imageData.width,\n        /**\n         * ImageData height\n         */\n        height: imageData.height,\n      };\n\n    sandbox.data = this.before.call(\n      sandbox,\n      parameters,\n      imageData.width,\n      imageData.height,\n      imageData\n    );\n\n    for (y = 0; y < imageData.height; y += 1) {\n      for (x = 0; x < imageData.width; x += 1) {\n        firstPixelIndex = getIndex(x, y);\n\n        result = this.callback.call(\n          sandbox,\n          {\n            r: imageDataCopy[firstPixelIndex + 0],\n            g: imageDataCopy[firstPixelIndex + 1],\n            b: imageDataCopy[firstPixelIndex + 2],\n            a: imageDataCopy[firstPixelIndex + 3],\n          },\n          x,\n          y,\n          parameters,\n          imageData.width,\n          imageData.height\n        );\n\n        if (typeof result === \"object\") {\n          imageDataCopy[firstPixelIndex + 0] = normalizePixelValue(result.r);\n          imageDataCopy[firstPixelIndex + 1] = normalizePixelValue(result.g);\n          imageDataCopy[firstPixelIndex + 2] = normalizePixelValue(result.b);\n          imageDataCopy[firstPixelIndex + 3] = normalizePixelValue(result.a);\n        }\n      }\n    }\n\n    imageData.data.set(imageDataCopy);\n    return imageData;\n  }\n}\n\nexport default BasePointEffect;\n","import BaseEffect from \"./Base\";\n\nclass BaseTransformEffect extends BaseEffect {\n  callback(\n    pixel,\n    x: number,\n    y: number,\n    parameters: object,\n    width: number,\n    height: number\n  ) {\n    throw \"Extend it.\";\n  }\n\n  run(imageData: any, parameters: object) {\n    parameters = {\n      ...this.getDefaultParameters(),\n      ...parameters,\n    };\n\n    let x, y;\n    const normalizePixelValue = function (value) {\n        return Math.min(Math.max(value, 0), 255) | 0;\n      },\n      sandbox = {\n        data: null,\n      },\n      imageDataCopy = new Uint8ClampedArray(imageData.data);\n\n    sandbox.data = this.before.call(\n      sandbox,\n      parameters,\n      imageData.width,\n      imageData.height,\n      imageData\n    );\n\n    for (y = 0; y < imageData.height; y += 1) {\n      for (x = 0; x < imageData.width; x += 1) {\n        const newXY = this.callback.call(\n            sandbox,\n            x,\n            y,\n            parameters,\n            imageData.width,\n            imageData.height\n          ),\n          newX = normalizePixelValue(newXY[0]),\n          newY = normalizePixelValue(newXY[1]),\n          oldPixelIndex = y * imageData.width * 4 + x * 4,\n          newPixelIndex = newY * imageData.width * 4 + newX * 4;\n\n        imageDataCopy[oldPixelIndex + 0] = imageData.data[newPixelIndex + 0];\n        imageDataCopy[oldPixelIndex + 1] = imageData.data[newPixelIndex + 1];\n        imageDataCopy[oldPixelIndex + 2] = imageData.data[newPixelIndex + 2];\n        imageDataCopy[oldPixelIndex + 3] = imageData.data[newPixelIndex + 3];\n      }\n    }\n\n    imageData.data.set(imageDataCopy);\n    return imageData;\n  }\n}\n\nexport default BaseTransformEffect;\n","import BaseCustomEffect from \"../BaseCustom\";\nimport { RGBtoCIELab, CIELabToRGB } from \"../../../helpers/color\";\n\nclass AutoWhiteBalanceEffect extends BaseCustomEffect {\n  static getName() {\n    return \"auto-white-balance\";\n  }\n\n  getDefaultParameters() {\n    return {\n      intensity: 50,\n    };\n  }\n\n  callback(width, height, parameters) {\n    let x,\n      y,\n      sumA = 0,\n      sumB = 0,\n      pixel,\n      lab,\n      avgSumA,\n      avgSumB,\n      aDelta,\n      bDelta;\n\n    for (y = 0; y < height; y += 1) {\n      for (x = 0; x < width; x += 1) {\n        pixel = this.getPixel(x, y);\n        lab = RGBtoCIELab(pixel.r, pixel.g, pixel.b);\n        sumA += lab.a;\n        sumB += lab.b;\n      }\n    }\n\n    avgSumA = 0 - sumA / (width * height);\n    avgSumB = 0 - sumB / (width * height);\n\n    aDelta = avgSumA * (parameters.intensity / 100) * 1.1;\n    bDelta = avgSumB * (parameters.intensity / 100) * 1.1;\n\n    for (y = 0; y < height; y += 1) {\n      for (x = 0; x < width; x += 1) {\n        pixel = this.getPixel(x, y);\n\n        lab = RGBtoCIELab(pixel.r, pixel.g, pixel.b);\n\n        lab.a += aDelta;\n        lab.b += bDelta;\n\n        pixel = CIELabToRGB(lab.l, lab.a, lab.b);\n        pixel.a = this.getPixel(x, y).a;\n\n        this.setPixel(x, y, pixel);\n      }\n    }\n  }\n}\n\nexport default AutoWhiteBalanceEffect;\n","import BaseCustomEffect from \"../BaseCustom\";\n\nclass BlockEffect extends BaseCustomEffect {\n  static getName() {\n    return \"block\";\n  }\n\n  getDefaultParameters() {\n    return {\n      blockSize: 5,\n    };\n  }\n\n  callback(width, height, parameters) {\n    let x, y, w, h, t, r, g, b, pixel, by, bx;\n\n    for (y = 0; y < height; y += parameters.blockSize) {\n      for (x = 0; x < width; x += parameters.blockSize) {\n        w = Math.min(parameters.blockSize, width - x);\n        h = Math.min(parameters.blockSize, height - y);\n        t = w * h;\n\n        r = 0;\n        g = 0;\n        b = 0;\n\n        for (by = 0; by < h; by += 1) {\n          for (bx = 0; bx < w; bx += 1) {\n            pixel = this.getOriginalPixel(x + bx, y + by);\n\n            r += pixel.r & 0xff;\n            g += pixel.g & 0xff;\n            b += pixel.b & 0xff;\n          }\n        }\n\n        r = r / t;\n        g = g / t;\n        b = b / t;\n\n        for (by = 0; by < h; by += 1) {\n          for (bx = 0; bx < w; bx += 1) {\n            this.setPixel(x + bx, y + by, {\n              r: r,\n              g: g,\n              b: b,\n              a: 255,\n            });\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default BlockEffect;\n","import BaseCustomEffect from \"../BaseCustom\";\n\nclass BorderEffect extends BaseCustomEffect {\n  static getName() {\n    return \"border\";\n  }\n\n  data = {\n    leftBorder: 0,\n    rightBorder: 0,\n    topBorder: 0,\n    bottomBorder: 0,\n  };\n\n  getDefaultParameters() {\n    return {\n      leftBorder: 10,\n      rightBorder: 10,\n      topBorder: 10,\n      bottomBorder: 10,\n      borderColor: {\n        r: 0,\n        b: 0,\n        g: 0,\n        a: 255,\n      },\n    };\n  }\n\n  before(parameters, width, height, imageData) {\n    return {\n      leftBorder: parameters.leftBorder | 0,\n      rightBorder: parameters.rightBorder | 0,\n      topBorder: parameters.rightBorder | 0,\n      bottomBorder: parameters.bottomBorder | 0,\n    };\n  }\n\n  callback(width, height, parameters) {\n    let x, y;\n\n    for (y = 0; y < height; y += 1) {\n      for (x = 0; x < width; x += 1) {\n        if (this.data.leftBorder > 0 && x < this.data.leftBorder) {\n          this.setPixel(x, y, parameters.borderColor);\n        }\n        if (this.data.rightBorder > 0 && width - this.data.rightBorder < x) {\n          this.setPixel(x, y, parameters.borderColor);\n        }\n        if (this.data.topBorder > 0 && y < this.data.topBorder) {\n          this.setPixel(x, y, parameters.borderColor);\n        }\n        if (this.data.bottomBorder > 0 && height - this.data.bottomBorder < y) {\n          this.setPixel(x, y, parameters.borderColor);\n        }\n      }\n    }\n  }\n}\n\nexport default BorderEffect;\n","import BaseCustomEffect from \"../BaseCustom\";\n\nclass ComponentStretchingEffect extends BaseCustomEffect {\n  static getName() {\n    return \"component-stretching\";\n  }\n\n  callback(width, height, parameters) {\n    let x,\n      y,\n      minR = Infinity,\n      minG = Infinity,\n      minB = Infinity,\n      maxR = -1,\n      maxG = -1,\n      maxB = -1,\n      pixel;\n    const remap = function remap(value, min, max) {\n      return ((value - min) * 255) / (max - min);\n    };\n\n    for (y = 0; y < height; y += 1) {\n      for (x = 0; x < width; x += 1) {\n        pixel = this.getPixel(x, y);\n\n        minR = Math.min(pixel.r, minR);\n        minG = Math.min(pixel.g, minG);\n        minB = Math.min(pixel.b, minB);\n\n        maxR = Math.max(pixel.r, maxR);\n        maxG = Math.max(pixel.g, maxG);\n        maxB = Math.max(pixel.b, maxB);\n      }\n    }\n\n    for (y = 0; y < height; y += 1) {\n      for (x = 0; x < width; x += 1) {\n        pixel = this.getPixel(x, y);\n\n        pixel.r = remap(pixel.r, minR, maxR);\n        pixel.g = remap(pixel.g, minG, maxG);\n        pixel.b = remap(pixel.b, minB, maxB);\n\n        this.setPixel(x, y, pixel);\n      }\n    }\n  }\n}\n\nexport default ComponentStretchingEffect;\n","import BaseCustomEffect from \"../BaseCustom\";\nimport { brightness } from \"../../../helpers/common\";\n\nclass EmbossEffect extends BaseCustomEffect {\n  static getName() {\n    return \"emboss\";\n  }\n\n  getDefaultParameters() {\n    return {\n      azimuth: (135 * Math.PI) / 180,\n      elevation: (30 * Math.PI) / 180,\n      width45: 3,\n      emboss: true,\n    };\n  }\n\n  callback(width, height, parameters) {\n    let x,\n      y,\n      bumpMapWidth = width,\n      bumpPixels = [],\n      Nx,\n      Ny,\n      Nz,\n      Lx,\n      Ly,\n      Lz,\n      Nz2,\n      NzLz,\n      NdotL,\n      s1,\n      s2,\n      s3,\n      shade,\n      background,\n      pixelScale = 255.9,\n      bumpIndex = 0,\n      index = 0,\n      pixel,\n      r,\n      g,\n      b;\n\n    Lx =\n      (Math.cos(parameters.azimuth) *\n        Math.cos(parameters.elevation) *\n        pixelScale) |\n      0;\n    Ly =\n      (Math.sin(parameters.azimuth) *\n        Math.cos(parameters.elevation) *\n        pixelScale) |\n      0;\n    Lz = (Math.sin(parameters.elevation) * pixelScale) | 0;\n\n    Nz = ((6 * 255) / parameters.width45) | 0;\n    Nz2 = Nz * Nz;\n    NzLz = Nz * Lz;\n\n    background = Lz;\n\n    for (y = 0; y < height; y += 1) {\n      for (x = 0; x < width; x += 1) {\n        bumpPixels.push(brightness(this.getOriginalPixel(x, y)) | 0);\n      }\n    }\n\n    for (y = 0; y < height; y += 1, bumpIndex += bumpMapWidth) {\n      s1 = bumpIndex;\n      s2 = s1 + bumpMapWidth;\n      s3 = s2 + bumpMapWidth;\n\n      for (x = 0; x < width; x += 1, s1 += 1, s2 += 1, s3 += 1) {\n        if (y != 0 && y < height - 2 && x != 0 && x < width - 2) {\n          Nx =\n            bumpPixels[s1 - 1] +\n            bumpPixels[s2 - 1] +\n            bumpPixels[s3 - 1] -\n            bumpPixels[s1 + 1] -\n            bumpPixels[s2 + 1] -\n            bumpPixels[s3 + 1];\n          Ny =\n            bumpPixels[s3 - 1] +\n            bumpPixels[s3] +\n            bumpPixels[s3 + 1] -\n            bumpPixels[s1 - 1] -\n            bumpPixels[s1] -\n            bumpPixels[s1 + 1];\n\n          if (Nx == 0 && Ny == 0) {\n            shade = background;\n          } else {\n            if ((NdotL = Nx * Lx + Ny * Ly + NzLz) < 0) {\n              shade = 0;\n            } else {\n              shade = NdotL / Math.sqrt(Nx * Nx + Ny * Ny + Nz2);\n            }\n          }\n        } else {\n          shade = background;\n        }\n\n        if (parameters.emboss) {\n          pixel = this.getOriginalPixelByIndex(index);\n          r = (pixel.r * shade) >> 8;\n          g = (pixel.g * shade) >> 8;\n          b = (pixel.b * shade) >> 8;\n          this.setPixelByIndex(index++, {\n            r: r,\n            g: g,\n            b: b,\n            a: pixel.a,\n          });\n        } else {\n          this.setPixelByIndex(index++, {\n            r: shade,\n            g: shade << 8,\n            b: shade << 16,\n            a: 255,\n          });\n        }\n      }\n    }\n  }\n}\n\nexport default EmbossEffect;\n","import BaseCustomEffect from \"../BaseCustom\";\nimport { hexToRGB } from \"../../../helpers/color\";\n\nclass FillColorEffect extends BaseCustomEffect {\n  static getName() {\n    return \"fill-color\";\n  }\n\n  getDefaultParameters() {\n    return {\n      color: \"transparent\",\n    };\n  }\n\n  callback(width, height, parameters) {\n    let x, y, color;\n\n    if (parameters.color === \"transparent\") {\n      color = {\n        r: 0,\n        g: 0,\n        b: 0,\n        a: 0,\n      };\n    } else {\n      color = hexToRGB(parameters.color);\n      color.a = 255;\n    }\n\n    for (y = 0; y < height; y += 1) {\n      for (x = 0; x < width; x += 1) {\n        this.setPixel(x, y, color);\n      }\n    }\n  }\n}\n\nexport default FillColorEffect;\n","import BaseCustomEffect from \"../BaseCustom\";\n\nclass FlipEffect extends BaseCustomEffect {\n  static getName() {\n    return \"flip\";\n  }\n\n  getDefaultParameters() {\n    return {\n      operation: \"FLIP_H\", // FLIP_H, FLIP_V, FLIP_HV, FLIP_90CW, FLIP_90CCW, FLIP_180\n    };\n  }\n\n  callback(width, height, parameters) {\n    let x = 0,\n      y = 0,\n      w = width,\n      h = height,\n      newX = 0,\n      newY = 0,\n      newW = w,\n      newH = h,\n      newRow,\n      newCol;\n\n    switch (parameters.operation) {\n      case \"FLIP_H\":\n        newX = width - (x + w);\n        break;\n      case \"FLIP_V\":\n        newY = height - (y + h);\n        break;\n      case \"FLIP_HV\":\n        newW = h;\n        newH = w;\n        newX = y;\n        newY = x;\n        break;\n      case \"FLIP_90CW\":\n        newW = h;\n        newH = w;\n        newX = height - (y + h);\n        newY = x;\n        break;\n      case \"FLIP_90CCW\":\n        newW = h;\n        newH = w;\n        newX = y;\n        newY = width - (x + w);\n        break;\n      case \"FLIP_180\":\n        newX = width - (x + w);\n        newY = height - (y + h);\n        break;\n    }\n\n    for (y = 0; y < height; y += 1) {\n      for (x = 0; x < width; x += 1) {\n        newRow = y;\n        newCol = x;\n\n        switch (parameters.operation) {\n          case \"FLIP_H\":\n            newCol = w - x - 1;\n            break;\n          case \"FLIP_V\":\n            newRow = h - y - 1;\n            break;\n          case \"FLIP_HV\":\n            newRow = x;\n            newCol = y;\n            break;\n          case \"FLIP_90CW\":\n            newRow = x;\n            newCol = h - y - 1;\n            break;\n          case \"FLIP_90CCW\":\n            newRow = w - x - 1;\n            newCol = y;\n            break;\n          case \"FLIP_180\":\n            newRow = h - y - 1;\n            newCol = w - x - 1;\n            break;\n        }\n\n        this.setPixel(newCol, newRow, this.getOriginalPixel(x, y));\n      }\n    }\n  }\n}\n\nexport default FlipEffect;\n","import BasePointEffect from \"../BasePoint\";\n\nclass AutoContrastEffect extends BasePointEffect {\n  static getName() {\n    return \"auto-contrast\";\n  }\n\n  data = {\n    remap: (value, min, max) => 0,\n    min: 0,\n    max: 0,\n  };\n\n  before(parameters, width, height) {\n    let x,\n      y,\n      pixel,\n      min = Infinity,\n      max = -1;\n\n    for (y = 0; y < height; y += 1) {\n      for (x = 0; x < width; x += 1) {\n        pixel = this.getPixel(x, y);\n\n        min = Math.min((pixel.r + pixel.g + pixel.b) / 3, min);\n        max = Math.max((pixel.r + pixel.g + pixel.b) / 3, max);\n      }\n    }\n\n    return {\n      min: min,\n      max: max,\n      remap: function (value) {\n        return ((value - min) * 255) / (max - min);\n      },\n    };\n  }\n\n  callback(pixel, x, y, parameters, width, height) {\n    pixel.r = this.data.remap(pixel.r, this.data.min, this.data.max);\n    pixel.g = this.data.remap(pixel.g, this.data.min, this.data.max);\n    pixel.b = this.data.remap(pixel.b, this.data.min, this.data.max);\n\n    return pixel;\n  }\n}\n\nexport default AutoContrastEffect;\n","import BasePointEffect from \"../BasePoint\";\n\nclass BrightnessEffect extends BasePointEffect {\n  static getName() {\n    return \"brightness\";\n  }\n\n  data = {\n    brightness: 0,\n  };\n\n  getDefaultParameters() {\n    return {\n      brightness: 0.5,\n    };\n  }\n\n  before(parameters) {\n    return {\n      brightness: 255 * parameters.brightness,\n    };\n  }\n\n  callback(pixel, x, y, parameters, width, height) {\n    pixel.r = pixel.r + this.data.brightness;\n    pixel.g = pixel.g + this.data.brightness;\n    pixel.b = pixel.b + this.data.brightness;\n\n    return pixel;\n  }\n}\n\nexport default BrightnessEffect;\n","import BasePointEffect from \"../BasePoint\";\n\nclass ChannelMixEffect extends BasePointEffect {\n  static getName() {\n    return \"channel-mix\";\n  }\n\n  getDefaultParameters() {\n    return {\n      blueGreen: 1,\n      redBlue: 1,\n      greenRed: 1,\n      intoR: 1,\n      intoG: 1,\n      intoB: 1,\n    };\n  }\n\n  callback(pixel, x, y, parameters, width, height) {\n    const { r, g, b } = pixel;\n\n    return {\n      r:\n        ((parameters.intoR *\n          (parameters.blueGreen * g + (255 - parameters.blueGreen) * b)) /\n          255 +\n          (255 - parameters.intoR) * r) /\n        255,\n      g:\n        ((parameters.intoG *\n          (parameters.redBlue * g + (255 - parameters.redBlue) * r)) /\n          255 +\n          (255 - parameters.intoG) * g) /\n        255,\n      b:\n        ((parameters.intoB *\n          (parameters.greenRed * g + (255 - parameters.greenRed) * g)) /\n          255 +\n          (255 - parameters.intoB) * b) /\n        255,\n      a: pixel.a,\n    };\n  }\n}\n\nexport default ChannelMixEffect;\n","import BasePointEffect from \"../BasePoint\";\n\nclass ContrastEffect extends BasePointEffect {\n  static getName() {\n    return \"contrast\";\n  }\n\n  data = {\n    factor: 1,\n  };\n\n  getDefaultParameters() {\n    return {\n      contrast: 0.5,\n    };\n  }\n\n  before(parameters) {\n    return {\n      factor:\n        (259 * (parameters.contrast * 255 + 255)) /\n        (255 * (259 - parameters.contrast * 255)),\n    };\n  }\n\n  callback(pixel, x, y, parameters, width, height) {\n    pixel.r = this.data.factor * (pixel.r - 128) + 128;\n    pixel.g = this.data.factor * (pixel.g - 128) + 128;\n    pixel.b = this.data.factor * (pixel.b - 128) + 128;\n\n    return pixel;\n  }\n}\n\nexport default ContrastEffect;\n","import BasePointEffect from \"../BasePoint\";\n\nclass DiffusionEffect extends BasePointEffect {\n  static getName() {\n    return \"diffusion\";\n  }\n\n  data = {\n    map: {},\n    div: {},\n    sum: 0,\n  };\n\n  getDefaultParameters() {\n    return {\n      matrix: [0, 0, 0, 0, 0, 7, 3, 5, 1],\n      levels: 6,\n      colorDither: true,\n      granulate: true,\n    };\n  }\n\n  before(parameters = { levels: 0, matrix: [] }, width, height, imageData) {\n    let i,\n      sum = 0,\n      map = [],\n      div = [];\n\n    for (i = 0; i < parameters.matrix.length; i += 1) {\n      sum += parameters.matrix[i];\n    }\n\n    for (i = 0; i < parameters.levels; i += 1) {\n      map[i] = ((255 * i) / (parameters.levels - 1)) | 0;\n    }\n\n    for (i = 0; i < 256; i += 1) {\n      div[i] = ((parameters.levels * i) / 256) | 0;\n    }\n\n    return {\n      sum: sum,\n      map: map,\n      div: div,\n    };\n  }\n\n  callback(pixel, x, y, parameters, width, height) {\n    let red1 = pixel.r,\n      green1 = pixel.g,\n      blue1 = pixel.b,\n      red2,\n      green2,\n      blue2,\n      data = this.data,\n      tmpPixel,\n      tmpRed,\n      tmpGreen,\n      tmpBlue,\n      i,\n      j,\n      iy,\n      jx,\n      w,\n      grayScale;\n\n    if (!parameters.colorDither) {\n      grayScale = (red1 + green1 + blue1) / 3;\n      red1 = grayScale;\n      green1 = grayScale;\n      blue1 = grayScale;\n    }\n\n    red2 = data.map[data.div[red1]];\n    green2 = data.map[data.div[green1]];\n    blue2 = data.map[data.div[blue1]];\n\n    tmpRed = red1 - red2;\n    tmpGreen = green1 - green2;\n    tmpBlue = blue1 - blue2;\n\n    if (parameters.granulate) {\n      for (i = -1; i <= 1; i += 1) {\n        iy = i + y;\n        if (iy < 0 || iy >= height) {\n          continue;\n        }\n        for (j = -1; j <= 1; j += 1) {\n          jx = j + x;\n          if (jx < 0 || jx >= width) {\n            continue;\n          }\n          w = parameters.matrix[(i + 1) * 3 + j + 1];\n          if (w !== 0) {\n            tmpPixel = this.getPixel(jx, iy);\n            tmpPixel.r += (tmpRed * w) / data.sum;\n            tmpPixel.g += (tmpGreen * w) / data.sum;\n            tmpPixel.b += (tmpBlue * w) / data.sum;\n            this.setPixel(jx, iy, tmpPixel);\n          }\n        }\n      }\n    }\n\n    return {\n      r: red2,\n      g: green2,\n      b: blue2,\n      a: pixel.a,\n    };\n  }\n}\n\nexport default DiffusionEffect;\n","import BasePointEffect from \"../BasePoint\";\nimport { smoothStep } from \"../../../helpers/common\";\n\nclass DissolveEffect extends BasePointEffect {\n  static getName() {\n    return \"dissolve\";\n  }\n\n  data = {\n    minDensity: 0,\n    maxDensity: 0,\n  };\n\n  getDefaultParameters() {\n    return {\n      density: 1,\n      softness: 0,\n    };\n  }\n\n  before(parameters, width, height, imageData) {\n    let d = (1 - parameters.density) * (1 + parameters.softness);\n    return {\n      minDensity: d - parameters.softness,\n      maxDensity: d,\n    };\n  }\n\n  callback(pixel, x, y, parameters, width, height) {\n    let v = Math.random(),\n      f = smoothStep(this.data.minDensity, this.data.maxDensity, v);\n    pixel.a = pixel.a * f;\n    return pixel;\n  }\n}\n\nexport default DissolveEffect;\n","import BasePointEffect from \"../BasePoint\";\n\nclass DitherEffect extends BasePointEffect {\n  static getName() {\n    return \"dither\";\n  }\n\n  data: {\n    cols: 0;\n    rows: 0;\n    map: {};\n    mod: {};\n    div: {};\n  };\n\n  getDefaultParameters() {\n    return {\n      matrices: {\n        ditherMagic4x4Matrix: [\n          0, 14, 3, 13, 11, 5, 8, 6, 12, 2, 15, 1, 7, 9, 4, 10,\n        ],\n        ditherOrdered4x4Matrix: [\n          0, 8, 2, 10, 12, 4, 14, 6, 3, 11, 1, 9, 15, 7, 13, 5,\n        ],\n        ditherLines4x4Matrix: [\n          0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n        ],\n        dither90Halftone6x6Matrix: [\n          29, 18, 12, 19, 30, 34, 17, 7, 4, 8, 20, 28, 11, 3, 0, 1, 9, 27, 16,\n          6, 2, 5, 13, 26, 25, 15, 10, 14, 21, 31, 33, 25, 24, 23, 33, 36,\n        ],\n        ditherOrdered6x6Matrix: [\n          1, 59, 15, 55, 2, 56, 12, 52, 33, 17, 47, 31, 34, 18, 44, 28, 9, 49,\n          5, 63, 10, 50, 6, 60, 41, 25, 37, 21, 42, 26, 38, 22, 3, 57, 13, 53,\n          0, 58, 14, 54, 35, 19, 45, 29, 32, 16, 46, 30, 11, 51, 7, 61, 8, 48,\n          4, 62, 43, 27, 39, 23, 40, 24, 36, 20,\n        ],\n        ditherOrdered8x8Matrix: [\n          1, 235, 59, 219, 15, 231, 55, 215, 2, 232, 56, 216, 12, 228, 52, 212,\n          129, 65, 187, 123, 143, 79, 183, 119, 130, 66, 184, 120, 140, 76, 180,\n          116, 33, 193, 17, 251, 47, 207, 31, 247, 34, 194, 18, 248, 44, 204,\n          28, 244, 161, 97, 145, 81, 175, 111, 159, 95, 162, 98, 146, 82, 172,\n          108, 156, 92, 9, 225, 49, 209, 5, 239, 63, 223, 10, 226, 50, 210, 6,\n          236, 60, 220, 137, 73, 177, 113, 133, 69, 191, 127, 138, 74, 178, 114,\n          134, 70, 188, 124, 41, 201, 25, 241, 37, 197, 21, 255, 42, 202, 26,\n          242, 38, 198, 22, 252, 169, 105, 153, 89, 165, 101, 149, 85, 170, 106,\n          154, 90, 166, 102, 150, 86, 3, 233, 57, 217, 13, 229, 53, 213, 0, 234,\n          58, 218, 14, 230, 54, 214, 131, 67, 185, 121, 141, 77, 181, 117, 128,\n          64, 186, 122, 142, 78, 182, 118, 35, 195, 19, 249, 45, 205, 29, 245,\n          32, 192, 16, 250, 46, 206, 30, 246, 163, 99, 147, 83, 173, 109, 157,\n          93, 160, 96, 144, 80, 174, 110, 158, 94, 11, 227, 51, 211, 7, 237, 61,\n          221, 8, 224, 48, 208, 4, 238, 62, 222, 139, 75, 179, 115, 135, 71,\n          189, 125, 136, 72, 176, 112, 132, 68, 190, 126, 43, 203, 27, 243, 39,\n          199, 23, 253, 40, 200, 24, 240, 36, 196, 20, 254, 171, 107, 155, 91,\n          167, 103, 151, 87, 168, 104, 152, 88, 164, 100, 148, 84,\n        ],\n        ditherCluster3Matrix: [\n          9, 11, 10, 8, 6, 7, 12, 17, 16, 5, 0, 1, 13, 14, 15, 4, 3, 2, 8, 6, 7,\n          9, 11, 10, 5, 0, 1, 12, 17, 16, 4, 3, 2, 13, 14, 15,\n        ],\n        ditherCluster4Matrix: [\n          18, 20, 19, 16, 13, 11, 12, 15, 27, 28, 29, 22, 4, 3, 2, 9, 26, 31,\n          30, 21, 5, 0, 1, 10, 23, 25, 24, 17, 8, 6, 7, 14, 13, 11, 12, 15, 18,\n          20, 19, 16, 4, 3, 2, 9, 27, 28, 29, 22, 5, 0, 1, 10, 26, 31, 30, 21,\n          8, 6, 7, 14, 23, 25, 24, 17,\n        ],\n        ditherCluster8Matrix: [\n          64, 69, 77, 87, 86, 76, 68, 67, 63, 58, 50, 40, 41, 51, 59, 60, 70,\n          94, 100, 109, 108, 99, 93, 75, 57, 33, 27, 18, 19, 28, 34, 52, 78,\n          101, 114, 116, 115, 112, 98, 83, 49, 26, 13, 11, 12, 15, 29, 44, 88,\n          110, 123, 124, 125, 118, 107, 85, 39, 17, 4, 3, 2, 9, 20, 42, 89, 111,\n          122, 127, 126, 117, 106, 84, 38, 16, 5, 0, 1, 10, 21, 43, 79, 102,\n          119, 121, 120, 113, 97, 82, 48, 25, 8, 6, 7, 14, 30, 45, 71, 95, 103,\n          104, 105, 96, 92, 74, 56, 32, 24, 23, 22, 31, 35, 53, 65, 72, 80, 90,\n          91, 81, 73, 66, 62, 55, 47, 37, 36, 46, 54, 61, 63, 58, 50, 40, 41,\n          51, 59, 60, 64, 69, 77, 87, 86, 76, 68, 67, 57, 33, 27, 18, 19, 28,\n          34, 52, 70, 94, 100, 109, 108, 99, 93, 75, 49, 26, 13, 11, 12, 15, 29,\n          44, 78, 101, 114, 116, 115, 112, 98, 83, 39, 17, 4, 3, 2, 9, 20, 42,\n          88, 110, 123, 124, 125, 118, 107, 85, 38, 16, 5, 0, 1, 10, 21, 43, 89,\n          111, 122, 127, 126, 117, 106, 84, 48, 25, 8, 6, 7, 14, 30, 45, 79,\n          102, 119, 121, 120, 113, 97, 82, 56, 32, 24, 23, 22, 31, 35, 53, 71,\n          95, 103, 104, 105, 96, 92, 74, 62, 55, 47, 37, 36, 46, 54, 61, 65, 72,\n          80, 90, 91, 81, 73, 66,\n        ],\n      },\n      levels: 6,\n      matrix: \"ditherMagic4x4Matrix\",\n      colorDither: true,\n    };\n  }\n\n  before(parameters, width, height, imageData) {\n    let matrix = parameters.matrix,\n      rows,\n      cols,\n      map = [],\n      div = [],\n      mod = [],\n      i;\n\n    if (typeof matrix === \"string\") {\n      matrix = parameters.matrices[matrix];\n    }\n\n    rows = Math.sqrt(matrix.length);\n    cols = Math.sqrt(matrix.length);\n\n    for (i = 0; i < parameters.levels; i += 1) {\n      map[i] = (255 * i) / (parameters.levels - 1);\n    }\n\n    for (i = 0; i < 256; i += 1) {\n      div[i] = (((parameters.levels - 1) * i) / 256) | 0;\n      mod[i] = ((i * (rows * cols + 1)) / 256) | 0;\n    }\n\n    return {\n      matrix: matrix,\n      map: map,\n      div: div,\n      mod: mod,\n      cols: cols,\n      rows: rows,\n    };\n  }\n\n  callback(pixel, x, y, parameters, width, height) {\n    let col = x % this.data.cols,\n      row = y % this.data.rows,\n      v = parameters.matrix[row * this.data.cols + col],\n      red = pixel.r,\n      green = pixel.g,\n      blue = pixel.b,\n      result = { a: pixel.a, r: 0, g: 0, b: 0 },\n      value;\n\n    if (parameters.colorDither) {\n      result.r =\n        this.data.map[\n          this.data.mod[red] > v ? this.data.div[red] + 1 : this.data.div[red]\n        ];\n      result.g =\n        this.data.map[\n          this.data.mod[green] > v\n            ? this.data.div[green] + 1\n            : this.data.div[green]\n        ];\n      result.b =\n        this.data.map[\n          this.data.mod[blue] > v\n            ? this.data.div[blue] + 1\n            : this.data.div[blue]\n        ];\n    } else {\n      value = (red + green + blue) / 3;\n      result.r =\n        result.g =\n        result.b =\n          this.data.map[\n            this.data.mod[value] > v\n              ? this.data.div[value] + 1\n              : this.data.div[value]\n          ];\n    }\n\n    return result;\n  }\n}\n\nexport default DitherEffect;\n","import BasePointEffect from \"../BasePoint\";\n\nclass EdgeEffect extends BasePointEffect {\n  static getName() {\n    return \"edge\";\n  }\n\n  data = {\n    hEdgeMatrix: [],\n    vEdgeMatrix: [],\n  };\n\n  getDefaultParameters() {\n    return {\n      matrixes: {\n        robertsV: [0, 0, -1, 0, 1, 0, 0, 0, 0],\n        robertsH: [-1, 0, 0, 0, 1, 0, 0, 0, 0],\n        prewittV: [-1, 0, 1, -1, 0, 1, -1, 0, 1],\n        prewittH: [-1, -1, -1, 0, 0, 0, 1, 1, 1],\n        sobelV: [-1, 0, 1, -2, 0, 2, -1, 0, 1],\n        sobelH: [-1, -2, -1, 0, 0, 0, 1, 2, 1],\n        freiChenV: [-1, 0, 1, -Math.sqrt(2), 0, Math.sqrt(2), -1, 0, 1],\n        freiChenH: [-1, -Math.sqrt(2), -1, 0, 0, 0, 1, Math.sqrt(2), 1],\n      },\n      hEdgeMatrix: \"sobelV\",\n      vEdgeMatrix: \"sobelH\",\n    };\n  }\n\n  before(parameters, width, height, imageData) {\n    let hEdgeMatrix = parameters.hEdgeMatrix,\n      vEdgeMatrix = parameters.vEdgeMatrix;\n\n    if (typeof hEdgeMatrix === \"string\") {\n      hEdgeMatrix = parameters.matrixes[parameters.hEdgeMatrix];\n    }\n    if (typeof vEdgeMatrix === \"string\") {\n      vEdgeMatrix = parameters.matrixes[parameters.vEdgeMatrix];\n    }\n    return {\n      hEdgeMatrix: hEdgeMatrix,\n      vEdgeMatrix: vEdgeMatrix,\n    };\n  }\n\n  callback(pixel, x, y, parameters, width, height) {\n    let r = 0,\n      g = 0,\n      b = 0,\n      rh = 0,\n      gh = 0,\n      bh = 0,\n      rv = 0,\n      gv = 0,\n      bv = 0,\n      row,\n      iy,\n      col,\n      ix,\n      mOffset,\n      pixel2,\n      h,\n      v;\n\n    for (row = -1; row <= 1; row += 1) {\n      iy = y + row;\n      if (!(0 <= iy && iy < height)) {\n        iy = y;\n      }\n      mOffset = 3 * (row + 1) + 1;\n      for (col = -1; col <= 1; col += 1) {\n        ix = x + col;\n        if (!(0 <= ix && ix < width)) {\n          ix = x;\n        }\n        pixel2 = this.getOriginalPixel(ix, iy);\n        h = this.data.hEdgeMatrix[mOffset + col];\n        v = this.data.vEdgeMatrix[mOffset + col];\n\n        r = pixel2.r;\n        g = pixel2.g;\n        b = pixel2.b;\n\n        rh += Math.floor(h * r);\n        gh += Math.floor(h * g);\n        bh += Math.floor(h * b);\n\n        rv += Math.floor(v * r);\n        gv += Math.floor(v * g);\n        bv += Math.floor(v + b);\n      }\n    }\n    r = Math.floor(Math.sqrt(rh * rh + rv * rv) / 1.8);\n    g = Math.floor(Math.sqrt(gh * gh + gv * gv) / 1.8);\n    b = Math.floor(Math.sqrt(bh * bh + bv * bv) / 1.8);\n    return {\n      r: r,\n      g: g,\n      b: b,\n      a: pixel.a,\n    };\n  }\n}\n\nexport default EdgeEffect;\n","import BasePointEffect from \"../BasePoint\";\n\nclass ExposureEffect extends BasePointEffect {\n  static getName() {\n    return \"exposure\";\n  }\n\n  getDefaultParameters() {\n    return {\n      exposure: 1,\n    };\n  }\n\n  callback(pixel, x, y, parameters, width, height) {\n    pixel.r = (1 - Math.exp((-pixel.r / 255) * parameters.exposure)) * 255;\n    pixel.g = (1 - Math.exp((-pixel.g / 255) * parameters.exposure)) * 255;\n    pixel.b = (1 - Math.exp((-pixel.b / 255) * parameters.exposure)) * 255;\n\n    return pixel;\n  }\n}\n\nexport default ExposureEffect;\n","import BasePointEffect from \"../BasePoint\";\n\nclass GainEffect extends BasePointEffect {\n  static getName() {\n    return \"gain\";\n  }\n\n  getDefaultParameters() {\n    return {\n      gain: 1,\n      bias: 1,\n    };\n  }\n\n  callback(pixel, x, y, parameters, width, height) {\n    let red = (1 / parameters.gain - 2) * (1 - (2 * pixel.r) / 255),\n      green = (1 / parameters.gain - 2) * (1 - (2 * pixel.g) / 255),\n      blue = (1 / parameters.gain - 2) * (1 - (2 * pixel.b) / 255);\n\n    if (pixel.r / 255 < 0.5) {\n      red = pixel.r / 255 / red + 1;\n    } else {\n      red = (red - pixel.r / 255) / (red - 1);\n    }\n\n    if (pixel.g / 255 < 0.5) {\n      green = pixel.g / 255 / green + 1;\n    } else {\n      green = (green - pixel.g / 255) / (green - 1);\n    }\n\n    if (pixel.b / 255 < 0.5) {\n      blue = pixel.b / 255 / blue + 1;\n    } else {\n      blue = (blue - pixel.b / 255) / (blue - 1);\n    }\n\n    red = red / ((1 / parameters.bias - 2) * (1 - red) + 1);\n    green = green / ((1 / parameters.bias - 2) * (1 - green) + 1);\n    blue = blue / ((1 / parameters.bias - 2) * (1 - blue) + 1);\n\n    pixel.r = red * 255;\n    pixel.g = green * 255;\n    pixel.b = blue * 255;\n\n    return pixel;\n  }\n}\n\nexport default GainEffect;\n","import BasePointEffect from \"../BasePoint\";\n\nclass GammaEffect extends BasePointEffect {\n  static getName() {\n    return \"gamma\";\n  }\n\n  data = {\n    table: {\n      r: {},\n      g: {},\n      b: {},\n    },\n  };\n\n  getDefaultParameters() {\n    return {\n      gammaRed: 1,\n      gammaGreen: 1,\n      gammaBlue: 1,\n    };\n  }\n\n  before(\n    parameters = { gammaRed: 1, gammaGreen: 1, gammaBlue: 1 },\n    width,\n    height,\n    imageData\n  ) {\n    let table = {\n        r: [],\n        g: [],\n        b: [],\n      },\n      i;\n\n    for (i = 0; i < 256; i += 1) {\n      table.r[i] = (255 * Math.pow(i / 255, 1 / parameters.gammaRed) + 0.5) | 0;\n      table.g[i] =\n        (255 * Math.pow(i / 255, 1 / parameters.gammaGreen) + 0.5) | 0;\n      table.b[i] =\n        (255 * Math.pow(i / 255, 1 / parameters.gammaBlue) + 0.5) | 0;\n    }\n\n    return {\n      table: table,\n    };\n  }\n\n  callback(pixel, x, y, parameters, width, height) {\n    return {\n      r: this.data.table.r[pixel.r],\n      g: this.data.table.g[pixel.g],\n      b: this.data.table.b[pixel.b],\n      a: pixel.a,\n    };\n  }\n}\n\nexport default GammaEffect;\n","import BasePointEffect from \"../BasePoint\";\n\nclass GrayScaleEffect extends BasePointEffect {\n  static getName() {\n    return \"gray-scale\";\n  }\n\n  callback(pixel, x, y, parameters, width, height) {\n    let newRGB = 0.299 * pixel.r + 0.587 * pixel.g + 0.114 * pixel.b;\n    return {\n      r: newRGB,\n      g: newRGB,\n      b: newRGB,\n      a: pixel.a,\n    };\n  }\n}\n\nexport default GrayScaleEffect;\n","import BasePointEffect from \"../BasePoint\";\nimport { RGBtoHSB, HSBtoRGB } from \"../../../helpers/color\";\n\nclass HSBAdjustEffect extends BasePointEffect {\n  static getName() {\n    return \"hsb-adjust\";\n  }\n\n  getDefaultParameters() {\n    return {\n      h: 1,\n      s: 1,\n      b: 1,\n    };\n  }\n\n  callback(pixel, x, y, parameters, width, height) {\n    let hsb = RGBtoHSB(pixel.r, pixel.g, pixel.b);\n\n    hsb.h += parameters.h;\n    while (hsb.h < 0) {\n      hsb.h += Math.PI * 2;\n    }\n\n    hsb.s += parameters.s;\n    hsb.s = Math.max(Math.min(hsb.s, 1), 0);\n\n    hsb.b += parameters.b;\n    hsb.b = Math.max(Math.min(hsb.b, 1), 0);\n\n    let result = HSBtoRGB(hsb.h, hsb.s, hsb.b);\n    pixel.r = result.r;\n    pixel.g = result.g;\n    pixel.b = result.b;\n\n    return pixel;\n  }\n}\n\nexport default HSBAdjustEffect;\n","import BasePointEffect from \"../BasePoint\";\n\nclass InvertEffect extends BasePointEffect {\n  static getName() {\n    return \"invert\";\n  }\n\n  callback(pixel, x, y, parameters, width, height) {\n    pixel.r = 255 - pixel.r;\n    pixel.g = 255 - pixel.g;\n    pixel.b = 255 - pixel.b;\n    return pixel;\n  }\n}\n\nexport default InvertEffect;\n","import BasePointEffect from \"../BasePoint\";\n\nclass InvertAlphaEffect extends BasePointEffect {\n  static getName() {\n    return \"invert-alpha\";\n  }\n\n  callback(pixel, x, y, parameters, width, height) {\n    pixel.a = 255 - pixel.a;\n    return pixel;\n  }\n}\n\nexport default InvertAlphaEffect;\n","import BasePointEffect from \"../BasePoint\";\n\nclass LevelsEffect extends BasePointEffect {\n  static getName() {\n    return \"levels\";\n  }\n\n  data = {\n    lut: {\n      0: {},\n      1: {},\n      2: {},\n    },\n  };\n\n  getDefaultParameters() {\n    return {\n      low: 0,\n      high: 1,\n      lowOutput: 0,\n      highOutput: 1,\n    };\n  }\n\n  before(parameters, width, height, imageData) {\n    let Histogram = function (imageData, width, height, offset, stride) {\n      let i,\n        j,\n        index,\n        x,\n        y,\n        histogram = new Array(3),\n        minValue = new Array(4),\n        maxValue = new Array(4),\n        minFrequency = new Array(3),\n        maxFrequency = new Array(3),\n        mean = new Array(3),\n        numSamples = width * height,\n        isGray = true,\n        RED = 0,\n        GREEN = 1,\n        BLUE = 2,\n        GRAY = 3;\n\n      for (i = 0; i < histogram.length; i += 1) {\n        histogram[i] = new Array(256);\n        for (j = 0; j < 256; j += 1) {\n          histogram[i][j] = 0;\n        }\n      }\n\n      for (y = 0; y < height; y += 1) {\n        for (x = 0; x < width; x += 1) {\n          index = y * width * 4 + x * 4;\n          histogram[RED][imageData.data[index]]++;\n          histogram[GREEN][imageData.data[index + 1]]++;\n          histogram[BLUE][imageData.data[index + 2]]++;\n        }\n      }\n\n      for (i = 0; i < 256; i += 1) {\n        if (\n          histogram[RED][i] !== histogram[GREEN][i] ||\n          histogram[GREEN][i] !== histogram[BLUE][i]\n        ) {\n          isGray = false;\n          break;\n        }\n      }\n\n      for (i = 0; i < 3; i += 1) {\n        for (j = 0; j < 256; j += 1) {\n          if (histogram[i][j] > 0) {\n            minValue[i] = j;\n            break;\n          }\n        }\n        for (j = 255; j >= 0; j -= 1) {\n          if (histogram[i][j] > 0) {\n            maxValue[i] = j;\n            break;\n          }\n        }\n        minFrequency[i] = Infinity;\n        maxFrequency[i] = 0;\n        for (j = 0; j < 256; j += 1) {\n          minFrequency[i] = Math.min(minFrequency[i], histogram[i][j]);\n          maxFrequency[i] = Math.max(maxFrequency[i], histogram[i][j]);\n          mean[i] += j * histogram[i][j];\n        }\n        mean[i] /= numSamples;\n        minValue[GRAY] = Math.min(\n          minValue[RED],\n          minValue[GREEN],\n          minValue[BLUE]\n        );\n        maxValue[GRAY] = Math.max(\n          maxValue[RED],\n          maxValue[GREEN],\n          maxValue[BLUE]\n        );\n      }\n\n      this.getNumSamples = function () {\n        return numSamples;\n      };\n\n      this.isGray = function () {\n        return isGray;\n      };\n\n      this.getFrequency = function (channel, value) {\n        if (!value) {\n          if (numSamples > 0 && isGray && value >= 0 && value <= 255) {\n            return histogram[0][value];\n          }\n          return -1;\n        }\n        if (\n          numSamples < 1 ||\n          channel < 0 ||\n          channel > 2 ||\n          value < 0 ||\n          value > 255\n        ) {\n          return -1;\n        }\n        return histogram[channel][value];\n      };\n\n      this.getMinFrequency = function (channel) {\n        if (!channel) {\n          if (numSamples > 0 && isGray) {\n            return minFrequency[0];\n          }\n          return -1;\n        }\n        if (numSamples < 1 || channel < 0 || channel > 2) {\n          return -1;\n        }\n        return minFrequency[channel];\n      };\n\n      this.getMaxFrequency = function (channel) {\n        if (!channel) {\n          if (numSamples > 0 && isGray) {\n            return maxFrequency[0];\n          }\n          return -1;\n        }\n        if (numSamples < 1 || channel < 0 || channel > 2) {\n          return -1;\n        }\n        return maxFrequency[channel];\n      };\n\n      this.getMinValue = function (channel) {\n        if (!channel) {\n          if (numSamples > 0 && isGray) {\n            return minValue[0];\n          }\n          return -1;\n        }\n        return minValue[channel];\n      };\n\n      this.getMaxValue = function (channel) {\n        if (!channel) {\n          if (numSamples > 0 && isGray) {\n            return maxValue[0];\n          }\n          return -1;\n        }\n        return maxValue[channel];\n      };\n\n      this.getMeanValue = function (channel) {\n        if (!channel) {\n          if (numSamples > 0 && isGray) {\n            return mean[0];\n          }\n          return -1;\n        }\n        return mean[channel];\n      };\n    };\n\n    let histogram = new Histogram(imageData, width, height, 0, width),\n      lut = new Array(3),\n      low = parameters.low * 255,\n      high = parameters.high * 255,\n      i,\n      j;\n\n    for (i = 0; i < lut.length; i += 1) {\n      lut[i] = new Array(256);\n    }\n    if (low === high) {\n      high++;\n    }\n\n    for (i = 0; i < 3; i += 1) {\n      for (j = 0; j < 256; j += 1) {\n        lut[i][j] =\n          255 *\n          (parameters.lowOutput +\n            ((parameters.highOutput - parameters.lowOutput) * (j - low)) /\n              (high - low));\n      }\n    }\n\n    histogram.isGray(); // uglify fix - \"Side effects in initialization of unused letiable histogram\" warning\n\n    return {\n      lut: lut,\n    };\n  }\n\n  callback(pixel, x, y, parameters, width, height) {\n    return {\n      r: this.data.lut[0][pixel.r],\n      g: this.data.lut[1][pixel.g],\n      b: this.data.lut[2][pixel.b],\n      a: pixel.a,\n    };\n  }\n}\n\nexport default LevelsEffect;\n","import BasePointEffect from \"../BasePoint\";\n\nclass RescaleEffect extends BasePointEffect {\n  static getName() {\n    return \"rescale\";\n  }\n\n  getDefaultParameters() {\n    return {\n      scale: 1,\n    };\n  }\n\n  callback(pixel, x, y, parameters, width, height) {\n    pixel.r = parameters.scale * pixel.r;\n    pixel.g = parameters.scale * pixel.g;\n    pixel.b = parameters.scale * pixel.b;\n\n    return pixel;\n  }\n}\n\nexport default RescaleEffect;\n","import BasePointEffect from \"../BasePoint\";\n\nclass GrayScaleEffect extends BasePointEffect {\n  static getName() {\n    return \"sepia\";\n  }\n\n  getDefaultParameters() {\n    return {\n      sepiaValue: 1,\n    };\n  }\n\n  callback(pixel, x, y, parameters, width, height) {\n    let tmp = 0.299 * pixel.r + 0.587 * pixel.g + 0.114 * pixel.b;\n\n    pixel.r = tmp + 2 * parameters.sepiaValue;\n    pixel.g = tmp + parameters.sepiaValue;\n    pixel.b = tmp;\n\n    return pixel;\n  }\n}\n\nexport default GrayScaleEffect;\n","import BasePointEffect from \"../BasePoint\";\n\nclass SolarizeEffect extends BasePointEffect {\n  static getName() {\n    return \"solarize\";\n  }\n\n  callback(pixel, x, y, parameters, width, height) {\n    let red =\n        pixel.r / 255 > 0.5\n          ? 2 * (pixel.r / 255 - 0.5)\n          : 2 * (0.5 - pixel.r / 255),\n      green =\n        pixel.g / 255 > 0.5\n          ? 2 * (pixel.g / 255 - 0.5)\n          : 2 * (0.5 - pixel.g / 255),\n      blue =\n        pixel.b / 255 > 0.5\n          ? 2 * (pixel.b / 255 - 0.5)\n          : 2 * (0.5 - pixel.b / 255);\n\n    return {\n      r: red * 255,\n      g: green * 255,\n      b: blue * 255,\n      a: pixel.a,\n    };\n  }\n}\n\nexport default SolarizeEffect;\n","import BasePointEffect from \"../BasePoint\";\n\nclass ThresholdEffect extends BasePointEffect {\n  static getName() {\n    return \"threshold\";\n  }\n\n  callback(pixel, x, y, parameters, width, height) {\n    let grayscale = (pixel.r + pixel.g + pixel.b) / 3;\n\n    if (grayscale >= 127) {\n      return {\n        r: 255,\n        g: 255,\n        b: 255,\n        a: pixel.a,\n      };\n    }\n\n    return {\n      r: 0,\n      g: 0,\n      b: 0,\n      a: pixel.a,\n    };\n  }\n}\n\nexport default ThresholdEffect;\n","import BasePointEffect from \"../BasePoint\";\nimport { mixColors } from \"../../../helpers/color\";\n\nclass TritoneEffect extends BasePointEffect {\n  static getName() {\n    return \"tritone\";\n  }\n\n  data = {\n    lut: {},\n  };\n\n  getDefaultParameters() {\n    return {\n      shadowColor: {\n        r: 0,\n        g: 0,\n        b: 0,\n        a: 255,\n      },\n      midColor: {\n        r: 136,\n        g: 136,\n        b: 136,\n        a: 255,\n      },\n      highColor: {\n        r: 255,\n        g: 255,\n        b: 255,\n        a: 255,\n      },\n    };\n  }\n\n  before(parameters) {\n    let lut = [],\n      i,\n      t;\n\n    for (i = 0; i < 128; i += 1) {\n      t = i / 127;\n      lut[i] = mixColors(t, parameters.shadowColor, parameters.midColor);\n    }\n    for (i = 128; i < 256; i += 1) {\n      t = (i - 127) / 128;\n      lut[i] = mixColors(t, parameters.midColor, parameters.highColor);\n    }\n    return {\n      lut: lut,\n    };\n  }\n\n  callback(pixel, x, y, parameters, width, height) {\n    let brightness = Math.floor((pixel.r + pixel.g + pixel.b) / 3);\n    return this.data.lut[brightness];\n  }\n}\n\nexport default TritoneEffect;\n","import BaseTransformEffect from \"../BaseTransform\";\nimport { mod } from \"../../../helpers/common\";\n\nclass CircleEffect extends BaseTransformEffect {\n  static getName() {\n    return \"circle\";\n  }\n\n  data = {\n    icentreX: 0,\n    width: 0,\n  };\n\n  getDefaultParameters() {\n    return {\n      radius: 10,\n      height: 20,\n      angle: 0,\n      spreadAngle: Math.PI,\n      centreX: 0.5,\n      centreY: 0.5,\n    };\n  }\n\n  before(parameters, width, height, imageData) {\n    return {\n      icentreX: width * parameters.centreX,\n      icentreY: height * parameters.centreY,\n      width: --width,\n    };\n  }\n\n  callback(x, y, parameters, width, height) {\n    let dx = x - this.data.icentreX,\n      dy = y - this.data.icentreX,\n      theta = Math.atan2(-dy, -dx) + parameters.angle,\n      r = Math.sqrt(dx * dx + dy * dy);\n\n    theta = mod(theta, 2 * Math.PI);\n\n    return [\n      (this.data.width * theta) / parameters.spreadAngle + 0.00001,\n      height * (1 - (r - parameters.radius) / (height + 0.00001)),\n    ];\n  }\n}\n\nexport default CircleEffect;\n","import BaseTransformEffect from \"../BaseTransform\";\n\nclass DiffuseEffect extends BaseTransformEffect {\n  static getName() {\n    return \"diffuse\";\n  }\n\n  data = {\n    sinTable: {},\n    cosTable: {},\n  };\n\n  getDefaultParameters() {\n    return {\n      scale: 4,\n    };\n  }\n\n  before(parameters, width, height, imageData) {\n    let sinTable = new Array(256),\n      cosTable = new Array(256),\n      i,\n      angle;\n    for (i = 0; i < 256; i += 1) {\n      angle = (Math.PI * 2 * i) / 256;\n      sinTable[i] = parameters.scale * Math.sin(angle);\n      cosTable[i] = parameters.scale * Math.cos(angle);\n    }\n    return {\n      sinTable: sinTable,\n      cosTable: cosTable,\n    };\n  }\n\n  callback(x, y, parameters) {\n    let angle = (Math.random() * 255) | 0,\n      distance = Math.random();\n\n    return [\n      x + distance * this.data.sinTable[angle],\n      y + distance * this.data.cosTable[angle],\n    ];\n  }\n}\n\nexport default DiffuseEffect;\n","import BaseTransformEffect from \"../BaseTransform\";\nimport { triangle } from \"../../../helpers/common\";\n\nclass KaleidoscopeEffect extends BaseTransformEffect {\n  static getName() {\n    return \"kaleidoscope\";\n  }\n\n  data = {\n    icentreX: 0,\n    icentreY: 0,\n  };\n\n  getDefaultParameters() {\n    return {\n      centreX: 0.5,\n      centreY: 0.5,\n      angle: 0,\n      angle2: 0,\n      sides: 3,\n      radius: 0,\n    };\n  }\n\n  before(parameters, width, height, imageData) {\n    return {\n      icentreX: width * parameters.centreX,\n      icentreY: height * parameters.centreY,\n    };\n  }\n\n  callback(x, y, parameters) {\n    let dx = x - this.data.icentreX,\n      dy = y - this.data.icentreY,\n      r = Math.sqrt(dx * dx + dy * dy),\n      theta = Math.atan2(dy, dx) - parameters.angle - parameters.angle2;\n\n    theta = triangle((theta / Math.PI) * parameters.sides * 0.5);\n\n    if (parameters.radius !== 0) {\n      let c = Math.cos(theta),\n        radiusC = parameters.radius / c;\n      r = radiusC * triangle(r / radiusC);\n    }\n\n    theta += parameters.angle;\n\n    return [\n      this.data.icentreX + r * Math.cos(theta),\n      this.data.icentreY + r * Math.sin(theta),\n    ];\n  }\n}\n\nexport default KaleidoscopeEffect;\n","import BaseTransformEffect from \"../BaseTransform\";\nimport noiseHelper from \"../../../helpers/noise\";\n\nclass MarbleEffect extends BaseTransformEffect {\n  static getName() {\n    return \"marble\";\n  }\n\n  data = {\n    sinTable: {},\n    cosTable: {},\n    displacementMap: (x: number, y: number) => 0,\n  };\n\n  getDefaultParameters() {\n    return {\n      xScale: 4,\n      yScale: 4,\n      amount: 1,\n      turbulence: 1,\n    };\n  }\n\n  before(parameters, width, height, imageData) {\n    let sinTable = new Array(256),\n      cosTable = new Array(256),\n      i = 0,\n      angle;\n\n    for (i = 0; i < 256; i += 1) {\n      angle = ((Math.PI * 2 * i) / 256) * parameters.turbulence;\n      sinTable[i] = -parameters.yScale * Math.sin(angle);\n      cosTable[i] = parameters.yScale * Math.cos(angle);\n    }\n    return {\n      sinTable: sinTable,\n      cosTable: cosTable,\n      displacementMap: function (x, y) {\n        let result =\n          127 *\n          (1 +\n            noiseHelper.noise2(x / parameters.xScale, y / parameters.yScale));\n        return Math.min(255, Math.max(0, result));\n      },\n    };\n  }\n\n  callback(x, y, parameters) {\n    let displacement = Math.floor(this.data.displacementMap(x, y));\n    return [\n      x + this.data.sinTable[displacement],\n      y + this.data.cosTable[displacement],\n    ];\n  }\n}\n\nexport default MarbleEffect;\n","import BaseTransformEffect from \"../BaseTransform\";\n\nclass RotateEffect extends BaseTransformEffect {\n  static getName() {\n    return \"offset\";\n  }\n\n  getDefaultParameters() {\n    return {\n      xOffset: 100,\n      yOffset: 100,\n      wrap: true,\n    };\n  }\n\n  callback(x, y, parameters, width, height) {\n    if (parameters.wrap) {\n      return [\n        (x + width - parameters.xOffset) % width,\n        (y + height - parameters.yOffset) % height,\n      ];\n    } else {\n      return [x - parameters.xOffset, y - parameters.yOffset];\n    }\n  }\n}\n\nexport default RotateEffect;\n","import BaseTransformEffect from \"../BaseTransform\";\n\nclass PerspectiveEffect extends BaseTransformEffect {\n  static getName() {\n    return \"perspective\";\n  }\n\n  data = {\n    A: 0,\n    B: 0,\n    C: 0,\n    D: 0,\n    E: 0,\n    F: 0,\n    G: 0,\n    H: 0,\n    I: 0,\n  };\n\n  getDefaultParameters() {\n    return {\n      x0: 0,\n      y0: 0,\n      x1: 1,\n      y1: 0,\n      x2: 1,\n      y2: 1,\n      x3: 0,\n      y3: 1,\n    };\n  }\n\n  before(parameters, width, height, imageData) {\n    function unitSquareToQuad() {\n      let result = {\n          a11: 0,\n          a21: 0,\n          a31: 0,\n          a12: 0,\n          a22: 0,\n          a32: 0,\n          a13: 0,\n          a23: 0,\n          a33: 0,\n          A: 0,\n          B: 0,\n          C: 0,\n          D: 0,\n          E: 0,\n          F: 0,\n          G: 0,\n          H: 0,\n          I: 0,\n        },\n        x0 = Math.floor(width * parameters.x0),\n        y0 = Math.floor(height * parameters.y0),\n        x1 = Math.floor(width * parameters.x1),\n        y1 = Math.floor(height * parameters.y1),\n        x2 = Math.floor(width * parameters.x2),\n        y2 = Math.floor(height * parameters.y2),\n        x3 = Math.floor(width * parameters.x3),\n        y3 = Math.floor(height * parameters.y3),\n        dx1 = x1 - x2,\n        dy1 = y1 - y2,\n        dx2 = x3 - x2,\n        dy2 = y3 - y2,\n        dx3 = x0 - x1 + x2 - x3,\n        dy3 = y0 - y1 + y2 - y3;\n\n      if (dx3 == 0 && dy3 == 0) {\n        result.a11 = x1 - x0;\n        result.a21 = x2 - x1;\n        result.a31 = x0;\n        result.a12 = y1 - y0;\n        result.a22 = y2 - y1;\n        result.a32 = y0;\n        result.a13 = result.a23 = 0;\n      } else {\n        result.a13 = (dx3 * dy2 - dx2 * dy3) / (dx1 * dy2 - dy1 * dx2);\n        result.a23 = (dx1 * dy3 - dy1 * dx3) / (dx1 * dy2 - dy1 * dx2);\n        result.a11 = x1 - x0 + result.a13 * x1;\n        result.a21 = x3 - x0 + result.a23 * x3;\n        result.a31 = x0;\n        result.a12 = y1 - y0 + result.a13 * y1;\n        result.a22 = y3 - y0 + result.a23 * y3;\n        result.a32 = y0;\n      }\n\n      result.a33 = 1;\n\n      return result;\n    }\n\n    let result = unitSquareToQuad();\n\n    result.A = result.a22 * result.a33 - result.a32 * result.a23;\n    result.B = result.a31 * result.a23 - result.a21 * result.a33;\n    result.C = result.a21 * result.a32 - result.a31 * result.a22;\n    result.D = result.a32 * result.a13 - result.a12 * result.a33;\n    result.E = result.a11 * result.a33 - result.a31 * result.a13;\n    result.F = result.a31 * result.a12 - result.a11 * result.a32;\n    result.G = result.a12 * result.a23 - result.a22 * result.a13;\n    result.H = result.a21 * result.a13 - result.a11 * result.a23;\n    result.I = result.a11 * result.a22 - result.a21 * result.a12;\n\n    return result;\n  }\n\n  callback(x, y, parameters, width, height) {\n    return [\n      (width * (this.data.A * x + this.data.B * y + this.data.C)) /\n        (this.data.G * x + this.data.H * y + this.data.I),\n      (height * (this.data.D * x + this.data.E * y + this.data.F)) /\n        (this.data.G * x + this.data.H * y + this.data.I),\n    ];\n  }\n}\n\nexport default PerspectiveEffect;\n","import BaseTransformEffect from \"../BaseTransform\";\n\nclass PinchEffect extends BaseTransformEffect {\n  static getName() {\n    return \"pinch\";\n  }\n\n  data = {\n    icentreX: 0,\n    icentreY: 0,\n    radius2: 0,\n  };\n\n  getDefaultParameters() {\n    return {\n      angle: 0,\n      centreX: 0.5,\n      centreY: 0.5,\n      radius: 100,\n      amount: 0.5,\n    };\n  }\n\n  before(parameters, width, height, imageData) {\n    let icentreX = width * parameters.centreX,\n      icentreY = height * parameters.centreY,\n      radius = parameters.radius,\n      radius2;\n    if (radius === 0) {\n      radius = Math.min(icentreX, icentreY);\n    }\n    radius2 = radius * radius;\n    return {\n      icentreX: icentreX,\n      icentreY: icentreY,\n      radius: radius,\n      radius2: radius2,\n    };\n  }\n\n  callback(x, y, parameters) {\n    let dx = x - this.data.icentreX,\n      dy = y - this.data.icentreY,\n      distance = dx * dx + dy * dy,\n      d,\n      t,\n      e,\n      a,\n      s,\n      c;\n\n    if (distance > this.data.radius2 || distance === 0) {\n      return [x, y];\n    }\n    d = Math.sqrt(distance / this.data.radius2);\n    t = Math.pow(Math.sin(Math.PI * 0.5 * d), -parameters.amount);\n\n    dx *= t;\n    dy *= t;\n\n    e = 1 - d;\n    a = parameters.angle * e * e;\n\n    s = Math.sin(a);\n    c = Math.cos(a);\n\n    return [\n      this.data.icentreX + c * dx - s * dy,\n      this.data.icentreY + s * dx + c * dy,\n    ];\n  }\n}\n\nexport default PinchEffect;\n","import BaseTransformEffect from \"../BaseTransform\";\n\nclass PolarEffect extends BaseTransformEffect {\n  static getName() {\n    return \"polar\";\n  }\n\n  data = {\n    centreX: 0,\n    centreY: 0,\n    sqr: (value: number) => 0,\n    radius: 0,\n  };\n\n  getDefaultParameters() {\n    return {\n      type: \"RECT_TO_POLAR\", // RECT_TO_POLAR, POLAR_TO_RECT, INVERT_IN_CIRCLE\n    };\n  }\n\n  before(parameters, width, height, imageData) {\n    return {\n      centreX: width / 2,\n      centreY: height / 2,\n      radius: Math.max(width / 2, height / 2),\n      sqr: function (x) {\n        return x * x;\n      },\n    };\n  }\n\n  callback(x, y, parameters, width, height) {\n    let theta,\n      theta2,\n      t,\n      m,\n      xMax,\n      yMax,\n      nx,\n      ny,\n      xmax,\n      ymax,\n      dx,\n      dy,\n      distance,\n      r = 0;\n\n    switch (parameters.type) {\n      case \"RECT_TO_POLAR\":\n        if (x >= this.data.centreX) {\n          if (y > this.data.centreY) {\n            theta =\n              Math.PI -\n              Math.atan((x - this.data.centreX) / (y - this.data.centreY));\n            r = Math.sqrt(\n              this.data.sqr(x - this.data.centreX) +\n                this.data.sqr(y - this.data.centreY)\n            );\n          } else {\n            if (y < this.data.centreY) {\n              theta = Math.atan(\n                (x - this.data.centreX) / (this.data.centreY - y)\n              );\n              r = Math.sqrt(\n                this.data.sqr(x - this.data.centreX) +\n                  this.data.sqr(this.data.centreY - y)\n              );\n            } else {\n              theta = Math.PI / 2;\n              r = x - this.data.centreX;\n            }\n          }\n        } else {\n          if (x < this.data.centreX) {\n            if (y < this.data.centreY) {\n              theta =\n                Math.PI * 2 -\n                Math.atan((this.data.centreX - x) / (this.data.centreY - y));\n              r = Math.sqrt(\n                this.data.sqr(this.data.centreX - x) +\n                  this.data.sqr(this.data.centreY - y)\n              );\n            } else {\n              if (y > this.data.centreY) {\n                theta =\n                  Math.PI +\n                  Math.atan((this.data.centreX - x) / (y - this.data.centreY));\n                r = Math.sqrt(\n                  this.data.sqr(this.data.centreX - x) +\n                    this.data.sqr(y - this.data.centreY)\n                );\n              } else {\n                theta = 1.5 * Math.PI;\n                r = this.data.centreX - x;\n              }\n            }\n          }\n        }\n        if (x != this.data.centreX) {\n          m = Math.abs((y - this.data.centreY) / (x - this.data.centreX));\n        } else {\n          m = 0;\n        }\n\n        if (m <= height / width) {\n          if (x == this.data.centreX) {\n            xMax = 0;\n            yMax = this.data.centreY;\n          } else {\n            xMax = this.data.centreX;\n            yMax = m * xMax;\n          }\n        } else {\n          yMax = this.data.centreY;\n          xMax = yMax / m;\n        }\n\n        return [\n          width - 1 - (width - 1) / (Math.PI * 2 * theta),\n          (height * r) / this.data.radius,\n        ];\n\n      case \"POLAR_TO_RECT\":\n        theta = (x / width) * Math.PI * 2;\n\n        if (theta >= 1.5 * Math.PI) {\n          theta2 = Math.PI * 2 - theta;\n        } else {\n          if (theta >= Math.PI) {\n            theta2 = theta - Math.PI;\n          } else {\n            if (theta >= 0.5 * Math.PI) {\n              theta2 = Math.PI - theta;\n            } else {\n              theta2 = theta;\n            }\n          }\n        }\n\n        t = Math.tan(theta2);\n        if (t != 0) {\n          m = 1.0 / t;\n        } else {\n          m = 0;\n        }\n\n        if (m <= height / width) {\n          if (theta2 == 0) {\n            xmax = 0;\n            ymax = this.data.centreY;\n          } else {\n            xmax = this.data.centreX;\n            ymax = m * xmax;\n          }\n        } else {\n          ymax = this.data.centreY;\n          xmax = ymax / m;\n        }\n\n        r = this.data.radius * (y / height);\n\n        nx = -r * Math.sin(theta2);\n        ny = r * Math.cos(theta2);\n\n        if (theta >= 1.5 * Math.PI) {\n          return [this.data.centreX - nx, this.data.centreY - ny];\n        } else {\n          if (theta >= Math.PI) {\n            return [this.data.centreX - nx, this.data.centreY + ny];\n          } else {\n            if (theta >= 0.5 * Math.PI) {\n              return [this.data.centreX + nx, this.data.centreY + ny];\n            } else {\n              return [this.data.centreX + nx, this.data.centreY - ny];\n            }\n          }\n        }\n        break; // TODO: ???\n\n      case \"INVERT_IN_CIRCLE\":\n        dx = x - this.data.centreX;\n        dy = y - this.data.centreY;\n        distance = dx * dx + dy * dy;\n\n        return [\n          this.data.centreX +\n            (this.data.centreX * this.data.centreX * dx) / distance,\n          this.data.centreY +\n            (this.data.centreY * this.data.centreY * dy) / distance,\n        ];\n    }\n  }\n}\n\nexport default PolarEffect;\n","import BaseTransformEffect from \"../BaseTransform\";\nimport { triangle, mod } from \"../../../helpers/common\";\nimport noise from \"../../../helpers/noise\";\n\nclass RippleEffect extends BaseTransformEffect {\n  static getName() {\n    return \"ripple\";\n  }\n\n  getDefaultParameters() {\n    return {\n      xAmplitude: 5,\n      yAmplitute: 0,\n      xWaveLength: 16,\n      yWaveLength: 16,\n      waveType: \"SINE\", // SAWTOOTH TRIANGLE NOISE\n    };\n  }\n\n  callback(x, y, parameters) {\n    let nx = y / parameters.xWaveLength,\n      ny = x / parameters.yWaveLength,\n      fx,\n      fy;\n\n    switch (parameters.waveType) {\n      case \"SINE\":\n      default:\n        fx = Math.sin(nx);\n        fy = Math.sin(ny);\n        break;\n\n      case \"SAWTOOTH\":\n        fx = mod(nx, 1);\n        fy = mod(ny, 1);\n        break;\n\n      case \"TRIANGLE\":\n        fx = triangle(nx);\n        fy = triangle(ny);\n        break;\n\n      case \"NOISE\":\n        fx = noise.noise1(nx);\n        fy = noise.noise1(ny);\n        break;\n    }\n\n    return [x + parameters.xAmplitude * fx, y + parameters.yAmplitute * fy];\n  }\n}\n\nexport default RippleEffect;\n","import BaseTransformEffect from \"../BaseTransform\";\n\nclass RotateEffect extends BaseTransformEffect {\n  static getName() {\n    return \"rotate\";\n  }\n\n  data = {\n    sin: 0,\n    cos: 0,\n    icentreX: 0,\n    icentreY: 0,\n  };\n\n  getDefaultParameters() {\n    return {\n      angle: Math.PI,\n    };\n  }\n\n  before(parameters, width, height, imageData) {\n    return {\n      cos: Math.cos(parameters.angle),\n      sin: Math.sin(parameters.angle),\n      icentreX: width / 2,\n      icentreY: height / 2,\n    };\n  }\n\n  callback(x, y, parameters, width, height) {\n    return [\n      this.data.cos * (x - this.data.icentreX) -\n        this.data.sin * (y - this.data.icentreY) +\n        this.data.icentreY,\n      this.data.sin * (x - this.data.icentreX) -\n        this.data.cos * (y - this.data.icentreY) +\n        this.data.icentreY,\n    ];\n  }\n}\n\nexport default RotateEffect;\n","import BaseTransformEffect from \"../BaseTransform\";\n\nclass ShearEffect extends BaseTransformEffect {\n  static getName() {\n    return \"shear\";\n  }\n\n  data = {\n    shx: 0,\n    shy: 0,\n  };\n\n  getDefaultParameters() {\n    return {\n      xAngle: 0,\n      yAngle: 0,\n      xOffset: 0,\n      yOffset: 0,\n    };\n  }\n\n  before(parameters, width, height) {\n    return {\n      shx: Math.sin(parameters.xAngle),\n      shy: Math.sin(parameters.yAngle),\n    };\n  }\n\n  callback(x, y, parameters) {\n    return [\n      x + parameters.xOffset + y * this.data.shx,\n      y + parameters.yOffset + x * this.data.shy,\n    ];\n  }\n}\n\nexport default ShearEffect;\n","import BaseTransformEffect from \"../BaseTransform\";\n\nclass SphereEffect extends BaseTransformEffect {\n  static getName() {\n    return \"sphere\";\n  }\n\n  data = {\n    icentreX: 0,\n    icentreY: 0,\n    a2: 0,\n    b2: 0,\n    a: 0,\n    b: 0,\n  };\n\n  getDefaultParameters() {\n    return {\n      a: 0,\n      b: 0,\n      centreX: 0.5,\n      centreY: 0.5,\n      refractionIndex: 1.5,\n    };\n  }\n\n  before(parameters, width, height) {\n    let icentreX = width * parameters.centreX,\n      icentreY = height * parameters.centreY,\n      a = parameters.a,\n      b = parameters.b,\n      a2,\n      b2;\n    if (a === 0) {\n      a = width / 2;\n    }\n    if (b === 0) {\n      b = height / 2;\n    }\n    a2 = a * a;\n    b2 = b * b;\n\n    return {\n      icentreX: icentreX,\n      icentreY: icentreY,\n      a: a,\n      b: b,\n      a2: a2,\n      b2: b2,\n    };\n  }\n\n  callback(x, y, parameters) {\n    let dx = x - this.data.icentreX,\n      dy = y - this.data.icentreY,\n      x2 = dx * dx,\n      y2 = dy * dy,\n      rRefraction = 1 / parameters.refractionIndex,\n      z = Math.sqrt(\n        (1 - x2 / this.data.a2 - y2 / this.data.b2) *\n          (this.data.a * this.data.b)\n      ),\n      z2 = z * z,\n      xAngle = Math.acos(dx / Math.sqrt(x2 + z2)),\n      angle1 = Math.PI / 2 - xAngle,\n      angle2 = Math.asin(Math.sin(angle1) * rRefraction),\n      yAngle = Math.acos(dy / Math.sqrt(y2 + z2)),\n      ret = new Array(2);\n\n    if (y2 >= this.data.b2 - this.data.b2 / x2 / this.data.a2) {\n      return [x, y];\n    }\n\n    angle2 = Math.PI / 2 - xAngle - angle2;\n    ret[0] = x - Math.tan(angle2) * z;\n\n    angle1 = Math.PI / 2 - yAngle;\n    angle2 = Math.asin(Math.sin(angle1) * rRefraction);\n    angle2 = Math.PI / 2 - yAngle - angle2;\n    ret[1] = y - Math.tan(angle2) * z;\n    return ret;\n  }\n}\n\nexport default SphereEffect;\n","import BaseTransformEffect from \"../BaseTransform\";\nimport noise from \"../../../helpers/noise\";\n\nclass SwimEffect extends BaseTransformEffect {\n  static getName() {\n    return \"swim\";\n  }\n\n  data = {\n    m00: 0,\n    m01: 0,\n    m10: 0,\n    m11: 0,\n  };\n\n  getDefaultParameters() {\n    return {\n      scale: 32,\n      turbulence: 0,\n      amount: 1,\n      time: 0,\n      angle: 0,\n      stretch: 1,\n    };\n  }\n\n  before(parameters, width, height) {\n    let cos = Math.cos(parameters.angle),\n      sin = Math.sin(parameters.angle);\n\n    return {\n      m00: cos,\n      m01: sin,\n      m10: -sin,\n      m11: cos,\n    };\n  }\n\n  callback(x, y, parameters) {\n    let nx = this.data.m00 * x + this.data.m01 * y,\n      ny = this.data.m10 * x + this.data.m11 * y;\n\n    nx /= parameters.scale;\n    ny /= parameters.scale * parameters.stretch;\n\n    if (parameters.turbulence === 1) {\n      return [\n        x + parameters.amount * noise.noise3(nx + 0.5, ny, parameters.time),\n        y + parameters.amount * noise.noise3(nx, ny + 0.5, parameters.time),\n      ];\n    }\n    return [\n      x +\n        parameters.amount *\n          noise.turbulence3(\n            nx + 0.5,\n            ny,\n            parameters.turbulence,\n            parameters.time\n          ),\n      y +\n        parameters.amount *\n          noise.turbulence3(\n            nx,\n            ny + 0.5,\n            parameters.turbulence,\n            parameters.time\n          ),\n    ];\n  }\n}\n\nexport default SwimEffect;\n","import BaseTransformEffect from \"../BaseTransform\";\n\nclass TwirlEffect extends BaseTransformEffect {\n  static getName() {\n    return \"twirl\";\n  }\n\n  data = {\n    iCentreX: 0,\n    iCentreY: 0,\n  };\n\n  getDefaultParameters() {\n    return {\n      angle: 0,\n      centreX: 0.5,\n      centreY: 0.5,\n      radius: 100,\n    };\n  }\n\n  before(parameters, width, height) {\n    let iCentreX = width * parameters.centreX,\n      iCentreY = height * parameters.centreY,\n      radius = parameters.radius,\n      radius2;\n\n    if (radius === 0) {\n      radius = Math.min(iCentreX, iCentreY);\n    }\n    radius2 = radius * radius;\n\n    return {\n      iCentreX: iCentreX,\n      iCentreY: iCentreY,\n      radius: radius,\n      radius2: radius2,\n    };\n  }\n\n  callback(x, y, parameters) {\n    let dx = x - this.data.iCentreX,\n      dy = y - this.data.iCentreY,\n      distance = dx * dx + dy * dy,\n      a;\n\n    if (distance > parameters.radius2) {\n      return [x, y];\n    }\n\n    distance = Math.sqrt(distance);\n    a =\n      Math.atan2(dy, dx) +\n      (parameters.angle * (parameters.radius - distance)) / parameters.radius;\n\n    return [\n      this.data.iCentreX + distance * Math.cos(a),\n      this.data.iCentreY + distance * Math.sin(a),\n    ];\n  }\n}\n\nexport default TwirlEffect;\n","import BaseTransformEffect from \"../BaseTransform\";\n\nclass WaterEffect extends BaseTransformEffect {\n  static getName() {\n    return \"water\";\n  }\n\n  data = {\n    iCentreX: 0,\n    iCentreY: 0,\n    radius2: 0,\n  };\n\n  getDefaultParameters() {\n    return {\n      waveLength: 16,\n      amplitude: 10,\n      phase: 0,\n      centreX: 0.5,\n      centreY: 0.5,\n      radius: 50,\n    };\n  }\n\n  before(parameters, width, height) {\n    let iCentreX = width * parameters.centreX,\n      iCentreY = height * parameters.centreY,\n      radius = parameters.radius,\n      radius2;\n\n    if (radius === 0) {\n      radius = Math.min(iCentreX, iCentreY);\n    }\n    radius2 = radius * radius;\n\n    return {\n      iCentreX: iCentreX,\n      iCentreY: iCentreY,\n      radius: radius,\n      radius2: radius2,\n    };\n  }\n\n  callback(x, y, parameters) {\n    let dx = x - this.data.iCentreX,\n      dy = y - this.data.iCentreY,\n      distance2 = dx * dx + dy * dy,\n      distance,\n      amount;\n\n    if (distance2 > this.data.radius2) {\n      return [x, y];\n    }\n    distance = Math.sqrt(distance2);\n    amount =\n      parameters.amplitude *\n      Math.sin(\n        (distance / parameters.waveLength) * Math.PI * 2 - parameters.phase\n      );\n    amount *= (parameters.radius - distance) / parameters.radius;\n    if (distance !== 0) {\n      amount *= parameters.waveLength / distance;\n    }\n    return [x + dx * amount, y + dy * amount];\n  }\n}\n\nexport default WaterEffect;\n","/**\n * RGB to HSB color convert.\n * @param r\n * @param g\n * @param b\n * @returns {{h: number, s: number, b: number}}\n */\nexport function RGBtoHSB(\n  r: number,\n  g: number,\n  b: number\n): {\n  h: number;\n  s: number;\n  b: number;\n} {\n  let hue,\n    saturation,\n    brightness,\n    cmax = Math.max(r, g, b),\n    cmin = Math.min(r, g, b);\n\n  brightness = cmax / 255;\n  if (cmax !== 0) {\n    saturation = (cmax - cmin) / cmax;\n  } else {\n    saturation = 0;\n  }\n\n  if (saturation === 0) {\n    hue = 0;\n  } else {\n    let redc = (cmax - r) / (cmax - cmin),\n      greenc = (cmax - g) / (cmax - cmin),\n      bluec = (cmax - b) / (cmax - cmin);\n\n    if (r === cmax) {\n      hue = bluec - greenc;\n    } else {\n      if (g === cmax) {\n        hue = 2 + redc - bluec;\n      } else {\n        hue = 4 + greenc - redc;\n      }\n    }\n\n    hue /= 6;\n    if (hue < 0) {\n      hue += 1;\n    }\n  }\n\n  return {\n    h: hue,\n    s: saturation,\n    b: brightness,\n  };\n}\n\n/**\n * HSB to RGB color convert.\n * @param hue\n * @param saturation\n * @param brightness\n * @returns {{r: Number, g: Number, b: Number}}\n */\nexport function HSBtoRGB(\n  hue: number,\n  saturation: number,\n  brightness: number\n): {\n  r: number;\n  g: number;\n  b: number;\n} {\n  let red, green, blue;\n  if (saturation === 0) {\n    red = brightness * 255 + 0.5;\n    green = brightness * 255 + 0.5;\n    blue = brightness * 255 + 0.5;\n  } else {\n    let h = (hue - Math.floor(hue)) * 6,\n      f = h - Math.floor(h),\n      p = brightness * (1 - saturation),\n      q = brightness * (1 - saturation * f),\n      t = brightness * (1 - saturation * (1 - f));\n\n    switch (h | 0) {\n      case 0:\n        red = brightness * 255 + 0.5;\n        green = t * 255 + 0.5;\n        blue = p * 255 + 0.5;\n        break;\n\n      case 1:\n        red = q * 255 + 0.5;\n        green = brightness * 255 + 0.5;\n        blue = p * 255 + 0.5;\n        break;\n\n      case 2:\n        red = p * 255 + 0.5;\n        green = brightness * 255 + 0.5;\n        blue = t * 255 + 0.5;\n        break;\n\n      case 3:\n        red = p * 255 + 0.5;\n        green = q * 255 + 0.5;\n        blue = brightness * 255 + 0.5;\n        break;\n\n      case 4:\n        red = t * 255 + 0.5;\n        green = p * 255 + 0.5;\n        blue = brightness * 255 + 0.5;\n        break;\n\n      case 5:\n        red = brightness * 255 + 0.5;\n        green = p * 255 + 0.5;\n        blue = q * 255 + 0.5;\n        break;\n\n      default:\n        red = 0;\n        green = 0;\n        blue = 0;\n        break;\n    }\n  }\n  return {\n    r: parseInt(red),\n    g: parseInt(green),\n    b: parseInt(blue),\n  };\n}\n\nexport function mixColors(\n  t: number,\n  rgb1: {\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n  },\n  rgb2: {\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n  }\n): {\n  r: number;\n  g: number;\n  b: number;\n  a: number;\n} {\n  return {\n    r: rgb1.r + t * (rgb2.r - rgb1.r),\n    g: rgb1.g + t * (rgb2.g - rgb1.g),\n    b: rgb1.b + t * (rgb2.b - rgb1.b),\n    a: rgb1.a + t * (rgb2.a - rgb1.a),\n  };\n}\n\nexport function hexToRGB(hex: string): {\n  r: number;\n  g: number;\n  b: number;\n} {\n  const _hex = parseInt(hex.replace(\"#\", \"\"), 16);\n  let r = _hex >> 16;\n  let g = (_hex >> 8) & 0xff;\n  let b = _hex & 0xff;\n  return {\n    r: r,\n    g: g,\n    b: b,\n  };\n}\n\nexport function RGBtoHex(pixel: { r: number; g: number; b: number }) {\n  let bin = (pixel.r << 16) | (pixel.g << 8) | pixel.b;\n  return (function (h) {\n    return new Array(7 - h.length).join(\"0\") + h;\n  })(bin.toString(16).toUpperCase());\n}\n\nexport function RGBtoXYZ(\n  r: number,\n  g: number,\n  b: number\n): {\n  x: number;\n  y: number;\n  z: number;\n} {\n  let let_R = r / 255;\n  let let_G = g / 255;\n  let let_B = b / 255;\n\n  if (let_R > 0.04045) {\n    let_R = Math.pow((let_R + 0.055) / 1.055, 2.4);\n  } else {\n    let_R = let_R / 12.92;\n  }\n\n  if (let_G > 0.04045) {\n    let_G = Math.pow((let_G + 0.055) / 1.055, 2.4);\n  } else {\n    let_G = let_G / 12.92;\n  }\n\n  if (let_B > 0.04045) {\n    let_B = Math.pow((let_B + 0.055) / 1.055, 2.4);\n  } else {\n    let_B = let_B / 12.92;\n  }\n\n  let_R = let_R * 100;\n  let_G = let_G * 100;\n  let_B = let_B * 100;\n\n  return {\n    x: let_R * 0.4124 + let_G * 0.3576 + let_B * 0.1805,\n    y: let_R * 0.2126 + let_G * 0.7152 + let_B * 0.0722,\n    z: let_R * 0.0193 + let_G * 0.1192 + let_B * 0.9505,\n  };\n}\n\nexport function RGBtoCIELab(\n  r: number,\n  g: number,\n  b: number\n): {\n  l: number;\n  a: number;\n  b: number;\n} {\n  let xyz = RGBtoXYZ(r, g, b);\n\n  let let_X = xyz.x / 95.047; // ref\n  let let_Y = xyz.y / 100; // ref\n  let let_Z = xyz.z / 108.883; // ref\n\n  if (let_X > 0.008856) {\n    let_X = Math.pow(let_X, 1 / 3);\n  } else {\n    let_X = 7.787 * let_X + 16 / 116;\n  }\n\n  if (let_Y > 0.008856) {\n    let_Y = Math.pow(let_Y, 1 / 3);\n  } else {\n    let_Y = 7.787 * let_Y + 16 / 116;\n  }\n\n  if (let_Z > 0.008856) {\n    let_Z = Math.pow(let_Z, 1 / 3);\n  } else {\n    let_Z = 7.787 * let_Z + 16 / 116;\n  }\n\n  return {\n    l: 116 * let_Y - 16,\n    a: 500 * (let_X - let_Y),\n    b: 200 * (let_Y - let_Z),\n  };\n}\n\nexport function CIELabToXYZ(\n  l: number,\n  a: number,\n  b: number\n): {\n  x: number;\n  y: number;\n  z: number;\n} {\n  let let_Y = (l + 16) / 116;\n  let let_X = a / 500 + let_Y;\n  let let_Z = let_Y - b / 200;\n\n  if (Math.pow(let_Y, 3) > 0.008856) {\n    let_Y = Math.pow(let_Y, 3);\n  } else {\n    let_Y = (let_Y - 16 / 116) / 7.787;\n  }\n\n  if (Math.pow(let_X, 3) > 0.008856) {\n    let_X = Math.pow(let_X, 3);\n  } else {\n    let_X = (let_X - 16 / 116) / 7.787;\n  }\n\n  if (Math.pow(let_Z, 3) > 0.008856) {\n    let_Z = Math.pow(let_Z, 3);\n  } else {\n    let_Z = (let_Z - 16 / 116) / 7.787;\n  }\n\n  return {\n    x: 95.047 * let_X, // ref\n    y: 100 * let_Y, // ref\n    z: 108.883 * let_Z, // ref\n  };\n}\n\nexport function CIELabToRGB(\n  l: number,\n  a: number,\n  b: number\n): {\n  r: number;\n  g: number;\n  b: number;\n} {\n  let xyz = CIELabToXYZ(l, a, b);\n\n  let let_X = xyz.x / 100;\n  let let_Y = xyz.y / 100;\n  let let_Z = xyz.z / 100;\n\n  let let_R = let_X * 3.2406 + let_Y * -1.5372 + let_Z * -0.4986;\n  let let_G = let_X * -0.9689 + let_Y * 1.8758 + let_Z * 0.0415;\n  let let_B = let_X * 0.0557 + let_Y * -0.204 + let_Z * 1.057;\n\n  if (let_R > 0.0031308) {\n    let_R = 1.055 * Math.pow(let_R, 1 / 2.4) - 0.055;\n  } else {\n    let_R = 12.92 * let_R;\n  }\n\n  if (let_G > 0.0031308) {\n    let_G = 1.055 * Math.pow(let_G, 1 / 2.4) - 0.055;\n  } else {\n    let_G = 12.92 * let_G;\n  }\n\n  if (let_B > 0.0031308) {\n    let_B = 1.055 * Math.pow(let_B, 1 / 2.4) - 0.055;\n  } else {\n    let_B = 12.92 * let_B;\n  }\n\n  return {\n    r: let_R * 255,\n    g: let_G * 255,\n    b: let_B * 255,\n  };\n}\n","const blendingModes = {\n  lighten: function (bottomPixel: number, topPixel: number): number {\n    return topPixel > bottomPixel ? topPixel : bottomPixel;\n  },\n  darken: function (bottomPixel: number, topPixel: number): number {\n    return topPixel > bottomPixel ? bottomPixel : topPixel;\n  },\n  multiply: function (bottomPixel: number, topPixel: number): number {\n    return (bottomPixel * topPixel) / 255;\n  },\n  average: function (bottomPixel: number, topPixel: number): number {\n    return bottomPixel + topPixel / 2;\n  },\n  add: function (bottomPixel: number, topPixel: number): number {\n    return Math.min(255, bottomPixel + topPixel);\n  },\n  subtract: function (bottomPixel: number, topPixel: number): number {\n    return bottomPixel + topPixel < 255 ? 0 : bottomPixel + topPixel - 255;\n  },\n  difference: function (bottomPixel: number, topPixel: number): number {\n    return Math.abs(bottomPixel - topPixel);\n  },\n  negation: function (bottomPixel: number, topPixel: number): number {\n    return 255 - Math.abs(255 - bottomPixel - topPixel);\n  },\n  screen: function (bottomPixel: number, topPixel: number): number {\n    return 255 - (((255 - bottomPixel) * (255 - topPixel)) >> 8);\n  },\n  exclusion: function (bottomPixel: number, topPixel: number): number {\n    return bottomPixel + topPixel - (2 * bottomPixel * topPixel) / 255;\n  },\n  overlay: function (bottomPixel: number, topPixel: number): number {\n    return topPixel < 128\n      ? (2 * bottomPixel * topPixel) / 255\n      : 255 - (2 * (255 - bottomPixel) * (255 - topPixel)) / 255;\n  },\n  softLight: function (bottomPixel: number, topPixel: number): number {\n    return topPixel < 128\n      ? 2 * ((bottomPixel >> 1) + 64) * (topPixel / 255)\n      : 255 - (2 * (255 - ((bottomPixel >> 1) + 64)) * (255 - topPixel)) / 255;\n  },\n  hardLight: function (bottomPixel: number, topPixel: number): number {\n    return blendingModes.softLight(topPixel, bottomPixel);\n  },\n  colorDodge: function (bottomPixel: number, topPixel: number): number {\n    return topPixel === 255\n      ? topPixel\n      : Math.min(255, (bottomPixel << 8) / (255 - topPixel));\n  },\n  colorBurn: function (bottomPixel: number, topPixel: number): number {\n    return topPixel === 0\n      ? topPixel\n      : Math.max(0, 255 - ((255 - bottomPixel) << 8) / topPixel);\n  },\n  linearDodge: function (bottomPixel: number, topPixel: number): number {\n    return blendingModes.add(bottomPixel, topPixel);\n  },\n  linearBurn: function (bottomPixel: number, topPixel: number): number {\n    return blendingModes.subtract(bottomPixel, topPixel);\n  },\n  linearLight: function (bottomPixel: number, topPixel: number): number {\n    return topPixel < 128\n      ? blendingModes.linearBurn(bottomPixel, 2 * topPixel)\n      : blendingModes.linearDodge(bottomPixel, 2 * (topPixel - 128));\n  },\n  vividLight: function (bottomPixel: number, topPixel: number): number {\n    return topPixel < 128\n      ? blendingModes.colorBurn(bottomPixel, 2 * topPixel)\n      : blendingModes.colorDodge(bottomPixel, 2 * (topPixel - 128));\n  },\n  pinLight: function (bottomPixel: number, topPixel: number): number {\n    return topPixel < 128\n      ? blendingModes.darken(bottomPixel, 2 * topPixel)\n      : blendingModes.lighten(bottomPixel, 2 * (topPixel - 128));\n  },\n  hardMix: function (bottomPixel: number, topPixel: number): number {\n    return blendingModes.vividLight(bottomPixel, topPixel) < 128 ? 0 : 255;\n  },\n  reflect: function (bottomPixel: number, topPixel: number): number {\n    return topPixel === 255\n      ? topPixel\n      : Math.min(255, (bottomPixel * bottomPixel) / (255 - topPixel));\n  },\n  glow: function (bottomPixel: number, topPixel: number): number {\n    return blendingModes.reflect(topPixel, bottomPixel);\n  },\n  phoenix: function (bottomPixel: number, topPixel: number): number {\n    return (\n      Math.min(bottomPixel, topPixel) - Math.max(bottomPixel, topPixel) + 255\n    );\n  },\n};\n\nexport function mergeImageData(bottom, top, pixelCallback) {\n  let x, y, xx, yy, firstOldPixelIndex, firstNewPixelIndex, pixelResult;\n\n  for (\n    y = top.y, yy = 0;\n    y < bottom.height && yy < top.height;\n    y += 1, yy += 1\n  ) {\n    for (\n      x = top.x, xx = 0;\n      x < bottom.width && xx < top.width;\n      x += 1, xx += 1\n    ) {\n      if (xx < top.width && yy < top.height) {\n        // overwrite only rect-size of current layer\n        firstOldPixelIndex = y * bottom.width * 4 + x * 4;\n        firstNewPixelIndex = yy * top.width * 4 + xx * 4;\n\n        pixelResult = pixelCallback(\n          {\n            r: bottom.imageData.data[firstOldPixelIndex + 0],\n            g: bottom.imageData.data[firstOldPixelIndex + 1],\n            b: bottom.imageData.data[firstOldPixelIndex + 2],\n            a: bottom.imageData.data[firstOldPixelIndex + 3],\n          },\n          {\n            r: top.imageData.data[firstNewPixelIndex + 0],\n            g: top.imageData.data[firstNewPixelIndex + 1],\n            b: top.imageData.data[firstNewPixelIndex + 2],\n            a: top.imageData.data[firstNewPixelIndex + 3],\n          },\n          x,\n          y,\n          {\n            blendingMode: top.blendingMode,\n          }\n        );\n\n        if (pixelResult !== false) {\n          // if skip change\n          bottom.imageData.data[firstOldPixelIndex + 0] = pixelResult.r;\n          bottom.imageData.data[firstOldPixelIndex + 1] = pixelResult.g;\n          bottom.imageData.data[firstOldPixelIndex + 2] = pixelResult.b;\n          bottom.imageData.data[firstOldPixelIndex + 3] = pixelResult.a;\n        }\n      }\n    }\n  }\n  return bottom.imageData;\n}\n\nexport function mergePixelCallback(\n  bottomPixel: { r: number; g: number; b: number; a: number },\n  topPixel: { r: number; g: number; b: number; a: number },\n  x: number,\n  y: number,\n  parameters: { blendingMode: string }\n): { r: number; g: number; b: number; a: number } | boolean {\n  if (topPixel.a === 0) {\n    return false; // skip change - opacity is full\n  }\n\n  // alpha compositing\n  let mergedR,\n    mergedG,\n    mergedB,\n    mergedA = topPixel.a / 255,\n    rootA = (bottomPixel.a / 255) * (1 - mergedA),\n    outA = mergedA + (bottomPixel.a * (1 - mergedA)) / 255;\n\n  switch (parameters.blendingMode) {\n    case \"lighten\":\n    case \"darken\":\n    case \"multiply\":\n    case \"average\":\n    case \"add\":\n    case \"subtract\":\n    case \"difference\":\n    case \"negation\":\n    case \"screen\":\n    case \"exclusion\":\n    case \"overlay\":\n    case \"softLight\":\n    case \"hardLight\":\n    case \"colorDodge\":\n    case \"colorBurn\":\n    case \"linearDodge\":\n    case \"linearBurn\":\n    case \"linearLight\":\n    case \"vividLight\":\n    case \"pinLight\":\n    case \"hardMix\":\n    case \"reflect\":\n    case \"glow\":\n    case \"phoenix\":\n      topPixel.r = blendingModes[parameters.blendingMode](\n        bottomPixel.r,\n        topPixel.r\n      );\n      topPixel.g = blendingModes[parameters.blendingMode](\n        bottomPixel.g,\n        topPixel.g\n      );\n      topPixel.b = blendingModes[parameters.blendingMode](\n        bottomPixel.b,\n        topPixel.b\n      );\n      break;\n\n    default:\n      break;\n  }\n\n  let rootR = bottomPixel.r;\n  let rootG = bottomPixel.g;\n  let rootB = bottomPixel.b;\n\n  mergedR = topPixel.r * mergedA + rootR * rootA;\n  mergedG = topPixel.g * mergedA + rootG * rootA;\n  mergedB = topPixel.b * mergedA + rootB * rootA;\n\n  mergedR = outA === 0 ? 0 : mergedR / outA;\n  mergedG = outA === 0 ? 0 : mergedG / outA;\n  mergedB = outA === 0 ? 0 : mergedB / outA;\n\n  return {\n    r: Math.min(Math.max(0, mergedR), 255) | 0,\n    g: Math.min(Math.max(0, mergedG), 255) | 0,\n    b: Math.min(Math.max(0, mergedB), 255) | 0,\n    a: (255 * outA) | 0,\n  };\n}\n\nexport function cropImageData(\n  oldImageData: ImageData,\n  newImageData: ImageData,\n  startX: number,\n  startY: number,\n  width: number,\n  height: number\n): ImageData {\n  let oldWidth = oldImageData.width,\n    newWidth = newImageData.width,\n    x,\n    y,\n    xx,\n    yy,\n    firstOldPixelIndex,\n    firstNewPixelIndex;\n\n  for (\n    y = startY, yy = 0;\n    y < startY + height && yy < height;\n    y += 1, yy += 1\n  ) {\n    for (\n      x = startX, xx = 0;\n      x < startX + width && xx < width;\n      x += 1, xx += 1\n    ) {\n      firstOldPixelIndex = y * oldWidth * 4 + x * 4;\n      firstNewPixelIndex = yy * newWidth * 4 + xx * 4;\n\n      newImageData.data[firstNewPixelIndex] =\n        oldImageData.data[firstOldPixelIndex];\n      newImageData.data[firstNewPixelIndex + 1] =\n        oldImageData.data[firstOldPixelIndex + 1];\n      newImageData.data[firstNewPixelIndex + 2] =\n        oldImageData.data[firstOldPixelIndex + 2];\n      newImageData.data[firstNewPixelIndex + 3] =\n        oldImageData.data[firstOldPixelIndex + 3];\n    }\n  }\n\n  return newImageData;\n}\n\nexport function mod(a: number, b: number): number {\n  let n = Math.floor(a / b);\n  a -= n * b;\n  if (a < 0) {\n    return a + b;\n  }\n  return a;\n}\n\nexport function triangle(x: number) {\n  let r = mod(x, 1);\n  return 2 * (r < 0.5 ? r : 1 - r);\n}\n\nexport function smoothStep(a: number, b: number, x: number): number {\n  if (x < a) {\n    return 0;\n  }\n  if (x >= b) {\n    return 1;\n  }\n  x = (x - a) / (b - a);\n  return x * x * (3 - 2 * x);\n}\n\nexport function brightness(pixel: { r: number; g: number; b: number }) {\n  return (pixel.r + pixel.g + pixel.b) / 3;\n}\n\nexport function isBrowser(): boolean {\n  return typeof window !== \"undefined\";\n}\n","const parameters: {\n  B?: number;\n  BM?: number;\n  N?: number;\n  P?: any[];\n  G1?: any[];\n  G2?: any[];\n  G3?: any[];\n} = {};\nlet isInit = false;\n\nlet noise = {\n  init: function (): boolean {\n    if (isInit) {\n      return false;\n    }\n    isInit = true;\n\n    parameters.B = 0x100;\n    parameters.BM = 0xff;\n    parameters.N = 0x1000;\n\n    parameters.P = new Array(parameters.B + parameters.B + 2);\n    parameters.G1 = new Array(parameters.B + parameters.B + 2);\n    parameters.G2 = new Array(parameters.B + parameters.B + 2);\n    for (let i = 0; i < parameters.G2.length; i += 1) {\n      parameters.G2[i] = new Array(2);\n    }\n    parameters.G3 = new Array(parameters.B + parameters.B + 2);\n    for (let i = 0; i < parameters.G3.length; i += 1) {\n      parameters.G3[i] = new Array(3);\n    }\n    let i, j, k;\n\n    for (i = 0; i < parameters.B; i += 1) {\n      parameters.P[i] = i;\n      parameters.G1[i] =\n        ((this.random() % (parameters.B + parameters.B)) - parameters.B) /\n        parameters.B;\n      parameters.G2[i] = [];\n      for (j = 0; j < 2; j += 1) {\n        parameters.G2[i][j] =\n          ((this.random() % (parameters.B + parameters.B)) - parameters.B) /\n          parameters.B;\n      }\n      parameters.G2[i] = this.normalize2(parameters.G2[i]);\n\n      parameters.G3[i] = [];\n      for (j = 0; j < 3; j += 1) {\n        parameters.G3[i][j] =\n          ((this.random() % (parameters.B + parameters.B)) - parameters.B) /\n          parameters.B;\n      }\n      parameters.G3[i] = this.normalize3(parameters.G3[i]);\n    }\n\n    for (i = parameters.B - 1; i >= 0; i -= 1) {\n      k = parameters.P[i];\n      parameters.P[i] = parameters.P[(j = this.random() % parameters.B)];\n      parameters.P[j] = k;\n    }\n\n    for (i = 0; i < parameters.B + 2; i += 1) {\n      parameters.P[parameters.B + i] = parameters.P[i];\n      parameters.G1[parameters.B + i] = parameters.G1[i];\n      for (j = 0; j < 2; j += 1) {\n        parameters.G2[parameters.B + i][j] = parameters.G2[i][j];\n      }\n      for (j = 0; j < 3; j++) {\n        parameters.G3[parameters.B + i][j] = parameters.G3[i][j];\n      }\n    }\n  },\n  random: function (): number {\n    return ((Math.random() * 256 * 256) | 0) & 0x7fffffff;\n  },\n  normalize2: function (arr: any[]): any[] {\n    let s = Math.sqrt(arr[0] * arr[0] + arr[1] * arr[1] + arr[2] * arr[2]);\n    arr[0] = arr[0] / s;\n    arr[1] = arr[1] / s;\n    arr[2] = arr[2] / s;\n    return arr;\n  },\n  normalize3: function (arr: any[]): any[] {\n    let s = Math.sqrt(arr[0] * arr[0] + arr[1] * arr[1]);\n    arr[0] = arr[0] / s;\n    arr[1] = arr[1] / s;\n    return arr;\n  },\n  sCurve: function (t: number): number {\n    return t * t * (3.0 - 2.0 * t);\n  },\n  lerp: function (t: number, a: number, b: number): number {\n    return a + t * (b - a);\n  },\n  /**\n   * Compute 1-dimensional Perlin noise.\n   * @param x\n   */\n  noise1: function (x: number): number {\n    let bx0, bx1, rx0, rx1, sx, t, u, v;\n\n    this.init();\n\n    t = x + parameters.N;\n    bx0 = parseInt(t) & parameters.BM;\n    bx1 = (bx0 + 1) & parameters.BM;\n    rx0 = t - parseInt(t);\n    rx1 = rx0 - 1;\n\n    sx = this.sCurve(rx0);\n\n    u = rx0 * parameters.G1[parameters.P[bx0]];\n    v = rx1 * parameters.G1[parameters.P[bx1]];\n\n    return 2.3 * this.lerp(sx, u, v);\n  },\n  /**\n   * Compute 2-dimensional Perlin noise\n   * @param x\n   * @param y\n   * @returns {number}\n   */\n  noise2: function (x: number, y: number): number {\n    let bx0,\n      bx1,\n      by0,\n      by1,\n      b00,\n      b10,\n      b01,\n      b11,\n      rx0,\n      rx1,\n      ry0,\n      ry1,\n      q = [],\n      sx,\n      sy,\n      a,\n      b,\n      t,\n      u,\n      v,\n      i,\n      j;\n\n    this.init();\n\n    t = x + parameters.N;\n    bx0 = parseInt(t) & parameters.BM;\n    bx1 = (bx0 + 1) & parameters.BM;\n    rx0 = t - parseInt(t);\n    rx1 = rx0 - 1;\n\n    t = y + parameters.N;\n    by0 = parseInt(t) & parameters.BM;\n    by1 = (by0 + 1) & parameters.BM;\n    ry0 = t - parseInt(t);\n    ry1 = ry0 - 1;\n\n    i = parameters.P[bx0];\n    j = parameters.P[bx1];\n\n    b00 = parameters.P[i + by0];\n    b10 = parameters.P[j + by0];\n    b01 = parameters.P[i + by1];\n    b11 = parameters.P[j + by1];\n\n    sx = this.sCurve(rx0);\n    sy = this.sCurve(ry0);\n\n    q = parameters.G2[b00];\n    u = rx0 * q[0] + ry0 * q[1];\n    q = parameters.G2[b10];\n    v = rx1 * q[0] + ry0 * q[1];\n    a = this.lerp(sx, u, v);\n\n    q = parameters.G2[b01];\n    u = rx0 * q[0] + ry1 * q[1];\n    q = parameters.G2[b11];\n    v = rx1 * q[0] + ry1 * q[1];\n    b = this.lerp(sx, u, v);\n\n    return 1.5 * this.lerp(sy, a, b);\n  },\n  /**\n   * Compute 3-dimensional Perlin noise.\n   * @param x\n   * @param y\n   * @param z\n   */\n  noise3: function (x: number, y: number, z: number): number {\n    let bx0,\n      bx1,\n      by0,\n      by1,\n      bz0,\n      bz1,\n      b00,\n      b10,\n      b01,\n      b11,\n      rx0,\n      rx1,\n      ry0,\n      ry1,\n      rz0,\n      rz1,\n      q,\n      sy,\n      sz,\n      a,\n      b,\n      c,\n      d,\n      t,\n      u,\n      v,\n      i,\n      j;\n\n    this.init();\n\n    t = x + parameters.N;\n    bx0 = parseInt(t) & parameters.BM;\n    bx1 = (bx0 + 1) & parameters.BM;\n    rx0 = t - parseInt(t);\n    rx1 = rx0 - 1;\n\n    t = y + parameters.N;\n    by0 = parseInt(t) & parameters.BM;\n    by1 = (by0 + 1) & parameters.BM;\n    ry0 = t - parseInt(t);\n    ry1 = ry0 - 1;\n\n    t = z + parameters.N;\n    bz0 = parseInt(t) & parameters.BM;\n    bz1 = (bz0 + 1) & parameters.BM;\n    rz0 = t - parseInt(t);\n    rz1 = rz0 - 1;\n\n    i = parameters.P[bx0];\n    j = parameters.P[bx1];\n\n    b00 = parameters.P[i + by0];\n    b10 = parameters.P[j + by0];\n    b01 = parameters.P[i + by1];\n    b11 = parameters.P[j + by1];\n\n    t = this.sCurve(rx0);\n    sy = this.sCurve(ry0);\n    sz = this.sCurve(rz0);\n\n    q = parameters.G3[b00 + bz0];\n    u = rx0 * q[0] + ry0 * q[1] + rz0 * q[2];\n    q = parameters.G3[b10 + bz0];\n    v = rx1 * q[0] + ry0 * q[1] + rz0 * q[2];\n    a = this.lerp(t, u, v);\n\n    q = parameters.G3[b01 + bz0];\n    u = rx0 * q[0] + ry1 * q[1] + rz0 * q[2];\n    q = parameters.G3[b11 + bz0];\n    v = rx1 * q[0] + ry1 * q[1] + rz0 * q[2];\n    b = this.lerp(t, u, v);\n\n    c = this.lerp(sy, a, b);\n\n    q = parameters.G3[b00 + bz1];\n    u = rx0 * q[0] + ry0 * q[1] + rz1 * q[2];\n    q = parameters.G3[b10 + bz1];\n    v = rx1 * q[0] + ry0 * q[1] + rz1 * q[2];\n    a = this.lerp(t, u, v);\n\n    q = parameters.G3[b01 + bz1];\n    u = rx0 * q[0] + ry1 * q[1] + rz1 * q[2];\n    q = parameters.G3[b11 + bz1];\n    v = rx1 * q[0] + ry1 * q[1] + rz1 * q[2];\n    b = this.lerp(t, u, v);\n\n    d = this.lerp(sy, a, b);\n\n    return 1.5 * this.lerp(sz, c, d);\n  },\n  /**\n   * Compute turbulence using Perlin noise.\n   * @param x\n   * @param y\n   * @param z\n   * @param octaves\n   * @returns {*}\n   */\n  turbulence3: function (x: number, y: number, z: number, octaves): number {\n    let t = 0,\n      i;\n    for (i = 1; i <= octaves; i *= 2) {\n      t += Math.abs(this.noise3(i * x, i * y, i * z)) / i;\n    }\n    return t;\n  },\n};\n\nexport default noise;\n","export function resizeNearestNeighbour(\n  oldImageData: ImageData,\n  newImageData: ImageData,\n  newWidth: number,\n  newHeight: number\n): ImageData {\n  let oldWidth = oldImageData.width,\n    oldHeight = oldImageData.height,\n    ratioX = oldWidth / newWidth,\n    ratioY = oldHeight / newHeight,\n    oldPixelIndex,\n    newPixelIndex,\n    x,\n    y;\n\n  for (y = 0; y < newHeight; y += 1) {\n    for (x = 0; x < newWidth; x += 1) {\n      oldPixelIndex =\n        Math.floor(y * ratioY) * oldWidth * 4 + Math.floor(x * ratioX) * 4;\n      newPixelIndex = y * newWidth * 4 + x * 4;\n\n      newImageData.data[newPixelIndex + 0] =\n        oldImageData.data[oldPixelIndex + 0];\n      newImageData.data[newPixelIndex + 1] =\n        oldImageData.data[oldPixelIndex + 1];\n      newImageData.data[newPixelIndex + 2] =\n        oldImageData.data[oldPixelIndex + 2];\n      newImageData.data[newPixelIndex + 3] =\n        oldImageData.data[oldPixelIndex + 3];\n    }\n  }\n\n  return newImageData;\n}\n\nexport function resizeBilinearInterpolation(\n  oldImageData: ImageData,\n  newImageData: ImageData,\n  newWidth: number,\n  newHeight: number\n): ImageData {\n  let oldWidth = oldImageData.width,\n    oldHeight = oldImageData.height,\n    ratioX = oldWidth / newWidth,\n    ratioY = oldHeight / newHeight,\n    newPixelIndex,\n    x,\n    y,\n    x0,\n    y0,\n    dx,\n    dy,\n    x1,\n    y1,\n    oldPixelIndex00,\n    oldPixelIndex01,\n    oldPixelIndex10,\n    oldPixelIndex11,\n    i,\n    j;\n\n  for (i = 0; i < newHeight; i += 1) {\n    for (j = 0; j < newWidth; j += 1) {\n      x = j * ratioX;\n      y = i * ratioY;\n      x0 = Math.floor(x);\n      y0 = Math.floor(y);\n      dx = x - x0;\n      dy = y - y0;\n      x1 = x0 + 1;\n      y1 = y0 + 1;\n\n      if (x1 >= oldWidth) {\n        x1 = x0;\n      }\n      if (y1 >= oldHeight) {\n        y1 = y0;\n      }\n\n      oldPixelIndex00 = (y0 * oldWidth + x0) * 4;\n      oldPixelIndex01 = (y0 * oldWidth + x1) * 4;\n      oldPixelIndex10 = (y1 * oldWidth + x0) * 4;\n      oldPixelIndex11 = (y1 * oldWidth + x1) * 4;\n      newPixelIndex = (i * newWidth + j) * 4;\n\n      newImageData.data[newPixelIndex] =\n        (1.0 - dy) *\n          ((1.0 - dx) * oldImageData.data[oldPixelIndex00] +\n            dx * oldImageData.data[oldPixelIndex01]) +\n        dy *\n          ((1.0 - dx) * oldImageData.data[oldPixelIndex10] +\n            dx * oldImageData.data[oldPixelIndex11]);\n      newImageData.data[newPixelIndex + 1] =\n        (1.0 - dy) *\n          ((1.0 - dx) * oldImageData.data[oldPixelIndex00 + 1] +\n            dx * oldImageData.data[oldPixelIndex01 + 1]) +\n        dy *\n          ((1.0 - dx) * oldImageData.data[oldPixelIndex10 + 1] +\n            dx * oldImageData.data[oldPixelIndex11 + 1]);\n      newImageData.data[newPixelIndex + 2] =\n        (1.0 - dy) *\n          ((1.0 - dx) * oldImageData.data[oldPixelIndex00 + 2] +\n            dx * oldImageData.data[oldPixelIndex01 + 2]) +\n        dy *\n          ((1.0 - dx) * oldImageData.data[oldPixelIndex10 + 2] +\n            dx * oldImageData.data[oldPixelIndex11 + 2]);\n      newImageData.data[newPixelIndex + 3] =\n        (1.0 - dy) *\n          ((1.0 - dx) * oldImageData.data[oldPixelIndex00 + 3] +\n            dx * oldImageData.data[oldPixelIndex01 + 3]) +\n        dy *\n          ((1.0 - dx) * oldImageData.data[oldPixelIndex10 + 3] +\n            dx * oldImageData.data[oldPixelIndex11 + 3]);\n    }\n  }\n\n  return newImageData;\n}\n\nexport function resizeBiquadraticInterpolation(\n  oldImageData: ImageData,\n  newImageData: ImageData,\n  newWidth: number,\n  newHeight: number\n): ImageData {\n  let interpolate = function interpolate(f1, f2, f3, d) {\n      return f2 + (f3 - f1) * d + (f1 - 2 * f2 + f3) * d * d;\n    },\n    interpolateNormalize = function interpolateNormalize(f1, f2, f3, d) {\n      let result = interpolate(f1, f2, f3, d);\n      if (result > 255) {\n        return 255;\n      }\n      if (result < 0) {\n        return 0;\n      }\n      return Math.floor(result);\n    },\n    oldWidth = oldImageData.width,\n    oldHeight = oldImageData.height,\n    ratioX = oldWidth / newWidth,\n    ratioY = oldHeight / newHeight,\n    x,\n    y,\n    x0,\n    y0,\n    x1,\n    y1,\n    x2,\n    y2,\n    dx,\n    dy,\n    oldPixelIndex00,\n    oldPixelIndex01,\n    oldPixelIndex02,\n    oldPixelIndex10,\n    oldPixelIndex11,\n    oldPixelIndex12,\n    oldPixelIndex20,\n    oldPixelIndex21,\n    oldPixelIndex22,\n    newPixelIndex,\n    i,\n    j;\n\n  for (i = 0; i < newHeight; i += 1) {\n    for (j = 0; j < newWidth; j += 1) {\n      x = j * ratioX;\n      y = i * ratioY;\n\n      x1 = Math.floor(x);\n      y1 = Math.floor(y);\n      dx = (x - x1) * 0.5;\n      dy = (y - y1) * 0.5;\n\n      if (x1 - 1 >= 0) {\n        x0 = x1 - 1;\n      } else {\n        x0 = x1;\n      }\n\n      if (y1 - 1 >= 0) {\n        y0 = y1 - 1;\n      } else {\n        y0 = y1;\n      }\n\n      if (x1 + 1 >= oldWidth) {\n        x2 = x1;\n      } else {\n        x2 = x1 + 1;\n      }\n\n      if (y1 + 1 >= oldWidth) {\n        y2 = y1;\n      } else {\n        y2 = y1 + 1;\n      }\n\n      oldPixelIndex00 = (y0 * oldWidth + x0) * 4;\n      oldPixelIndex01 = (y0 * oldWidth + x1) * 4;\n      oldPixelIndex02 = (y0 * oldWidth + x2) * 4;\n      oldPixelIndex10 = (y1 * oldWidth + x0) * 4;\n      oldPixelIndex11 = (y1 * oldWidth + x1) * 4;\n      oldPixelIndex12 = (y1 * oldWidth + x2) * 4;\n      oldPixelIndex20 = (y2 * oldWidth + x0) * 4;\n      oldPixelIndex21 = (y2 * oldWidth + x1) * 4;\n      oldPixelIndex22 = (y2 * oldWidth + x2) * 4;\n\n      newPixelIndex = (i * newWidth + j) * 4;\n\n      newImageData.data[newPixelIndex] = interpolateNormalize(\n        interpolate(\n          oldImageData.data[oldPixelIndex00],\n          oldImageData.data[oldPixelIndex01],\n          oldImageData.data[oldPixelIndex02],\n          dx\n        ),\n        interpolate(\n          oldImageData.data[oldPixelIndex10],\n          oldImageData.data[oldPixelIndex11],\n          oldImageData.data[oldPixelIndex12],\n          dx\n        ),\n        interpolate(\n          oldImageData.data[oldPixelIndex20],\n          oldImageData.data[oldPixelIndex21],\n          oldImageData.data[oldPixelIndex22],\n          dx\n        ),\n        dy\n      );\n\n      newImageData.data[newPixelIndex + 1] = interpolateNormalize(\n        interpolate(\n          oldImageData.data[oldPixelIndex00 + 1],\n          oldImageData.data[oldPixelIndex01 + 1],\n          oldImageData.data[oldPixelIndex02 + 1],\n          dx\n        ),\n        interpolate(\n          oldImageData.data[oldPixelIndex10 + 1],\n          oldImageData.data[oldPixelIndex11 + 1],\n          oldImageData.data[oldPixelIndex12 + 1],\n          dx\n        ),\n        interpolate(\n          oldImageData.data[oldPixelIndex20 + 1],\n          oldImageData.data[oldPixelIndex21 + 1],\n          oldImageData.data[oldPixelIndex22 + 1],\n          dx\n        ),\n        dy\n      );\n\n      newImageData.data[newPixelIndex + 2] = interpolateNormalize(\n        interpolate(\n          oldImageData.data[oldPixelIndex00 + 2],\n          oldImageData.data[oldPixelIndex01 + 2],\n          oldImageData.data[oldPixelIndex02 + 2],\n          dx\n        ),\n        interpolate(\n          oldImageData.data[oldPixelIndex10 + 2],\n          oldImageData.data[oldPixelIndex11 + 2],\n          oldImageData.data[oldPixelIndex12 + 2],\n          dx\n        ),\n        interpolate(\n          oldImageData.data[oldPixelIndex20 + 2],\n          oldImageData.data[oldPixelIndex21 + 2],\n          oldImageData.data[oldPixelIndex22 + 2],\n          dx\n        ),\n        dy\n      );\n\n      newImageData.data[newPixelIndex + 3] = interpolateNormalize(\n        interpolate(\n          oldImageData.data[oldPixelIndex00 + 3],\n          oldImageData.data[oldPixelIndex01 + 3],\n          oldImageData.data[oldPixelIndex02 + 3],\n          dx\n        ),\n        interpolate(\n          oldImageData.data[oldPixelIndex10 + 3],\n          oldImageData.data[oldPixelIndex11 + 3],\n          oldImageData.data[oldPixelIndex12 + 3],\n          dx\n        ),\n        interpolate(\n          oldImageData.data[oldPixelIndex20 + 3],\n          oldImageData.data[oldPixelIndex21 + 3],\n          oldImageData.data[oldPixelIndex22 + 3],\n          dx\n        ),\n        dy\n      );\n    }\n  }\n\n  return newImageData;\n}\n","module.exports = require(\"canvas\");","module.exports = require(\"fs\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import Project from \"./classes/Project\";\nimport Image from \"./classes/Image\";\n\nexport { Project, Image };\n"],"names":["CanvasWrapper","resizeNearestNeighbour","resizeBilinearInterpolation","resizeBiquadraticInterpolation","BaseOnLayerObject","width","height","value","imageData","canvas","getContext","getImageData","getWidth","getHeight","newWidth","newHeight","mode","oldImageData","newImageData","createImageData","destroy","setWidth","setHeight","setImageData","isBrowser","initialize","require","createCanvas","document","createElement","style","position","left","top","body","appendChild","setAttribute","context","type","toDataURL","removeChild","GrayScale","Sepia","Contrast","Brightness","Diffusion","Dither","Exposure","Gain","Gamma","HSBAdjust","InvertAlpha","Invert","Levels","Rescale","Solarize","Threshold","Tritone","Dissolve","Edge","ChannelMix","AutoContrast","Diffuse","Kaleidoscope","Marble","Pinch","Ripple","Shear","Sphere","Swim","Twirl","Water","Circle","Rotate","Offset","Polar","Perspective","AutoWhiteBalance","FillColor","Flip","Block","Border","Emboss","ComponentStretching","availableEffects","add","_class","getName","EffectsRepository","name","Image","image","window","url","callback","load","clientWidth","clientHeight","drawImage","call","onload","src","fs","readFileSync","LayerObject","mergeImageData","mergePixelCallback","Layer","parameters","background_color","blendingMode","applyEffect","color","obj","x","y","put","objects","push","i","length","layerObject","getX","getY","exportObject","effects","effect","run","params","get","resize","startX","startY","crop","moveX","moveY","cropImageData","layer","opts","setX","setY","isLayerResize","oldWidth","oldHeight","ratioX","ratioY","moveXY","getObject","object","result","setXY","Project","Date","layers","end","getTime","startTime","path","imageType","Error","exportLayer","getParameter","putImageData","img","data","replace","buff","Buffer","writeFileSync","exportedImage","BaseEffect","BaseCustomEffect","pixel","getDefaultParameters","imageDataCopy","Uint8ClampedArray","getIndex","normalizePixelValue","Math","min","max","sandbox","getPixel","index","r","g","b","a","getOriginalPixelByIndex","getOriginalPixel","setPixel","rgba","setPixelByIndex","before","set","BasePointEffect","firstPixelIndex","BaseTransformEffect","newXY","newX","newY","oldPixelIndex","newPixelIndex","RGBtoCIELab","CIELabToRGB","AutoWhiteBalanceEffect","intensity","sumA","sumB","lab","avgSumA","avgSumB","aDelta","bDelta","l","BlockEffect","blockSize","w","h","t","by","bx","BorderEffect","leftBorder","rightBorder","topBorder","bottomBorder","borderColor","ComponentStretchingEffect","minR","Infinity","minG","minB","maxR","maxG","maxB","remap","brightness","EmbossEffect","azimuth","PI","elevation","width45","emboss","bumpMapWidth","bumpPixels","Nx","Ny","Nz","Lx","Ly","Lz","Nz2","NzLz","NdotL","s1","s2","s3","shade","background","pixelScale","bumpIndex","cos","sin","sqrt","hexToRGB","FillColorEffect","FlipEffect","operation","newW","newH","newRow","newCol","AutoContrastEffect","BrightnessEffect","ChannelMixEffect","blueGreen","redBlue","greenRed","intoR","intoG","intoB","ContrastEffect","factor","contrast","DiffusionEffect","map","div","sum","matrix","levels","colorDither","granulate","red1","green1","blue1","red2","green2","blue2","tmpPixel","tmpRed","tmpGreen","tmpBlue","j","iy","jx","grayScale","smoothStep","DissolveEffect","minDensity","maxDensity","density","softness","d","v","random","f","DitherEffect","matrices","ditherMagic4x4Matrix","ditherOrdered4x4Matrix","ditherLines4x4Matrix","dither90Halftone6x6Matrix","ditherOrdered6x6Matrix","ditherOrdered8x8Matrix","ditherCluster3Matrix","ditherCluster4Matrix","ditherCluster8Matrix","rows","cols","mod","col","row","red","green","blue","EdgeEffect","hEdgeMatrix","vEdgeMatrix","matrixes","robertsV","robertsH","prewittV","prewittH","sobelV","sobelH","freiChenV","freiChenH","rh","gh","bh","rv","gv","bv","ix","mOffset","pixel2","floor","ExposureEffect","exposure","exp","GainEffect","gain","bias","GammaEffect","table","gammaRed","gammaGreen","gammaBlue","pow","GrayScaleEffect","newRGB","RGBtoHSB","HSBtoRGB","HSBAdjustEffect","s","hsb","InvertEffect","InvertAlphaEffect","LevelsEffect","lut","low","high","lowOutput","highOutput","Histogram","offset","stride","histogram","Array","minValue","maxValue","minFrequency","maxFrequency","mean","numSamples","isGray","RED","GREEN","BLUE","GRAY","getNumSamples","getFrequency","channel","getMinFrequency","getMaxFrequency","getMinValue","getMaxValue","getMeanValue","RescaleEffect","scale","sepiaValue","tmp","SolarizeEffect","ThresholdEffect","grayscale","mixColors","TritoneEffect","shadowColor","midColor","highColor","CircleEffect","icentreX","radius","angle","spreadAngle","centreX","centreY","icentreY","dx","dy","theta","atan2","DiffuseEffect","sinTable","cosTable","distance","triangle","KaleidoscopeEffect","angle2","sides","c","radiusC","noiseHelper","MarbleEffect","displacementMap","xScale","yScale","amount","turbulence","noise2","displacement","RotateEffect","xOffset","yOffset","wrap","PerspectiveEffect","A","B","C","D","E","F","G","H","I","x0","y0","x1","y1","x2","y2","x3","y3","unitSquareToQuad","a11","a21","a31","a12","a22","a32","a13","a23","a33","dx1","dy1","dx2","dy2","dx3","dy3","PinchEffect","radius2","e","PolarEffect","sqr","theta2","m","xMax","yMax","nx","ny","xmax","ymax","atan","abs","tan","noise","RippleEffect","xAmplitude","yAmplitute","xWaveLength","yWaveLength","waveType","fx","fy","noise1","ShearEffect","shx","shy","xAngle","yAngle","SphereEffect","a2","b2","refractionIndex","rRefraction","z","z2","acos","angle1","asin","ret","SwimEffect","m00","m01","m10","m11","time","stretch","noise3","turbulence3","TwirlEffect","iCentreX","iCentreY","WaterEffect","waveLength","amplitude","phase","distance2","hue","saturation","cmax","cmin","redc","greenc","bluec","p","q","parseInt","rgb1","rgb2","hex","_hex","RGBtoHex","bin","join","toString","toUpperCase","RGBtoXYZ","let_R","let_G","let_B","xyz","let_X","let_Y","let_Z","CIELabToXYZ","blendingModes","lighten","bottomPixel","topPixel","darken","multiply","average","subtract","difference","negation","screen","exclusion","overlay","softLight","hardLight","colorDodge","colorBurn","linearDodge","linearBurn","linearLight","vividLight","pinLight","hardMix","reflect","glow","phoenix","bottom","pixelCallback","xx","yy","firstOldPixelIndex","firstNewPixelIndex","pixelResult","mergedR","mergedG","mergedB","mergedA","rootA","outA","rootR","rootG","rootB","n","isInit","init","BM","N","P","G1","G2","G3","k","normalize2","normalize3","arr","sCurve","lerp","bx0","bx1","rx0","rx1","sx","u","by0","by1","b00","b10","b01","b11","ry0","ry1","sy","bz0","bz1","rz0","rz1","sz","octaves","oldPixelIndex00","oldPixelIndex01","oldPixelIndex10","oldPixelIndex11","interpolate","f1","f2","f3","interpolateNormalize","oldPixelIndex02","oldPixelIndex12","oldPixelIndex20","oldPixelIndex21","oldPixelIndex22"],"sourceRoot":""}