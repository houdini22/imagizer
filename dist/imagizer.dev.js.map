{"version":3,"file":"imagizer.dev.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;;IAMMI;;;;uCAC6B;;oCAEC;;mCAER;;oCAEC;;;;;WAE3B,oBAAmB;AACjB,aAAO,KAAKC,KAAZ;AACD;;;WAED,qBAAoB;AAClB,aAAO,KAAKC,MAAZ;AACD;;;WAED,kBAASC,KAAT,EAA2C;AACzC,WAAKF,KAAL,GAAaE,KAAb;AACA,aAAO,IAAP;AACD;;;WAED,mBAAUA,KAAV,EAA4C;AAC1C,WAAKD,MAAL,GAAcC,KAAd;AACA,aAAO,IAAP;AACD;;;WAED,wBAA0B;AACxB,UAAI,CAAC,KAAKC,SAAV,EAAqB;AACnB,aAAKA,SAAL,GAAiB,KAAKC,MAAL,CACdC,UADc,GAEdC,YAFc,CAED,CAFC,EAEE,CAFF,EAEK,KAAKC,QAAL,EAFL,EAEsB,KAAKC,SAAL,EAFtB,CAAjB;AAGD;;AACD,aAAO,KAAKL,SAAZ;AACD;;;WAED,sBAAaD,KAAb,EAAkD;AAChD,WAAKC,SAAL,GAAiBD,KAAjB;AACA,aAAO,IAAP;AACD;;;WAED,gBACEO,QADF,EAEEC,SAFF,EAIqB;AAAA,UADnBC,IACmB,uEADJ,mBACI;AACnB,UAAMC,YAAY,GAAG,KAAKN,YAAL,EAArB;AAAA,UACEF,MAAM,GAAG,IAAIT,sDAAJ,CAAkBc,QAAlB,EAA4BC,SAA5B,CADX;AAEA,UAAIG,YAAY,GAAGT,MAAM,CAACC,UAAP,GAAoBS,eAApB,CAAoCL,QAApC,EAA8CC,SAA9C,CAAnB;;AAEA,cAAQC,IAAR;AACE,aAAK,mBAAL;AACEE,UAAAA,YAAY,GAAGjB,uEAAsB,CACnCgB,YADmC,EAEnCC,YAFmC,EAGnCJ,QAHmC,EAInCC,SAJmC,CAArC;AAMA;;AAEF,aAAK,wBAAL;AACEG,UAAAA,YAAY,GAAGhB,4EAA2B,CACxCe,YADwC,EAExCC,YAFwC,EAGxCJ,QAHwC,EAIxCC,SAJwC,CAA1C;AAMA;;AAEF,aAAK,2BAAL;AACEG,UAAAA,YAAY,GAAGf,+EAA8B,CAC3Cc,YAD2C,EAE3CC,YAF2C,EAG3CJ,QAH2C,EAI3CC,SAJ2C,CAA7C;AAMA;;AAEF;AACEN,UAAAA,MAAM,CAACW,OAAP;AACA,iBAAO,IAAP;AA9BJ;;AAiCAX,MAAAA,MAAM,CAACW,OAAP;AAEA,aAAO,KAAKC,QAAL,CAAcP,QAAd,EACJQ,SADI,CACMP,SADN,EAEJQ,YAFI,CAESL,YAFT,CAAP;AAGD;;;;;;AAGH,iEAAed,iBAAf;;;;;;;;;;;;;;;;;;;;;;;AClGA;;IAGMJ;AAUJ,yBAAYK,KAAZ,EAA2BC,MAA3B,EAA2C;AAAA;;AAAA,oCATI,IASJ;;AAAA,qCANzC,IAMyC;;AAAA,mCAJjB,CAIiB;;AAAA,oCAFhB,CAEgB;;AACzC,SAAKmB,UAAL,CAAgBpB,KAAhB,EAAuBC,MAAvB;AACD;;;;WAED,sBAAwD;AAAA,UAA7CD,KAA6C,uEAA7B,CAA6B;AAAA,UAA1BC,MAA0B,uEAAT,CAAS;;AACtD,UAAI,CAACkB,0DAAS,EAAd,EAAkB;AAChB,uBAAyBE,mBAAO,CAAC,sBAAD,CAAhC;AAAA,YAAQC,YAAR,YAAQA,YAAR;;AACA,aAAKlB,MAAL,GAAckB,YAAY,CAACtB,KAAD,EAAQC,MAAR,CAA1B;AACD,OAHD,MAGO;AACL,aAAKG,MAAL,GAAcmB,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAd,CADK,CAGL;;AACA,aAAKpB,MAAL,CAAYqB,KAAZ,CAAkBC,QAAlB,GAA6B,UAA7B;AACA,aAAKtB,MAAL,CAAYqB,KAAZ,CAAkBE,IAAlB,GAAyB,UAAzB;AACA,aAAKvB,MAAL,CAAYqB,KAAZ,CAAkBG,GAAlB,GAAwB,UAAxB;AAEA,aAAKZ,QAAL,CAAchB,KAAd;AACA,aAAKiB,SAAL,CAAehB,MAAf;AAEAsB,QAAAA,QAAQ,CAACM,IAAT,CAAcC,WAAd,CAA0B,KAAK1B,MAA/B;AACD;AACF;;;WAED,kBAASF,KAAT,EAAuC;AACrC,WAAKE,MAAL,CAAY2B,YAAZ,CAAyB,OAAzB,EAAkC,KAAK7B,KAAvC;AACA,WAAKF,KAAL,GAAaE,KAAb;AACA,aAAO,IAAP;AACD;;;WAED,mBAAUA,KAAV,EAAwC;AACtC,WAAKE,MAAL,CAAY2B,YAAZ,CAAyB,QAAzB,EAAmC,KAAK7B,KAAxC;AACA,WAAKD,MAAL,GAAcC,KAAd;AACA,aAAO,IAAP;AACD;;;WAED,sBAAsE;AACpE,UAAI,CAAC,KAAK8B,OAAV,EAAmB;AACjB,aAAKA,OAAL,GAAe,KAAK5B,MAAL,CAAYC,UAAZ,CAAuB,IAAvB,CAAf;AACD;;AACD,aAAO,KAAK2B,OAAZ;AACD;;;WAED,qBAAwC;AACtC,aAAO,KAAK5B,MAAZ;AACD;;;WAED,qBAA8C;AAAA,UAApC6B,IAAoC,uEAArB,WAAqB;AAC5C,aAAO,KAAK7B,MAAL,CAAY8B,SAAZ,CAAsBD,IAAtB,CAAP;AACD;;;WAED,mBAAgB;AACd,UAAId,0DAAS,EAAb,EAAiB;AACfI,QAAAA,QAAQ,CAACM,IAAT,CAAcM,WAAd,CAA0B,KAAK/B,MAA/B;AACD;;AACD,WAAKA,MAAL,GAAc,IAAd;AACA,WAAK4B,OAAL,GAAe,IAAf;AACD;;;;;;AAGH,iEAAerC,aAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAMoF,gBAAgB,GAAG,EAAzB;;AAEA,SAASC,GAAT,CAAaC,MAAb,EAAqB;AACnB,MAAIF,gBAAgB,CAACE,MAAM,CAACC,OAAP,EAAD,CAApB,EAAwC;AACtC,4BAAiBD,MAAM,CAACC,OAAP,EAAjB;AACD;;AACDH,EAAAA,gBAAgB,CAACE,MAAM,CAACC,OAAP,EAAD,CAAhB,GAAqCD,MAArC;AACD;;AAEDD,GAAG,CAAC5C,gEAAD,CAAH;AACA4C,GAAG,CAAC3C,4DAAD,CAAH;AACA2C,GAAG,CAAC1C,+DAAD,CAAH;AACA0C,GAAG,CAACzC,iEAAD,CAAH;AACAyC,GAAG,CAACxC,gEAAD,CAAH;AACAwC,GAAG,CAACvC,6DAAD,CAAH;AACAuC,GAAG,CAACtC,+DAAD,CAAH;AACAsC,GAAG,CAACrC,2DAAD,CAAH;AACAqC,GAAG,CAACpC,4DAAD,CAAH;AACAoC,GAAG,CAACnC,gEAAD,CAAH;AACAmC,GAAG,CAAClC,mEAAD,CAAH;AACAkC,GAAG,CAACjC,8DAAD,CAAH;AACAiC,GAAG,CAAChC,8DAAD,CAAH;AACAgC,GAAG,CAAC/B,+DAAD,CAAH;AACA+B,GAAG,CAAC9B,gEAAD,CAAH;AACA8B,GAAG,CAAC7B,iEAAD,CAAH;AACA6B,GAAG,CAAC5B,+DAAD,CAAH;AACA4B,GAAG,CAACvB,mEAAD,CAAH;AACAuB,GAAG,CAAC3B,gEAAD,CAAH;AACA2B,GAAG,CAACtB,wEAAD,CAAH;AACAsB,GAAG,CAACrB,kEAAD,CAAH;AACAqB,GAAG,CAACpB,iEAAD,CAAH;AACAoB,GAAG,CAACnB,kEAAD,CAAH;AACAmB,GAAG,CAAClB,iEAAD,CAAH;AACAkB,GAAG,CAACjB,kEAAD,CAAH;AACAiB,GAAG,CAAChB,gEAAD,CAAH;AACAgB,GAAG,CAACf,iEAAD,CAAH;AACAe,GAAG,CAACd,iEAAD,CAAH;AACAc,GAAG,CAAC1B,4DAAD,CAAH;AACA0B,GAAG,CAACzB,kEAAD,CAAH;AACAyB,GAAG,CAACb,kEAAD,CAAH;AACAa,GAAG,CAACZ,kEAAD,CAAH;AACAY,GAAG,CAACX,kEAAD,CAAH;AACAW,GAAG,CAACV,iEAAD,CAAH;AACAU,GAAG,CAACT,uEAAD,CAAH;AACAS,GAAG,CAACxB,oEAAD,CAAH;AACAwB,GAAG,CAACR,yEAAD,CAAH;AACAQ,GAAG,CAACP,kEAAD,CAAH;AACAO,GAAG,CAACN,6DAAD,CAAH;AACAM,GAAG,CAACL,8DAAD,CAAH;AACAK,GAAG,CAACJ,+DAAD,CAAH;AACAI,GAAG,CAACH,+DAAD,CAAH;AACAG,GAAG,CAACF,4EAAD,CAAH;;IAEMK;;;;;;;WACJ,aAAWC,IAAX,EAAiB;AACf,aAAOL,gBAAgB,CAACK,IAAD,CAAvB;AACD;;;;;;AAGH,iEAAeD,iBAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzGA;AACA;AACA;;IAGME;;;;;AAKJ,mBAAc;AAAA;;AAAA;;AACZ;;AADY,0DAJU,IAIV;;AAAA,4DAFkC,IAElC;;AAGZ,QAAI,CAAClE,0DAAS,EAAd,EAAkB;AAChB,UAAMf,MAAM,GAAGiB,mBAAO,CAAC,sBAAD,CAAtB;;AACA,YAAKiE,KAAL,GAAa,IAAIlF,MAAM,CAACiF,KAAX,EAAb;AACD,KAHD,MAGO;AACL,YAAKC,KAAL,GAAa,IAAIC,MAAM,CAACF,KAAX,EAAb,CADK,CAGL;;AACA,YAAKC,KAAL,CAAW7D,KAAX,CAAiBC,QAAjB,GAA4B,UAA5B;AACA,YAAK4D,KAAL,CAAW7D,KAAX,CAAiBE,IAAjB,GAAwB,UAAxB;AACA,YAAK2D,KAAL,CAAW7D,KAAX,CAAiBG,GAAjB,GAAuB,UAAvB;AACD;;AAbW;AAcb;;;;WAED,cAAK4D,GAAL,EAAkBC,QAAlB,EAA8C;AAAA;;AAC5C,UAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACjB,cAAI,CAAC1E,QAAL,CAAc,CAACG,0DAAS,EAAV,GAAe,MAAI,CAACmE,KAAL,CAAWtF,KAA1B,GAAkC,MAAI,CAACsF,KAAL,CAAWK,WAA3D;;AACA,cAAI,CAAC1E,SAAL,CACE,CAACE,0DAAS,EAAV,GAAe,MAAI,CAACmE,KAAL,CAAWrF,MAA1B,GAAmC,MAAI,CAACqF,KAAL,CAAWM,YADhD,EAFiB,CAMjB;;;AACA,cAAI,CAACxF,MAAL,GAAc,IAAIT,sDAAJ,CAAkB,MAAI,CAACY,QAAL,EAAlB,EAAmC,MAAI,CAACC,SAAL,EAAnC,CAAd;;AACA,cAAI,CAACJ,MAAL,CACGC,UADH,GAEGwF,SAFH,CAEa,MAAI,CAACP,KAFlB,EAEyB,CAFzB,EAE4B,CAF5B,EAE+B,MAAI,CAAC/E,QAAL,EAF/B,EAEgD,MAAI,CAACC,SAAL,EAFhD;;AAIA,YAAIW,0DAAS,EAAb,EAAiB;AACfI,UAAAA,QAAQ,CAACM,IAAT,CAAcM,WAAd,CAA0B,MAAI,CAACmD,KAA/B;AACD;;AAED,YAAI,OAAOG,QAAP,KAAoB,UAAxB,EAAoC;AAClCA,UAAAA,QAAQ,CAACK,IAAT,CAAc,MAAd;AACD;AACF,OAnBD;;AAqBA,WAAKN,GAAL,GAAWA,GAAX;;AAEA,UAAIrE,0DAAS,EAAb,EAAiB;AACfI,QAAAA,QAAQ,CAACM,IAAT,CAAcC,WAAd,CAA0B,KAAKwD,KAA/B;;AACA,aAAKA,KAAL,CAAWS,MAAX,GAAoB,YAAY;AAC9BL,UAAAA,IAAI;AACL,SAFD;;AAGA,aAAKJ,KAAL,CAAWU,GAAX,GAAiBR,GAAjB;AACD,OAND,MAMO;AACL,YAAMS,EAAE,GAAG5E,mBAAO,CAAC,cAAD,CAAlB;;AACA,aAAKiE,KAAL,CAAWU,GAAX,GAAiBC,EAAE,CAACC,YAAH,CAAgBV,GAAhB,CAAjB;AACAE,QAAAA,IAAI;AACL;AACF;;;;EAxDiB3F;;AA2DpB,iEAAesF,KAAf;;;;;;;;;;;;;;;;;;;;;;;;;;AChEA;AACA;AACA;AACA;;IASMiB;AAyBJ,iBACEtG,KADF,EAEEC,MAFF,EAUE;AAAA,QAPAsG,UAOA,uEAJI;AACFC,MAAAA,eAAe,EAAE,EADf;AAEFC,MAAAA,YAAY,EAAE;AAFZ,KAIJ;;AAAA;;AAAA,qCAlCiC,EAkCjC;;AAAA,qCAhCgC,EAgChC;;AAAA,+BA9BoB,CA8BpB;;AAAA,+BA5BoB,CA4BpB;;AAAA,oCA1BgC,IA0BhC;;AAAA,uCAxB+B,IAwB/B;;AAAA,mCAtBwB,CAsBxB;;AAAA,oCApByB,CAoBzB;;AAAA,wCAfE;AACFD,MAAAA,eAAe,EAAE,EADf;AAEFC,MAAAA,YAAY,EAAE;AAFZ,KAeF;;AACA,SAAKrF,UAAL,CAAgBpB,KAAhB,EAAuBC,MAAvB,EAA+BsG,UAA/B;;AAEA,QACEA,UAAU,CAACC,eAAX,IACAD,UAAU,CAACC,eAAX,KAA+B,aAFjC,EAGE;AACA,WAAKE,WAAL,CAAiB,YAAjB,EAA+B;AAC7BC,QAAAA,KAAK,EAAEJ,UAAU,CAACC;AADW,OAA/B;AAGD;AACF;;;;WAED,oBAAWxG,KAAX,EAA0BC,MAA1B,EAA0CsG,UAA1C,EAA4D;AAC1D,WAAKnG,MAAL,GAAc,IAAIT,sDAAJ,CAAkBK,KAAlB,EAAyBC,MAAzB,CAAd;AACA,WAAKE,SAAL,GAAiB,KAAKC,MAAL,CAAYC,UAAZ,GAAyBS,eAAzB,CAAyCd,KAAzC,EAAgDC,MAAhD,CAAjB;AACA,WAAKD,KAAL,GAAaA,KAAb;AACA,WAAKC,MAAL,GAAcA,MAAd;AACA,WAAKsG,UAAL,GAAkBA,UAAlB;AACD;;;WAED,aAAIK,GAAJ,EAAcC,CAAd,EAAyBC,CAAzB,EAAiD;AAC/C,UAAMC,GAAG,GAAG,IAAIZ,oDAAJ,CAAgBS,GAAhB,EAAqB,IAArB,EAA2BC,CAA3B,EAA8BC,CAA9B,EAAiC,EAAjC,CAAZ;AACA,WAAKE,OAAL,CAAaC,IAAb,CAAkBF,GAAlB;AACA,aAAOA,GAAP;AACD;;;WAED,uBAAyB;AACvB,WAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKF,OAAL,CAAaG,MAAjC,EAAyCD,CAAC,IAAI,CAA9C,EAAiD;AAC/C,YAAME,WAAW,GAAG,KAAKJ,OAAL,CAAaE,CAAb,CAApB;AACA,aAAK/G,SAAL,GAAiBiG,+DAAc,CAC7B;AACEpG,UAAAA,KAAK,EAAE,KAAKA,KADd;AAEEC,UAAAA,MAAM,EAAE,KAAKA,MAFf;AAGEE,UAAAA,SAAS,EAAE,KAAKA;AAHlB,SAD6B,EAM7B;AACE0G,UAAAA,CAAC,EAAEO,WAAW,CAACC,IAAZ,EADL;AAEEP,UAAAA,CAAC,EAAEM,WAAW,CAACE,IAAZ,EAFL;AAGEtH,UAAAA,KAAK,EAAEoH,WAAW,CAAC7G,QAAZ,EAHT;AAIEN,UAAAA,MAAM,EAAEmH,WAAW,CAAC5G,SAAZ,EAJV;AAKEL,UAAAA,SAAS,EAAEiH,WAAW,CAACG,YAAZ;AALb,SAN6B,EAa7BlB,+DAb6B,CAA/B;AAeD;;AAED,WAAK,IAAIa,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAG,KAAKM,OAAL,CAAaL,MAAjC,EAAyCD,EAAC,EAA1C,EAA8C;AAC5C,aAAK/G,SAAL,GAAiB,KAAKqH,OAAL,CAAaN,EAAb,EAAgBO,MAAhB,CAAuBC,GAAvB,CACf,KAAKvH,SADU,EAEf,KAAKqH,OAAL,CAAaN,EAAb,EAAgBX,UAFD,CAAjB;AAID;;AAED,aAAO,KAAKpG,SAAZ;AACD;;;WAED,qBAAYiF,IAAZ,EAA0BmB,UAA1B,EAAqD;AACnD,WAAKiB,OAAL,CAAaP,IAAb,CAAkB;AAChB7B,QAAAA,IAAI,EAAJA,IADgB;AAEhBqC,QAAAA,MAAM,EAAE,KAAKtC,8DAAA,CAAsBC,IAAtB,CAAL,GAFQ;AAGhBmB,QAAAA,UAAU,EAAVA;AAHgB,OAAlB;AAKA,aAAO,IAAP;AACD;;;WAED,gBAAO9F,QAAP,EAAyBC,SAAzB,EAA4CC,IAA5C,EAAiE;AAC/D,WAAKP,MAAL,CAAYW,OAAZ;AACA,WAAKX,MAAL,GAAc,IAAd;AACA,WAAKD,SAAL,GAAiB,IAAjB;;AAEA,UAAI,OAAOO,SAAP,KAAqB,WAAzB,EAAsC;AACpC,aAAKU,UAAL,CAAgB,KAAKpB,KAAL,GAAaS,QAA7B,EAAuC,KAAKR,MAAL,GAAcQ,QAArD,EAA+D,KAAK8F,UAApE;AACD,OAFD,MAEO;AACL,aAAKnF,UAAL,CAAgBX,QAAhB,EAA0BC,SAA1B,EAAqC,KAAK6F,UAA1C;AACD;;AAED,WAAK,IAAIW,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKF,OAAL,CAAaG,MAAjC,EAAyCD,CAAC,IAAI,CAA9C,EAAiD;AAC/C,aAAKF,OAAL,CAAaE,CAAb,EAAgBU,MAAhB,CAAuBnH,QAAvB,EAAiCC,SAAjC,EAA4CC,IAA5C,EAAkD,IAAlD;AACD;;AAED,aAAO,IAAP;AACD;;;WAED,cAAKkH,MAAL,EAAqBC,MAArB,EAAqC9H,KAArC,EAAoDC,MAApD,EAA2E;AACzE,WAAK,IAAIiH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKF,OAAL,CAAaG,MAAjC,EAAyCD,CAAC,IAAI,CAA9C,EAAiD;AAC/C,aAAKF,OAAL,CAAaE,CAAb,EAAgBa,IAAhB,CAAqBF,MAArB,EAA6BC,MAA7B,EAAqC9H,KAArC,EAA4CC,MAA5C;AACD;;AAED,aAAO,IAAP;AACD;;;WAED,gBAAO4G,CAAP,EAAkBC,CAAlB,EAAoC;AAClC,WAAKkB,KAAL,CAAWnB,CAAX;AACA,WAAKoB,KAAL,CAAWnB,CAAX;AACA,aAAO,IAAP;AACD;;;WAED,eAAMD,CAAN,EAAwB;AACtB,WAAKA,CAAL,IAAUA,CAAC,GAAG,CAAd;AACA,aAAO,IAAP;AACD;;;WAED,eAAMC,CAAN,EAAwB;AACtB,WAAKA,CAAL,IAAUA,CAAC,GAAG,CAAd;AACA,aAAO,IAAP;AACD;;;WAED,cAAKD,CAAL,EAAuB;AACrB,WAAKA,CAAL,GAASA,CAAT;AACA,aAAO,IAAP;AACD;;;WAED,cAAKC,CAAL,EAAuB;AACrB,WAAKA,CAAL,GAASA,CAAT;AACA,aAAO,IAAP;AACD;;;WAED,yBAAgBL,YAAhB,EAA6C;AAC3C,WAAKF,UAAL,CAAgBE,YAAhB,GAA+BA,YAA/B;AACA,aAAO,IAAP;AACD;;;WAED,gBAAe;AACb,aAAO,KAAKI,CAAZ;AACD;;;WAED,gBAAe;AACb,aAAO,KAAKC,CAAZ;AACD;;;WAED,oBAAmB;AACjB,aAAO,KAAK9G,KAAZ;AACD;;;WAED,qBAAoB;AAClB,aAAO,KAAKC,MAAZ;AACD;;;WAED,sBAAamF,IAAb,EAAgC;AAC9B,aAAO,KAAKmB,UAAL,CAAgBnB,IAAhB,CAAP;AACD;;;;;;AAGH,iEAAekB,KAAf;;;;;;;;;;;;;;;;;;;;;;;;;AC/LA;AACA;AACA;;IAWMH;AAaJ,uBACES,GADF,EAEEuB,KAFF,EAGEtB,CAHF,EAIEC,CAJF,EAKEsB,IALF,EAME;AAAA;;AAAA,iCAlBiC,IAkBjC;;AAAA,mCAhBuB,IAgBvB;;AAAA,+BAdoB,CAcpB;;AAAA,+BAZoB,CAYpB;;AAAA,kCAVuB,EAUvB;;AAAA,qCARgC,EAQhC;;AACA,SAAKxB,GAAL,GAAWA,GAAX;AACA,SAAKuB,KAAL,GAAaA,KAAb;AACA,SAAKtB,CAAL,GAASA,CAAT;AACA,SAAKC,CAAL,GAASA,CAAT;AACA,SAAKsB,IAAL,GAAYA,IAAZ;AACD;;;;WAED,qBAA+B;AAC7B,aAAO,KAAKxB,GAAZ;AACD;;;WAED,gBAAe;AACb,aAAO,KAAKC,CAAZ;AACD;;;WAED,gBAAe;AACb,aAAO,KAAKC,CAAZ;AACD;;;WAED,oBAAmB;AACjB,aAAO,KAAKF,GAAL,CAASrG,QAAT,EAAP;AACD;;;WAED,qBAAoB;AAClB,aAAO,KAAKqG,GAAL,CAASpG,SAAT,EAAP;AACD;;;WAED,wBAA0B;AACxB,UAAIL,SAAS,GAAG,KAAKyG,GAAL,CAAStG,YAAT,EAAhB;;AACA,WAAK,IAAI4G,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKM,OAAL,CAAaL,MAAjC,EAAyCD,CAAC,IAAI,CAA9C,EAAiD;AAC/C/G,QAAAA,SAAS,GAAG,KAAKqH,OAAL,CAAaN,CAAb,EAAgBO,MAAhB,CAAuBC,GAAvB,CACVvH,SADU,EAEV,KAAKqH,OAAL,CAAaN,CAAb,EAAgBX,UAFN,CAAZ;AAID;;AACD,aAAOpG,SAAP;AACD;;;WAED,qBAAYiF,IAAZ,EAAgE;AAAA,UAAtCmB,UAAsC,uEAAjB,EAAiB;AAC9D,WAAKiB,OAAL,CAAaP,IAAb,CAAkB;AAChB7B,QAAAA,IAAI,EAAJA,IADgB;AAEhBqC,QAAAA,MAAM,EAAE,KAAKtC,8DAAA,CAAsBC,IAAtB,CAAL,GAFQ;AAGhBmB,QAAAA,UAAU,EAAVA;AAHgB,OAAlB;AAKA,aAAO,IAAP;AACD;;;WAED,gBAAOM,CAAP,EAAkBC,CAAlB,EAA0C;AACxC,WAAKkB,KAAL,CAAWnB,CAAX;AACA,WAAKoB,KAAL,CAAWnB,CAAX;AACA,aAAO,IAAP;AACD;;;WAED,eAAMD,CAAN,EAA8B;AAC5B,WAAKA,CAAL,IAAUA,CAAC,GAAG,CAAd;AACA,aAAO,IAAP;AACD;;;WAED,eAAMC,CAAN,EAA8B;AAC5B,WAAKA,CAAL,IAAUA,CAAC,GAAG,CAAd;AACA,aAAO,IAAP;AACD;;;WAED,eAAMD,CAAN,EAAiBC,CAAjB,EAAyC;AACvC,WAAKuB,IAAL,CAAUxB,CAAV;AACA,WAAKyB,IAAL,CAAUxB,CAAV;AACA,aAAO,IAAP;AACD;;;WAED,cAAKD,CAAL,EAA6B;AAC3B,WAAKA,CAAL,GAASA,CAAT;AACA,aAAO,IAAP;AACD;;;WAED,cAAKC,CAAL,EAA6B;AAC3B,WAAKA,CAAL,GAASA,CAAT;AACA,aAAO,IAAP;AACD;;;WAED,gBACErG,QADF,EAEEC,SAFF,EAGEC,IAHF,EAIE4H,aAJF,EAKe;AACb,UAAMC,QAAQ,GAAG,KAAKjI,QAAL,EAAjB;AAAA,UACEkI,SAAS,GAAG,KAAKjI,SAAL,EADd;AAAA,UAEEkI,MAAM,GAAGjI,QAAQ,GAAG+H,QAFtB;AAAA,UAGEG,MAAM,GAAGjI,SAAS,GAAG+H,SAHvB;;AAKA,UAAIF,aAAJ,EAAmB;AACjB,aAAKK,MAAL,CAAY,CAAC,KAAKvB,IAAL,EAAD,GAAeqB,MAA3B,EAAmC,CAAC,KAAKpB,IAAL,EAAD,GAAeqB,MAAlD;AACD;;AAED,UAAI,OAAOjI,SAAP,KAAqB,WAAzB,EAAsC;AACpC,aAAKmI,SAAL,GAAiBjB,MAAjB,CAAwBY,QAAQ,GAAG/H,QAAnC,EAA6CgI,SAAS,GAAGhI,QAAzD,EAAmEE,IAAnE;AACD,OAFD,MAEO;AACL,aAAKkI,SAAL,GAAiBjB,MAAjB,CAAwBnH,QAAxB,EAAkCC,SAAlC,EAA6CC,IAA7C;AACD;;AAED,aAAO,IAAP;AACD;;;WAED,cACEkH,MADF,EAEEC,MAFF,EAGE9H,KAHF,EAIEC,MAJF,EAKe;AACb,UAAM6I,MAAM,GAAG,KAAKD,SAAL,EAAf;AAAA,UACEjI,YAAY,GAAGkI,MAAM,CAACxI,YAAP,EADjB;AAAA,UAEEF,MAAM,GAAG,IAAIT,sDAAJ,CAAkBK,KAAlB,EAAyBC,MAAzB,CAFX;AAAA,UAGEY,YAAY,GAAGT,MAAM,CAACC,UAAP,GAAoBS,eAApB,CAAoCd,KAApC,EAA2CC,MAA3C,CAHjB;AAAA,UAIE8I,MAAM,GAAGb,8DAAa,CACpBtH,YADoB,EAEpBC,YAFoB,EAGpBgH,MAHoB,EAIpBC,MAJoB,EAKpB9H,KALoB,EAMpBC,MANoB,CAJxB;AAaA6I,MAAAA,MAAM,CAAC5H,YAAP,CAAoB6H,MAApB,EAA4B/H,QAA5B,CAAqChB,KAArC,EAA4CiB,SAA5C,CAAsDhB,MAAtD;AAEA,WAAK+I,KAAL,CAAWnB,MAAX,EAAmBC,MAAnB;AAEA,aAAO,IAAP;AACD;;;;;;AAGH,iEAAe3B,WAAf;;;;;;;;;;;;;;;;;;;;;;;;;;ACnKA;AACA;AACA;AAKA;;IASM8C;AAiBJ,mBAAYjJ,KAAZ,EAA2BC,MAA3B,EAAoE;AAAA,QAAzBsG,UAAyB,uEAAJ,EAAI;;AAAA;;AAAA,uCAhBnC,IAgBmC;;AAAA,qCAdlC,EAckC;;AAAA,oCAZxC,EAYwC;;AAAA,uCAVxC,IAAI2C,IAAJ,EAUwC;;AAAA,wCARrC,EAQqC;;AAAA,mCAN1C,CAM0C;;AAAA,oCAJzC,CAIyC;;AAAA,oCAFlC,IAEkC;;AAClE,SAAK9H,UAAL,CAAgBpB,KAAhB,EAAuBC,MAAvB,EAA+BsG,UAA/B;AACD;;;;WAED,oBAAWvG,KAAX,EAA0BC,MAA1B,EAAyE;AAAA,UAA/BsG,UAA+B,uEAAV,EAAU;AACvE,WAAKA,UAAL,GAAkBA,UAAlB;AACA,WAAKvG,KAAL,GAAaA,KAAb;AACA,WAAKC,MAAL,GAAcA,MAAd;AACA,WAAKG,MAAL,GAAc,IAAIT,sDAAJ,CAAkBK,KAAlB,EAAyBC,MAAzB,CAAd;AACA,WAAKE,SAAL,GAAiB,KAAKC,MAAL,CAAYC,UAAZ,GAAyBC,YAAzB,CAAsC,CAAtC,EAAyC,CAAzC,EAA4CN,KAA5C,EAAmDC,MAAnD,CAAjB;AACD;;;WAED,uBAKS;AAAA,UAJPsG,UAIO,uEADH;AAAEC,QAAAA,eAAe,EAAE,EAAnB;AAAuBC,QAAAA,YAAY,EAAE;AAArC,OACG;AACP,UAAI0B,KAAK,GAAG,IAAI7B,8CAAJ,CAAU,KAAKtG,KAAf,EAAsB,KAAKC,MAA3B,EAAmCsG,UAAnC,CAAZ;AACA,WAAK4C,MAAL,CAAYlC,IAAZ,CAAiBkB,KAAjB;AACA,aAAOA,KAAP;AACD;;;WAED,mBAAkB;AAChB,UAAIiB,GAAG,GAAG,IAAIF,IAAJ,EAAV;AACA,aAAOE,GAAG,CAACC,OAAJ,KAAgB,KAAKC,SAAL,CAAeD,OAAf,EAAvB;AACD;;;WAED,cAAKE,IAAL,EAA0D;AAAA,UAAvCC,SAAuC,uEAAnB,WAAmB;;AACxD,UAAIrI,0DAAS,EAAb,EAAiB;AACf,cAAM,IAAIsI,KAAJ,CAAU,uCAAV,CAAN;AACD;;AAED,WAAK,IAAIvC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKiC,MAAL,CAAYhC,MAAhC,EAAwCD,CAAC,EAAzC,EAA6C;AAC3C,aAAK/G,SAAL,GAAiBiG,+DAAc,CAC7B;AACEpG,UAAAA,KAAK,EAAE,KAAKA,KADd;AAEEC,UAAAA,MAAM,EAAE,KAAKA,MAFf;AAGEE,UAAAA,SAAS,EAAE,KAAKA;AAHlB,SAD6B,EAM7B;AACE0G,UAAAA,CAAC,EAAE,KAAKsC,MAAL,CAAYjC,CAAZ,EAAeG,IAAf,EADL;AAEEP,UAAAA,CAAC,EAAE,KAAKqC,MAAL,CAAYjC,CAAZ,EAAeI,IAAf,EAFL;AAGEtH,UAAAA,KAAK,EAAE,KAAKmJ,MAAL,CAAYjC,CAAZ,EAAe3G,QAAf,EAHT;AAIEN,UAAAA,MAAM,EAAE,KAAKkJ,MAAL,CAAYjC,CAAZ,EAAe1G,SAAf,EAJV;AAKEL,UAAAA,SAAS,EAAE,KAAKgJ,MAAL,CAAYjC,CAAZ,EAAewC,WAAf,EALb;AAMEjD,UAAAA,YAAY,EAAE,KAAK0C,MAAL,CAAYjC,CAAZ,EAAeyC,YAAf,CAA4B,cAA5B;AANhB,SAN6B,EAc7BtD,+DAd6B,CAA/B;AAgBD;;AAED,WAAK,IAAIa,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAG,KAAKM,OAAL,CAAaL,MAAjC,EAAyCD,EAAC,EAA1C,EAA8C;AAC5C,aAAK/G,SAAL,GAAiB,KAAKqH,OAAL,CAAaN,EAAb,EAAgBO,MAAhB,CAAuBC,GAAvB,CACf,KAAKvH,SADU,EAEf,KAAKqH,OAAL,CAAaN,EAAb,EAAgBX,UAFD,CAAjB;AAID;;AAED,WAAKnG,MAAL,CAAYC,UAAZ,GAAyBuJ,YAAzB,CAAsC,KAAKzJ,SAA3C,EAAsD,CAAtD,EAAyD,CAAzD;;AAEA,UAAM8F,EAAE,GAAG5E,mBAAO,CAAC,cAAD,CAAlB;AAAA,UACEwI,GAAG,GAAG,KAAKzJ,MAAL,CAAY8B,SAAZ,EADR;AAAA,UAEE4H,IAAI,GAAGD,GAAG,CAACE,OAAJ,CAAY,0BAAZ,EAAwC,EAAxC,CAFT;AAAA,UAGEC,IAAI,GAAGC,MAAM,CAACC,IAAP,CAAYJ,IAAZ,EAAkB,QAAlB,CAHT;;AAKA7D,MAAAA,EAAE,CAACkE,aAAH,CAAiBZ,IAAjB,EAAuBS,IAAvB;AACD;;;WAED,kBAA0D;AAAA,UAAnDR,SAAmD,uEAA/B,WAA+B;;AACxD,UAAI,CAACrI,0DAAS,EAAd,EAAkB;AAChB,cAAM,IAAIsI,KAAJ,CAAU,uCAAV,CAAN;AACD;;AAED,UAAMW,aAAa,GAAG,IAAI7E,MAAM,CAACF,KAAX,EAAtB;;AAEA,WAAK,IAAI6B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKiC,MAAL,CAAYhC,MAAhC,EAAwCD,CAAC,EAAzC,EAA6C;AAC3C,aAAK/G,SAAL,GAAiBiG,+DAAc,CAC7B;AACEpG,UAAAA,KAAK,EAAE,KAAKA,KADd;AAEEC,UAAAA,MAAM,EAAE,KAAKA,MAFf;AAGEE,UAAAA,SAAS,EAAE,KAAKA;AAHlB,SAD6B,EAM7B;AACE0G,UAAAA,CAAC,EAAE,KAAKsC,MAAL,CAAYjC,CAAZ,EAAeG,IAAf,EADL;AAEEP,UAAAA,CAAC,EAAE,KAAKqC,MAAL,CAAYjC,CAAZ,EAAeI,IAAf,EAFL;AAGEtH,UAAAA,KAAK,EAAE,KAAKmJ,MAAL,CAAYjC,CAAZ,EAAe3G,QAAf,EAHT;AAIEN,UAAAA,MAAM,EAAE,KAAKkJ,MAAL,CAAYjC,CAAZ,EAAe1G,SAAf,EAJV;AAKEL,UAAAA,SAAS,EAAE,KAAKgJ,MAAL,CAAYjC,CAAZ,EAAewC,WAAf,EALb;AAMEjD,UAAAA,YAAY,EAAE,KAAK0C,MAAL,CAAYjC,CAAZ,EAAeyC,YAAf,CAA4B,cAA5B;AANhB,SAN6B,EAc7BtD,+DAd6B,CAA/B;AAgBD;;AAED,WAAK,IAAIa,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAG,KAAKM,OAAL,CAAaL,MAAjC,EAAyCD,GAAC,EAA1C,EAA8C;AAC5C,aAAK/G,SAAL,GAAiB,KAAKqH,OAAL,CAAaN,GAAb,EAAgBO,MAAhB,CAAuBC,GAAvB,CACf,KAAKvH,SADU,EAEf,KAAKqH,OAAL,CAAaN,GAAb,EAAgBX,UAFD,CAAjB;AAID;;AAED,WAAKnG,MAAL,CAAYC,UAAZ,GAAyBuJ,YAAzB,CAAsC,KAAKzJ,SAA3C,EAAsD,CAAtD,EAAyD,CAAzD;AAEAiK,MAAAA,aAAa,CAACpE,GAAd,GAAoB,KAAK5F,MAAL,CAAY8B,SAAZ,CAAsBsH,SAAtB,CAApB;AACA,aAAOY,aAAP;AACD;;;WAED,qBAAYhF,IAAZ,EAA4D;AAAA,UAAlCmB,UAAkC,uEAAb,EAAa;AAC1D,WAAKiB,OAAL,CAAaP,IAAb,CAAkB;AAChB7B,QAAAA,IAAI,EAAJA,IADgB;AAEhBqC,QAAAA,MAAM,EAAE,KAAKtC,8DAAA,CAAsBC,IAAtB,CAAL,GAFQ;AAGhBmB,QAAAA,UAAU,EAAVA;AAHgB,OAAlB;AAKA,aAAO,IAAP;AACD;;;WAED,gBAAO9F,QAAP,EAAyBC,SAAzB,EAAyF;AAAA,UAA7CC,IAA6C,uEAA9B,mBAA8B;AACvF,WAAKP,MAAL,CAAYW,OAAZ;AACA,WAAKX,MAAL,GAAc,IAAd;AACA,WAAKD,SAAL,GAAiB,IAAjB;;AAEA,UAAI,OAAOO,SAAP,KAAqB,WAAzB,EAAsC;AACpC,aAAKU,UAAL,CAAiB,KAAKpB,KAAL,GAAaS,QAAd,GAA0B,CAA1C,EAA8C,KAAKR,MAAL,GAAcQ,QAAf,GAA2B,CAAxE;AACD,OAFD,MAEO;AACL,aAAKW,UAAL,CAAgBX,QAAhB,EAA0BC,SAA1B;AACD;;AAED,WAAK,IAAIwG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKiC,MAAL,CAAYhC,MAAhC,EAAwCD,CAAC,IAAI,CAA7C,EAAgD;AAC9C,aAAKiC,MAAL,CAAYjC,CAAZ,EAAeU,MAAf,CAAsBnH,QAAtB,EAAgCC,SAAhC,EAA2CC,IAA3C;AACD;;AAED,aAAO,IAAP;AACD;;;;;;AAGH,iEAAesI,OAAf;;;;;;;;;;;;;;;;;;;;;;ICzKMoB;AAGJ,wBAA+B;AAAA,QAAnBjC,IAAmB,uEAAJ,EAAI;;AAAA;;AAAA,kCAFN,EAEM;;AAC7B,SAAKA,IAAL,GAAYA,IAAZ;AACD;;;;WAED,gCAA+B;AAC7B,aAAO,EAAP;AACD;;;WAED,gBACE7B,UADF,EAEEvG,KAFF,EAGEC,MAHF,EAIEE,SAJF,EAKU;AACR,aAAO,EAAP;AACD;;;WAMD,aAAIA,SAAJ,EAA0BoG,UAA1B,EAAyD;AACvD,aAAO,IAAP;AACD;;;WAND,mBAAyB;AACvB,YAAM,YAAN;AACD;;;;;;AAOH,iEAAe8D,UAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7BA;;IAEMC;;;;;;;;;;;;;WACJ,kBAAStK,KAAT,EAAwBC,MAAxB,EAAwCsG,UAAxC,EAA4D;AAC1D,YAAM,YAAN;AACD;;;WAED,aAAIpG,SAAJ,EAA0BoG,UAA1B,EAAyD;AACvDA,MAAAA,UAAU,mCACL,KAAKgE,oBAAL,EADK,GAELhE,UAFK,CAAV;;AAKA,UAAMiE,aAAa,GAAG,IAAIC,iBAAJ,CAAsBtK,SAAS,CAAC2J,IAAhC,CAAtB;AAAA,UAA6D;;AAC3D;AACN;AACA;AACA;AACA;AACA;AACMY,MAAAA,QAAQ,GAAG,SAASA,QAAT,CAAkB7D,CAAlB,EAAqBC,CAArB,EAAwB;AACjC,eAAOA,CAAC,GAAG3G,SAAS,CAACH,KAAd,GAAsB,CAAtB,GAA0B6G,CAAC,GAAG,CAArC;AACD,OATH;AAAA,UAUE8D,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAUzK,KAAV,EAAiB;AACrC,eAAO0K,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,GAAL,CAAS5K,KAAT,EAAgB,CAAhB,CAAT,EAA6B,GAA7B,IAAoC,CAA3C;AACD,OAZH;AAAA,UAaE6K,OAAO,GAAG;AACR;;AACA;AACR;AACA;AACA;AACA;AACA;AACQC,QAAAA,QAAQ,EAAE,kBACRnE,CADQ,EAERC,CAFQ,EAQR;AACA,cAAMmE,KAAK,GAAGP,QAAQ,CAAC7D,CAAD,EAAIC,CAAJ,CAAtB;AACA,iBAAO;AACLoE,YAAAA,CAAC,EAAEV,aAAa,CAACS,KAAK,GAAG,CAAT,CADX;AAELE,YAAAA,CAAC,EAAEX,aAAa,CAACS,KAAK,GAAG,CAAT,CAFX;AAGLG,YAAAA,CAAC,EAAEZ,aAAa,CAACS,KAAK,GAAG,CAAT,CAHX;AAILI,YAAAA,CAAC,EAAEb,aAAa,CAACS,KAAK,GAAG,CAAT;AAJX,WAAP;AAMD,SAxBO;;AAyBR;AACR;AACA;AACA;AACQK,QAAAA,uBAAuB,EAAE,iCAAUL,KAAV,EAKvB;AACAA,UAAAA,KAAK,IAAI,CAAT;AACA,iBAAO;AACLC,YAAAA,CAAC,EAAE/K,SAAS,CAAC2J,IAAV,CAAemB,KAAf,CADE;AAELE,YAAAA,CAAC,EAAEhL,SAAS,CAAC2J,IAAV,CAAemB,KAAK,GAAG,CAAvB,CAFE;AAGLG,YAAAA,CAAC,EAAEjL,SAAS,CAAC2J,IAAV,CAAemB,KAAK,GAAG,CAAvB,CAHE;AAILI,YAAAA,CAAC,EAAElL,SAAS,CAAC2J,IAAV,CAAemB,KAAK,GAAG,CAAvB;AAJE,WAAP;AAMD,SA1CO;;AA2CR;AACR;AACA;AACA;AACA;AACA;AACQM,QAAAA,gBAAgB,EAAE,0BAChB1E,CADgB,EAEhBC,CAFgB,EAQhB;AACA,cAAMmE,KAAK,GAAGP,QAAQ,CAAC7D,CAAD,EAAIC,CAAJ,CAAtB;AACA,iBAAO;AACLoE,YAAAA,CAAC,EAAE/K,SAAS,CAAC2J,IAAV,CAAemB,KAAK,GAAG,CAAvB,CADE;AAELE,YAAAA,CAAC,EAAEhL,SAAS,CAAC2J,IAAV,CAAemB,KAAK,GAAG,CAAvB,CAFE;AAGLG,YAAAA,CAAC,EAAEjL,SAAS,CAAC2J,IAAV,CAAemB,KAAK,GAAG,CAAvB,CAHE;AAILI,YAAAA,CAAC,EAAElL,SAAS,CAAC2J,IAAV,CAAemB,KAAK,GAAG,CAAvB;AAJE,WAAP;AAMD,SAjEO;;AAkER;AACR;AACA;AACA;AACA;AACA;AACQO,QAAAA,QAAQ,EAAE,kBACR3E,CADQ,EAERC,CAFQ,EAGR2E,IAHQ,EASF;AACN,cAAMR,KAAK,GAAGP,QAAQ,CAAC7D,CAAD,EAAIC,CAAJ,CAAtB;AACA0D,UAAAA,aAAa,CAACS,KAAK,GAAG,CAAT,CAAb,GAA2BN,mBAAmB,CAACc,IAAI,CAACP,CAAN,CAA9C;AACAV,UAAAA,aAAa,CAACS,KAAK,GAAG,CAAT,CAAb,GAA2BN,mBAAmB,CAACc,IAAI,CAACN,CAAN,CAA9C;AACAX,UAAAA,aAAa,CAACS,KAAK,GAAG,CAAT,CAAb,GAA2BN,mBAAmB,CAACc,IAAI,CAACL,CAAN,CAA9C;AACAZ,UAAAA,aAAa,CAACS,KAAK,GAAG,CAAT,CAAb,GAA2BN,mBAAmB,CAACc,IAAI,CAACJ,CAAN,CAA9C;AACD,SAvFO;;AAwFR;AACR;AACA;AACA;AACA;AACQK,QAAAA,eAAe,EAAE,yBACfT,KADe,EAEfQ,IAFe,EAQf;AACAR,UAAAA,KAAK,IAAI,CAAT;AACAT,UAAAA,aAAa,CAACS,KAAK,GAAG,CAAT,CAAb,GAA2BN,mBAAmB,CAACc,IAAI,CAACP,CAAN,CAA9C;AACAV,UAAAA,aAAa,CAACS,KAAK,GAAG,CAAT,CAAb,GAA2BN,mBAAmB,CAACc,IAAI,CAACN,CAAN,CAA9C;AACAX,UAAAA,aAAa,CAACS,KAAK,GAAG,CAAT,CAAb,GAA2BN,mBAAmB,CAACc,IAAI,CAACL,CAAN,CAA9C;AACAZ,UAAAA,aAAa,CAACS,KAAK,GAAG,CAAT,CAAb,GAA2BN,mBAAmB,CAACc,IAAI,CAACJ,CAAN,CAA9C;AACD,SA3GO;;AA4GR;AACR;AACA;AACQvB,QAAAA,IAAI,EAAE,IA/GE;;AAgHR;AACR;AACA;AACQ9J,QAAAA,KAAK,EAAEG,SAAS,CAACH,KAnHT;;AAoHR;AACR;AACA;AACQC,QAAAA,MAAM,EAAEE,SAAS,CAACF;AAvHV,OAbZ;;AAuIA8K,MAAAA,OAAO,CAACjB,IAAR,GAAe,KAAK6B,MAAL,CAAY7F,IAAZ,CACbiF,OADa,EAEbxE,UAFa,EAGbpG,SAAS,CAACH,KAHG,EAIbG,SAAS,CAACF,MAJG,EAKbE,SALa,CAAf;AAQA,WAAKsF,QAAL,CAAcK,IAAd,CAAmBiF,OAAnB,EAA4B5K,SAAS,CAACH,KAAtC,EAA6CG,SAAS,CAACF,MAAvD,EAA+DsG,UAA/D;AAEApG,MAAAA,SAAS,CAAC2J,IAAV,CAAe8B,GAAf,CAAmBpB,aAAnB;AAEA,aAAOrK,SAAP;AACD;;;;EA/J4BkK;;AAkK/B,iEAAeC,gBAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpKA;;IAEMuB;;;;;;;;;;;;;WACJ,kBACEC,KADF,EAOEjF,CAPF,EAQEC,CARF,EASEP,UATF,EAUEvG,KAVF,EAWEC,MAXF,EAYE;AACA,YAAM,YAAN;AACD;;;WAED,aAAIE,SAAJ,EAA0BoG,UAA1B,EAAyD;AACvDA,MAAAA,UAAU,GAAGA,UAAU,mCAClB,KAAKgE,oBAAL,EADkB,GAElBhE,UAFkB,CAAvB;AAKA,UAAIM,CAAJ,EAAOC,CAAP,EAAUiF,eAAV,EAA2BhD,MAA3B;;AACA,UAAMyB,aAAa,GAAG,IAAIC,iBAAJ,CAAsBtK,SAAS,CAAC2J,IAAhC,CAAtB;AAAA,UAA6D;;AAC3D;AACN;AACA;AACA;AACA;AACA;AACMY,MAAAA,QAAQ,GAAG,SAASA,QAAT,CAAkB7D,CAAlB,EAA6BC,CAA7B,EAAgD;AACzD,eAAOA,CAAC,GAAG3G,SAAS,CAACH,KAAd,GAAsB,CAAtB,GAA0B6G,CAAC,GAAG,CAArC;AACD,OATH;AAAA,UAUE8D,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAUzK,KAAV,EAAyB;AAC7C,eAAO0K,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,GAAL,CAAS5K,KAAT,EAAgB,CAAhB,CAAT,EAA6B,GAA7B,IAAoC,CAA3C;AACD,OAZH;AAAA,UAaE6K,OAAO,GAAG;AACR;;AACA;AACR;AACA;AACA;AACA;AACA;AACQC,QAAAA,QAAQ,EAAE,kBACRnE,CADQ,EAERC,CAFQ,EAQR;AACA,cAAImE,KAAK,GAAGP,QAAQ,CAAC7D,CAAD,EAAIC,CAAJ,CAApB;AACA,iBAAO;AACLoE,YAAAA,CAAC,EAAEV,aAAa,CAACS,KAAK,GAAG,CAAT,CADX;AAELE,YAAAA,CAAC,EAAEX,aAAa,CAACS,KAAK,GAAG,CAAT,CAFX;AAGLG,YAAAA,CAAC,EAAEZ,aAAa,CAACS,KAAK,GAAG,CAAT,CAHX;AAILI,YAAAA,CAAC,EAAEb,aAAa,CAACS,KAAK,GAAG,CAAT;AAJX,WAAP;AAMD,SAxBO;;AAyBR;AACR;AACA;AACA;AACA;AACA;AACQM,QAAAA,gBAAgB,EAAE,0BAChB1E,CADgB,EAEhBC,CAFgB,EAQhB;AACA,cAAImE,KAAK,GAAGP,QAAQ,CAAC7D,CAAD,EAAIC,CAAJ,CAApB;AACA,iBAAO;AACLoE,YAAAA,CAAC,EAAE/K,SAAS,CAAC2J,IAAV,CAAemB,KAAK,GAAG,CAAvB,CADE;AAELE,YAAAA,CAAC,EAAEhL,SAAS,CAAC2J,IAAV,CAAemB,KAAK,GAAG,CAAvB,CAFE;AAGLG,YAAAA,CAAC,EAAEjL,SAAS,CAAC2J,IAAV,CAAemB,KAAK,GAAG,CAAvB,CAHE;AAILI,YAAAA,CAAC,EAAElL,SAAS,CAAC2J,IAAV,CAAemB,KAAK,GAAG,CAAvB;AAJE,WAAP;AAMD,SA/CO;;AAgDR;AACR;AACA;AACA;AACA;AACA;AACQO,QAAAA,QAAQ,EAAE,kBACR3E,CADQ,EAERC,CAFQ,EAGR2E,IAHQ,EASF;AACN,cAAIR,KAAK,GAAGP,QAAQ,CAAC7D,CAAD,EAAIC,CAAJ,CAApB;AACA0D,UAAAA,aAAa,CAACS,KAAK,GAAG,CAAT,CAAb,GAA2BN,mBAAmB,CAACc,IAAI,CAACP,CAAN,CAA9C;AACAV,UAAAA,aAAa,CAACS,KAAK,GAAG,CAAT,CAAb,GAA2BN,mBAAmB,CAACc,IAAI,CAACN,CAAN,CAA9C;AACAX,UAAAA,aAAa,CAACS,KAAK,GAAG,CAAT,CAAb,GAA2BN,mBAAmB,CAACc,IAAI,CAACL,CAAN,CAA9C;AACAZ,UAAAA,aAAa,CAACS,KAAK,GAAG,CAAT,CAAb,GAA2BN,mBAAmB,CAACc,IAAI,CAACJ,CAAN,CAA9C;AACD,SArEO;;AAsER;AACR;AACA;AACQvB,QAAAA,IAAI,EAAE,IAzEE;;AA0ER;AACR;AACA;AACQ9J,QAAAA,KAAK,EAAEG,SAAS,CAACH,KA7ET;;AA8ER;AACR;AACA;AACQC,QAAAA,MAAM,EAAEE,SAAS,CAACF;AAjFV,OAbZ;;AAiGA8K,MAAAA,OAAO,CAACjB,IAAR,GAAe,KAAK6B,MAAL,CAAY7F,IAAZ,CACbiF,OADa,EAEbxE,UAFa,EAGbpG,SAAS,CAACH,KAHG,EAIbG,SAAS,CAACF,MAJG,EAKbE,SALa,CAAf;;AAQA,WAAK2G,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG3G,SAAS,CAACF,MAA1B,EAAkC6G,CAAC,IAAI,CAAvC,EAA0C;AACxC,aAAKD,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG1G,SAAS,CAACH,KAA1B,EAAiC6G,CAAC,IAAI,CAAtC,EAAyC;AACvCkF,UAAAA,eAAe,GAAGrB,QAAQ,CAAC7D,CAAD,EAAIC,CAAJ,CAA1B;AAEAiC,UAAAA,MAAM,GAAG,KAAKtD,QAAL,CAAcK,IAAd,CACPiF,OADO,EAEP;AACEG,YAAAA,CAAC,EAAEV,aAAa,CAACuB,eAAe,GAAG,CAAnB,CADlB;AAEEZ,YAAAA,CAAC,EAAEX,aAAa,CAACuB,eAAe,GAAG,CAAnB,CAFlB;AAGEX,YAAAA,CAAC,EAAEZ,aAAa,CAACuB,eAAe,GAAG,CAAnB,CAHlB;AAIEV,YAAAA,CAAC,EAAEb,aAAa,CAACuB,eAAe,GAAG,CAAnB;AAJlB,WAFO,EAQPlF,CARO,EASPC,CATO,EAUPP,UAVO,EAWPpG,SAAS,CAACH,KAXH,EAYPG,SAAS,CAACF,MAZH,CAAT;;AAeA,cAAI,QAAO8I,MAAP,MAAkB,QAAtB,EAAgC;AAC9ByB,YAAAA,aAAa,CAACuB,eAAe,GAAG,CAAnB,CAAb,GAAqCpB,mBAAmB,CAAC5B,MAAM,CAACmC,CAAR,CAAxD;AACAV,YAAAA,aAAa,CAACuB,eAAe,GAAG,CAAnB,CAAb,GAAqCpB,mBAAmB,CAAC5B,MAAM,CAACoC,CAAR,CAAxD;AACAX,YAAAA,aAAa,CAACuB,eAAe,GAAG,CAAnB,CAAb,GAAqCpB,mBAAmB,CAAC5B,MAAM,CAACqC,CAAR,CAAxD;AACAZ,YAAAA,aAAa,CAACuB,eAAe,GAAG,CAAnB,CAAb,GAAqCpB,mBAAmB,CAAC5B,MAAM,CAACsC,CAAR,CAAxD;AACD;AACF;AACF;;AAEDlL,MAAAA,SAAS,CAAC2J,IAAV,CAAe8B,GAAf,CAAmBpB,aAAnB;AACA,aAAOrK,SAAP;AACD;;;;EA/J2BkK;;AAkK9B,iEAAewB,eAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpKA;;IAEMG;;;;;;;;;;;;;WACJ,kBACEnF,CADF,EAEEC,CAFF,EAGEP,UAHF,EAIEvG,KAJF,EAKEC,MALF,EAMiB;AACf,YAAM,YAAN;AACD;;;WAED,aAAIE,SAAJ,EAA0BoG,UAA1B,EAAyD;AACvDA,MAAAA,UAAU,mCACL,KAAKgE,oBAAL,EADK,GAELhE,UAFK,CAAV;AAKA,UAAIM,CAAJ,EAAOC,CAAP;;AACA,UAAM6D,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAUzK,KAAV,EAAiC;AACzD,eAAO0K,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,GAAL,CAAS5K,KAAT,EAAgB,CAAhB,CAAT,EAA6B,GAA7B,IAAoC,CAA3C;AACD,OAFH;AAAA,UAGE6K,OAAO,GAAG;AACRjB,QAAAA,IAAI,EAAE;AADE,OAHZ;AAAA,UAMEU,aAAa,GAAG,IAAIC,iBAAJ,CAAsBtK,SAAS,CAAC2J,IAAhC,CANlB;;AAQAiB,MAAAA,OAAO,CAACjB,IAAR,GAAe,KAAK6B,MAAL,CAAY7F,IAAZ,CACbiF,OADa,EAEbxE,UAFa,EAGbpG,SAAS,CAACH,KAHG,EAIbG,SAAS,CAACF,MAJG,EAKbE,SALa,CAAf;;AAQA,WAAK2G,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG3G,SAAS,CAACF,MAA1B,EAAkC6G,CAAC,IAAI,CAAvC,EAA0C;AACxC,aAAKD,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG1G,SAAS,CAACH,KAA1B,EAAiC6G,CAAC,IAAI,CAAtC,EAAyC;AACvC,cAAMoF,KAAK,GAAG,KAAKxG,QAAL,CAAcK,IAAd,CACViF,OADU,EAEVlE,CAFU,EAGVC,CAHU,EAIVP,UAJU,EAKVpG,SAAS,CAACH,KALA,EAMVG,SAAS,CAACF,MANA,CAAd;AAAA,cAQEiM,IAAI,GAAGvB,mBAAmB,CAACsB,KAAK,CAAC,CAAD,CAAN,CAR5B;AAAA,cASEE,IAAI,GAAGxB,mBAAmB,CAACsB,KAAK,CAAC,CAAD,CAAN,CAT5B;AAAA,cAUEG,aAAa,GAAGtF,CAAC,GAAG3G,SAAS,CAACH,KAAd,GAAsB,CAAtB,GAA0B6G,CAAC,GAAG,CAVhD;AAAA,cAWEwF,aAAa,GAAGF,IAAI,GAAGhM,SAAS,CAACH,KAAjB,GAAyB,CAAzB,GAA6BkM,IAAI,GAAG,CAXtD;AAaA1B,UAAAA,aAAa,CAAC4B,aAAa,GAAG,CAAjB,CAAb,GAAmCjM,SAAS,CAAC2J,IAAV,CAAeuC,aAAa,GAAG,CAA/B,CAAnC;AACA7B,UAAAA,aAAa,CAAC4B,aAAa,GAAG,CAAjB,CAAb,GAAmCjM,SAAS,CAAC2J,IAAV,CAAeuC,aAAa,GAAG,CAA/B,CAAnC;AACA7B,UAAAA,aAAa,CAAC4B,aAAa,GAAG,CAAjB,CAAb,GAAmCjM,SAAS,CAAC2J,IAAV,CAAeuC,aAAa,GAAG,CAA/B,CAAnC;AACA7B,UAAAA,aAAa,CAAC4B,aAAa,GAAG,CAAjB,CAAb,GAAmCjM,SAAS,CAAC2J,IAAV,CAAeuC,aAAa,GAAG,CAA/B,CAAnC;AACD;AACF;;AAEDlM,MAAAA,SAAS,CAAC2J,IAAV,CAAe8B,GAAf,CAAmBpB,aAAnB;AACA,aAAOrK,SAAP;AACD;;;;EA1D+BkK;;AA6DlC,iEAAe2B,mBAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/DA;AACA;;IAMMQ;;;;;;;;;;;;;WAKJ,gCAAmD;AACjD,aAAO;AACLC,QAAAA,SAAS,EAAE;AADN,OAAP;AAGD;;;WAED,kBACEzM,KADF,EAEEC,MAFF,EAGEsG,UAHF,EAIE;AACA,UAAImG,IAAI,GAAG,CAAX;AAAA,UACEC,IAAI,GAAG,CADT;AAAA,UAEEb,KAFF;AAAA,UAGEc,GAHF;AAAA,UAIEC,OAJF;AAAA,UAKEC,OALF;AAAA,UAMEC,MANF;AAAA,UAOEC,MAPF;;AASA,WAAK,IAAIlG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG7G,MAApB,EAA4B6G,CAAC,IAAI,CAAjC,EAAoC;AAClC,aAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG7G,KAApB,EAA2B6G,CAAC,IAAI,CAAhC,EAAmC;AACjCiF,UAAAA,KAAK,GAAG,KAAKd,QAAL,CAAcnE,CAAd,EAAiBC,CAAjB,CAAR;AACA8F,UAAAA,GAAG,GAAGN,2DAAW,CAACR,KAAK,CAACZ,CAAP,EAAUY,KAAK,CAACX,CAAhB,EAAmBW,KAAK,CAACV,CAAzB,CAAjB;AACAsB,UAAAA,IAAI,IAAIE,GAAG,CAACvB,CAAZ;AACAsB,UAAAA,IAAI,IAAIC,GAAG,CAACxB,CAAZ;AACD;AACF;;AAEDyB,MAAAA,OAAO,GAAG,IAAIH,IAAI,IAAI1M,KAAK,GAAGC,MAAZ,CAAlB;AACA6M,MAAAA,OAAO,GAAG,IAAIH,IAAI,IAAI3M,KAAK,GAAGC,MAAZ,CAAlB;AAEA8M,MAAAA,MAAM,GAAGF,OAAO,IAAItG,UAAU,CAACkG,SAAX,GAAuB,GAA3B,CAAP,GAAyC,GAAlD;AACAO,MAAAA,MAAM,GAAGF,OAAO,IAAIvG,UAAU,CAACkG,SAAX,GAAuB,GAA3B,CAAP,GAAyC,GAAlD;;AAEA,WAAK,IAAI3F,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAG7G,MAApB,EAA4B6G,EAAC,IAAI,CAAjC,EAAoC;AAClC,aAAK,IAAID,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAG7G,KAApB,EAA2B6G,EAAC,IAAI,CAAhC,EAAmC;AACjCiF,UAAAA,KAAK,GAAG,KAAKd,QAAL,CAAcnE,EAAd,EAAiBC,EAAjB,CAAR;AAEA8F,UAAAA,GAAG,GAAGN,2DAAW,CAACR,KAAK,CAACZ,CAAP,EAAUY,KAAK,CAACX,CAAhB,EAAmBW,KAAK,CAACV,CAAzB,CAAjB;AAEAwB,UAAAA,GAAG,CAACvB,CAAJ,IAAS0B,MAAT;AACAH,UAAAA,GAAG,CAACxB,CAAJ,IAAS4B,MAAT;AAEAlB,UAAAA,KAAK,GAAGS,2DAAW,CAACK,GAAG,CAACK,CAAL,EAAQL,GAAG,CAACvB,CAAZ,EAAeuB,GAAG,CAACxB,CAAnB,CAAnB;AACAU,UAAAA,KAAK,CAACT,CAAN,GAAU,KAAKL,QAAL,CAAcnE,EAAd,EAAiBC,EAAjB,EAAoBuE,CAA9B;AAEA,eAAKG,QAAL,CAAc3E,EAAd,EAAiBC,EAAjB,EAAoBgF,KAApB;AACD;AACF;AACF;;;WAtDD,mBAAyB;AACvB,aAAO,oBAAP;AACD;;;;EAHkCxB;;AA0DrC,iEAAekC,sBAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjEA;;IAMMU;;;;;;;;;;;;;WAKJ,gCAAwC;AACtC,aAAO;AACLC,QAAAA,SAAS,EAAE;AADN,OAAP;AAGD;;;WAED,kBAASnN,KAAT,EAAwBC,MAAxB,EAAwCsG,UAAxC,EAAqE;AACnE,UAAI6G,CAAJ,EAAOC,CAAP,EAAUC,CAAV,EAAapC,CAAb,EAAgBC,CAAhB,EAAmBC,CAAnB,EAAsBU,KAAtB;;AAEA,WAAK,IAAIhF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG7G,MAApB,EAA4B6G,CAAC,IAAIP,UAAU,CAAC4G,SAA5C,EAAuD;AACrD,aAAK,IAAItG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG7G,KAApB,EAA2B6G,CAAC,IAAIN,UAAU,CAAC4G,SAA3C,EAAsD;AACpDC,UAAAA,CAAC,GAAGxC,IAAI,CAACC,GAAL,CAAStE,UAAU,CAAC4G,SAApB,EAA+BnN,KAAK,GAAG6G,CAAvC,CAAJ;AACAwG,UAAAA,CAAC,GAAGzC,IAAI,CAACC,GAAL,CAAStE,UAAU,CAAC4G,SAApB,EAA+BlN,MAAM,GAAG6G,CAAxC,CAAJ;AACAwG,UAAAA,CAAC,GAAGF,CAAC,GAAGC,CAAR;AAEAnC,UAAAA,CAAC,GAAG,CAAJ;AACAC,UAAAA,CAAC,GAAG,CAAJ;AACAC,UAAAA,CAAC,GAAG,CAAJ;;AAEA,eAAK,IAAImC,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGF,CAAtB,EAAyBE,EAAE,IAAI,CAA/B,EAAkC;AAChC,iBAAK,IAAIC,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGJ,CAAtB,EAAyBI,EAAE,IAAI,CAA/B,EAAkC;AAChC1B,cAAAA,KAAK,GAAG,KAAKP,gBAAL,CAAsB1E,CAAC,GAAG2G,EAA1B,EAA8B1G,CAAC,GAAGyG,EAAlC,CAAR;AAEArC,cAAAA,CAAC,IAAIY,KAAK,CAACZ,CAAN,GAAU,IAAf;AACAC,cAAAA,CAAC,IAAIW,KAAK,CAACX,CAAN,GAAU,IAAf;AACAC,cAAAA,CAAC,IAAIU,KAAK,CAACV,CAAN,GAAU,IAAf;AACD;AACF;;AAEDF,UAAAA,CAAC,GAAGA,CAAC,GAAGoC,CAAR;AACAnC,UAAAA,CAAC,GAAGA,CAAC,GAAGmC,CAAR;AACAlC,UAAAA,CAAC,GAAGA,CAAC,GAAGkC,CAAR;;AAEA,eAAK,IAAIC,GAAE,GAAG,CAAd,EAAiBA,GAAE,GAAGF,CAAtB,EAAyBE,GAAE,IAAI,CAA/B,EAAkC;AAChC,iBAAK,IAAIC,GAAE,GAAG,CAAd,EAAiBA,GAAE,GAAGJ,CAAtB,EAAyBI,GAAE,IAAI,CAA/B,EAAkC;AAChC,mBAAKhC,QAAL,CAAc3E,CAAC,GAAG2G,GAAlB,EAAsB1G,CAAC,GAAGyG,GAA1B,EAA8B;AAC5BrC,gBAAAA,CAAC,EAAEA,CADyB;AAE5BC,gBAAAA,CAAC,EAAEA,CAFyB;AAG5BC,gBAAAA,CAAC,EAAEA,CAHyB;AAI5BC,gBAAAA,CAAC,EAAE;AAJyB,eAA9B;AAMD;AACF;AACF;AACF;AACF;;;WAjDD,mBAAyB;AACvB,aAAO,OAAP;AACD;;;;EAHuBf;;AAqD1B,iEAAe4C,WAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3DA;;IAeMO;;;;;;;;;;;;;;;;2DAKG;AACLC,MAAAA,UAAU,EAAE,CADP;AAELC,MAAAA,WAAW,EAAE,CAFR;AAGLC,MAAAA,SAAS,EAAE,CAHN;AAILC,MAAAA,YAAY,EAAE,CAJT;AAKLC,MAAAA,WAAW,EAAE;AACX5C,QAAAA,CAAC,EAAE,CADQ;AAEXC,QAAAA,CAAC,EAAE,CAFQ;AAGXC,QAAAA,CAAC,EAAE,CAHQ;AAIXC,QAAAA,CAAC,EAAE;AAJQ;AALR;;;;;;;WAaP,gCAAyC;AACvC,aAAO;AACLqC,QAAAA,UAAU,EAAE,EADP;AAELC,QAAAA,WAAW,EAAE,EAFR;AAGLC,QAAAA,SAAS,EAAE,EAHN;AAILC,QAAAA,YAAY,EAAE,EAJT;AAKLC,QAAAA,WAAW,EAAE;AACX5C,UAAAA,CAAC,EAAE,CADQ;AAEXC,UAAAA,CAAC,EAAE,CAFQ;AAGXC,UAAAA,CAAC,EAAE,CAHQ;AAIXC,UAAAA,CAAC,EAAE;AAJQ;AALR,OAAP;AAYD;;;WAED,gBACE9E,UADF,EAEEvG,KAFF,EAGEC,MAHF,EAIEE,SAJF,EAKoB;AAClB,aAAO;AACLuN,QAAAA,UAAU,EAAEnH,UAAU,CAACmH,UAAX,GAAwB,CAD/B;AAELC,QAAAA,WAAW,EAAEpH,UAAU,CAACoH,WAAX,GAAyB,CAFjC;AAGLC,QAAAA,SAAS,EAAErH,UAAU,CAACqH,SAAX,GAAuB,CAH7B;AAILC,QAAAA,YAAY,EAAEtH,UAAU,CAACsH,YAAX,GAA0B;AAJnC,OAAP;AAMD;;;WAED,kBAAS7N,KAAT,EAAgBC,MAAhB,EAAwBsG,UAAxB,EAAoC;AAClC,WAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG7G,MAApB,EAA4B6G,CAAC,IAAI,CAAjC,EAAoC;AAClC,aAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG7G,KAApB,EAA2B6G,CAAC,IAAI,CAAhC,EAAmC;AACjC,cAAI,KAAKiD,IAAL,CAAU4D,UAAV,GAAuB,CAAvB,IAA4B7G,CAAC,GAAG,KAAKiD,IAAL,CAAU4D,UAA9C,EAA0D;AACxD,iBAAKlC,QAAL,CAAc3E,CAAd,EAAiBC,CAAjB,EAAoBP,UAAU,CAACuH,WAA/B;AACD;;AACD,cAAI,KAAKhE,IAAL,CAAU6D,WAAV,GAAwB,CAAxB,IAA6B3N,KAAK,GAAG,KAAK8J,IAAL,CAAU6D,WAAlB,GAAgC9G,CAAjE,EAAoE;AAClE,iBAAK2E,QAAL,CAAc3E,CAAd,EAAiBC,CAAjB,EAAoBP,UAAU,CAACuH,WAA/B;AACD;;AACD,cAAI,KAAKhE,IAAL,CAAU8D,SAAV,GAAsB,CAAtB,IAA2B9G,CAAC,GAAG,KAAKgD,IAAL,CAAU8D,SAA7C,EAAwD;AACtD,iBAAKpC,QAAL,CAAc3E,CAAd,EAAiBC,CAAjB,EAAoBP,UAAU,CAACuH,WAA/B;AACD;;AACD,cAAI,KAAKhE,IAAL,CAAU+D,YAAV,GAAyB,CAAzB,IAA8B5N,MAAM,GAAG,KAAK6J,IAAL,CAAU+D,YAAnB,GAAkC/G,CAApE,EAAuE;AACrE,iBAAK0E,QAAL,CAAc3E,CAAd,EAAiBC,CAAjB,EAAoBP,UAAU,CAACuH,WAA/B;AACD;AACF;AACF;AACF;;;WA/DD,mBAAyB;AACvB,aAAO,QAAP;AACD;;;;EAHwBxD;;AAmE3B,iEAAemD,YAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClFA;;IAEMM;;;;;;;;;;;;;WAKJ,kBAAS/N,KAAT,EAAwBC,MAAxB,EAAwCsG,UAAxC,EAA4D;AAC1D,UAAIyH,IAAI,GAAGC,QAAX;AAAA,UACEC,IAAI,GAAGD,QADT;AAAA,UAEEE,IAAI,GAAGF,QAFT;AAAA,UAGEG,IAAI,GAAG,CAAC,CAHV;AAAA,UAIEC,IAAI,GAAG,CAAC,CAJV;AAAA,UAKEC,IAAI,GAAG,CAAC,CALV;AAAA,UAMExC,KANF;;AAQA,UAAMyC,KAAK,GAAG,SAASA,KAAT,CAAerO,KAAf,EAAsB2K,GAAtB,EAA2BC,GAA3B,EAAgC;AAC5C,eAAQ,CAAC5K,KAAK,GAAG2K,GAAT,IAAgB,GAAjB,IAAyBC,GAAG,GAAGD,GAA/B,CAAP;AACD,OAFD;;AAIA,WAAK,IAAI/D,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG7G,MAApB,EAA4B6G,CAAC,IAAI,CAAjC,EAAoC;AAClC,aAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG7G,KAApB,EAA2B6G,CAAC,IAAI,CAAhC,EAAmC;AACjCiF,UAAAA,KAAK,GAAG,KAAKd,QAAL,CAAcnE,CAAd,EAAiBC,CAAjB,CAAR;AAEAkH,UAAAA,IAAI,GAAGpD,IAAI,CAACC,GAAL,CAASiB,KAAK,CAACZ,CAAf,EAAkB8C,IAAlB,CAAP;AACAE,UAAAA,IAAI,GAAGtD,IAAI,CAACC,GAAL,CAASiB,KAAK,CAACX,CAAf,EAAkB+C,IAAlB,CAAP;AACAC,UAAAA,IAAI,GAAGvD,IAAI,CAACC,GAAL,CAASiB,KAAK,CAACV,CAAf,EAAkB+C,IAAlB,CAAP;AAEAC,UAAAA,IAAI,GAAGxD,IAAI,CAACE,GAAL,CAASgB,KAAK,CAACZ,CAAf,EAAkBkD,IAAlB,CAAP;AACAC,UAAAA,IAAI,GAAGzD,IAAI,CAACE,GAAL,CAASgB,KAAK,CAACX,CAAf,EAAkBkD,IAAlB,CAAP;AACAC,UAAAA,IAAI,GAAG1D,IAAI,CAACE,GAAL,CAASgB,KAAK,CAACV,CAAf,EAAkBkD,IAAlB,CAAP;AACD;AACF;;AAED,WAAK,IAAIxH,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAG7G,MAApB,EAA4B6G,EAAC,IAAI,CAAjC,EAAoC;AAClC,aAAK,IAAID,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAG7G,KAApB,EAA2B6G,EAAC,IAAI,CAAhC,EAAmC;AACjCiF,UAAAA,KAAK,GAAG,KAAKd,QAAL,CAAcnE,EAAd,EAAiBC,EAAjB,CAAR;AAEAgF,UAAAA,KAAK,CAACZ,CAAN,GAAUqD,KAAK,CAACzC,KAAK,CAACZ,CAAP,EAAU8C,IAAV,EAAgBI,IAAhB,CAAf;AACAtC,UAAAA,KAAK,CAACX,CAAN,GAAUoD,KAAK,CAACzC,KAAK,CAACX,CAAP,EAAU+C,IAAV,EAAgBG,IAAhB,CAAf;AACAvC,UAAAA,KAAK,CAACV,CAAN,GAAUmD,KAAK,CAACzC,KAAK,CAACV,CAAP,EAAU+C,IAAV,EAAgBG,IAAhB,CAAf;AAEA,eAAK9C,QAAL,CAAc3E,EAAd,EAAiBC,EAAjB,EAAoBgF,KAApB;AACD;AACF;AACF;;;WA1CD,mBAAyB;AACvB,aAAO,sBAAP;AACD;;;;EAHqCxB;;AA8CxC,iEAAeyD,yBAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChDA;AACA;;IASMU;;;;;;;;;;;;;WAKJ,gCAAyC;AACvC,aAAO;AACLC,QAAAA,OAAO,EAAG,MAAM9D,IAAI,CAAC+D,EAAZ,GAAkB,GADtB;AAELC,QAAAA,SAAS,EAAG,KAAKhE,IAAI,CAAC+D,EAAX,GAAiB,GAFvB;AAGLE,QAAAA,OAAO,EAAE,CAHJ;AAILC,QAAAA,MAAM,EAAE;AAJH,OAAP;AAMD;;;WAED,kBAAS9O,KAAT,EAAwBC,MAAxB,EAAwCsG,UAAxC,EAAsE;AACpE,UAAIwI,YAAY,GAAG/O,KAAnB;AAAA,UACEgP,UAAU,GAAG,EADf;AAAA,UAEEC,EAFF;AAAA,UAGEC,EAHF;AAAA,UAIEC,EAJF;AAAA,UAKEC,EALF;AAAA,UAMEC,EANF;AAAA,UAOEC,EAPF;AAAA,UAQEC,GARF;AAAA,UASEC,IATF;AAAA,UAUEC,KAVF;AAAA,UAWEC,EAXF;AAAA,UAYEC,EAZF;AAAA,UAaEC,EAbF;AAAA,UAcEC,KAdF;AAAA,UAeEC,UAfF;AAAA,UAgBEC,UAAU,GAAG,KAhBf;AAAA,UAiBEC,SAAS,GAAG,CAjBd;AAAA,UAkBE/E,KAAK,GAAG,CAlBV;AAAA,UAmBEa,KAnBF;AAAA,UAoBEZ,CApBF;AAAA,UAqBEC,CArBF;AAAA,UAsBEC,CAtBF;AAwBAgE,MAAAA,EAAE,GACCxE,IAAI,CAACqF,GAAL,CAAS1J,UAAU,CAACmI,OAApB,IACC9D,IAAI,CAACqF,GAAL,CAAS1J,UAAU,CAACqI,SAApB,CADD,GAECmB,UAFF,GAGA,CAJF;AAKAV,MAAAA,EAAE,GACCzE,IAAI,CAACsF,GAAL,CAAS3J,UAAU,CAACmI,OAApB,IACC9D,IAAI,CAACqF,GAAL,CAAS1J,UAAU,CAACqI,SAApB,CADD,GAECmB,UAFF,GAGA,CAJF;AAKAT,MAAAA,EAAE,GAAI1E,IAAI,CAACsF,GAAL,CAAS3J,UAAU,CAACqI,SAApB,IAAiCmB,UAAlC,GAAgD,CAArD;AAEAZ,MAAAA,EAAE,GAAK,IAAI,GAAL,GAAY5I,UAAU,CAACsI,OAAxB,GAAmC,CAAxC;AACAU,MAAAA,GAAG,GAAGJ,EAAE,GAAGA,EAAX;AACAK,MAAAA,IAAI,GAAGL,EAAE,GAAGG,EAAZ;AAEAQ,MAAAA,UAAU,GAAGR,EAAb;;AAEA,WAAK,IAAIxI,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG7G,MAApB,EAA4B6G,CAAC,IAAI,CAAjC,EAAoC;AAClC,aAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG7G,KAApB,EAA2B6G,CAAC,IAAI,CAAhC,EAAmC;AACjCmI,UAAAA,UAAU,CAAC/H,IAAX,CAAgBuH,2DAAU,CAAC,KAAKjD,gBAAL,CAAsB1E,CAAtB,EAAyBC,CAAzB,CAAD,CAAV,GAA0C,CAA1D;AACD;AACF;;AAED,WAAK,IAAIA,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAG7G,MAApB,EAA4B6G,EAAC,IAAI,CAAL,EAAQkJ,SAAS,IAAIjB,YAAjD,EAA+D;AAC7DW,QAAAA,EAAE,GAAGM,SAAL;AACAL,QAAAA,EAAE,GAAGD,EAAE,GAAGX,YAAV;AACAa,QAAAA,EAAE,GAAGD,EAAE,GAAGZ,YAAV;;AAEA,aAAK,IAAIlI,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAG7G,KAApB,EAA2B6G,EAAC,IAAI,CAAL,EAAQ6I,EAAE,IAAI,CAAd,EAAiBC,EAAE,IAAI,CAAvB,EAA0BC,EAAE,IAAI,CAA3D,EAA8D;AAC5D,cAAI9I,EAAC,IAAI,CAAL,IAAUA,EAAC,GAAG7G,MAAM,GAAG,CAAvB,IAA4B4G,EAAC,IAAI,CAAjC,IAAsCA,EAAC,GAAG7G,KAAK,GAAG,CAAtD,EAAyD;AACvDiP,YAAAA,EAAE,GACAD,UAAU,CAACU,EAAE,GAAG,CAAN,CAAV,GACAV,UAAU,CAACW,EAAE,GAAG,CAAN,CADV,GAEAX,UAAU,CAACY,EAAE,GAAG,CAAN,CAFV,GAGAZ,UAAU,CAACU,EAAE,GAAG,CAAN,CAHV,GAIAV,UAAU,CAACW,EAAE,GAAG,CAAN,CAJV,GAKAX,UAAU,CAACY,EAAE,GAAG,CAAN,CANZ;AAOAV,YAAAA,EAAE,GACAF,UAAU,CAACY,EAAE,GAAG,CAAN,CAAV,GACAZ,UAAU,CAACY,EAAD,CADV,GAEAZ,UAAU,CAACY,EAAE,GAAG,CAAN,CAFV,GAGAZ,UAAU,CAACU,EAAE,GAAG,CAAN,CAHV,GAIAV,UAAU,CAACU,EAAD,CAJV,GAKAV,UAAU,CAACU,EAAE,GAAG,CAAN,CANZ;;AAQA,gBAAIT,EAAE,IAAI,CAAN,IAAWC,EAAE,IAAI,CAArB,EAAwB;AACtBW,cAAAA,KAAK,GAAGC,UAAR;AACD,aAFD,MAEO;AACL,kBAAI,CAACL,KAAK,GAAGR,EAAE,GAAGG,EAAL,GAAUF,EAAE,GAAGG,EAAf,GAAoBG,IAA7B,IAAqC,CAAzC,EAA4C;AAC1CK,gBAAAA,KAAK,GAAG,CAAR;AACD,eAFD,MAEO;AACLA,gBAAAA,KAAK,GAAGJ,KAAK,GAAG7E,IAAI,CAACuF,IAAL,CAAUlB,EAAE,GAAGA,EAAL,GAAUC,EAAE,GAAGA,EAAf,GAAoBK,GAA9B,CAAhB;AACD;AACF;AACF,WAzBD,MAyBO;AACLM,YAAAA,KAAK,GAAGC,UAAR;AACD;;AAED,cAAIvJ,UAAU,CAACuI,MAAf,EAAuB;AACrBhD,YAAAA,KAAK,GAAG,KAAKR,uBAAL,CAA6BL,KAA7B,CAAR;AACAC,YAAAA,CAAC,GAAIY,KAAK,CAACZ,CAAN,GAAU2E,KAAX,IAAqB,CAAzB;AACA1E,YAAAA,CAAC,GAAIW,KAAK,CAACX,CAAN,GAAU0E,KAAX,IAAqB,CAAzB;AACAzE,YAAAA,CAAC,GAAIU,KAAK,CAACV,CAAN,GAAUyE,KAAX,IAAqB,CAAzB;AACA,iBAAKnE,eAAL,CAAqBT,KAAK,EAA1B,EAA8B;AAC5BC,cAAAA,CAAC,EAAEA,CADyB;AAE5BC,cAAAA,CAAC,EAAEA,CAFyB;AAG5BC,cAAAA,CAAC,EAAEA,CAHyB;AAI5BC,cAAAA,CAAC,EAAES,KAAK,CAACT;AAJmB,aAA9B;AAMD,WAXD,MAWO;AACL,iBAAKK,eAAL,CAAqBT,KAAK,EAA1B,EAA8B;AAC5BC,cAAAA,CAAC,EAAE2E,KADyB;AAE5B1E,cAAAA,CAAC,EAAE0E,KAAK,IAAI,CAFgB;AAG5BzE,cAAAA,CAAC,EAAEyE,KAAK,IAAI,EAHgB;AAI5BxE,cAAAA,CAAC,EAAE;AAJyB,aAA9B;AAMD;AACF;AACF;AACF;;;WAtHD,mBAAyB;AACvB,aAAO,QAAP;AACD;;;;EAHwBf;;AA0H3B,iEAAemE,YAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpIA;AACA;;IAMM4B;;;;;;;;;;;;;WAKJ,gCAA4C;AAC1C,aAAO;AACL1J,QAAAA,KAAK,EAAE;AADF,OAAP;AAGD;;;WAED,kBAAS3G,KAAT,EAAwBC,MAAxB,EAAwCsG,UAAxC,EAAyE;AACvE,UAAII,KAAJ;;AAEA,UAAIJ,UAAU,CAACI,KAAX,KAAqB,aAAzB,EAAwC;AACtCA,QAAAA,KAAK,GAAG;AACNuE,UAAAA,CAAC,EAAE,CADG;AAENC,UAAAA,CAAC,EAAE,CAFG;AAGNC,UAAAA,CAAC,EAAE,CAHG;AAINC,UAAAA,CAAC,EAAE;AAJG,SAAR;AAMD,OAPD,MAOO;AACL1E,QAAAA,KAAK,GAAGyJ,wDAAQ,CAAC7J,UAAU,CAACI,KAAZ,CAAhB;AACAA,QAAAA,KAAK,CAAC0E,CAAN,GAAU,GAAV;AACD;;AAED,WAAK,IAAIvE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG7G,MAApB,EAA4B6G,CAAC,IAAI,CAAjC,EAAoC;AAClC,aAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG7G,KAApB,EAA2B6G,CAAC,IAAI,CAAhC,EAAmC;AACjC,eAAK2E,QAAL,CAAc3E,CAAd,EAAiBC,CAAjB,EAAoBH,KAApB;AACD;AACF;AACF;;;WA9BD,mBAAyB;AACvB,aAAO,YAAP;AACD;;;;EAH2B2D;;AAkC9B,iEAAe+F,eAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzCA;;IAMMC;;;;;;;;;;;;;WAKJ,gCAAuB;AACrB,aAAO;AACLC,QAAAA,SAAS,EAAE,QADN,CACgB;;AADhB,OAAP;AAGD;;;WAED,kBAASvQ,KAAT,EAAwBC,MAAxB,EAAwCsG,UAAxC,EAAoE;AAClE,UAAIM,CAAC,GAAG,CAAR;AAAA,UACEC,CAAC,GAAG,CADN;AAAA,UAEEsG,CAAC,GAAGpN,KAFN;AAAA,UAGEqN,CAAC,GAAGpN,MAHN;AAAA,UAIEiM,IAAI,GAAG,CAJT;AAAA,UAKEC,IAAI,GAAG,CALT;AAAA,UAMEqE,IAAI,GAAGpD,CANT;AAAA,UAOEqD,IAAI,GAAGpD,CAPT;AAAA,UAQEqD,MARF;AAAA,UASEC,MATF;;AAWA,cAAQpK,UAAU,CAACgK,SAAnB;AACE,aAAK,QAAL;AACErE,UAAAA,IAAI,GAAGlM,KAAK,IAAI6G,CAAC,GAAGuG,CAAR,CAAZ;AACA;;AACF,aAAK,QAAL;AACEjB,UAAAA,IAAI,GAAGlM,MAAM,IAAI6G,CAAC,GAAGuG,CAAR,CAAb;AACA;;AACF,aAAK,SAAL;AACEmD,UAAAA,IAAI,GAAGnD,CAAP;AACAoD,UAAAA,IAAI,GAAGrD,CAAP;AACAlB,UAAAA,IAAI,GAAGpF,CAAP;AACAqF,UAAAA,IAAI,GAAGtF,CAAP;AACA;;AACF,aAAK,WAAL;AACE2J,UAAAA,IAAI,GAAGnD,CAAP;AACAoD,UAAAA,IAAI,GAAGrD,CAAP;AACAlB,UAAAA,IAAI,GAAGjM,MAAM,IAAI6G,CAAC,GAAGuG,CAAR,CAAb;AACAlB,UAAAA,IAAI,GAAGtF,CAAP;AACA;;AACF,aAAK,YAAL;AACE2J,UAAAA,IAAI,GAAGnD,CAAP;AACAoD,UAAAA,IAAI,GAAGrD,CAAP;AACAlB,UAAAA,IAAI,GAAGpF,CAAP;AACAqF,UAAAA,IAAI,GAAGnM,KAAK,IAAI6G,CAAC,GAAGuG,CAAR,CAAZ;AACA;;AACF,aAAK,UAAL;AACElB,UAAAA,IAAI,GAAGlM,KAAK,IAAI6G,CAAC,GAAGuG,CAAR,CAAZ;AACAjB,UAAAA,IAAI,GAAGlM,MAAM,IAAI6G,CAAC,GAAGuG,CAAR,CAAb;AACA;AA5BJ;;AA+BA,WAAKvG,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG7G,MAAhB,EAAwB6G,CAAC,IAAI,CAA7B,EAAgC;AAC9B,aAAKD,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG7G,KAAhB,EAAuB6G,CAAC,IAAI,CAA5B,EAA+B;AAC7B6J,UAAAA,MAAM,GAAG5J,CAAT;AACA6J,UAAAA,MAAM,GAAG9J,CAAT;;AAEA,kBAAQN,UAAU,CAACgK,SAAnB;AACE,iBAAK,QAAL;AACEI,cAAAA,MAAM,GAAGvD,CAAC,GAAGvG,CAAJ,GAAQ,CAAjB;AACA;;AACF,iBAAK,QAAL;AACE6J,cAAAA,MAAM,GAAGrD,CAAC,GAAGvG,CAAJ,GAAQ,CAAjB;AACA;;AACF,iBAAK,SAAL;AACE4J,cAAAA,MAAM,GAAG7J,CAAT;AACA8J,cAAAA,MAAM,GAAG7J,CAAT;AACA;;AACF,iBAAK,WAAL;AACE4J,cAAAA,MAAM,GAAG7J,CAAT;AACA8J,cAAAA,MAAM,GAAGtD,CAAC,GAAGvG,CAAJ,GAAQ,CAAjB;AACA;;AACF,iBAAK,YAAL;AACE4J,cAAAA,MAAM,GAAGtD,CAAC,GAAGvG,CAAJ,GAAQ,CAAjB;AACA8J,cAAAA,MAAM,GAAG7J,CAAT;AACA;;AACF,iBAAK,UAAL;AACE4J,cAAAA,MAAM,GAAGrD,CAAC,GAAGvG,CAAJ,GAAQ,CAAjB;AACA6J,cAAAA,MAAM,GAAGvD,CAAC,GAAGvG,CAAJ,GAAQ,CAAjB;AACA;AAtBJ;;AAyBA,eAAK2E,QAAL,CAAcmF,MAAd,EAAsBD,MAAtB,EAA8B,KAAKnF,gBAAL,CAAsB1E,CAAtB,EAAyBC,CAAzB,CAA9B;AACD;AACF;AACF;;;WAtFD,mBAAyB;AACvB,aAAO,MAAP;AACD;;;;EAHsBwD;;AA0FzB,iEAAegG,UAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChGA;;IAQMM;;;;;;;;;;;;;;;;2DAKe;AACjBrC,MAAAA,KAAK,EAAE,eAACrO,KAAD;AAAA,eAA2B,CAA3B;AAAA,OADU;AAEjB2K,MAAAA,GAAG,EAAE,CAFY;AAGjBC,MAAAA,GAAG,EAAE;AAHY;;;;;;;WAMnB,gBAAOvE,UAAP,EAA2BvG,KAA3B,EAA0CC,MAA1C,EAAsE;AACpE,UAAI4K,GAAG,GAAGoD,QAAV;AAAA,UACEnD,GAAG,GAAG,CAAC,CADT;;AAGA,WAAK,IAAIhE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG7G,MAApB,EAA4B6G,CAAC,IAAI,CAAjC,EAAoC;AAClC,aAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG7G,KAApB,EAA2B6G,CAAC,IAAI,CAAhC,EAAmC;AACjC,cAAMiF,KAAK,GAAG,KAAKd,QAAL,CAAcnE,CAAd,EAAiBC,CAAjB,CAAd;AAEA+D,UAAAA,GAAG,GAAGD,IAAI,CAACC,GAAL,CAAS,CAACiB,KAAK,CAACZ,CAAN,GAAUY,KAAK,CAACX,CAAhB,GAAoBW,KAAK,CAACV,CAA3B,IAAgC,CAAzC,EAA4CP,GAA5C,CAAN;AACAC,UAAAA,GAAG,GAAGF,IAAI,CAACE,GAAL,CAAS,CAACgB,KAAK,CAACZ,CAAN,GAAUY,KAAK,CAACX,CAAhB,GAAoBW,KAAK,CAACV,CAA3B,IAAgC,CAAzC,EAA4CN,GAA5C,CAAN;AACD;AACF;;AAED,aAAO;AACLD,QAAAA,GAAG,EAAEA,GADA;AAELC,QAAAA,GAAG,EAAEA,GAFA;AAGLyD,QAAAA,KAAK,EAAE,eAAUrO,KAAV,EAAiC;AACtC,iBAAQ,CAACA,KAAK,GAAG2K,GAAT,IAAgB,GAAjB,IAAyBC,GAAG,GAAGD,GAA/B,CAAP;AACD;AALI,OAAP;AAOD;;;WAED,kBACEiB,KADF,EAOEjF,CAPF,EAQEC,CARF,EASEP,UATF,EAUEvG,KAVF,EAWEC,MAXF,EAiBE;AACA6L,MAAAA,KAAK,CAACZ,CAAN,GAAU,KAAKpB,IAAL,CAAUyE,KAAV,CAAgBzC,KAAK,CAACZ,CAAtB,CAAV;AACAY,MAAAA,KAAK,CAACX,CAAN,GAAU,KAAKrB,IAAL,CAAUyE,KAAV,CAAgBzC,KAAK,CAACX,CAAtB,CAAV;AACAW,MAAAA,KAAK,CAACV,CAAN,GAAU,KAAKtB,IAAL,CAAUyE,KAAV,CAAgBzC,KAAK,CAACV,CAAtB,CAAV;AAEA,aAAOU,KAAP;AACD;;;WAvDD,mBAAyB;AACvB,aAAO,eAAP;AACD;;;;EAH8BD;;AA2DjC,iEAAe+E,kBAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnEA;;IAUMC;;;;;;;;;;;;;;;;2DAKe;AACjBrC,MAAAA,UAAU,EAAE;AADK;;;;;;;WAInB,gCAA6C;AAC3C,aAAO;AACLA,QAAAA,UAAU,EAAE;AADP,OAAP;AAGD;;;WAED,gBAAOjI,UAAP,EAAqD;AACnD,aAAO;AACLiI,QAAAA,UAAU,EAAE,MAAMjI,UAAU,CAACiI;AADxB,OAAP;AAGD;;;WAED,kBACE1C,KADF,EAOEjF,CAPF,EAQEC,CARF,EASEP,UATF,EAUEvG,KAVF,EAWEC,MAXF,EAiBE;AACA6L,MAAAA,KAAK,CAACZ,CAAN,GAAUY,KAAK,CAACZ,CAAN,GAAU,KAAKpB,IAAL,CAAU0E,UAA9B;AACA1C,MAAAA,KAAK,CAACX,CAAN,GAAUW,KAAK,CAACX,CAAN,GAAU,KAAKrB,IAAL,CAAU0E,UAA9B;AACA1C,MAAAA,KAAK,CAACV,CAAN,GAAUU,KAAK,CAACV,CAAN,GAAU,KAAKtB,IAAL,CAAU0E,UAA9B;AAEA,aAAO1C,KAAP;AACD;;;WA3CD,mBAAyB;AACvB,aAAO,YAAP;AACD;;;;EAH4BD;;AA+C/B,iEAAegF,gBAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzDA;;IAWMC;;;;;;;;;;;;;WAKJ,gCAA6C;AAC3C,aAAO;AACLC,QAAAA,SAAS,EAAE,CADN;AAELC,QAAAA,OAAO,EAAE,CAFJ;AAGLC,QAAAA,QAAQ,EAAE,CAHL;AAILC,QAAAA,KAAK,EAAE,CAJF;AAKLC,QAAAA,KAAK,EAAE,CALF;AAMLC,QAAAA,KAAK,EAAE;AANF,OAAP;AAQD;;;WAED,kBACEtF,KADF,EAOEjF,CAPF,EAQEC,CARF,EASEP,UATF,EAUEvG,KAVF,EAWEC,MAXF,EAiBE;AACA,UAAQiL,CAAR,GAAoBY,KAApB,CAAQZ,CAAR;AAAA,UAAWC,CAAX,GAAoBW,KAApB,CAAWX,CAAX;AAAA,UAAcC,CAAd,GAAoBU,KAApB,CAAcV,CAAd;AAEA,aAAO;AACLF,QAAAA,CAAC,EACC,CAAE3E,UAAU,CAAC2K,KAAX,IACC3K,UAAU,CAACwK,SAAX,GAAuB5F,CAAvB,GAA2B,CAAC,MAAM5E,UAAU,CAACwK,SAAlB,IAA+B3F,CAD3D,CAAD,GAEC,GAFD,GAGC,CAAC,MAAM7E,UAAU,CAAC2K,KAAlB,IAA2BhG,CAH7B,IAIA,GANG;AAOLC,QAAAA,CAAC,EACC,CAAE5E,UAAU,CAAC4K,KAAX,IACC5K,UAAU,CAACyK,OAAX,GAAqB7F,CAArB,GAAyB,CAAC,MAAM5E,UAAU,CAACyK,OAAlB,IAA6B9F,CADvD,CAAD,GAEC,GAFD,GAGC,CAAC,MAAM3E,UAAU,CAAC4K,KAAlB,IAA2BhG,CAH7B,IAIA,GAZG;AAaLC,QAAAA,CAAC,EACC,CAAE7E,UAAU,CAAC6K,KAAX,IACC7K,UAAU,CAAC0K,QAAX,GAAsB9F,CAAtB,GAA0B,CAAC,MAAM5E,UAAU,CAAC0K,QAAlB,IAA8B9F,CADzD,CAAD,GAEC,GAFD,GAGC,CAAC,MAAM5E,UAAU,CAAC6K,KAAlB,IAA2BhG,CAH7B,IAIA,GAlBG;AAmBLC,QAAAA,CAAC,EAAES,KAAK,CAACT;AAnBJ,OAAP;AAqBD;;;WAxDD,mBAAyB;AACvB,aAAO,aAAP;AACD;;;;EAH4BQ;;AA4D/B,iEAAeiF,gBAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvEA;;IAUMO;;;;;;;;;;;;;;;;2DAKe;AACjBC,MAAAA,MAAM,EAAE;AADS;;;;;;;WAInB,gCAA2C;AACzC,aAAO;AACLC,QAAAA,QAAQ,EAAE;AADL,OAAP;AAGD;;;WAED,gBAAOhL,UAAP,EAAmD;AACjD,aAAO;AACL+K,QAAAA,MAAM,EACH,OAAO/K,UAAU,CAACgL,QAAX,GAAsB,GAAtB,GAA4B,GAAnC,CAAD,IACC,OAAO,MAAMhL,UAAU,CAACgL,QAAX,GAAsB,GAAnC,CADD;AAFG,OAAP;AAKD;;;WAED,kBACEzF,KADF,EAOEjF,CAPF,EAQEC,CARF,EASEP,UATF,EAUEvG,KAVF,EAWEC,MAXF,EAiBE;AACA6L,MAAAA,KAAK,CAACZ,CAAN,GAAU,KAAKpB,IAAL,CAAUwH,MAAV,IAAoBxF,KAAK,CAACZ,CAAN,GAAU,GAA9B,IAAqC,GAA/C;AACAY,MAAAA,KAAK,CAACX,CAAN,GAAU,KAAKrB,IAAL,CAAUwH,MAAV,IAAoBxF,KAAK,CAACX,CAAN,GAAU,GAA9B,IAAqC,GAA/C;AACAW,MAAAA,KAAK,CAACV,CAAN,GAAU,KAAKtB,IAAL,CAAUwH,MAAV,IAAoBxF,KAAK,CAACV,CAAN,GAAU,GAA9B,IAAqC,GAA/C;AAEA,aAAOU,KAAP;AACD;;;WA7CD,mBAAyB;AACvB,aAAO,UAAP;AACD;;;;EAH0BD;;AAiD7B,iEAAewF,cAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3DA;;IAeMG;;;;;;;;;;;;;;;;2DAKe;AACjBC,MAAAA,GAAG,EAAE,EADY;AAEjBC,MAAAA,GAAG,EAAE,EAFY;AAGjBC,MAAAA,GAAG,EAAE;AAHY;;;;;;;WAMnB,gCAA4C;AAC1C,aAAO;AACLC,QAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CADH;AAELC,QAAAA,MAAM,EAAE,CAFH;AAGLC,QAAAA,WAAW,EAAE,IAHR;AAILC,QAAAA,SAAS,EAAE;AAJN,OAAP;AAMD;;;WAED,gBACExL,UADF,EAEEvG,KAFF,EAGEC,MAHF,EAIEE,SAJF,EAKc;AACZ,UAAIwR,GAAG,GAAG,CAAV;AACA,UAAMF,GAAG,GAAG,EAAZ;AAAA,UACEC,GAAG,GAAG,EADR;;AAGA,WAAK,IAAIxK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,UAAU,CAACqL,MAAX,CAAkBzK,MAAtC,EAA8CD,CAAC,IAAI,CAAnD,EAAsD;AACpDyK,QAAAA,GAAG,IAAIpL,UAAU,CAACqL,MAAX,CAAkB1K,CAAlB,CAAP;AACD;;AAED,WAAK,IAAIA,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAGX,UAAU,CAACsL,MAA/B,EAAuC3K,EAAC,IAAI,CAA5C,EAA+C;AAC7CuK,QAAAA,GAAG,CAACvK,EAAD,CAAH,GAAW,MAAMA,EAAP,IAAaX,UAAU,CAACsL,MAAX,GAAoB,CAAjC,CAAD,GAAwC,CAAjD;AACD;;AAED,WAAK,IAAI3K,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAG,GAApB,EAAyBA,GAAC,IAAI,CAA9B,EAAiC;AAC/BwK,QAAAA,GAAG,CAACxK,GAAD,CAAH,GAAWX,UAAU,CAACsL,MAAX,GAAoB3K,GAArB,GAA0B,GAA3B,GAAkC,CAA3C;AACD;;AAED,aAAO;AACLyK,QAAAA,GAAG,EAAEA,GADA;AAELF,QAAAA,GAAG,EAAEA,GAFA;AAGLC,QAAAA,GAAG,EAAEA;AAHA,OAAP;AAKD;;;WAED,kBACE5F,KADF,EAOEjF,CAPF,EAQEC,CARF,EASEP,UATF,EAUEvG,KAVF,EAWEC,MAXF,EAiBE;AACA,UAAI+R,IAAI,GAAGlG,KAAK,CAACZ,CAAjB;AAAA,UACE+G,MAAM,GAAGnG,KAAK,CAACX,CADjB;AAAA,UAEE+G,KAAK,GAAGpG,KAAK,CAACV,CAFhB;AAAA,UAGE+G,IAHF;AAAA,UAIEC,MAJF;AAAA,UAKEC,KALF;AAAA,UAMEvI,IAAI,GAAG,KAAKA,IANd;AAAA,UAOEwI,QAPF;AAAA,UAQEC,MARF;AAAA,UASEC,QATF;AAAA,UAUEC,OAVF;AAAA,UAWEC,EAXF;AAAA,UAYEC,EAZF;AAAA,UAaEvF,CAbF;AAAA,UAcEwF,SAdF;;AAgBA,UAAI,CAACrM,UAAU,CAACuL,WAAhB,EAA6B;AAC3Bc,QAAAA,SAAS,GAAG,CAACZ,IAAI,GAAGC,MAAP,GAAgBC,KAAjB,IAA0B,CAAtC;AACAF,QAAAA,IAAI,GAAGY,SAAP;AACAX,QAAAA,MAAM,GAAGW,SAAT;AACAV,QAAAA,KAAK,GAAGU,SAAR;AACD;;AAEDT,MAAAA,IAAI,GAAGrI,IAAI,CAAC2H,GAAL,CAAS3H,IAAI,CAAC4H,GAAL,CAASM,IAAT,CAAT,CAAP;AACAI,MAAAA,MAAM,GAAGtI,IAAI,CAAC2H,GAAL,CAAS3H,IAAI,CAAC4H,GAAL,CAASO,MAAT,CAAT,CAAT;AACAI,MAAAA,KAAK,GAAGvI,IAAI,CAAC2H,GAAL,CAAS3H,IAAI,CAAC4H,GAAL,CAASQ,KAAT,CAAT,CAAR;AAEAK,MAAAA,MAAM,GAAGP,IAAI,GAAGG,IAAhB;AACAK,MAAAA,QAAQ,GAAGP,MAAM,GAAGG,MAApB;AACAK,MAAAA,OAAO,GAAGP,KAAK,GAAGG,KAAlB;;AAEA,UAAI9L,UAAU,CAACwL,SAAf,EAA0B;AACxB,aAAK,IAAI7K,CAAC,GAAG,CAAC,CAAd,EAAiBA,CAAC,IAAI,CAAtB,EAAyBA,CAAC,IAAI,CAA9B,EAAiC;AAC/BwL,UAAAA,EAAE,GAAGxL,CAAC,GAAGJ,CAAT;;AACA,cAAI4L,EAAE,GAAG,CAAL,IAAUA,EAAE,IAAIzS,MAApB,EAA4B;AAC1B;AACD;;AACD,eAAK,IAAI4S,CAAC,GAAG,CAAC,CAAd,EAAiBA,CAAC,IAAI,CAAtB,EAAyBA,CAAC,IAAI,CAA9B,EAAiC;AAC/BF,YAAAA,EAAE,GAAGE,CAAC,GAAGhM,CAAT;;AACA,gBAAI8L,EAAE,GAAG,CAAL,IAAUA,EAAE,IAAI3S,KAApB,EAA2B;AACzB;AACD;;AACDoN,YAAAA,CAAC,GAAG7G,UAAU,CAACqL,MAAX,CAAkB,CAAC1K,CAAC,GAAG,CAAL,IAAU,CAAV,GAAc2L,CAAd,GAAkB,CAApC,CAAJ;;AACA,gBAAIzF,CAAC,KAAK,CAAV,EAAa;AACXkF,cAAAA,QAAQ,GAAG,KAAKtH,QAAL,CAAc2H,EAAd,EAAkBD,EAAlB,CAAX;AACAJ,cAAAA,QAAQ,CAACpH,CAAT,IAAeqH,MAAM,GAAGnF,CAAV,GAAetD,IAAI,CAAC6H,GAAlC;AACAW,cAAAA,QAAQ,CAACnH,CAAT,IAAeqH,QAAQ,GAAGpF,CAAZ,GAAiBtD,IAAI,CAAC6H,GAApC;AACAW,cAAAA,QAAQ,CAAClH,CAAT,IAAeqH,OAAO,GAAGrF,CAAX,GAAgBtD,IAAI,CAAC6H,GAAnC;AACA,mBAAKnG,QAAL,CAAcmH,EAAd,EAAkBD,EAAlB,EAAsBJ,QAAtB;AACD;AACF;AACF;AACF;;AAED,aAAO;AACLpH,QAAAA,CAAC,EAAEiH,IADE;AAELhH,QAAAA,CAAC,EAAEiH,MAFE;AAGLhH,QAAAA,CAAC,EAAEiH,KAHE;AAILhH,QAAAA,CAAC,EAAES,KAAK,CAACT;AAJJ,OAAP;AAMD;;;WA9HD,mBAAyB;AACvB,aAAO,WAAP;AACD;;;;EAH2BQ;;AAkI9B,iEAAe2F,eAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjJA;AACA;;IAYMuB;;;;;;;;;;;;;;;;2DAKe;AACjBC,MAAAA,UAAU,EAAE,CADK;AAEjBC,MAAAA,UAAU,EAAE;AAFK;;;;;;;WAKnB,gCAA2C;AACzC,aAAO;AACLC,QAAAA,OAAO,EAAE,CADJ;AAELC,QAAAA,QAAQ,EAAE;AAFL,OAAP;AAID;;;WAED,gBACE5M,UADF,EAEEvG,KAFF,EAGEC,MAHF,EAIEE,SAJF,EAKc;AACZ,UAAMiT,CAAC,GAAG,CAAC,IAAI7M,UAAU,CAAC2M,OAAhB,KAA4B,IAAI3M,UAAU,CAAC4M,QAA3C,CAAV;AACA,aAAO;AACLH,QAAAA,UAAU,EAAEI,CAAC,GAAG7M,UAAU,CAAC4M,QADtB;AAELF,QAAAA,UAAU,EAAEG;AAFP,OAAP;AAID;;;WAED,kBACEtH,KADF,EAOEjF,CAPF,EAQEC,CARF,EASEP,UATF,EAUEvG,KAVF,EAWEC,MAXF,EAiBE;AACA,UAAMoT,CAAC,GAAGzI,IAAI,CAAC0I,MAAL,EAAV;AAAA,UACEC,CAAC,GAAGT,2DAAU,CAAC,KAAKhJ,IAAL,CAAUkJ,UAAX,EAAuB,KAAKlJ,IAAL,CAAUmJ,UAAjC,EAA6CI,CAA7C,CADhB;AAEAvH,MAAAA,KAAK,CAACT,CAAN,GAAUS,KAAK,CAACT,CAAN,GAAUkI,CAApB;AACA,aAAOzH,KAAP;AACD;;;WAnDD,mBAAyB;AACvB,aAAO,UAAP;AACD;;;;EAH0BD;;AAuD7B,iEAAekH,cAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpEA;;IA2BMS;;;;;;;;;;;;;;;;2DAKe;AACjBC,MAAAA,IAAI,EAAE,CADW;AAEjBC,MAAAA,IAAI,EAAE,CAFW;AAGjBjC,MAAAA,GAAG,EAAE,EAHY;AAIjBkC,MAAAA,GAAG,EAAE,EAJY;AAKjBjC,MAAAA,GAAG,EAAE;AALY;;;;;;;WAQnB,gCAAyC;AACvC,aAAO;AACLkC,QAAAA,QAAQ,EAAE;AACRC,UAAAA,oBAAoB,EAAE,CACpB,CADoB,EACjB,EADiB,EACb,CADa,EACV,EADU,EACN,EADM,EACF,CADE,EACC,CADD,EACI,CADJ,EACO,EADP,EACW,CADX,EACc,EADd,EACkB,CADlB,EACqB,CADrB,EACwB,CADxB,EAC2B,CAD3B,EAC8B,EAD9B,CADd;AAIRC,UAAAA,sBAAsB,EAAE,CACtB,CADsB,EACnB,CADmB,EAChB,CADgB,EACb,EADa,EACT,EADS,EACL,CADK,EACF,EADE,EACE,CADF,EACK,CADL,EACQ,EADR,EACY,CADZ,EACe,CADf,EACkB,EADlB,EACsB,CADtB,EACyB,EADzB,EAC6B,CAD7B,CAJhB;AAORC,UAAAA,oBAAoB,EAAE,CACpB,CADoB,EACjB,CADiB,EACd,CADc,EACX,CADW,EACR,CADQ,EACL,CADK,EACF,CADE,EACC,CADD,EACI,CADJ,EACO,CADP,EACU,EADV,EACc,EADd,EACkB,EADlB,EACsB,EADtB,EAC0B,EAD1B,EAC8B,EAD9B,CAPd;AAURC,UAAAA,yBAAyB,EAAE,CACzB,EADyB,EACrB,EADqB,EACjB,EADiB,EACb,EADa,EACT,EADS,EACL,EADK,EACD,EADC,EACG,CADH,EACM,CADN,EACS,CADT,EACY,EADZ,EACgB,EADhB,EACoB,EADpB,EACwB,CADxB,EAC2B,CAD3B,EAC8B,CAD9B,EACiC,CADjC,EACoC,EADpC,EACwC,EADxC,EAEzB,CAFyB,EAEtB,CAFsB,EAEnB,CAFmB,EAEhB,EAFgB,EAEZ,EAFY,EAER,EAFQ,EAEJ,EAFI,EAEA,EAFA,EAEI,EAFJ,EAEQ,EAFR,EAEY,EAFZ,EAEgB,EAFhB,EAEoB,EAFpB,EAEwB,EAFxB,EAE4B,EAF5B,EAEgC,EAFhC,EAEoC,EAFpC,CAVnB;AAcRC,UAAAA,sBAAsB,EAAE,CACtB,CADsB,EACnB,EADmB,EACf,EADe,EACX,EADW,EACP,CADO,EACJ,EADI,EACA,EADA,EACI,EADJ,EACQ,EADR,EACY,EADZ,EACgB,EADhB,EACoB,EADpB,EACwB,EADxB,EAC4B,EAD5B,EACgC,EADhC,EACoC,EADpC,EACwC,CADxC,EAC2C,EAD3C,EAEtB,CAFsB,EAEnB,EAFmB,EAEf,EAFe,EAEX,EAFW,EAEP,CAFO,EAEJ,EAFI,EAEA,EAFA,EAEI,EAFJ,EAEQ,EAFR,EAEY,EAFZ,EAEgB,EAFhB,EAEoB,EAFpB,EAEwB,EAFxB,EAE4B,EAF5B,EAEgC,CAFhC,EAEmC,EAFnC,EAEuC,EAFvC,EAE2C,EAF3C,EAGtB,CAHsB,EAGnB,EAHmB,EAGf,EAHe,EAGX,EAHW,EAGP,EAHO,EAGH,EAHG,EAGC,EAHD,EAGK,EAHL,EAGS,EAHT,EAGa,EAHb,EAGiB,EAHjB,EAGqB,EAHrB,EAGyB,EAHzB,EAG6B,EAH7B,EAGiC,CAHjC,EAGoC,EAHpC,EAGwC,CAHxC,EAG2C,EAH3C,EAItB,CAJsB,EAInB,EAJmB,EAIf,EAJe,EAIX,EAJW,EAIP,EAJO,EAIH,EAJG,EAIC,EAJD,EAIK,EAJL,EAIS,EAJT,EAIa,EAJb,CAdhB;AAoBRC,UAAAA,sBAAsB,EAAE,CACtB,CADsB,EACnB,GADmB,EACd,EADc,EACV,GADU,EACL,EADK,EACD,GADC,EACI,EADJ,EACQ,GADR,EACa,CADb,EACgB,GADhB,EACqB,EADrB,EACyB,GADzB,EAC8B,EAD9B,EACkC,GADlC,EACuC,EADvC,EAC2C,GAD3C,EAEtB,GAFsB,EAEjB,EAFiB,EAEb,GAFa,EAER,GAFQ,EAEH,GAFG,EAEE,EAFF,EAEM,GAFN,EAEW,GAFX,EAEgB,GAFhB,EAEqB,EAFrB,EAEyB,GAFzB,EAE8B,GAF9B,EAEmC,GAFnC,EAEwC,EAFxC,EAE4C,GAF5C,EAGtB,GAHsB,EAGjB,EAHiB,EAGb,GAHa,EAGR,EAHQ,EAGJ,GAHI,EAGC,EAHD,EAGK,GAHL,EAGU,EAHV,EAGc,GAHd,EAGmB,EAHnB,EAGuB,GAHvB,EAG4B,EAH5B,EAGgC,GAHhC,EAGqC,EAHrC,EAGyC,GAHzC,EAItB,EAJsB,EAIlB,GAJkB,EAIb,GAJa,EAIR,EAJQ,EAIJ,GAJI,EAIC,EAJD,EAIK,GAJL,EAIU,GAJV,EAIe,GAJf,EAIoB,EAJpB,EAIwB,GAJxB,EAI6B,EAJ7B,EAIiC,GAJjC,EAIsC,EAJtC,EAI0C,GAJ1C,EAKtB,GALsB,EAKjB,GALiB,EAKZ,EALY,EAKR,CALQ,EAKL,GALK,EAKA,EALA,EAKI,GALJ,EAKS,CALT,EAKY,GALZ,EAKiB,EALjB,EAKqB,GALrB,EAK0B,EAL1B,EAK8B,GAL9B,EAKmC,EALnC,EAKuC,GALvC,EAK4C,CAL5C,EAMtB,GANsB,EAMjB,EANiB,EAMb,GANa,EAMR,GANQ,EAMH,EANG,EAMC,GAND,EAMM,GANN,EAMW,GANX,EAMgB,EANhB,EAMoB,GANpB,EAMyB,GANzB,EAM8B,GAN9B,EAMmC,EANnC,EAMuC,GANvC,EAM4C,GAN5C,EAOtB,GAPsB,EAOjB,EAPiB,EAOb,GAPa,EAOR,GAPQ,EAOH,EAPG,EAOC,GAPD,EAOM,EAPN,EAOU,GAPV,EAOe,EAPf,EAOmB,GAPnB,EAOwB,EAPxB,EAO4B,GAP5B,EAOiC,EAPjC,EAOqC,GAPrC,EAO0C,EAP1C,EAQtB,GARsB,EAQjB,EARiB,EAQb,GARa,EAQR,EARQ,EAQJ,GARI,EAQC,GARD,EAQM,GARN,EAQW,GARX,EAQgB,EARhB,EAQoB,GARpB,EAQyB,GARzB,EAQ8B,GAR9B,EAQmC,EARnC,EAQuC,GARvC,EAQ4C,GAR5C,EAStB,GATsB,EASjB,EATiB,EASb,GATa,EASR,GATQ,EASH,GATG,EASE,EATF,EASM,CATN,EASS,GATT,EASc,EATd,EASkB,GATlB,EASuB,EATvB,EAS2B,GAT3B,EASgC,EAThC,EASoC,GATpC,EASyC,CATzC,EAS4C,GAT5C,EAUtB,EAVsB,EAUlB,GAVkB,EAUb,EAVa,EAUT,GAVS,EAUJ,EAVI,EAUA,GAVA,EAUK,GAVL,EAUU,EAVV,EAUc,GAVd,EAUmB,GAVnB,EAUwB,GAVxB,EAU6B,EAV7B,EAUiC,GAVjC,EAUsC,GAVtC,EAU2C,GAV3C,EAWtB,EAXsB,EAWlB,GAXkB,EAWb,GAXa,EAWR,GAXQ,EAWH,EAXG,EAWC,GAXD,EAWM,GAXN,EAWW,EAXX,EAWe,GAXf,EAWoB,EAXpB,EAWwB,GAXxB,EAW6B,EAX7B,EAWiC,GAXjC,EAWsC,EAXtC,EAW0C,GAX1C,EAYtB,EAZsB,EAYlB,GAZkB,EAYb,EAZa,EAYT,GAZS,EAYJ,EAZI,EAYA,GAZA,EAYK,EAZL,EAYS,GAZT,EAYc,GAZd,EAYmB,EAZnB,EAYuB,GAZvB,EAY4B,EAZ5B,EAYgC,GAZhC,EAYqC,GAZrC,EAY0C,GAZ1C,EAatB,EAbsB,EAalB,GAbkB,EAab,EAba,EAaT,GAbS,EAaJ,EAbI,EAaA,GAbA,EAaK,GAbL,EAaU,GAbV,EAae,EAbf,EAamB,EAbnB,EAauB,GAbvB,EAa4B,EAb5B,EAagC,GAbhC,EAaqC,CAbrC,EAawC,GAbxC,EAa6C,EAb7C,EActB,GAdsB,EAcjB,CAdiB,EAcd,GAdc,EAcT,EAdS,EAcL,GAdK,EAcA,CAdA,EAcG,GAdH,EAcQ,EAdR,EAcY,GAdZ,EAciB,GAdjB,EAcsB,EAdtB,EAc0B,GAd1B,EAc+B,GAd/B,EAcoC,GAdpC,EAcyC,EAdzC,EAetB,GAfsB,EAejB,GAfiB,EAeZ,GAfY,EAeP,EAfO,EAeH,GAfG,EAeE,GAfF,EAeO,GAfP,EAeY,EAfZ,EAegB,GAfhB,EAeqB,GAfrB,EAe0B,EAf1B,EAe8B,GAf9B,EAemC,EAfnC,EAeuC,GAfvC,EAe4C,EAf5C,EAgBtB,GAhBsB,EAgBjB,EAhBiB,EAgBb,GAhBa,EAgBR,EAhBQ,EAgBJ,GAhBI,EAgBC,EAhBD,EAgBK,GAhBL,EAgBU,EAhBV,EAgBc,GAhBd,EAgBmB,EAhBnB,EAgBuB,GAhBvB,EAgB4B,GAhB5B,EAgBiC,GAhBjC,EAgBsC,GAhBtC,EAgB2C,EAhB3C,EAiBtB,GAjBsB,EAiBjB,GAjBiB,EAiBZ,GAjBY,EAiBP,EAjBO,EAiBH,GAjBG,EAiBE,GAjBF,EAiBO,GAjBP,EAiBY,EAjBZ,EAiBgB,GAjBhB,EAiBqB,GAjBrB,EAiB0B,GAjB1B,EAiB+B,EAjB/B,CApBhB;AAuCRC,UAAAA,oBAAoB,EAAE,CACpB,CADoB,EACjB,EADiB,EACb,EADa,EACT,CADS,EACN,CADM,EACH,CADG,EACA,EADA,EACI,EADJ,EACQ,EADR,EACY,CADZ,EACe,CADf,EACkB,CADlB,EACqB,EADrB,EACyB,EADzB,EAC6B,EAD7B,EACiC,CADjC,EACoC,CADpC,EACuC,CADvC,EAC0C,CAD1C,EAC6C,CAD7C,EACgD,CADhD,EAEpB,CAFoB,EAEjB,EAFiB,EAEb,EAFa,EAET,CAFS,EAEN,CAFM,EAEH,CAFG,EAEA,EAFA,EAEI,EAFJ,EAEQ,EAFR,EAEY,CAFZ,EAEe,CAFf,EAEkB,CAFlB,EAEqB,EAFrB,EAEyB,EAFzB,EAE6B,EAF7B,CAvCd;AA2CRC,UAAAA,oBAAoB,EAAE,CACpB,EADoB,EAChB,EADgB,EACZ,EADY,EACR,EADQ,EACJ,EADI,EACA,EADA,EACI,EADJ,EACQ,EADR,EACY,EADZ,EACgB,EADhB,EACoB,EADpB,EACwB,EADxB,EAC4B,CAD5B,EAC+B,CAD/B,EACkC,CADlC,EACqC,CADrC,EACwC,EADxC,EAC4C,EAD5C,EAEpB,EAFoB,EAEhB,EAFgB,EAEZ,CAFY,EAET,CAFS,EAEN,CAFM,EAEH,EAFG,EAEC,EAFD,EAEK,EAFL,EAES,EAFT,EAEa,EAFb,EAEiB,CAFjB,EAEoB,CAFpB,EAEuB,CAFvB,EAE0B,EAF1B,EAE8B,EAF9B,EAEkC,EAFlC,EAEsC,EAFtC,EAE0C,EAF1C,EAE8C,EAF9C,EAGpB,EAHoB,EAGhB,EAHgB,EAGZ,EAHY,EAGR,CAHQ,EAGL,CAHK,EAGF,CAHE,EAGC,CAHD,EAGI,EAHJ,EAGQ,EAHR,EAGY,EAHZ,EAGgB,EAHhB,EAGoB,CAHpB,EAGuB,CAHvB,EAG0B,CAH1B,EAG6B,EAH7B,EAGiC,EAHjC,EAGqC,EAHrC,EAGyC,EAHzC,EAG6C,EAH7C,EAIpB,CAJoB,EAIjB,CAJiB,EAId,CAJc,EAIX,EAJW,EAIP,EAJO,EAIH,EAJG,EAIC,EAJD,EAIK,EAJL,CA3Cd;AAiDRC,UAAAA,oBAAoB,EAAE,CACpB,EADoB,EAChB,EADgB,EACZ,EADY,EACR,EADQ,EACJ,EADI,EACA,EADA,EACI,EADJ,EACQ,EADR,EACY,EADZ,EACgB,EADhB,EACoB,EADpB,EACwB,EADxB,EAC4B,EAD5B,EACgC,EADhC,EACoC,EADpC,EACwC,EADxC,EAC4C,EAD5C,EAEpB,EAFoB,EAEhB,GAFgB,EAEX,GAFW,EAEN,GAFM,EAED,EAFC,EAEG,EAFH,EAEO,EAFP,EAEW,EAFX,EAEe,EAFf,EAEmB,EAFnB,EAEuB,EAFvB,EAE2B,EAF3B,EAE+B,EAF/B,EAEmC,EAFnC,EAEuC,EAFvC,EAE2C,EAF3C,EAGpB,GAHoB,EAGf,GAHe,EAGV,GAHU,EAGL,GAHK,EAGA,GAHA,EAGK,EAHL,EAGS,EAHT,EAGa,EAHb,EAGiB,EAHjB,EAGqB,EAHrB,EAGyB,EAHzB,EAG6B,EAH7B,EAGiC,EAHjC,EAGqC,EAHrC,EAGyC,EAHzC,EAG6C,EAH7C,EAIpB,GAJoB,EAIf,GAJe,EAIV,GAJU,EAIL,GAJK,EAIA,GAJA,EAIK,GAJL,EAIU,EAJV,EAIc,EAJd,EAIkB,EAJlB,EAIsB,CAJtB,EAIyB,CAJzB,EAI4B,CAJ5B,EAI+B,CAJ/B,EAIkC,EAJlC,EAIsC,EAJtC,EAI0C,EAJ1C,EAI8C,GAJ9C,EAKpB,GALoB,EAKf,GALe,EAKV,GALU,EAKL,GALK,EAKA,GALA,EAKK,EALL,EAKS,EALT,EAKa,EALb,EAKiB,CALjB,EAKoB,CALpB,EAKuB,CALvB,EAK0B,EAL1B,EAK8B,EAL9B,EAKkC,EALlC,EAKsC,EALtC,EAK0C,GAL1C,EAMpB,GANoB,EAMf,GANe,EAMV,GANU,EAML,GANK,EAMA,EANA,EAMI,EANJ,EAMQ,EANR,EAMY,EANZ,EAMgB,CANhB,EAMmB,CANnB,EAMsB,CANtB,EAMyB,EANzB,EAM6B,EAN7B,EAMiC,EANjC,EAMqC,EANrC,EAMyC,EANzC,EAM6C,GAN7C,EAOpB,GAPoB,EAOf,GAPe,EAOV,EAPU,EAON,EAPM,EAOF,EAPE,EAOE,EAPF,EAOM,EAPN,EAOU,EAPV,EAOc,EAPd,EAOkB,EAPlB,EAOsB,EAPtB,EAO0B,EAP1B,EAO8B,EAP9B,EAOkC,EAPlC,EAOsC,EAPtC,EAO0C,EAP1C,EAO8C,EAP9C,EAQpB,EARoB,EAQhB,EARgB,EAQZ,EARY,EAQR,EARQ,EAQJ,EARI,EAQA,EARA,EAQI,EARJ,EAQQ,EARR,EAQY,EARZ,EAQgB,EARhB,EAQoB,EARpB,EAQwB,EARxB,EAQ4B,EAR5B,EAQgC,EARhC,EAQoC,EARpC,EAQwC,EARxC,EAQ4C,EAR5C,EASpB,EAToB,EAShB,EATgB,EASZ,EATY,EASR,EATQ,EASJ,EATI,EASA,EATA,EASI,EATJ,EASQ,EATR,EASY,EATZ,EASgB,EAThB,EASoB,EATpB,EASwB,EATxB,EAS4B,EAT5B,EASgC,EAThC,EASoC,EATpC,EASwC,EATxC,EAS4C,EAT5C,EAUpB,EAVoB,EAUhB,EAVgB,EAUZ,EAVY,EAUR,EAVQ,EAUJ,GAVI,EAUC,GAVD,EAUM,GAVN,EAUW,EAVX,EAUe,EAVf,EAUmB,EAVnB,EAUuB,EAVvB,EAU2B,EAV3B,EAU+B,EAV/B,EAUmC,EAVnC,EAUuC,EAVvC,EAU2C,EAV3C,EAU+C,EAV/C,EAWpB,EAXoB,EAWhB,EAXgB,EAWZ,GAXY,EAWP,GAXO,EAWF,GAXE,EAWG,GAXH,EAWQ,GAXR,EAWa,EAXb,EAWiB,EAXjB,EAWqB,EAXrB,EAWyB,EAXzB,EAW6B,CAX7B,EAWgC,CAXhC,EAWmC,CAXnC,EAWsC,CAXtC,EAWyC,EAXzC,EAW6C,EAX7C,EAYpB,EAZoB,EAYhB,GAZgB,EAYX,GAZW,EAYN,GAZM,EAYD,GAZC,EAYI,GAZJ,EAYS,GAZT,EAYc,EAZd,EAYkB,EAZlB,EAYsB,EAZtB,EAY0B,CAZ1B,EAY6B,CAZ7B,EAYgC,CAZhC,EAYmC,EAZnC,EAYuC,EAZvC,EAY2C,EAZ3C,EAY+C,EAZ/C,EAapB,GAboB,EAaf,GAbe,EAaV,GAbU,EAaL,GAbK,EAaA,GAbA,EAaK,GAbL,EAaU,EAbV,EAac,EAbd,EAakB,EAblB,EAasB,CAbtB,EAayB,CAbzB,EAa4B,CAb5B,EAa+B,EAb/B,EAamC,EAbnC,EAauC,EAbvC,EAa2C,EAb3C,EAcpB,GAdoB,EAcf,GAde,EAcV,GAdU,EAcL,GAdK,EAcA,GAdA,EAcK,EAdL,EAcS,EAdT,EAca,EAdb,EAciB,EAdjB,EAcqB,EAdrB,EAcyB,EAdzB,EAc6B,EAd7B,EAciC,EAdjC,EAcqC,EAdrC,EAcyC,EAdzC,EAc6C,EAd7C,EAepB,EAfoB,EAehB,GAfgB,EAeX,GAfW,EAeN,GAfM,EAeD,EAfC,EAeG,EAfH,EAeO,EAfP,EAeW,EAfX,EAee,EAff,EAemB,EAfnB,EAeuB,EAfvB,EAe2B,EAf3B,EAe+B,EAf/B,EAemC,EAfnC,EAeuC,EAfvC,EAe2C,EAf3C,EAe+C,EAf/C,EAgBpB,EAhBoB,EAgBhB,EAhBgB,EAgBZ,EAhBY,EAgBR,EAhBQ,EAgBJ,EAhBI,EAgBA,EAhBA;AAjDd,SADL;AAqELxC,QAAAA,MAAM,EAAE,CArEH;AAsELD,QAAAA,MAAM,EAAE,sBAtEH;AAuELE,QAAAA,WAAW,EAAE;AAvER,OAAP;AAyED;;;WAED,gBACEvL,UADF,EAEEvG,KAFF,EAGEC,MAHF,EAIEE,SAJF,EAKc;AACZ,UAAIyR,MAAM,GAAGrL,UAAU,CAACqL,MAAxB;AAAA,UACE8B,IADF;AAAA,UAEED,IAFF;AAAA,UAGEhC,GAAG,GAAG,EAHR;AAAA,UAIEC,GAAG,GAAG,EAJR;AAAA,UAKEiC,GAAG,GAAG,EALR;;AAOA,UAAI,OAAO/B,MAAP,KAAkB,QAAtB,EAAgC;AAC9BA,QAAAA,MAAM,GAAGrL,UAAU,CAACqN,QAAX,CAAoBhC,MAApB,CAAT;AACD;;AAED8B,MAAAA,IAAI,GAAG9I,IAAI,CAACuF,IAAL,CAAUyB,MAAM,CAACzK,MAAjB,CAAP;AACAsM,MAAAA,IAAI,GAAG7I,IAAI,CAACuF,IAAL,CAAUyB,MAAM,CAACzK,MAAjB,CAAP;;AAEA,WAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,UAAU,CAACsL,MAA/B,EAAuC3K,CAAC,IAAI,CAA5C,EAA+C;AAC7CuK,QAAAA,GAAG,CAACvK,CAAD,CAAH,GAAU,MAAMA,CAAP,IAAaX,UAAU,CAACsL,MAAX,GAAoB,CAAjC,CAAT;AACD;;AAED,WAAK,IAAI3K,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAG,GAApB,EAAyBA,EAAC,IAAI,CAA9B,EAAiC;AAC/BwK,QAAAA,GAAG,CAACxK,EAAD,CAAH,GAAW,CAACX,UAAU,CAACsL,MAAX,GAAoB,CAArB,IAA0B3K,EAA3B,GAAgC,GAAjC,GAAwC,CAAjD;AACAyM,QAAAA,GAAG,CAACzM,EAAD,CAAH,GAAWA,EAAC,IAAIwM,IAAI,GAAGD,IAAP,GAAc,CAAlB,CAAF,GAA0B,GAA3B,GAAkC,CAA3C;AACD;;AAED,aAAO;AACL7B,QAAAA,MAAM,EAANA,MADK;AAELH,QAAAA,GAAG,EAAHA,GAFK;AAGLC,QAAAA,GAAG,EAAHA,GAHK;AAILiC,QAAAA,GAAG,EAAHA,GAJK;AAKLF,QAAAA,IAAI,EAAJA,IALK;AAMLC,QAAAA,IAAI,EAAJA;AANK,OAAP;AAQD;;;WAED,kBACE5H,KADF,EAOEjF,CAPF,EAQEC,CARF,EASEP,UATF,EAUEvG,KAVF,EAWEC,MAXF,EAiBE;AACA,UAAIqU,GAAG,GAAGzN,CAAC,GAAG,KAAKiD,IAAL,CAAU2J,IAAxB;AAAA,UACEc,GAAG,GAAGzN,CAAC,GAAG,KAAKgD,IAAL,CAAU4J,IADtB;AAAA,UAEEL,CAAC,GAAG9M,UAAU,CAACqL,MAAX,CAAkB2C,GAAG,GAAG,KAAKzK,IAAL,CAAU2J,IAAhB,GAAuBa,GAAzC,CAFN;AAAA,UAGEE,GAAG,GAAG1I,KAAK,CAACZ,CAHd;AAAA,UAIEuJ,KAAK,GAAG3I,KAAK,CAACX,CAJhB;AAAA,UAKEuJ,IAAI,GAAG5I,KAAK,CAACV,CALf;AAAA,UAMErC,MAAM,GAAG;AAAEsC,QAAAA,CAAC,EAAES,KAAK,CAACT,CAAX;AAAcH,QAAAA,CAAC,EAAE,CAAjB;AAAoBC,QAAAA,CAAC,EAAE,CAAvB;AAA0BC,QAAAA,CAAC,EAAE;AAA7B,OANX;AAAA,UAOElL,KAPF;;AASA,UAAIqG,UAAU,CAACuL,WAAf,EAA4B;AAC1B/I,QAAAA,MAAM,CAACmC,CAAP,GACE,KAAKpB,IAAL,CAAU2H,GAAV,CACE,KAAK3H,IAAL,CAAU6J,GAAV,CAAca,GAAd,IAAqBnB,CAArB,GAAyB,KAAKvJ,IAAL,CAAU4H,GAAV,CAAc8C,GAAd,IAAqB,CAA9C,GAAkD,KAAK1K,IAAL,CAAU4H,GAAV,CAAc8C,GAAd,CADpD,CADF;AAIAzL,QAAAA,MAAM,CAACoC,CAAP,GACE,KAAKrB,IAAL,CAAU2H,GAAV,CACE,KAAK3H,IAAL,CAAU6J,GAAV,CAAcc,KAAd,IAAuBpB,CAAvB,GACI,KAAKvJ,IAAL,CAAU4H,GAAV,CAAc+C,KAAd,IAAuB,CAD3B,GAEI,KAAK3K,IAAL,CAAU4H,GAAV,CAAc+C,KAAd,CAHN,CADF;AAMA1L,QAAAA,MAAM,CAACqC,CAAP,GACE,KAAKtB,IAAL,CAAU2H,GAAV,CACE,KAAK3H,IAAL,CAAU6J,GAAV,CAAce,IAAd,IAAsBrB,CAAtB,GACI,KAAKvJ,IAAL,CAAU4H,GAAV,CAAcgD,IAAd,IAAsB,CAD1B,GAEI,KAAK5K,IAAL,CAAU4H,GAAV,CAAcgD,IAAd,CAHN,CADF;AAMD,OAjBD,MAiBO;AACLxU,QAAAA,KAAK,GAAG,CAACsU,GAAG,GAAGC,KAAN,GAAcC,IAAf,IAAuB,CAA/B;AACA3L,QAAAA,MAAM,CAACmC,CAAP,GACEnC,MAAM,CAACoC,CAAP,GACApC,MAAM,CAACqC,CAAP,GACE,KAAKtB,IAAL,CAAU2H,GAAV,CACE,KAAK3H,IAAL,CAAU6J,GAAV,CAAczT,KAAd,IAAuBmT,CAAvB,GACI,KAAKvJ,IAAL,CAAU4H,GAAV,CAAcxR,KAAd,IAAuB,CAD3B,GAEI,KAAK4J,IAAL,CAAU4H,GAAV,CAAcxR,KAAd,CAHN,CAHJ;AAQD;;AAED,aAAO6I,MAAP;AACD;;;WAxLD,mBAAyB;AACvB,aAAO,QAAP;AACD;;;;EAHwB8C;;AA4L3B,iEAAe2H,YAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvNA;;IAsBMmB;;;;;;;;;;;;;;;;2DAKe;AACjBC,MAAAA,WAAW,EAAE,EADI;AAEjBC,MAAAA,WAAW,EAAE;AAFI;;;;;;;WAKnB,gCAAuC;AACrC,aAAO;AACLC,QAAAA,QAAQ,EAAE;AACRC,UAAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAC,CAAR,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B,CADF;AAERC,UAAAA,QAAQ,EAAE,CAAC,CAAC,CAAF,EAAK,CAAL,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B,CAFF;AAGRC,UAAAA,QAAQ,EAAE,CAAC,CAAC,CAAF,EAAK,CAAL,EAAQ,CAAR,EAAW,CAAC,CAAZ,EAAe,CAAf,EAAkB,CAAlB,EAAqB,CAAC,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,CAHF;AAIRC,UAAAA,QAAQ,EAAE,CAAC,CAAC,CAAF,EAAK,CAAC,CAAN,EAAS,CAAC,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,CAJF;AAKRC,UAAAA,MAAM,EAAE,CAAC,CAAC,CAAF,EAAK,CAAL,EAAQ,CAAR,EAAW,CAAC,CAAZ,EAAe,CAAf,EAAkB,CAAlB,EAAqB,CAAC,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,CALA;AAMRC,UAAAA,MAAM,EAAE,CAAC,CAAC,CAAF,EAAK,CAAC,CAAN,EAAS,CAAC,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,CANA;AAORC,UAAAA,SAAS,EAAE,CAAC,CAAC,CAAF,EAAK,CAAL,EAAQ,CAAR,EAAW,CAACzK,IAAI,CAACuF,IAAL,CAAU,CAAV,CAAZ,EAA0B,CAA1B,EAA6BvF,IAAI,CAACuF,IAAL,CAAU,CAAV,CAA7B,EAA2C,CAAC,CAA5C,EAA+C,CAA/C,EAAkD,CAAlD,CAPH;AAQRmF,UAAAA,SAAS,EAAE,CAAC,CAAC,CAAF,EAAK,CAAC1K,IAAI,CAACuF,IAAL,CAAU,CAAV,CAAN,EAAoB,CAAC,CAArB,EAAwB,CAAxB,EAA2B,CAA3B,EAA8B,CAA9B,EAAiC,CAAjC,EAAoCvF,IAAI,CAACuF,IAAL,CAAU,CAAV,CAApC,EAAkD,CAAlD;AARH,SADL;AAWLyE,QAAAA,WAAW,EAAE,QAXR;AAYLC,QAAAA,WAAW,EAAE;AAZR,OAAP;AAcD;;;WAED,gBACEtO,UADF,EAEEvG,KAFF,EAGEC,MAHF,EAIEE,SAJF,EAKc;AACZ,UAAIoV,YAAY,GAAGhP,UAAU,CAACqO,WAA9B;AAAA,UACEY,YAAY,GAAGjP,UAAU,CAACsO,WAD5B;AAAA,UAEED,WAFF;AAAA,UAGEC,WAHF;;AAKA,UAAI,OAAOU,YAAP,KAAwB,QAA5B,EAAsC;AACpCX,QAAAA,WAAW,GAAGrO,UAAU,CAACuO,QAAX,CAAoBvO,UAAU,CAACqO,WAA/B,CAAd;AACD;;AACD,UAAI,OAAOY,YAAP,KAAwB,QAA5B,EAAsC;AACpCX,QAAAA,WAAW,GAAGtO,UAAU,CAACuO,QAAX,CAAoBvO,UAAU,CAACsO,WAA/B,CAAd;AACD;;AACD,aAAO;AACLD,QAAAA,WAAW,EAAXA,WADK;AAELC,QAAAA,WAAW,EAAXA;AAFK,OAAP;AAID;;;WAED,kBACE/I,KADF,EAOEjF,CAPF,EAQEC,CARF,EASEP,UATF,EAUEvG,KAVF,EAWEC,MAXF,EAiBE;AACA,UAAIiL,CAAC,GAAG,CAAR;AAAA,UACEC,CAAC,GAAG,CADN;AAAA,UAEEC,CAAC,GAAG,CAFN;AAAA,UAGEqK,EAAE,GAAG,CAHP;AAAA,UAIEC,EAAE,GAAG,CAJP;AAAA,UAKEC,EAAE,GAAG,CALP;AAAA,UAMEC,EAAE,GAAG,CANP;AAAA,UAOEC,EAAE,GAAG,CAPP;AAAA,UAQEC,EAAE,GAAG,CARP;AAAA,UASEpD,EATF;AAAA,UAUEqD,EAVF;AAAA,UAWEC,OAXF;AAAA,UAYEC,MAZF;AAAA,UAaE5I,CAbF;AAAA,UAcEgG,CAdF;;AAgBA,WAAK,IAAIkB,GAAG,GAAG,CAAC,CAAhB,EAAmBA,GAAG,IAAI,CAA1B,EAA6BA,GAAG,IAAI,CAApC,EAAuC;AACrC7B,QAAAA,EAAE,GAAG5L,CAAC,GAAGyN,GAAT;;AACA,YAAI,EAAE,KAAK7B,EAAL,IAAWA,EAAE,GAAGzS,MAAlB,CAAJ,EAA+B;AAC7ByS,UAAAA,EAAE,GAAG5L,CAAL;AACD;;AACDkP,QAAAA,OAAO,GAAG,KAAKzB,GAAG,GAAG,CAAX,IAAgB,CAA1B;;AACA,aAAK,IAAID,GAAG,GAAG,CAAC,CAAhB,EAAmBA,GAAG,IAAI,CAA1B,EAA6BA,GAAG,IAAI,CAApC,EAAuC;AACrCyB,UAAAA,EAAE,GAAGlP,CAAC,GAAGyN,GAAT;;AACA,cAAI,EAAE,KAAKyB,EAAL,IAAWA,EAAE,GAAG/V,KAAlB,CAAJ,EAA8B;AAC5B+V,YAAAA,EAAE,GAAGlP,CAAL;AACD;;AACDoP,UAAAA,MAAM,GAAG,KAAK1K,gBAAL,CAAsBwK,EAAtB,EAA0BrD,EAA1B,CAAT;AACArF,UAAAA,CAAC,GAAG,KAAKvD,IAAL,CAAU8K,WAAV,CAAsBoB,OAAO,GAAG1B,GAAhC,CAAJ;AACAjB,UAAAA,CAAC,GAAG,KAAKvJ,IAAL,CAAU+K,WAAV,CAAsBmB,OAAO,GAAG1B,GAAhC,CAAJ;AAEApJ,UAAAA,CAAC,GAAG+K,MAAM,CAAC/K,CAAX;AACAC,UAAAA,CAAC,GAAG8K,MAAM,CAAC9K,CAAX;AACAC,UAAAA,CAAC,GAAG6K,MAAM,CAAC7K,CAAX;AAEAqK,UAAAA,EAAE,IAAI7K,IAAI,CAACsL,KAAL,CAAW7I,CAAC,GAAGnC,CAAf,CAAN;AACAwK,UAAAA,EAAE,IAAI9K,IAAI,CAACsL,KAAL,CAAW7I,CAAC,GAAGlC,CAAf,CAAN;AACAwK,UAAAA,EAAE,IAAI/K,IAAI,CAACsL,KAAL,CAAW7I,CAAC,GAAGjC,CAAf,CAAN;AAEAwK,UAAAA,EAAE,IAAIhL,IAAI,CAACsL,KAAL,CAAW7C,CAAC,GAAGnI,CAAf,CAAN;AACA2K,UAAAA,EAAE,IAAIjL,IAAI,CAACsL,KAAL,CAAW7C,CAAC,GAAGlI,CAAf,CAAN;AACA2K,UAAAA,EAAE,IAAIlL,IAAI,CAACsL,KAAL,CAAW7C,CAAC,GAAGjI,CAAf,CAAN;AACD;AACF;;AACDF,MAAAA,CAAC,GAAGN,IAAI,CAACsL,KAAL,CAAWtL,IAAI,CAACuF,IAAL,CAAUsF,EAAE,GAAGA,EAAL,GAAUG,EAAE,GAAGA,EAAzB,IAA+B,GAA1C,CAAJ;AACAzK,MAAAA,CAAC,GAAGP,IAAI,CAACsL,KAAL,CAAWtL,IAAI,CAACuF,IAAL,CAAUuF,EAAE,GAAGA,EAAL,GAAUG,EAAE,GAAGA,EAAzB,IAA+B,GAA1C,CAAJ;AACAzK,MAAAA,CAAC,GAAGR,IAAI,CAACsL,KAAL,CAAWtL,IAAI,CAACuF,IAAL,CAAUwF,EAAE,GAAGA,EAAL,GAAUG,EAAE,GAAGA,EAAzB,IAA+B,GAA1C,CAAJ;AACA,aAAO;AACL5K,QAAAA,CAAC,EAAEA,CADE;AAELC,QAAAA,CAAC,EAAEA,CAFE;AAGLC,QAAAA,CAAC,EAAEA,CAHE;AAILC,QAAAA,CAAC,EAAES,KAAK,CAACT;AAJJ,OAAP;AAMD;;;WAxHD,mBAAyB;AACvB,aAAO,MAAP;AACD;;;;EAHsBQ;;AA4HzB,iEAAe8I,UAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClJA;;IAMMwB;;;;;;;;;;;;;WAKJ,gCAA2C;AACzC,aAAO;AACLC,QAAAA,QAAQ,EAAE;AADL,OAAP;AAGD;;;WAED,kBACEtK,KADF,EAOEjF,CAPF,EAQEC,CARF,EASEP,UATF,EAUEvG,KAVF,EAWEC,MAXF,EAiBE;AACA6L,MAAAA,KAAK,CAACZ,CAAN,GAAU,CAAC,IAAIN,IAAI,CAACyL,GAAL,CAAU,CAACvK,KAAK,CAACZ,CAAP,GAAW,GAAZ,GAAmB3E,UAAU,CAAC6P,QAAvC,CAAL,IAAyD,GAAnE;AACAtK,MAAAA,KAAK,CAACX,CAAN,GAAU,CAAC,IAAIP,IAAI,CAACyL,GAAL,CAAU,CAACvK,KAAK,CAACX,CAAP,GAAW,GAAZ,GAAmB5E,UAAU,CAAC6P,QAAvC,CAAL,IAAyD,GAAnE;AACAtK,MAAAA,KAAK,CAACV,CAAN,GAAU,CAAC,IAAIR,IAAI,CAACyL,GAAL,CAAU,CAACvK,KAAK,CAACV,CAAP,GAAW,GAAZ,GAAmB7E,UAAU,CAAC6P,QAAvC,CAAL,IAAyD,GAAnE;AAEA,aAAOtK,KAAP;AACD;;;WAjCD,mBAAyB;AACvB,aAAO,UAAP;AACD;;;;EAH0BD;;AAqC7B,iEAAesK,cAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3CA;;IAOMG;;;;;;;;;;;;;WAKJ,gCAAuC;AACrC,aAAO;AACLC,QAAAA,IAAI,EAAE,CADD;AAELC,QAAAA,IAAI,EAAE;AAFD,OAAP;AAID;;;WAED,kBACE1K,KADF,EAOEjF,CAPF,EAQEC,CARF,EASEP,UATF,EAUEvG,KAVF,EAWEC,MAXF,EAiBE;AACA,UAAIuU,GAAG,GAAG,CAAC,IAAIjO,UAAU,CAACgQ,IAAf,GAAsB,CAAvB,KAA6B,IAAK,IAAIzK,KAAK,CAACZ,CAAX,GAAgB,GAAjD,CAAV;AAAA,UACEuJ,KAAK,GAAG,CAAC,IAAIlO,UAAU,CAACgQ,IAAf,GAAsB,CAAvB,KAA6B,IAAK,IAAIzK,KAAK,CAACX,CAAX,GAAgB,GAAjD,CADV;AAAA,UAEEuJ,IAAI,GAAG,CAAC,IAAInO,UAAU,CAACgQ,IAAf,GAAsB,CAAvB,KAA6B,IAAK,IAAIzK,KAAK,CAACV,CAAX,GAAgB,GAAjD,CAFT;;AAIA,UAAIU,KAAK,CAACZ,CAAN,GAAU,GAAV,GAAgB,GAApB,EAAyB;AACvBsJ,QAAAA,GAAG,GAAG1I,KAAK,CAACZ,CAAN,GAAU,GAAV,GAAgBsJ,GAAhB,GAAsB,CAA5B;AACD,OAFD,MAEO;AACLA,QAAAA,GAAG,GAAG,CAACA,GAAG,GAAG1I,KAAK,CAACZ,CAAN,GAAU,GAAjB,KAAyBsJ,GAAG,GAAG,CAA/B,CAAN;AACD;;AAED,UAAI1I,KAAK,CAACX,CAAN,GAAU,GAAV,GAAgB,GAApB,EAAyB;AACvBsJ,QAAAA,KAAK,GAAG3I,KAAK,CAACX,CAAN,GAAU,GAAV,GAAgBsJ,KAAhB,GAAwB,CAAhC;AACD,OAFD,MAEO;AACLA,QAAAA,KAAK,GAAG,CAACA,KAAK,GAAG3I,KAAK,CAACX,CAAN,GAAU,GAAnB,KAA2BsJ,KAAK,GAAG,CAAnC,CAAR;AACD;;AAED,UAAI3I,KAAK,CAACV,CAAN,GAAU,GAAV,GAAgB,GAApB,EAAyB;AACvBsJ,QAAAA,IAAI,GAAG5I,KAAK,CAACV,CAAN,GAAU,GAAV,GAAgBsJ,IAAhB,GAAuB,CAA9B;AACD,OAFD,MAEO;AACLA,QAAAA,IAAI,GAAG,CAACA,IAAI,GAAG5I,KAAK,CAACV,CAAN,GAAU,GAAlB,KAA0BsJ,IAAI,GAAG,CAAjC,CAAP;AACD;;AAEDF,MAAAA,GAAG,GAAGA,GAAG,IAAI,CAAC,IAAIjO,UAAU,CAACiQ,IAAf,GAAsB,CAAvB,KAA6B,IAAIhC,GAAjC,IAAwC,CAA5C,CAAT;AACAC,MAAAA,KAAK,GAAGA,KAAK,IAAI,CAAC,IAAIlO,UAAU,CAACiQ,IAAf,GAAsB,CAAvB,KAA6B,IAAI/B,KAAjC,IAA0C,CAA9C,CAAb;AACAC,MAAAA,IAAI,GAAGA,IAAI,IAAI,CAAC,IAAInO,UAAU,CAACiQ,IAAf,GAAsB,CAAvB,KAA6B,IAAI9B,IAAjC,IAAyC,CAA7C,CAAX;AAEA5I,MAAAA,KAAK,CAACZ,CAAN,GAAUsJ,GAAG,GAAG,GAAhB;AACA1I,MAAAA,KAAK,CAACX,CAAN,GAAUsJ,KAAK,GAAG,GAAlB;AACA3I,MAAAA,KAAK,CAACV,CAAN,GAAUsJ,IAAI,GAAG,GAAjB;AAEA,aAAO5I,KAAP;AACD;;;WA5DD,mBAAyB;AACvB,aAAO,MAAP;AACD;;;;EAHsBD;;AAgEzB,iEAAeyK,UAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvEA;;IAgBMG;;;;;;;;;;;;;;;;2DAKe;AACjBC,MAAAA,KAAK,EAAE;AACLxL,QAAAA,CAAC,EAAE,EADE;AAELC,QAAAA,CAAC,EAAE,EAFE;AAGLC,QAAAA,CAAC,EAAE;AAHE;AADU;;;;;;;WAQnB,gCAAwC;AACtC,aAAO;AACLuL,QAAAA,QAAQ,EAAE,CADL;AAELC,QAAAA,UAAU,EAAE,CAFP;AAGLC,QAAAA,SAAS,EAAE;AAHN,OAAP;AAKD;;;WAED,gBACEtQ,UADF,EAEEvG,KAFF,EAGEC,MAHF,EAIEE,SAJF,EAKc;AACZ,UAAMuW,KAAK,GAAG;AACZxL,QAAAA,CAAC,EAAE,EADS;AAEZC,QAAAA,CAAC,EAAE,EAFS;AAGZC,QAAAA,CAAC,EAAE;AAHS,OAAd;;AAMA,WAAK,IAAIlE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,GAApB,EAAyBA,CAAC,IAAI,CAA9B,EAAiC;AAC/BwP,QAAAA,KAAK,CAACxL,CAAN,CAAQhE,CAAR,IAAc,MAAM0D,IAAI,CAACkM,GAAL,CAAS5P,CAAC,GAAG,GAAb,EAAkB,IAAIX,UAAU,CAACoQ,QAAjC,CAAN,GAAmD,GAApD,GAA2D,CAAxE;AACAD,QAAAA,KAAK,CAACvL,CAAN,CAAQjE,CAAR,IACG,MAAM0D,IAAI,CAACkM,GAAL,CAAS5P,CAAC,GAAG,GAAb,EAAkB,IAAIX,UAAU,CAACqQ,UAAjC,CAAN,GAAqD,GAAtD,GAA6D,CAD/D;AAEAF,QAAAA,KAAK,CAACtL,CAAN,CAAQlE,CAAR,IACG,MAAM0D,IAAI,CAACkM,GAAL,CAAS5P,CAAC,GAAG,GAAb,EAAkB,IAAIX,UAAU,CAACsQ,SAAjC,CAAN,GAAoD,GAArD,GAA4D,CAD9D;AAED;;AAED,aAAO;AACLH,QAAAA,KAAK,EAAEA;AADF,OAAP;AAGD;;;WAED,kBACE5K,KADF,EAOEjF,CAPF,EAQEC,CARF,EASEP,UATF,EAUEvG,KAVF,EAWEC,MAXF,EAiBE;AACA,aAAO;AACLiL,QAAAA,CAAC,EAAE,KAAKpB,IAAL,CAAU4M,KAAV,CAAgBxL,CAAhB,CAAkBY,KAAK,CAACZ,CAAxB,CADE;AAELC,QAAAA,CAAC,EAAE,KAAKrB,IAAL,CAAU4M,KAAV,CAAgBvL,CAAhB,CAAkBW,KAAK,CAACX,CAAxB,CAFE;AAGLC,QAAAA,CAAC,EAAE,KAAKtB,IAAL,CAAU4M,KAAV,CAAgBtL,CAAhB,CAAkBU,KAAK,CAACV,CAAxB,CAHE;AAILC,QAAAA,CAAC,EAAES,KAAK,CAACT;AAJJ,OAAP;AAMD;;;WArED,mBAAyB;AACvB,aAAO,OAAP;AACD;;;;EAHuBQ;;AAyE1B,iEAAe4K,WAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzFA;;IAEMM;;;;;;;;;;;;;WAKJ,kBACEjL,KADF,EAOEjF,CAPF,EAQEC,CARF,EASEP,UATF,EAUEvG,KAVF,EAWEC,MAXF,EAiBE;AACA,UAAM+W,MAAM,GAAG,QAAQlL,KAAK,CAACZ,CAAd,GAAkB,QAAQY,KAAK,CAACX,CAAhC,GAAoC,QAAQW,KAAK,CAACV,CAAjE;AACA,aAAO;AACLF,QAAAA,CAAC,EAAE8L,MADE;AAEL7L,QAAAA,CAAC,EAAE6L,MAFE;AAGL5L,QAAAA,CAAC,EAAE4L,MAHE;AAIL3L,QAAAA,CAAC,EAAES,KAAK,CAACT;AAJJ,OAAP;AAMD;;;WA7BD,mBAAyB;AACvB,aAAO,YAAP;AACD;;;;EAH2BQ;;AAiC9B,iEAAekL,eAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnCA;AACA;;IAQMI;;;;;;;;;;;;;WAKJ,gCAA4C;AAC1C,aAAO;AACL9J,QAAAA,CAAC,EAAE,CADE;AAEL+J,QAAAA,CAAC,EAAE,CAFE;AAGLhM,QAAAA,CAAC,EAAE;AAHE,OAAP;AAKD;;;WAED,kBACEU,KADF,EAOEjF,CAPF,EAQEC,CARF,EASEP,UATF,EAUEvG,KAVF,EAWEC,MAXF,EAiBE;AACA,UAAMoX,GAAG,GAAGJ,wDAAQ,CAACnL,KAAK,CAACZ,CAAP,EAAUY,KAAK,CAACX,CAAhB,EAAmBW,KAAK,CAACV,CAAzB,CAApB;AAEAiM,MAAAA,GAAG,CAAChK,CAAJ,IAAS9G,UAAU,CAAC8G,CAApB;;AACA,aAAOgK,GAAG,CAAChK,CAAJ,GAAQ,CAAf,EAAkB;AAChBgK,QAAAA,GAAG,CAAChK,CAAJ,IAASzC,IAAI,CAAC+D,EAAL,GAAU,CAAnB;AACD;;AAED0I,MAAAA,GAAG,CAACD,CAAJ,IAAS7Q,UAAU,CAAC6Q,CAApB;AACAC,MAAAA,GAAG,CAACD,CAAJ,GAAQxM,IAAI,CAACE,GAAL,CAASF,IAAI,CAACC,GAAL,CAASwM,GAAG,CAACD,CAAb,EAAgB,CAAhB,CAAT,EAA6B,CAA7B,CAAR;AAEAC,MAAAA,GAAG,CAACjM,CAAJ,IAAS7E,UAAU,CAAC6E,CAApB;AACAiM,MAAAA,GAAG,CAACjM,CAAJ,GAAQR,IAAI,CAACE,GAAL,CAASF,IAAI,CAACC,GAAL,CAASwM,GAAG,CAACjM,CAAb,EAAgB,CAAhB,CAAT,EAA6B,CAA7B,CAAR;AAEA,UAAIrC,MAAM,GAAGmO,wDAAQ,CAACG,GAAG,CAAChK,CAAL,EAAQgK,GAAG,CAACD,CAAZ,EAAeC,GAAG,CAACjM,CAAnB,CAArB;AACAU,MAAAA,KAAK,CAACZ,CAAN,GAAUnC,MAAM,CAACmC,CAAjB;AACAY,MAAAA,KAAK,CAACX,CAAN,GAAUpC,MAAM,CAACoC,CAAjB;AACAW,MAAAA,KAAK,CAACV,CAAN,GAAUrC,MAAM,CAACqC,CAAjB;AAEA,aAAOU,KAAP;AACD;;;WAjDD,mBAAyB;AACvB,aAAO,YAAP;AACD;;;;EAH2BD;;AAqD9B,iEAAesL,eAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9DA;;IAEMG;;;;;;;;;;;;;WAKJ,kBACExL,KADF,EAOEjF,CAPF,EAQEC,CARF,EASEP,UATF,EAUEvG,KAVF,EAWEC,MAXF,EAiBE;AACA6L,MAAAA,KAAK,CAACZ,CAAN,GAAU,MAAMY,KAAK,CAACZ,CAAtB;AACAY,MAAAA,KAAK,CAACX,CAAN,GAAU,MAAMW,KAAK,CAACX,CAAtB;AACAW,MAAAA,KAAK,CAACV,CAAN,GAAU,MAAMU,KAAK,CAACV,CAAtB;AACA,aAAOU,KAAP;AACD;;;WA1BD,mBAAyB;AACvB,aAAO,QAAP;AACD;;;;EAHwBD;;AA8B3B,iEAAeyL,YAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChCA;;IAEMC;;;;;;;;;;;;;WAKJ,kBACEzL,KADF,EAOEjF,CAPF,EAQEC,CARF,EASEP,UATF,EAUEvG,KAVF,EAWEC,MAXF,EAiBE;AACA6L,MAAAA,KAAK,CAACT,CAAN,GAAU,MAAMS,KAAK,CAACT,CAAtB;AACA,aAAOS,KAAP;AACD;;;WAxBD,mBAAyB;AACvB,aAAO,cAAP;AACD;;;;EAH6BD;;AA4BhC,iEAAe0L,iBAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9BA;;IAaMC;;;;;;;;;;;;;;;;2DAKe;AACjBC,MAAAA,GAAG,EAAE;AADY;;;;;;;WAInB,gCAAyC;AACvC,aAAO;AACLC,QAAAA,GAAG,EAAE,CADA;AAELC,QAAAA,IAAI,EAAE,CAFD;AAGLC,QAAAA,SAAS,EAAE,CAHN;AAILC,QAAAA,UAAU,EAAE;AAJP,OAAP;AAMD;;;WAED,gBACEtR,UADF,EAEEvG,KAFF,EAGEC,MAHF,EAIEE,SAJF,EAKc;AACZ,UAAI2X,SAAS,GAAG,SAAZA,SAAY,CAAU3X,SAAV,EAAqBH,KAArB,EAA4BC,MAA5B,EAAoC8X,MAApC,EAA4CC,MAA5C,EAAoD;AAClE,YAAI/M,KAAJ;AAAA,YACEgN,SAAS,GAAG,IAAIC,KAAJ,CAAU,CAAV,CADd;AAAA,YAEEC,QAAQ,GAAG,IAAID,KAAJ,CAAU,CAAV,CAFb;AAAA,YAGEE,QAAQ,GAAG,IAAIF,KAAJ,CAAU,CAAV,CAHb;AAAA,YAIEG,YAAY,GAAG,IAAIH,KAAJ,CAAU,CAAV,CAJjB;AAAA,YAKEI,YAAY,GAAG,IAAIJ,KAAJ,CAAU,CAAV,CALjB;AAAA,YAMEK,IAAI,GAAG,IAAIL,KAAJ,CAAU,CAAV,CANT;AAAA,YAOEM,UAAU,GAAGxY,KAAK,GAAGC,MAPvB;AAAA,YAQEwY,MAAM,GAAG,IARX;AAAA,YASEC,GAAG,GAAG,CATR;AAAA,YAUEC,KAAK,GAAG,CAVV;AAAA,YAWEC,IAAI,GAAG,CAXT;AAAA,YAYEC,IAAI,GAAG,CAZT;;AAcA,aAAK,IAAI3R,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG+Q,SAAS,CAAC9Q,MAA9B,EAAsCD,CAAC,IAAI,CAA3C,EAA8C;AAC5C+Q,UAAAA,SAAS,CAAC/Q,CAAD,CAAT,GAAe,IAAIgR,KAAJ,CAAU,GAAV,CAAf;;AACA,eAAK,IAAIrF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,GAApB,EAAyBA,CAAC,IAAI,CAA9B,EAAiC;AAC/BoF,YAAAA,SAAS,CAAC/Q,CAAD,CAAT,CAAa2L,CAAb,IAAkB,CAAlB;AACD;AACF;;AAED,aAAK,IAAI/L,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG7G,MAApB,EAA4B6G,CAAC,IAAI,CAAjC,EAAoC;AAClC,eAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG7G,KAApB,EAA2B6G,CAAC,IAAI,CAAhC,EAAmC;AACjCoE,YAAAA,KAAK,GAAGnE,CAAC,GAAG9G,KAAJ,GAAY,CAAZ,GAAgB6G,CAAC,GAAG,CAA5B;AACAoR,YAAAA,SAAS,CAACS,GAAD,CAAT,CAAevY,SAAS,CAAC2J,IAAV,CAAemB,KAAf,CAAf;AACAgN,YAAAA,SAAS,CAACU,KAAD,CAAT,CAAiBxY,SAAS,CAAC2J,IAAV,CAAemB,KAAK,GAAG,CAAvB,CAAjB;AACAgN,YAAAA,SAAS,CAACW,IAAD,CAAT,CAAgBzY,SAAS,CAAC2J,IAAV,CAAemB,KAAK,GAAG,CAAvB,CAAhB;AACD;AACF;;AAED,aAAK,IAAI/D,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAG,GAApB,EAAyBA,EAAC,IAAI,CAA9B,EAAiC;AAC/B,cACE+Q,SAAS,CAACS,GAAD,CAAT,CAAexR,EAAf,MAAsB+Q,SAAS,CAACU,KAAD,CAAT,CAAiBzR,EAAjB,CAAtB,IACA+Q,SAAS,CAACU,KAAD,CAAT,CAAiBzR,EAAjB,MAAwB+Q,SAAS,CAACW,IAAD,CAAT,CAAgB1R,EAAhB,CAF1B,EAGE;AACAuR,YAAAA,MAAM,GAAG,KAAT;AACA;AACD;AACF;;AAED,aAAK,IAAIvR,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAG,CAApB,EAAuBA,GAAC,IAAI,CAA5B,EAA+B;AAC7B,eAAK,IAAI2L,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAG,GAApB,EAAyBA,EAAC,IAAI,CAA9B,EAAiC;AAC/B,gBAAIoF,SAAS,CAAC/Q,GAAD,CAAT,CAAa2L,EAAb,IAAkB,CAAtB,EAAyB;AACvBsF,cAAAA,QAAQ,CAACjR,GAAD,CAAR,GAAc2L,EAAd;AACA;AACD;AACF;;AACD,eAAK,IAAIA,GAAC,GAAG,GAAb,EAAkBA,GAAC,IAAI,CAAvB,EAA0BA,GAAC,IAAI,CAA/B,EAAkC;AAChC,gBAAIoF,SAAS,CAAC/Q,GAAD,CAAT,CAAa2L,GAAb,IAAkB,CAAtB,EAAyB;AACvBuF,cAAAA,QAAQ,CAAClR,GAAD,CAAR,GAAc2L,GAAd;AACA;AACD;AACF;;AACDwF,UAAAA,YAAY,CAACnR,GAAD,CAAZ,GAAkB+G,QAAlB;AACAqK,UAAAA,YAAY,CAACpR,GAAD,CAAZ,GAAkB,CAAlB;;AACA,eAAK,IAAI2L,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAG,GAApB,EAAyBA,GAAC,IAAI,CAA9B,EAAiC;AAC/BwF,YAAAA,YAAY,CAACnR,GAAD,CAAZ,GAAkB0D,IAAI,CAACC,GAAL,CAASwN,YAAY,CAACnR,GAAD,CAArB,EAA0B+Q,SAAS,CAAC/Q,GAAD,CAAT,CAAa2L,GAAb,CAA1B,CAAlB;AACAyF,YAAAA,YAAY,CAACpR,GAAD,CAAZ,GAAkB0D,IAAI,CAACE,GAAL,CAASwN,YAAY,CAACpR,GAAD,CAArB,EAA0B+Q,SAAS,CAAC/Q,GAAD,CAAT,CAAa2L,GAAb,CAA1B,CAAlB;AACA0F,YAAAA,IAAI,CAACrR,GAAD,CAAJ,IAAW2L,GAAC,GAAGoF,SAAS,CAAC/Q,GAAD,CAAT,CAAa2L,GAAb,CAAf;AACD;;AACD0F,UAAAA,IAAI,CAACrR,GAAD,CAAJ,IAAWsR,UAAX;AACAL,UAAAA,QAAQ,CAACU,IAAD,CAAR,GAAiBjO,IAAI,CAACC,GAAL,CACfsN,QAAQ,CAACO,GAAD,CADO,EAEfP,QAAQ,CAACQ,KAAD,CAFO,EAGfR,QAAQ,CAACS,IAAD,CAHO,CAAjB;AAKAR,UAAAA,QAAQ,CAACS,IAAD,CAAR,GAAiBjO,IAAI,CAACE,GAAL,CACfsN,QAAQ,CAACM,GAAD,CADO,EAEfN,QAAQ,CAACO,KAAD,CAFO,EAGfP,QAAQ,CAACQ,IAAD,CAHO,CAAjB;AAKD;;AAED,aAAKE,aAAL,GAAqB,YAAM;AACzB,iBAAON,UAAP;AACD,SAFD;;AAIA,aAAKC,MAAL,GAAc,YAAM;AAClB,iBAAOA,MAAP;AACD,SAFD;;AAIA,aAAKM,YAAL,GAAoB,UAACC,OAAD,EAAU9Y,KAAV,EAAoB;AACtC,cAAI,CAACA,KAAL,EAAY;AACV,gBAAIsY,UAAU,GAAG,CAAb,IAAkBC,MAAlB,IAA4BvY,KAAK,IAAI,CAArC,IAA0CA,KAAK,IAAI,GAAvD,EAA4D;AAC1D,qBAAO+X,SAAS,CAAC,CAAD,CAAT,CAAa/X,KAAb,CAAP;AACD;;AACD,mBAAO,CAAC,CAAR;AACD;;AACD,cACEsY,UAAU,GAAG,CAAb,IACAQ,OAAO,GAAG,CADV,IAEAA,OAAO,GAAG,CAFV,IAGA9Y,KAAK,GAAG,CAHR,IAIAA,KAAK,GAAG,GALV,EAME;AACA,mBAAO,CAAC,CAAR;AACD;;AACD,iBAAO+X,SAAS,CAACe,OAAD,CAAT,CAAmB9Y,KAAnB,CAAP;AACD,SAjBD;;AAmBA,aAAK+Y,eAAL,GAAuB,UAACD,OAAD,EAAa;AAClC,cAAI,CAACA,OAAL,EAAc;AACZ,gBAAIR,UAAU,GAAG,CAAb,IAAkBC,MAAtB,EAA8B;AAC5B,qBAAOJ,YAAY,CAAC,CAAD,CAAnB;AACD;;AACD,mBAAO,CAAC,CAAR;AACD;;AACD,cAAIG,UAAU,GAAG,CAAb,IAAkBQ,OAAO,GAAG,CAA5B,IAAiCA,OAAO,GAAG,CAA/C,EAAkD;AAChD,mBAAO,CAAC,CAAR;AACD;;AACD,iBAAOX,YAAY,CAACW,OAAD,CAAnB;AACD,SAXD;;AAaA,aAAKE,eAAL,GAAuB,UAACF,OAAD,EAAa;AAClC,cAAI,CAACA,OAAL,EAAc;AACZ,gBAAIR,UAAU,GAAG,CAAb,IAAkBC,MAAtB,EAA8B;AAC5B,qBAAOH,YAAY,CAAC,CAAD,CAAnB;AACD;;AACD,mBAAO,CAAC,CAAR;AACD;;AACD,cAAIE,UAAU,GAAG,CAAb,IAAkBQ,OAAO,GAAG,CAA5B,IAAiCA,OAAO,GAAG,CAA/C,EAAkD;AAChD,mBAAO,CAAC,CAAR;AACD;;AACD,iBAAOV,YAAY,CAACU,OAAD,CAAnB;AACD,SAXD;;AAaA,aAAKG,WAAL,GAAmB,UAACH,OAAD,EAAa;AAC9B,cAAI,CAACA,OAAL,EAAc;AACZ,gBAAIR,UAAU,GAAG,CAAb,IAAkBC,MAAtB,EAA8B;AAC5B,qBAAON,QAAQ,CAAC,CAAD,CAAf;AACD;;AACD,mBAAO,CAAC,CAAR;AACD;;AACD,iBAAOA,QAAQ,CAACa,OAAD,CAAf;AACD,SARD;;AAUA,aAAKI,WAAL,GAAmB,UAACJ,OAAD,EAAa;AAC9B,cAAI,CAACA,OAAL,EAAc;AACZ,gBAAIR,UAAU,GAAG,CAAb,IAAkBC,MAAtB,EAA8B;AAC5B,qBAAOL,QAAQ,CAAC,CAAD,CAAf;AACD;;AACD,mBAAO,CAAC,CAAR;AACD;;AACD,iBAAOA,QAAQ,CAACY,OAAD,CAAf;AACD,SARD;;AAUA,aAAKK,YAAL,GAAoB,UAACL,OAAD,EAAa;AAC/B,cAAI,CAACA,OAAL,EAAc;AACZ,gBAAIR,UAAU,GAAG,CAAb,IAAkBC,MAAtB,EAA8B;AAC5B,qBAAOF,IAAI,CAAC,CAAD,CAAX;AACD;;AACD,mBAAO,CAAC,CAAR;AACD;;AACD,iBAAOA,IAAI,CAACS,OAAD,CAAX;AACD,SARD;AASD,OA5JD;;AA8JA,UAAIf,SAAS,GAAG,IAAIH,SAAJ,CAAc3X,SAAd,EAAyBH,KAAzB,EAAgCC,MAAhC,EAAwC,CAAxC,EAA2CD,KAA3C,CAAhB;AAAA,UACEyX,GAAG,GAAG,IAAIS,KAAJ,CAAU,CAAV,CADR;AAAA,UAEER,GAAG,GAAGnR,UAAU,CAACmR,GAAX,GAAiB,GAFzB;AAAA,UAGEC,IAAI,GAAGpR,UAAU,CAACoR,IAAX,GAAkB,GAH3B;;AAKA,WAAK,IAAIzQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuQ,GAAG,CAACtQ,MAAxB,EAAgCD,CAAC,IAAI,CAArC,EAAwC;AACtCuQ,QAAAA,GAAG,CAACvQ,CAAD,CAAH,GAAS,IAAIgR,KAAJ,CAAU,GAAV,CAAT;AACD;;AACD,UAAIR,GAAG,KAAKC,IAAZ,EAAkB;AAChBA,QAAAA,IAAI;AACL;;AAED,WAAK,IAAIzQ,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAG,CAApB,EAAuBA,GAAC,IAAI,CAA5B,EAA+B;AAC7B,aAAK,IAAI2L,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,GAApB,EAAyBA,CAAC,IAAI,CAA9B,EAAiC;AAC/B4E,UAAAA,GAAG,CAACvQ,GAAD,CAAH,CAAO2L,CAAP,IACE,OACCtM,UAAU,CAACqR,SAAX,GACE,CAACrR,UAAU,CAACsR,UAAX,GAAwBtR,UAAU,CAACqR,SAApC,KAAkD/E,CAAC,GAAG6E,GAAtD,CAAD,IACGC,IAAI,GAAGD,GADV,CAFF,CADF;AAKD;AACF;;AAEDO,MAAAA,SAAS,CAACQ,MAAV,GArLY,CAqLQ;;AAEpB,aAAO;AACLhB,QAAAA,GAAG,EAAHA;AADK,OAAP;AAGD;;;WAED,kBACE3L,KADF,EAOEjF,CAPF,EAQEC,CARF,EASEP,UATF,EAUEvG,KAVF,EAWEC,MAXF,EAiBE;AACA,aAAO;AACLiL,QAAAA,CAAC,EAAE,KAAKpB,IAAL,CAAU2N,GAAV,CAAc,CAAd,EAAiB3L,KAAK,CAACZ,CAAvB,CADE;AAELC,QAAAA,CAAC,EAAE,KAAKrB,IAAL,CAAU2N,GAAV,CAAc,CAAd,EAAiB3L,KAAK,CAACX,CAAvB,CAFE;AAGLC,QAAAA,CAAC,EAAE,KAAKtB,IAAL,CAAU2N,GAAV,CAAc,CAAd,EAAiB3L,KAAK,CAACV,CAAvB,CAHE;AAILC,QAAAA,CAAC,EAAES,KAAK,CAACT;AAJJ,OAAP;AAMD;;;WA1OD,mBAAyB;AACvB,aAAO,QAAP;AACD;;;;EAHwBQ;;AA8O3B,iEAAe2L,YAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3PA;;IAMM8B;;;;;;;;;;;;;WAKJ,gCAA0C;AACxC,aAAO;AACLC,QAAAA,KAAK,EAAE;AADF,OAAP;AAGD;;;WAED,kBACEzN,KADF,EAOEjF,CAPF,EAQEC,CARF,EASEP,UATF,EAUEvG,KAVF,EAWEC,MAXF,EAiBE;AACA6L,MAAAA,KAAK,CAACZ,CAAN,GAAU3E,UAAU,CAACgT,KAAX,GAAmBzN,KAAK,CAACZ,CAAnC;AACAY,MAAAA,KAAK,CAACX,CAAN,GAAU5E,UAAU,CAACgT,KAAX,GAAmBzN,KAAK,CAACX,CAAnC;AACAW,MAAAA,KAAK,CAACV,CAAN,GAAU7E,UAAU,CAACgT,KAAX,GAAmBzN,KAAK,CAACV,CAAnC;AAEA,aAAOU,KAAP;AACD;;;WAjCD,mBAAyB;AACvB,aAAO,SAAP;AACD;;;;EAHyBD;;AAqC5B,iEAAeyN,aAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3CA;;IAMME;;;;;;;;;;;;;WAKJ,gCAAwC;AACtC,aAAO;AACLC,QAAAA,UAAU,EAAE;AADP,OAAP;AAGD;;;WAED,kBACE3N,KADF,EAOEjF,CAPF,EAQEC,CARF,EASEP,UATF,EAUEvG,KAVF,EAWEC,MAXF,EAiBE;AACA,UAAMyZ,GAAG,GAAG,QAAQ5N,KAAK,CAACZ,CAAd,GAAkB,QAAQY,KAAK,CAACX,CAAhC,GAAoC,QAAQW,KAAK,CAACV,CAA9D;AAEAU,MAAAA,KAAK,CAACZ,CAAN,GAAUwO,GAAG,GAAG,IAAInT,UAAU,CAACkT,UAA/B;AACA3N,MAAAA,KAAK,CAACX,CAAN,GAAUuO,GAAG,GAAGnT,UAAU,CAACkT,UAA3B;AACA3N,MAAAA,KAAK,CAACV,CAAN,GAAUsO,GAAV;AAEA,aAAO5N,KAAP;AACD;;;WAnCD,mBAAyB;AACvB,aAAO,OAAP;AACD;;;;EAHuBD;;AAuC1B,iEAAe2N,WAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7CA;;IAEMG;;;;;;;;;;;;;WAKJ,kBACE7N,KADF,EAOEjF,CAPF,EAQEC,CARF,EASEP,UATF,EAUEvG,KAVF,EAWEC,MAXF,EAiBE;AACA,UAAMuU,GAAG,GACL1I,KAAK,CAACZ,CAAN,GAAU,GAAV,GAAgB,GAAhB,GACI,KAAKY,KAAK,CAACZ,CAAN,GAAU,GAAV,GAAgB,GAArB,CADJ,GAEI,KAAK,MAAMY,KAAK,CAACZ,CAAN,GAAU,GAArB,CAHR;AAAA,UAIEuJ,KAAK,GACH3I,KAAK,CAACX,CAAN,GAAU,GAAV,GAAgB,GAAhB,GACI,KAAKW,KAAK,CAACX,CAAN,GAAU,GAAV,GAAgB,GAArB,CADJ,GAEI,KAAK,MAAMW,KAAK,CAACX,CAAN,GAAU,GAArB,CAPR;AAAA,UAQEuJ,IAAI,GACF5I,KAAK,CAACV,CAAN,GAAU,GAAV,GAAgB,GAAhB,GACI,KAAKU,KAAK,CAACV,CAAN,GAAU,GAAV,GAAgB,GAArB,CADJ,GAEI,KAAK,MAAMU,KAAK,CAACV,CAAN,GAAU,GAArB,CAXR;AAaA,aAAO;AACLF,QAAAA,CAAC,EAAEsJ,GAAG,GAAG,GADJ;AAELrJ,QAAAA,CAAC,EAAEsJ,KAAK,GAAG,GAFN;AAGLrJ,QAAAA,CAAC,EAAEsJ,IAAI,GAAG,GAHL;AAILrJ,QAAAA,CAAC,EAAES,KAAK,CAACT;AAJJ,OAAP;AAMD;;;WAzCD,mBAAyB;AACvB,aAAO,UAAP;AACD;;;;EAH0BQ;;AA6C7B,iEAAe8N,cAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/CA;;IAEMC;;;;;;;;;;;;;WAKJ,kBACE9N,KADF,EAOEjF,CAPF,EAQEC,CARF,EASEP,UATF,EAUEvG,KAVF,EAWEC,MAXF,EAiBE;AACA,UAAM4Z,SAAS,GAAG,CAAC/N,KAAK,CAACZ,CAAN,GAAUY,KAAK,CAACX,CAAhB,GAAoBW,KAAK,CAACV,CAA3B,IAAgC,CAAlD;;AAEA,UAAIyO,SAAS,IAAI,GAAjB,EAAsB;AACpB,eAAO;AACL3O,UAAAA,CAAC,EAAE,GADE;AAELC,UAAAA,CAAC,EAAE,GAFE;AAGLC,UAAAA,CAAC,EAAE,GAHE;AAILC,UAAAA,CAAC,EAAES,KAAK,CAACT;AAJJ,SAAP;AAMD;;AAED,aAAO;AACLH,QAAAA,CAAC,EAAE,CADE;AAELC,QAAAA,CAAC,EAAE,CAFE;AAGLC,QAAAA,CAAC,EAAE,CAHE;AAILC,QAAAA,CAAC,EAAES,KAAK,CAACT;AAJJ,OAAP;AAMD;;;WAvCD,mBAAyB;AACvB,aAAO,WAAP;AACD;;;;EAH2BQ;;AA2C9B,iEAAe+N,eAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7CA;AACA;;IAgCMG;;;;;;;;;;;;;;;;2DAKe;AACjBtC,MAAAA,GAAG,EAAE;AADY;;;;;;;WAInB,gCAA0C;AACxC,aAAO;AACLuC,QAAAA,WAAW,EAAE;AACX9O,UAAAA,CAAC,EAAE,CADQ;AAEXC,UAAAA,CAAC,EAAE,CAFQ;AAGXC,UAAAA,CAAC,EAAE,CAHQ;AAIXC,UAAAA,CAAC,EAAE;AAJQ,SADR;AAOL4O,QAAAA,QAAQ,EAAE;AACR/O,UAAAA,CAAC,EAAE,GADK;AAERC,UAAAA,CAAC,EAAE,GAFK;AAGRC,UAAAA,CAAC,EAAE,GAHK;AAIRC,UAAAA,CAAC,EAAE;AAJK,SAPL;AAaL6O,QAAAA,SAAS,EAAE;AACThP,UAAAA,CAAC,EAAE,GADM;AAETC,UAAAA,CAAC,EAAE,GAFM;AAGTC,UAAAA,CAAC,EAAE,GAHM;AAITC,UAAAA,CAAC,EAAE;AAJM;AAbN,OAAP;AAoBD;;;WAED,gBAAO9E,UAAP,EAAkD;AAChD,UAAIkR,GAAG,GAAG,EAAV;AAAA,UACEnK,CADF;;AAGA,WAAK,IAAIpG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,GAApB,EAAyBA,CAAC,IAAI,CAA9B,EAAiC;AAC/BoG,QAAAA,CAAC,GAAGpG,CAAC,GAAG,GAAR;AACAuQ,QAAAA,GAAG,CAACvQ,CAAD,CAAH,GAAS4S,yDAAS,CAACxM,CAAD,EAAI/G,UAAU,CAACyT,WAAf,EAA4BzT,UAAU,CAAC0T,QAAvC,CAAlB;AACD;;AACD,WAAK,IAAI/S,EAAC,GAAG,GAAb,EAAkBA,EAAC,GAAG,GAAtB,EAA2BA,EAAC,IAAI,CAAhC,EAAmC;AACjCoG,QAAAA,CAAC,GAAG,CAACpG,EAAC,GAAG,GAAL,IAAY,GAAhB;AACAuQ,QAAAA,GAAG,CAACvQ,EAAD,CAAH,GAAS4S,yDAAS,CAACxM,CAAD,EAAI/G,UAAU,CAAC0T,QAAf,EAAyB1T,UAAU,CAAC2T,SAApC,CAAlB;AACD;;AACD,aAAO;AACLzC,QAAAA,GAAG,EAAEA;AADA,OAAP;AAGD;;;WAED,kBACE3L,KADF,EAOEjF,CAPF,EAQEC,CARF,EASEP,UATF,EAUEvG,KAVF,EAWEC,MAXF,EAiBE;AACA,UAAMuO,UAAU,GAAG5D,IAAI,CAACsL,KAAL,CAAW,CAACpK,KAAK,CAACZ,CAAN,GAAUY,KAAK,CAACX,CAAhB,GAAoBW,KAAK,CAACV,CAA3B,IAAgC,CAA3C,CAAnB;AACA,aAAO,KAAKtB,IAAL,CAAU2N,GAAV,CAAcjJ,UAAd,CAAP;AACD;;;WApED,mBAAyB;AACvB,aAAO,SAAP;AACD;;;;EAHyB3C;;AAwE5B,iEAAekO,aAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzGA;AACA;;IAiBMI;;;;;;;;;;;;;;;;2DAKe;AACjBC,MAAAA,QAAQ,EAAE,CADO;AAEjBC,MAAAA,QAAQ,EAAE,CAFO;AAGjBra,MAAAA,KAAK,EAAE;AAHU;;;;;;;WAMnB,gCAAyC;AACvC,aAAO;AACLsa,QAAAA,MAAM,EAAE,EADH;AAELra,QAAAA,MAAM,EAAE,EAFH;AAGLsa,QAAAA,KAAK,EAAE,CAHF;AAILC,QAAAA,WAAW,EAAE5P,IAAI,CAAC+D,EAJb;AAKL8L,QAAAA,OAAO,EAAE,GALJ;AAMLC,QAAAA,OAAO,EAAE;AANJ,OAAP;AAQD;;;WAED,gBACEnU,UADF,EAEEvG,KAFF,EAGEC,MAHF,EAIEE,SAJF,EAKc;AACZ,aAAO;AACLia,QAAAA,QAAQ,EAAEpa,KAAK,GAAGuG,UAAU,CAACkU,OADxB;AAELJ,QAAAA,QAAQ,EAAEpa,MAAM,GAAGsG,UAAU,CAACmU,OAFzB;AAGL1a,QAAAA,KAAK,EAAE,EAAEA;AAHJ,OAAP;AAKD;;;WAED,kBACE6G,CADF,EAEEC,CAFF,EAGEP,UAHF,EAIEvG,KAJF,EAKEC,MALF,EAMiB;AACf,UAAI0a,EAAE,GAAG9T,CAAC,GAAG,KAAKiD,IAAL,CAAUsQ,QAAvB;AAAA,UACEQ,EAAE,GAAG9T,CAAC,GAAG,KAAKgD,IAAL,CAAUsQ,QADrB;AAAA,UAEES,KAAK,GAAGjQ,IAAI,CAACkQ,KAAL,CAAW,CAACF,EAAZ,EAAgB,CAACD,EAAjB,IAAuBpU,UAAU,CAACgU,KAF5C;AAAA,UAGErP,CAAC,GAAGN,IAAI,CAACuF,IAAL,CAAUwK,EAAE,GAAGA,EAAL,GAAUC,EAAE,GAAGA,EAAzB,CAHN;AAKAC,MAAAA,KAAK,GAAGlH,oDAAG,CAACkH,KAAD,EAAQ,IAAIjQ,IAAI,CAAC+D,EAAjB,CAAX;AAEA,aAAO,CACJ,KAAK7E,IAAL,CAAU9J,KAAV,GAAkB6a,KAAnB,GAA4BtU,UAAU,CAACiU,WAAvC,GAAqD,OADhD,EAELva,MAAM,IAAI,IAAI,CAACiL,CAAC,GAAG3E,UAAU,CAAC+T,MAAhB,KAA2Bra,MAAM,GAAG,OAApC,CAAR,CAFD,CAAP;AAID;;;WApDD,mBAAyB;AACvB,aAAO,QAAP;AACD;;;;EAHwB+L;;AAwD3B,iEAAemO,YAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1EA;;IAWMY;;;;;;;;;;;;;;;;2DAKe;AACjBC,MAAAA,QAAQ,EAAE,EADO;AAEjBC,MAAAA,QAAQ,EAAE;AAFO;;;;;;;WAKnB,gCAA0C;AACxC,aAAO;AACL1B,QAAAA,KAAK,EAAE;AADF,OAAP;AAGD;;;WAED,gBACEhT,UADF,EAEEvG,KAFF,EAGEC,MAHF,EAIEE,SAJF,EAKc;AACZ,UAAI6a,QAAQ,GAAG,IAAI9C,KAAJ,CAAU,GAAV,CAAf;AAAA,UACE+C,QAAQ,GAAG,IAAI/C,KAAJ,CAAU,GAAV,CADb;AAAA,UAEEqC,KAFF;;AAGA,WAAK,IAAIrT,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,GAApB,EAAyBA,CAAC,IAAI,CAA9B,EAAiC;AAC/BqT,QAAAA,KAAK,GAAI3P,IAAI,CAAC+D,EAAL,GAAU,CAAV,GAAczH,CAAf,GAAoB,GAA5B;AACA8T,QAAAA,QAAQ,CAAC9T,CAAD,CAAR,GAAcX,UAAU,CAACgT,KAAX,GAAmB3O,IAAI,CAACsF,GAAL,CAASqK,KAAT,CAAjC;AACAU,QAAAA,QAAQ,CAAC/T,CAAD,CAAR,GAAcX,UAAU,CAACgT,KAAX,GAAmB3O,IAAI,CAACqF,GAAL,CAASsK,KAAT,CAAjC;AACD;;AACD,aAAO;AACLS,QAAAA,QAAQ,EAAEA,QADL;AAELC,QAAAA,QAAQ,EAAEA;AAFL,OAAP;AAID;;;WAED,kBACEpU,CADF,EAEEC,CAFF,EAGEP,UAHF,EAIEvG,KAJF,EAKEC,MALF,EAMiB;AACf,UAAIsa,KAAK,GAAI3P,IAAI,CAAC0I,MAAL,KAAgB,GAAjB,GAAwB,CAApC;AAAA,UACE4H,QAAQ,GAAGtQ,IAAI,CAAC0I,MAAL,EADb;AAGA,aAAO,CACLzM,CAAC,GAAGqU,QAAQ,GAAG,KAAKpR,IAAL,CAAUkR,QAAV,CAAmBT,KAAnB,CADV,EAELzT,CAAC,GAAGoU,QAAQ,GAAG,KAAKpR,IAAL,CAAUmR,QAAV,CAAmBV,KAAnB,CAFV,CAAP;AAID;;;WAjDD,mBAAyB;AACvB,aAAO,SAAP;AACD;;;;EAHyBvO;;AAqD5B,iEAAe+O,aAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChEA;AACA;;IAgBMK;;;;;;;;;;;;;;;;2DAKe;AACjBhB,MAAAA,QAAQ,EAAE,CADO;AAEjBC,MAAAA,QAAQ,EAAE;AAFO;;;;;;;WAKnB,gCAA+C;AAC7C,aAAO;AACLI,QAAAA,OAAO,EAAE,GADJ;AAELC,QAAAA,OAAO,EAAE,GAFJ;AAGLH,QAAAA,KAAK,EAAE,CAHF;AAILc,QAAAA,MAAM,EAAE,CAJH;AAKLC,QAAAA,KAAK,EAAE,CALF;AAMLhB,QAAAA,MAAM,EAAE;AANH,OAAP;AAQD;;;WAED,gBACE/T,UADF,EAEEvG,KAFF,EAGEC,MAHF,EAIEE,SAJF,EAKc;AACZ,aAAO;AACLia,QAAAA,QAAQ,EAAEpa,KAAK,GAAGuG,UAAU,CAACkU,OADxB;AAELJ,QAAAA,QAAQ,EAAEpa,MAAM,GAAGsG,UAAU,CAACmU;AAFzB,OAAP;AAID;;;WAED,kBACE7T,CADF,EAEEC,CAFF,EAGEP,UAHF,EAIEvG,KAJF,EAKEC,MALF,EAMiB;AACf,UAAI0a,EAAE,GAAG9T,CAAC,GAAG,KAAKiD,IAAL,CAAUsQ,QAAvB;AAAA,UACEQ,EAAE,GAAG9T,CAAC,GAAG,KAAKgD,IAAL,CAAUuQ,QADrB;AAAA,UAEEnP,CAAC,GAAGN,IAAI,CAACuF,IAAL,CAAUwK,EAAE,GAAGA,EAAL,GAAUC,EAAE,GAAGA,EAAzB,CAFN;AAAA,UAGEC,KAAK,GAAGjQ,IAAI,CAACkQ,KAAL,CAAWF,EAAX,EAAeD,EAAf,IAAqBpU,UAAU,CAACgU,KAAhC,GAAwChU,UAAU,CAAC8U,MAH7D;AAKAR,MAAAA,KAAK,GAAGM,yDAAQ,CAAEN,KAAK,GAAGjQ,IAAI,CAAC+D,EAAd,GAAoBpI,UAAU,CAAC+U,KAA/B,GAAuC,GAAxC,CAAhB;;AAEA,UAAI/U,UAAU,CAAC+T,MAAX,KAAsB,CAA1B,EAA6B;AAC3B,YAAIiB,CAAC,GAAG3Q,IAAI,CAACqF,GAAL,CAAS4K,KAAT,CAAR;AAAA,YACEW,OAAO,GAAGjV,UAAU,CAAC+T,MAAX,GAAoBiB,CADhC;AAEArQ,QAAAA,CAAC,GAAGsQ,OAAO,GAAGL,yDAAQ,CAACjQ,CAAC,GAAGsQ,OAAL,CAAtB;AACD;;AAEDX,MAAAA,KAAK,IAAItU,UAAU,CAACgU,KAApB;AAEA,aAAO,CACL,KAAKzQ,IAAL,CAAUsQ,QAAV,GAAqBlP,CAAC,GAAGN,IAAI,CAACqF,GAAL,CAAS4K,KAAT,CADpB,EAEL,KAAK/Q,IAAL,CAAUuQ,QAAV,GAAqBnP,CAAC,GAAGN,IAAI,CAACsF,GAAL,CAAS2K,KAAT,CAFpB,CAAP;AAID;;;WA1DD,mBAAyB;AACvB,aAAO,cAAP;AACD;;;;EAH8B7O;;AA8DjC,iEAAeoP,kBAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/EA;AACA;;IAeMM;;;;;;;;;;;;;;;;2DAKe;AACjBV,MAAAA,QAAQ,EAAE,EADO;AAEjBC,MAAAA,QAAQ,EAAE,EAFO;AAGjBU,MAAAA,eAAe,EAAE,yBAAC9U,CAAD,EAAYC,CAAZ;AAAA,eAA0B,CAA1B;AAAA;AAHA;;;;;;;WAMnB,gCAAyC;AACvC,aAAO;AACL8U,QAAAA,MAAM,EAAE,CADH;AAELC,QAAAA,MAAM,EAAE,CAFH;AAGLC,QAAAA,MAAM,EAAE,CAHH;AAILC,QAAAA,UAAU,EAAE;AAJP,OAAP;AAMD;;;WAED,gBACExV,UADF,EAEEvG,KAFF,EAGEC,MAHF,EAIEE,SAJF,EAKc;AACZ,UAAI6a,QAAQ,GAAG,IAAI9C,KAAJ,CAAU,GAAV,CAAf;AAAA,UACE+C,QAAQ,GAAG,IAAI/C,KAAJ,CAAU,GAAV,CADb;AAAA,UAEEqC,KAFF;;AAIA,WAAK,IAAIrT,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,GAApB,EAAyBA,CAAC,IAAI,CAA9B,EAAiC;AAC/BqT,QAAAA,KAAK,GAAK3P,IAAI,CAAC+D,EAAL,GAAU,CAAV,GAAczH,CAAf,GAAoB,GAArB,GAA4BX,UAAU,CAACwV,UAA/C;AACAf,QAAAA,QAAQ,CAAC9T,CAAD,CAAR,GAAc,CAACX,UAAU,CAACsV,MAAZ,GAAqBjR,IAAI,CAACsF,GAAL,CAASqK,KAAT,CAAnC;AACAU,QAAAA,QAAQ,CAAC/T,CAAD,CAAR,GAAcX,UAAU,CAACsV,MAAX,GAAoBjR,IAAI,CAACqF,GAAL,CAASsK,KAAT,CAAlC;AACD;;AACD,aAAO;AACLS,QAAAA,QAAQ,EAAEA,QADL;AAELC,QAAAA,QAAQ,EAAEA,QAFL;AAGLU,QAAAA,eAAe,EAAE,yBAAU9U,CAAV,EAAaC,CAAb,EAAgB;AAC/B,cAAIiC,MAAM,GACR,OACC,IACC0S,6DAAA,CAAmB5U,CAAC,GAAGN,UAAU,CAACqV,MAAlC,EAA0C9U,CAAC,GAAGP,UAAU,CAACsV,MAAzD,CAFF,CADF;AAIA,iBAAOjR,IAAI,CAACC,GAAL,CAAS,GAAT,EAAcD,IAAI,CAACE,GAAL,CAAS,CAAT,EAAY/B,MAAZ,CAAd,CAAP;AACD;AATI,OAAP;AAWD;;;WAED,kBACElC,CADF,EAEEC,CAFF,EAGEP,UAHF,EAIEvG,KAJF,EAKEC,MALF,EAMiB;AACf,UAAIgc,YAAY,GAAGrR,IAAI,CAACsL,KAAL,CAAW,KAAKpM,IAAL,CAAU6R,eAAV,CAA0B9U,CAA1B,EAA6BC,CAA7B,CAAX,CAAnB;AACA,aAAO,CACLD,CAAC,GAAG,KAAKiD,IAAL,CAAUkR,QAAV,CAAmBiB,YAAnB,CADC,EAELnV,CAAC,GAAG,KAAKgD,IAAL,CAAUmR,QAAV,CAAmBgB,YAAnB,CAFC,CAAP;AAID;;;WA3DD,mBAAyB;AACvB,aAAO,QAAP;AACD;;;;EAHwBjQ;;AA+D3B,iEAAe0P,YAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/EA;;IAQMQ;;;;;;;;;;;;;WAKJ,gCAAyC;AACvC,aAAO;AACLC,QAAAA,OAAO,EAAE,GADJ;AAELC,QAAAA,OAAO,EAAE,GAFJ;AAGLC,QAAAA,IAAI,EAAE;AAHD,OAAP;AAKD;;;WAED,kBACExV,CADF,EAEEC,CAFF,EAGEP,UAHF,EAIEvG,KAJF,EAKEC,MALF,EAMiB;AACf,UAAIsG,UAAU,CAAC8V,IAAf,EAAqB;AACnB,eAAO,CACL,CAACxV,CAAC,GAAG7G,KAAJ,GAAYuG,UAAU,CAAC4V,OAAxB,IAAmCnc,KAD9B,EAEL,CAAC8G,CAAC,GAAG7G,MAAJ,GAAasG,UAAU,CAAC6V,OAAzB,IAAoCnc,MAF/B,CAAP;AAID,OALD,MAKO;AACL,eAAO,CAAC4G,CAAC,GAAGN,UAAU,CAAC4V,OAAhB,EAAyBrV,CAAC,GAAGP,UAAU,CAAC6V,OAAxC,CAAP;AACD;AACF;;;WA3BD,mBAAyB;AACvB,aAAO,QAAP;AACD;;;;EAHwBpQ;;AA+B3B,iEAAekQ,YAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvCA;;IAyBMI;;;;;;;;;;;;;;;;2DAKe;AACjBC,MAAAA,CAAC,EAAE,CADc;AAEjBC,MAAAA,CAAC,EAAE,CAFc;AAGjBC,MAAAA,CAAC,EAAE,CAHc;AAIjBC,MAAAA,CAAC,EAAE,CAJc;AAKjBC,MAAAA,CAAC,EAAE,CALc;AAMjBC,MAAAA,CAAC,EAAE,CANc;AAOjBC,MAAAA,CAAC,EAAE,CAPc;AAQjBC,MAAAA,CAAC,EAAE,CARc;AASjBC,MAAAA,CAAC,EAAE;AATc;;;;;;;WAYnB,gCAA8C;AAC5C,aAAO;AACLC,QAAAA,EAAE,EAAE,CADC;AAELC,QAAAA,EAAE,EAAE,CAFC;AAGLC,QAAAA,EAAE,EAAE,CAHC;AAILC,QAAAA,EAAE,EAAE,CAJC;AAKLC,QAAAA,EAAE,EAAE,CALC;AAMLC,QAAAA,EAAE,EAAE,CANC;AAOLC,QAAAA,EAAE,EAAE,CAPC;AAQLC,QAAAA,EAAE,EAAE;AARC,OAAP;AAUD;;;WAED,gBACEhX,UADF,EAEEvG,KAFF,EAGEC,MAHF,EAIEE,SAJF,EAKc;AACZ,eAASqd,gBAAT,GAA4B;AAC1B,YAAIzU,MAAM,GAAG;AACT0U,UAAAA,GAAG,EAAE,CADI;AAETC,UAAAA,GAAG,EAAE,CAFI;AAGTC,UAAAA,GAAG,EAAE,CAHI;AAITC,UAAAA,GAAG,EAAE,CAJI;AAKTC,UAAAA,GAAG,EAAE,CALI;AAMTC,UAAAA,GAAG,EAAE,CANI;AAOTC,UAAAA,GAAG,EAAE,CAPI;AAQTC,UAAAA,GAAG,EAAE,CARI;AASTC,UAAAA,GAAG,EAAE,CATI;AAUT1B,UAAAA,CAAC,EAAE,CAVM;AAWTC,UAAAA,CAAC,EAAE,CAXM;AAYTC,UAAAA,CAAC,EAAE,CAZM;AAaTC,UAAAA,CAAC,EAAE,CAbM;AAcTC,UAAAA,CAAC,EAAE,CAdM;AAeTC,UAAAA,CAAC,EAAE,CAfM;AAgBTC,UAAAA,CAAC,EAAE,CAhBM;AAiBTC,UAAAA,CAAC,EAAE,CAjBM;AAkBTC,UAAAA,CAAC,EAAE;AAlBM,SAAb;AAAA,YAoBEC,EAAE,GAAGpS,IAAI,CAACsL,KAAL,CAAWlW,KAAK,GAAGuG,UAAU,CAACyW,EAA9B,CApBP;AAAA,YAqBEC,EAAE,GAAGrS,IAAI,CAACsL,KAAL,CAAWjW,MAAM,GAAGsG,UAAU,CAAC0W,EAA/B,CArBP;AAAA,YAsBEC,EAAE,GAAGtS,IAAI,CAACsL,KAAL,CAAWlW,KAAK,GAAGuG,UAAU,CAAC2W,EAA9B,CAtBP;AAAA,YAuBEC,EAAE,GAAGvS,IAAI,CAACsL,KAAL,CAAWjW,MAAM,GAAGsG,UAAU,CAAC4W,EAA/B,CAvBP;AAAA,YAwBEC,EAAE,GAAGxS,IAAI,CAACsL,KAAL,CAAWlW,KAAK,GAAGuG,UAAU,CAAC6W,EAA9B,CAxBP;AAAA,YAyBEC,EAAE,GAAGzS,IAAI,CAACsL,KAAL,CAAWjW,MAAM,GAAGsG,UAAU,CAAC8W,EAA/B,CAzBP;AAAA,YA0BEC,EAAE,GAAG1S,IAAI,CAACsL,KAAL,CAAWlW,KAAK,GAAGuG,UAAU,CAAC+W,EAA9B,CA1BP;AAAA,YA2BEC,EAAE,GAAG3S,IAAI,CAACsL,KAAL,CAAWjW,MAAM,GAAGsG,UAAU,CAACgX,EAA/B,CA3BP;AAAA,YA4BEW,GAAG,GAAGhB,EAAE,GAAGE,EA5Bb;AAAA,YA6BEe,GAAG,GAAGhB,EAAE,GAAGE,EA7Bb;AAAA,YA8BEe,GAAG,GAAGd,EAAE,GAAGF,EA9Bb;AAAA,YA+BEiB,GAAG,GAAGd,EAAE,GAAGF,EA/Bb;AAAA,YAgCEiB,GAAG,GAAGtB,EAAE,GAAGE,EAAL,GAAUE,EAAV,GAAeE,EAhCvB;AAAA,YAiCEiB,GAAG,GAAGtB,EAAE,GAAGE,EAAL,GAAUE,EAAV,GAAeE,EAjCvB;;AAmCA,YAAIe,GAAG,IAAI,CAAP,IAAYC,GAAG,IAAI,CAAvB,EAA0B;AACxBxV,UAAAA,MAAM,CAAC0U,GAAP,GAAaP,EAAE,GAAGF,EAAlB;AACAjU,UAAAA,MAAM,CAAC2U,GAAP,GAAaN,EAAE,GAAGF,EAAlB;AACAnU,UAAAA,MAAM,CAAC4U,GAAP,GAAaX,EAAb;AACAjU,UAAAA,MAAM,CAAC6U,GAAP,GAAaT,EAAE,GAAGF,EAAlB;AACAlU,UAAAA,MAAM,CAAC8U,GAAP,GAAaR,EAAE,GAAGF,EAAlB;AACApU,UAAAA,MAAM,CAAC+U,GAAP,GAAab,EAAb;AACAlU,UAAAA,MAAM,CAACgV,GAAP,GAAahV,MAAM,CAACiV,GAAP,GAAa,CAA1B;AACD,SARD,MAQO;AACLjV,UAAAA,MAAM,CAACgV,GAAP,GAAa,CAACO,GAAG,GAAGD,GAAN,GAAYD,GAAG,GAAGG,GAAnB,KAA2BL,GAAG,GAAGG,GAAN,GAAYF,GAAG,GAAGC,GAA7C,CAAb;AACArV,UAAAA,MAAM,CAACiV,GAAP,GAAa,CAACE,GAAG,GAAGK,GAAN,GAAYJ,GAAG,GAAGG,GAAnB,KAA2BJ,GAAG,GAAGG,GAAN,GAAYF,GAAG,GAAGC,GAA7C,CAAb;AACArV,UAAAA,MAAM,CAAC0U,GAAP,GAAaP,EAAE,GAAGF,EAAL,GAAUjU,MAAM,CAACgV,GAAP,GAAab,EAApC;AACAnU,UAAAA,MAAM,CAAC2U,GAAP,GAAaJ,EAAE,GAAGN,EAAL,GAAUjU,MAAM,CAACiV,GAAP,GAAaV,EAApC;AACAvU,UAAAA,MAAM,CAAC4U,GAAP,GAAaX,EAAb;AACAjU,UAAAA,MAAM,CAAC6U,GAAP,GAAaT,EAAE,GAAGF,EAAL,GAAUlU,MAAM,CAACgV,GAAP,GAAaZ,EAApC;AACApU,UAAAA,MAAM,CAAC8U,GAAP,GAAaN,EAAE,GAAGN,EAAL,GAAUlU,MAAM,CAACiV,GAAP,GAAaT,EAApC;AACAxU,UAAAA,MAAM,CAAC+U,GAAP,GAAab,EAAb;AACD;;AAEDlU,QAAAA,MAAM,CAACkV,GAAP,GAAa,CAAb;AAEA,eAAOlV,MAAP;AACD;;AAED,UAAIA,MAAM,GAAGyU,gBAAgB,EAA7B;AAEAzU,MAAAA,MAAM,CAACwT,CAAP,GAAWxT,MAAM,CAAC8U,GAAP,GAAa9U,MAAM,CAACkV,GAApB,GAA0BlV,MAAM,CAAC+U,GAAP,GAAa/U,MAAM,CAACiV,GAAzD;AACAjV,MAAAA,MAAM,CAACyT,CAAP,GAAWzT,MAAM,CAAC4U,GAAP,GAAa5U,MAAM,CAACiV,GAApB,GAA0BjV,MAAM,CAAC2U,GAAP,GAAa3U,MAAM,CAACkV,GAAzD;AACAlV,MAAAA,MAAM,CAAC0T,CAAP,GAAW1T,MAAM,CAAC2U,GAAP,GAAa3U,MAAM,CAAC+U,GAApB,GAA0B/U,MAAM,CAAC4U,GAAP,GAAa5U,MAAM,CAAC8U,GAAzD;AACA9U,MAAAA,MAAM,CAAC2T,CAAP,GAAW3T,MAAM,CAAC+U,GAAP,GAAa/U,MAAM,CAACgV,GAApB,GAA0BhV,MAAM,CAAC6U,GAAP,GAAa7U,MAAM,CAACkV,GAAzD;AACAlV,MAAAA,MAAM,CAAC4T,CAAP,GAAW5T,MAAM,CAAC0U,GAAP,GAAa1U,MAAM,CAACkV,GAApB,GAA0BlV,MAAM,CAAC4U,GAAP,GAAa5U,MAAM,CAACgV,GAAzD;AACAhV,MAAAA,MAAM,CAAC6T,CAAP,GAAW7T,MAAM,CAAC4U,GAAP,GAAa5U,MAAM,CAAC6U,GAApB,GAA0B7U,MAAM,CAAC0U,GAAP,GAAa1U,MAAM,CAAC+U,GAAzD;AACA/U,MAAAA,MAAM,CAAC8T,CAAP,GAAW9T,MAAM,CAAC6U,GAAP,GAAa7U,MAAM,CAACiV,GAApB,GAA0BjV,MAAM,CAAC8U,GAAP,GAAa9U,MAAM,CAACgV,GAAzD;AACAhV,MAAAA,MAAM,CAAC+T,CAAP,GAAW/T,MAAM,CAAC2U,GAAP,GAAa3U,MAAM,CAACgV,GAApB,GAA0BhV,MAAM,CAAC0U,GAAP,GAAa1U,MAAM,CAACiV,GAAzD;AACAjV,MAAAA,MAAM,CAACgU,CAAP,GAAWhU,MAAM,CAAC0U,GAAP,GAAa1U,MAAM,CAAC8U,GAApB,GAA0B9U,MAAM,CAAC2U,GAAP,GAAa3U,MAAM,CAAC6U,GAAzD;AAEA,aAAO7U,MAAP;AACD;;;WAED,kBACElC,CADF,EAEEC,CAFF,EAGEP,UAHF,EAIEvG,KAJF,EAKEC,MALF,EAMiB;AACf,aAAO,CACJD,KAAK,IAAI,KAAK8J,IAAL,CAAUyS,CAAV,GAAc1V,CAAd,GAAkB,KAAKiD,IAAL,CAAU0S,CAAV,GAAc1V,CAAhC,GAAoC,KAAKgD,IAAL,CAAU2S,CAAlD,CAAN,IACG,KAAK3S,IAAL,CAAU+S,CAAV,GAAchW,CAAd,GAAkB,KAAKiD,IAAL,CAAUgT,CAAV,GAAchW,CAAhC,GAAoC,KAAKgD,IAAL,CAAUiT,CADjD,CADK,EAGJ9c,MAAM,IAAI,KAAK6J,IAAL,CAAU4S,CAAV,GAAc7V,CAAd,GAAkB,KAAKiD,IAAL,CAAU6S,CAAV,GAAc7V,CAAhC,GAAoC,KAAKgD,IAAL,CAAU8S,CAAlD,CAAP,IACG,KAAK9S,IAAL,CAAU+S,CAAV,GAAchW,CAAd,GAAkB,KAAKiD,IAAL,CAAUgT,CAAV,GAAchW,CAAhC,GAAoC,KAAKgD,IAAL,CAAUiT,CADjD,CAHK,CAAP;AAMD;;;WA3HD,mBAAyB;AACvB,aAAO,aAAP;AACD;;;;EAH6B/Q;;AA+HhC,iEAAesQ,iBAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxJA;;IAiBMkC;;;;;;;;;;;;;;;;2DAKe;AACjBpE,MAAAA,QAAQ,EAAE,CADO;AAEjBC,MAAAA,QAAQ,EAAE,CAFO;AAGjBoE,MAAAA,OAAO,EAAE,CAHQ;AAIjBnE,MAAAA,MAAM,EAAE;AAJS;;;;;;;WAOnB,gCAAwC;AACtC,aAAO;AACLC,QAAAA,KAAK,EAAE,CADF;AAELE,QAAAA,OAAO,EAAE,GAFJ;AAGLC,QAAAA,OAAO,EAAE,GAHJ;AAILJ,QAAAA,MAAM,EAAE,GAJH;AAKLwB,QAAAA,MAAM,EAAE;AALH,OAAP;AAOD;;;WAED,gBACEvV,UADF,EAEEvG,KAFF,EAGEC,MAHF,EAIEE,SAJF,EAKc;AACZ,UAAIia,QAAQ,GAAGpa,KAAK,GAAGuG,UAAU,CAACkU,OAAlC;AAAA,UACEJ,QAAQ,GAAGpa,MAAM,GAAGsG,UAAU,CAACmU,OADjC;AAAA,UAEEJ,MAAM,GAAG/T,UAAU,CAAC+T,MAFtB;AAAA,UAGEmE,OAHF;;AAIA,UAAInE,MAAM,KAAK,CAAf,EAAkB;AAChBA,QAAAA,MAAM,GAAG1P,IAAI,CAACC,GAAL,CAASuP,QAAT,EAAmBC,QAAnB,CAAT;AACD;;AACDoE,MAAAA,OAAO,GAAGnE,MAAM,GAAGA,MAAnB;AACA,aAAO;AACLF,QAAAA,QAAQ,EAAEA,QADL;AAELC,QAAAA,QAAQ,EAAEA,QAFL;AAGLC,QAAAA,MAAM,EAAEA,MAHH;AAILmE,QAAAA,OAAO,EAAEA;AAJJ,OAAP;AAMD;;;WAED,kBACE5X,CADF,EAEEC,CAFF,EAGEP,UAHF,EAIEvG,KAJF,EAKEC,MALF,EAMiB;AACf,UAAI0a,EAAE,GAAG9T,CAAC,GAAG,KAAKiD,IAAL,CAAUsQ,QAAvB;AAAA,UACEQ,EAAE,GAAG9T,CAAC,GAAG,KAAKgD,IAAL,CAAUuQ,QADrB;AAAA,UAEEa,QAAQ,GAAGP,EAAE,GAAGA,EAAL,GAAUC,EAAE,GAAGA,EAF5B;AAAA,UAGExH,CAHF;AAAA,UAIE9F,CAJF;AAAA,UAKEoR,CALF;AAAA,UAMErT,CANF;AAAA,UAOE+L,CAPF;AAAA,UAQEmE,CARF;;AAUA,UAAIL,QAAQ,GAAG,KAAKpR,IAAL,CAAU2U,OAArB,IAAgCvD,QAAQ,KAAK,CAAjD,EAAoD;AAClD,eAAO,CAACrU,CAAD,EAAIC,CAAJ,CAAP;AACD;;AACDsM,MAAAA,CAAC,GAAGxI,IAAI,CAACuF,IAAL,CAAU+K,QAAQ,GAAG,KAAKpR,IAAL,CAAU2U,OAA/B,CAAJ;AACAnR,MAAAA,CAAC,GAAG1C,IAAI,CAACkM,GAAL,CAASlM,IAAI,CAACsF,GAAL,CAAStF,IAAI,CAAC+D,EAAL,GAAU,GAAV,GAAgByE,CAAzB,CAAT,EAAsC,CAAC7M,UAAU,CAACuV,MAAlD,CAAJ;AAEAnB,MAAAA,EAAE,IAAIrN,CAAN;AACAsN,MAAAA,EAAE,IAAItN,CAAN;AAEAoR,MAAAA,CAAC,GAAG,IAAItL,CAAR;AACA/H,MAAAA,CAAC,GAAG9E,UAAU,CAACgU,KAAX,GAAmBmE,CAAnB,GAAuBA,CAA3B;AAEAtH,MAAAA,CAAC,GAAGxM,IAAI,CAACsF,GAAL,CAAS7E,CAAT,CAAJ;AACAkQ,MAAAA,CAAC,GAAG3Q,IAAI,CAACqF,GAAL,CAAS5E,CAAT,CAAJ;AAEA,aAAO,CACL,KAAKvB,IAAL,CAAUsQ,QAAV,GAAqBmB,CAAC,GAAGZ,EAAzB,GAA8BvD,CAAC,GAAGwD,EAD7B,EAEL,KAAK9Q,IAAL,CAAUuQ,QAAV,GAAqBjD,CAAC,GAAGuD,EAAzB,GAA8BY,CAAC,GAAGX,EAF7B,CAAP;AAID;;;WA/ED,mBAAyB;AACvB,aAAO,OAAP;AACD;;;;EAHuB5O;;AAmF1B,iEAAewS,WAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpGA;;IAaMG;;;;;;;;;;;;;;;;2DAKe;AACjBlE,MAAAA,OAAO,EAAE,CADQ;AAEjBC,MAAAA,OAAO,EAAE,CAFQ;AAGjBkE,MAAAA,GAAG,EAAE,aAAC1e,KAAD;AAAA,eAAmB,CAAnB;AAAA,OAHY;AAIjBoa,MAAAA,MAAM,EAAE;AAJS;;;;;;;WAOnB,gCAAwC;AACtC,aAAO;AACLrY,QAAAA,IAAI,EAAE,eADD,CACkB;;AADlB,OAAP;AAGD;;;WAED,gBACEsE,UADF,EAEEvG,KAFF,EAGEC,MAHF,EAIEE,SAJF,EAKc;AACZ,aAAO;AACLsa,QAAAA,OAAO,EAAEza,KAAK,GAAG,CADZ;AAEL0a,QAAAA,OAAO,EAAEza,MAAM,GAAG,CAFb;AAGLqa,QAAAA,MAAM,EAAE1P,IAAI,CAACE,GAAL,CAAS9K,KAAK,GAAG,CAAjB,EAAoBC,MAAM,GAAG,CAA7B,CAHH;AAIL2e,QAAAA,GAAG,EAAE,aAAU/X,CAAV,EAAa;AAChB,iBAAOA,CAAC,GAAGA,CAAX;AACD;AANI,OAAP;AAQD;;;WAED,kBACEA,CADF,EAEEC,CAFF,EAGEP,UAHF,EAIEvG,KAJF,EAKEC,MALF,EAMiB;AACf,UAAI4a,KAAJ;AAAA,UACEgE,MADF;AAAA,UAEEvR,CAFF;AAAA,UAGEwR,CAHF;AAAA,UAIEC,IAJF;AAAA,UAKEC,IALF;AAAA,UAMEC,EANF;AAAA,UAOEC,EAPF;AAAA,UAQEC,IARF;AAAA,UASEC,IATF;AAAA,UAUEzE,EAVF;AAAA,UAWEC,EAXF;AAAA,UAYEM,QAZF;AAAA,UAaEhQ,CAAC,GAAG,CAbN;;AAeA,cAAQ3E,UAAU,CAACtE,IAAnB;AACE,aAAK,eAAL;AACE,cAAI4E,CAAC,IAAI,KAAKiD,IAAL,CAAU2Q,OAAnB,EAA4B;AAC1B,gBAAI3T,CAAC,GAAG,KAAKgD,IAAL,CAAU4Q,OAAlB,EAA2B;AACzBG,cAAAA,KAAK,GACHjQ,IAAI,CAAC+D,EAAL,GACA/D,IAAI,CAACyU,IAAL,CAAU,CAACxY,CAAC,GAAG,KAAKiD,IAAL,CAAU2Q,OAAf,KAA2B3T,CAAC,GAAG,KAAKgD,IAAL,CAAU4Q,OAAzC,CAAV,CAFF;AAGAxP,cAAAA,CAAC,GAAGN,IAAI,CAACuF,IAAL,CACF,KAAKrG,IAAL,CAAU8U,GAAV,CAAc/X,CAAC,GAAG,KAAKiD,IAAL,CAAU2Q,OAA5B,IACE,KAAK3Q,IAAL,CAAU8U,GAAV,CAAc9X,CAAC,GAAG,KAAKgD,IAAL,CAAU4Q,OAA5B,CAFA,CAAJ;AAID,aARD,MAQO;AACL,kBAAI5T,CAAC,GAAG,KAAKgD,IAAL,CAAU4Q,OAAlB,EAA2B;AACzBG,gBAAAA,KAAK,GAAGjQ,IAAI,CAACyU,IAAL,CACN,CAACxY,CAAC,GAAG,KAAKiD,IAAL,CAAU2Q,OAAf,KAA2B,KAAK3Q,IAAL,CAAU4Q,OAAV,GAAoB5T,CAA/C,CADM,CAAR;AAGAoE,gBAAAA,CAAC,GAAGN,IAAI,CAACuF,IAAL,CACF,KAAKrG,IAAL,CAAU8U,GAAV,CAAc/X,CAAC,GAAG,KAAKiD,IAAL,CAAU2Q,OAA5B,IACE,KAAK3Q,IAAL,CAAU8U,GAAV,CAAc,KAAK9U,IAAL,CAAU4Q,OAAV,GAAoB5T,CAAlC,CAFA,CAAJ;AAID,eARD,MAQO;AACL+T,gBAAAA,KAAK,GAAGjQ,IAAI,CAAC+D,EAAL,GAAU,CAAlB;AACAzD,gBAAAA,CAAC,GAAGrE,CAAC,GAAG,KAAKiD,IAAL,CAAU2Q,OAAlB;AACD;AACF;AACF,WAvBD,MAuBO;AACL,gBAAI5T,CAAC,GAAG,KAAKiD,IAAL,CAAU2Q,OAAlB,EAA2B;AACzB,kBAAI3T,CAAC,GAAG,KAAKgD,IAAL,CAAU4Q,OAAlB,EAA2B;AACzBG,gBAAAA,KAAK,GACHjQ,IAAI,CAAC+D,EAAL,GAAU,CAAV,GACA/D,IAAI,CAACyU,IAAL,CAAU,CAAC,KAAKvV,IAAL,CAAU2Q,OAAV,GAAoB5T,CAArB,KAA2B,KAAKiD,IAAL,CAAU4Q,OAAV,GAAoB5T,CAA/C,CAAV,CAFF;AAGAoE,gBAAAA,CAAC,GAAGN,IAAI,CAACuF,IAAL,CACF,KAAKrG,IAAL,CAAU8U,GAAV,CAAc,KAAK9U,IAAL,CAAU2Q,OAAV,GAAoB5T,CAAlC,IACE,KAAKiD,IAAL,CAAU8U,GAAV,CAAc,KAAK9U,IAAL,CAAU4Q,OAAV,GAAoB5T,CAAlC,CAFA,CAAJ;AAID,eARD,MAQO;AACL,oBAAIA,CAAC,GAAG,KAAKgD,IAAL,CAAU4Q,OAAlB,EAA2B;AACzBG,kBAAAA,KAAK,GACHjQ,IAAI,CAAC+D,EAAL,GACA/D,IAAI,CAACyU,IAAL,CAAU,CAAC,KAAKvV,IAAL,CAAU2Q,OAAV,GAAoB5T,CAArB,KAA2BC,CAAC,GAAG,KAAKgD,IAAL,CAAU4Q,OAAzC,CAAV,CAFF;AAGAxP,kBAAAA,CAAC,GAAGN,IAAI,CAACuF,IAAL,CACF,KAAKrG,IAAL,CAAU8U,GAAV,CAAc,KAAK9U,IAAL,CAAU2Q,OAAV,GAAoB5T,CAAlC,IACE,KAAKiD,IAAL,CAAU8U,GAAV,CAAc9X,CAAC,GAAG,KAAKgD,IAAL,CAAU4Q,OAA5B,CAFA,CAAJ;AAID,iBARD,MAQO;AACLG,kBAAAA,KAAK,GAAG,MAAMjQ,IAAI,CAAC+D,EAAnB;AACAzD,kBAAAA,CAAC,GAAG,KAAKpB,IAAL,CAAU2Q,OAAV,GAAoB5T,CAAxB;AACD;AACF;AACF;AACF;;AACD,cAAIA,CAAC,IAAI,KAAKiD,IAAL,CAAU2Q,OAAnB,EAA4B;AAC1BqE,YAAAA,CAAC,GAAGlU,IAAI,CAAC0U,GAAL,CAAS,CAACxY,CAAC,GAAG,KAAKgD,IAAL,CAAU4Q,OAAf,KAA2B7T,CAAC,GAAG,KAAKiD,IAAL,CAAU2Q,OAAzC,CAAT,CAAJ;AACD,WAFD,MAEO;AACLqE,YAAAA,CAAC,GAAG,CAAJ;AACD;;AAED,cAAIA,CAAC,IAAI7e,MAAM,GAAGD,KAAlB,EAAyB;AACvB,gBAAI6G,CAAC,IAAI,KAAKiD,IAAL,CAAU2Q,OAAnB,EAA4B;AAC1BsE,cAAAA,IAAI,GAAG,CAAP;AACAC,cAAAA,IAAI,GAAG,KAAKlV,IAAL,CAAU4Q,OAAjB;AACD,aAHD,MAGO;AACLqE,cAAAA,IAAI,GAAG,KAAKjV,IAAL,CAAU2Q,OAAjB;AACAuE,cAAAA,IAAI,GAAGF,CAAC,GAAGC,IAAX;AACD;AACF,WARD,MAQO;AACLC,YAAAA,IAAI,GAAG,KAAKlV,IAAL,CAAU4Q,OAAjB;AACAqE,YAAAA,IAAI,GAAGC,IAAI,GAAGF,CAAd;AACD;;AAED,iBAAO,CACL9e,KAAK,GAAG,CAAR,GAAY,CAACA,KAAK,GAAG,CAAT,KAAe4K,IAAI,CAAC+D,EAAL,GAAU,CAAV,GAAckM,KAA7B,CADP,EAEJ5a,MAAM,GAAGiL,CAAV,GAAe,KAAKpB,IAAL,CAAUwQ,MAFpB,CAAP;;AAKF,aAAK,eAAL;AACEO,UAAAA,KAAK,GAAIhU,CAAC,GAAG7G,KAAL,GAAc4K,IAAI,CAAC+D,EAAnB,GAAwB,CAAhC;;AAEA,cAAIkM,KAAK,IAAI,MAAMjQ,IAAI,CAAC+D,EAAxB,EAA4B;AAC1BkQ,YAAAA,MAAM,GAAGjU,IAAI,CAAC+D,EAAL,GAAU,CAAV,GAAckM,KAAvB;AACD,WAFD,MAEO;AACL,gBAAIA,KAAK,IAAIjQ,IAAI,CAAC+D,EAAlB,EAAsB;AACpBkQ,cAAAA,MAAM,GAAGhE,KAAK,GAAGjQ,IAAI,CAAC+D,EAAtB;AACD,aAFD,MAEO;AACL,kBAAIkM,KAAK,IAAI,MAAMjQ,IAAI,CAAC+D,EAAxB,EAA4B;AAC1BkQ,gBAAAA,MAAM,GAAGjU,IAAI,CAAC+D,EAAL,GAAUkM,KAAnB;AACD,eAFD,MAEO;AACLgE,gBAAAA,MAAM,GAAGhE,KAAT;AACD;AACF;AACF;;AAEDvN,UAAAA,CAAC,GAAG1C,IAAI,CAAC2U,GAAL,CAASV,MAAT,CAAJ;;AACA,cAAIvR,CAAC,IAAI,CAAT,EAAY;AACVwR,YAAAA,CAAC,GAAG,MAAMxR,CAAV;AACD,WAFD,MAEO;AACLwR,YAAAA,CAAC,GAAG,CAAJ;AACD;;AAED,cAAIA,CAAC,IAAI7e,MAAM,GAAGD,KAAlB,EAAyB;AACvB,gBAAI6e,MAAM,IAAI,CAAd,EAAiB;AACfM,cAAAA,IAAI,GAAG,CAAP;AACAC,cAAAA,IAAI,GAAG,KAAKtV,IAAL,CAAU4Q,OAAjB;AACD,aAHD,MAGO;AACLyE,cAAAA,IAAI,GAAG,KAAKrV,IAAL,CAAU2Q,OAAjB;AACA2E,cAAAA,IAAI,GAAGN,CAAC,GAAGK,IAAX;AACD;AACF,WARD,MAQO;AACLC,YAAAA,IAAI,GAAG,KAAKtV,IAAL,CAAU4Q,OAAjB;AACAyE,YAAAA,IAAI,GAAGC,IAAI,GAAGN,CAAd;AACD;;AAED5T,UAAAA,CAAC,GAAG,KAAKpB,IAAL,CAAUwQ,MAAV,IAAoBxT,CAAC,GAAG7G,MAAxB,CAAJ;AAEAgf,UAAAA,EAAE,GAAG,CAAC/T,CAAD,GAAKN,IAAI,CAACsF,GAAL,CAAS2O,MAAT,CAAV;AACAK,UAAAA,EAAE,GAAGhU,CAAC,GAAGN,IAAI,CAACqF,GAAL,CAAS4O,MAAT,CAAT;;AAEA,cAAIhE,KAAK,IAAI,MAAMjQ,IAAI,CAAC+D,EAAxB,EAA4B;AAC1B,mBAAO,CAAC,KAAK7E,IAAL,CAAU2Q,OAAV,GAAoBwE,EAArB,EAAyB,KAAKnV,IAAL,CAAU4Q,OAAV,GAAoBwE,EAA7C,CAAP;AACD,WAFD,MAEO;AACL,gBAAIrE,KAAK,IAAIjQ,IAAI,CAAC+D,EAAlB,EAAsB;AACpB,qBAAO,CAAC,KAAK7E,IAAL,CAAU2Q,OAAV,GAAoBwE,EAArB,EAAyB,KAAKnV,IAAL,CAAU4Q,OAAV,GAAoBwE,EAA7C,CAAP;AACD,aAFD,MAEO;AACL,kBAAIrE,KAAK,IAAI,MAAMjQ,IAAI,CAAC+D,EAAxB,EAA4B;AAC1B,uBAAO,CAAC,KAAK7E,IAAL,CAAU2Q,OAAV,GAAoBwE,EAArB,EAAyB,KAAKnV,IAAL,CAAU4Q,OAAV,GAAoBwE,EAA7C,CAAP;AACD,eAFD,MAEO;AACL,uBAAO,CAAC,KAAKpV,IAAL,CAAU2Q,OAAV,GAAoBwE,EAArB,EAAyB,KAAKnV,IAAL,CAAU4Q,OAAV,GAAoBwE,EAA7C,CAAP;AACD;AACF;AACF;;AACD;AAAO;;AAET,aAAK,kBAAL;AACEvE,UAAAA,EAAE,GAAG9T,CAAC,GAAG,KAAKiD,IAAL,CAAU2Q,OAAnB;AACAG,UAAAA,EAAE,GAAG9T,CAAC,GAAG,KAAKgD,IAAL,CAAU4Q,OAAnB;AACAQ,UAAAA,QAAQ,GAAGP,EAAE,GAAGA,EAAL,GAAUC,EAAE,GAAGA,EAA1B;AAEA,iBAAO,CACL,KAAK9Q,IAAL,CAAU2Q,OAAV,GACG,KAAK3Q,IAAL,CAAU2Q,OAAV,GAAoB,KAAK3Q,IAAL,CAAU2Q,OAA9B,GAAwCE,EAAzC,GAA+CO,QAF5C,EAGL,KAAKpR,IAAL,CAAU4Q,OAAV,GACG,KAAK5Q,IAAL,CAAU4Q,OAAV,GAAoB,KAAK5Q,IAAL,CAAU4Q,OAA9B,GAAwCE,EAAzC,GAA+CM,QAJ5C,CAAP;AAzIJ;AAgJD;;;WAvMD,mBAAyB;AACvB,aAAO,OAAP;AACD;;;;EAHuBlP;;AA2M1B,iEAAe2S,WAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxNA;AACA;AACA;;IAUMc;;;;;;;;;;;;;WAKJ,gCAAyC;AACvC,aAAO;AACLC,QAAAA,UAAU,EAAE,CADP;AAELC,QAAAA,UAAU,EAAE,CAFP;AAGLC,QAAAA,WAAW,EAAE,EAHR;AAILC,QAAAA,WAAW,EAAE,EAJR;AAKLC,QAAAA,QAAQ,EAAE,MALL,CAKa;;AALb,OAAP;AAOD;;;WAED,kBACEjZ,CADF,EAEEC,CAFF,EAGEP,UAHF,EAIEvG,KAJF,EAKEC,MALF,EAMiB;AACf,UAAIgf,EAAE,GAAGnY,CAAC,GAAGP,UAAU,CAACqZ,WAAxB;AAAA,UACEV,EAAE,GAAGrY,CAAC,GAAGN,UAAU,CAACsZ,WADtB;AAAA,UAEEE,EAFF;AAAA,UAGEC,EAHF;;AAKA,cAAQzZ,UAAU,CAACuZ,QAAnB;AACE,aAAK,MAAL;AACA;AACEC,UAAAA,EAAE,GAAGnV,IAAI,CAACsF,GAAL,CAAS+O,EAAT,CAAL;AACAe,UAAAA,EAAE,GAAGpV,IAAI,CAACsF,GAAL,CAASgP,EAAT,CAAL;AACA;;AAEF,aAAK,UAAL;AACEa,UAAAA,EAAE,GAAGpM,oDAAG,CAACsL,EAAD,EAAK,CAAL,CAAR;AACAe,UAAAA,EAAE,GAAGrM,oDAAG,CAACuL,EAAD,EAAK,CAAL,CAAR;AACA;;AAEF,aAAK,UAAL;AACEa,UAAAA,EAAE,GAAG5E,yDAAQ,CAAC8D,EAAD,CAAb;AACAe,UAAAA,EAAE,GAAG7E,yDAAQ,CAAC+D,EAAD,CAAb;AACA;;AAEF,aAAK,OAAL;AACEa,UAAAA,EAAE,GAAGP,6DAAA,CAAaP,EAAb,CAAL;AACAe,UAAAA,EAAE,GAAGR,6DAAA,CAAaN,EAAb,CAAL;AACA;AApBJ;;AAuBA,aAAO,CAACrY,CAAC,GAAGN,UAAU,CAACmZ,UAAX,GAAwBK,EAA7B,EAAiCjZ,CAAC,GAAGP,UAAU,CAACoZ,UAAX,GAAwBK,EAA7D,CAAP;AACD;;;WAlDD,mBAAyB;AACvB,aAAO,QAAP;AACD;;;;EAHwBhU;;AAsD3B,iEAAeyT,YAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClEA;;IAaMvD;;;;;;;;;;;;;;;;2DAKe;AACjBhM,MAAAA,GAAG,EAAE,CADY;AAEjBD,MAAAA,GAAG,EAAE,CAFY;AAGjBmK,MAAAA,QAAQ,EAAE,CAHO;AAIjBC,MAAAA,QAAQ,EAAE;AAJO;;;;;;;WAOnB,gCAAyC;AACvC,aAAO;AACLE,QAAAA,KAAK,EAAE3P,IAAI,CAAC+D;AADP,OAAP;AAGD;;;WAED,gBACEpI,UADF,EAEEvG,KAFF,EAGEC,MAHF,EAIEE,SAJF,EAKc;AACZ,aAAO;AACL8P,QAAAA,GAAG,EAAErF,IAAI,CAACqF,GAAL,CAAS1J,UAAU,CAACgU,KAApB,CADA;AAELrK,QAAAA,GAAG,EAAEtF,IAAI,CAACsF,GAAL,CAAS3J,UAAU,CAACgU,KAApB,CAFA;AAGLH,QAAAA,QAAQ,EAAEpa,KAAK,GAAG,CAHb;AAILqa,QAAAA,QAAQ,EAAEpa,MAAM,GAAG;AAJd,OAAP;AAMD;;;WAED,kBACE4G,CADF,EAEEC,CAFF,EAGEP,UAHF,EAIEvG,KAJF,EAKEC,MALF,EAMiB;AACf,aAAO,CACL,KAAK6J,IAAL,CAAUmG,GAAV,IAAiBpJ,CAAC,GAAG,KAAKiD,IAAL,CAAUsQ,QAA/B,IACE,KAAKtQ,IAAL,CAAUoG,GAAV,IAAiBpJ,CAAC,GAAG,KAAKgD,IAAL,CAAUuQ,QAA/B,CADF,GAEE,KAAKvQ,IAAL,CAAUuQ,QAHP,EAIL,KAAKvQ,IAAL,CAAUoG,GAAV,IAAiBrJ,CAAC,GAAG,KAAKiD,IAAL,CAAUsQ,QAA/B,IACE,KAAKtQ,IAAL,CAAUmG,GAAV,IAAiBnJ,CAAC,GAAG,KAAKgD,IAAL,CAAUuQ,QAA/B,CADF,GAEE,KAAKvQ,IAAL,CAAUuQ,QANP,CAAP;AAQD;;;WA9CD,mBAAyB;AACvB,aAAO,QAAP;AACD;;;;EAHwBrO;;AAkD3B,iEAAekQ,YAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/DA;;IAcMgE;;;;;;;;;;;;;;;;2DAKe;AACjBC,MAAAA,GAAG,EAAE,CADY;AAEjBC,MAAAA,GAAG,EAAE;AAFY;;;;;;;WAKnB,gCAAwC;AACtC,aAAO;AACLC,QAAAA,MAAM,EAAE,CADH;AAELC,QAAAA,MAAM,EAAE,CAFH;AAGLnE,QAAAA,OAAO,EAAE,CAHJ;AAILC,QAAAA,OAAO,EAAE;AAJJ,OAAP;AAMD;;;WAED,gBACE7V,UADF,EAEEvG,KAFF,EAGEC,MAHF,EAIc;AACZ,aAAO;AACLkgB,QAAAA,GAAG,EAAEvV,IAAI,CAACsF,GAAL,CAAS3J,UAAU,CAAC8Z,MAApB,CADA;AAELD,QAAAA,GAAG,EAAExV,IAAI,CAACsF,GAAL,CAAS3J,UAAU,CAAC+Z,MAApB;AAFA,OAAP;AAID;;;WAED,kBACEzZ,CADF,EAEEC,CAFF,EAGEP,UAHF,EAIEvG,KAJF,EAKEC,MALF,EAMiB;AACf,aAAO,CACL4G,CAAC,GAAGN,UAAU,CAAC4V,OAAf,GAAyBrV,CAAC,GAAG,KAAKgD,IAAL,CAAUqW,GADlC,EAELrZ,CAAC,GAAGP,UAAU,CAAC6V,OAAf,GAAyBvV,CAAC,GAAG,KAAKiD,IAAL,CAAUsW,GAFlC,CAAP;AAID;;;WAxCD,mBAAyB;AACvB,aAAO,OAAP;AACD;;;;EAHuBpU;;AA4C1B,iEAAekU,WAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1DA;;IAmBMK;;;;;;;;;;;;;;;;2DAKe;AACjBnG,MAAAA,QAAQ,EAAE,CADO;AAEjBC,MAAAA,QAAQ,EAAE,CAFO;AAGjBmG,MAAAA,EAAE,EAAE,CAHa;AAIjBC,MAAAA,EAAE,EAAE,CAJa;AAKjBpV,MAAAA,CAAC,EAAE,CALc;AAMjBD,MAAAA,CAAC,EAAE;AANc;;;;;;;WASnB,gCAAyC;AACvC,aAAO;AACLC,QAAAA,CAAC,EAAE,CADE;AAELD,QAAAA,CAAC,EAAE,CAFE;AAGLqP,QAAAA,OAAO,EAAE,GAHJ;AAILC,QAAAA,OAAO,EAAE,GAJJ;AAKLgG,QAAAA,eAAe,EAAE;AALZ,OAAP;AAOD;;;WAED,gBACEna,UADF,EAEEvG,KAFF,EAGEC,MAHF,EAIc;AACZ,UAAIma,QAAQ,GAAGpa,KAAK,GAAGuG,UAAU,CAACkU,OAAlC;AAAA,UACEJ,QAAQ,GAAGpa,MAAM,GAAGsG,UAAU,CAACmU,OADjC;AAAA,UAEErP,CAAC,GAAG9E,UAAU,CAAC8E,CAFjB;AAAA,UAGED,CAAC,GAAG7E,UAAU,CAAC6E,CAHjB;AAAA,UAIEoV,EAJF;AAAA,UAKEC,EALF;;AAMA,UAAIpV,CAAC,KAAK,CAAV,EAAa;AACXA,QAAAA,CAAC,GAAGrL,KAAK,GAAG,CAAZ;AACD;;AACD,UAAIoL,CAAC,KAAK,CAAV,EAAa;AACXA,QAAAA,CAAC,GAAGnL,MAAM,GAAG,CAAb;AACD;;AACDugB,MAAAA,EAAE,GAAGnV,CAAC,GAAGA,CAAT;AACAoV,MAAAA,EAAE,GAAGrV,CAAC,GAAGA,CAAT;AAEA,aAAO;AACLgP,QAAAA,QAAQ,EAAEA,QADL;AAELC,QAAAA,QAAQ,EAAEA,QAFL;AAGLhP,QAAAA,CAAC,EAAEA,CAHE;AAILD,QAAAA,CAAC,EAAEA,CAJE;AAKLoV,QAAAA,EAAE,EAAEA,EALC;AAMLC,QAAAA,EAAE,EAAEA;AANC,OAAP;AAQD;;;WAED,kBACE5Z,CADF,EAEEC,CAFF,EAGEP,UAHF,EAIEvG,KAJF,EAKEC,MALF,EAMiB;AACf,UAAI0a,EAAE,GAAG9T,CAAC,GAAG,KAAKiD,IAAL,CAAUsQ,QAAvB;AAAA,UACEQ,EAAE,GAAG9T,CAAC,GAAG,KAAKgD,IAAL,CAAUuQ,QADrB;AAAA,UAEE+C,EAAE,GAAGzC,EAAE,GAAGA,EAFZ;AAAA,UAGE0C,EAAE,GAAGzC,EAAE,GAAGA,EAHZ;AAAA,UAIE+F,WAAW,GAAG,IAAIpa,UAAU,CAACma,eAJ/B;AAAA,UAKEE,CAAC,GAAGhW,IAAI,CAACuF,IAAL,CACF,CAAC,IAAIiN,EAAE,GAAG,KAAKtT,IAAL,CAAU0W,EAAnB,GAAwBnD,EAAE,GAAG,KAAKvT,IAAL,CAAU2W,EAAxC,KACG,KAAK3W,IAAL,CAAUuB,CAAV,GAAc,KAAKvB,IAAL,CAAUsB,CAD3B,CADE,CALN;AAAA,UASEyV,EAAE,GAAGD,CAAC,GAAGA,CATX;AAAA,UAUEP,MAAM,GAAGzV,IAAI,CAACkW,IAAL,CAAUnG,EAAE,GAAG/P,IAAI,CAACuF,IAAL,CAAUiN,EAAE,GAAGyD,EAAf,CAAf,CAVX;AAAA,UAWEE,MAAM,GAAGnW,IAAI,CAAC+D,EAAL,GAAU,CAAV,GAAc0R,MAXzB;AAAA,UAYEhF,MAAM,GAAGzQ,IAAI,CAACoW,IAAL,CAAUpW,IAAI,CAACsF,GAAL,CAAS6Q,MAAT,IAAmBJ,WAA7B,CAZX;AAAA,UAaEL,MAAM,GAAG1V,IAAI,CAACkW,IAAL,CAAUlG,EAAE,GAAGhQ,IAAI,CAACuF,IAAL,CAAUkN,EAAE,GAAGwD,EAAf,CAAf,CAbX;AAAA,UAcEI,GAAG,GAAG,IAAI/I,KAAJ,CAAU,CAAV,CAdR;;AAgBA,UAAImF,EAAE,IAAI,KAAKvT,IAAL,CAAU2W,EAAV,GAAe,KAAK3W,IAAL,CAAU2W,EAAV,GAAerD,EAAf,GAAoB,KAAKtT,IAAL,CAAU0W,EAAvD,EAA2D;AACzD,eAAO,CAAC3Z,CAAD,EAAIC,CAAJ,CAAP;AACD;;AAEDuU,MAAAA,MAAM,GAAGzQ,IAAI,CAAC+D,EAAL,GAAU,CAAV,GAAc0R,MAAd,GAAuBhF,MAAhC;AACA4F,MAAAA,GAAG,CAAC,CAAD,CAAH,GAASpa,CAAC,GAAG+D,IAAI,CAAC2U,GAAL,CAASlE,MAAT,IAAmBuF,CAAhC;AAEAG,MAAAA,MAAM,GAAGnW,IAAI,CAAC+D,EAAL,GAAU,CAAV,GAAc2R,MAAvB;AACAjF,MAAAA,MAAM,GAAGzQ,IAAI,CAACoW,IAAL,CAAUpW,IAAI,CAACsF,GAAL,CAAS6Q,MAAT,IAAmBJ,WAA7B,CAAT;AACAtF,MAAAA,MAAM,GAAGzQ,IAAI,CAAC+D,EAAL,GAAU,CAAV,GAAc2R,MAAd,GAAuBjF,MAAhC;AACA4F,MAAAA,GAAG,CAAC,CAAD,CAAH,GAASna,CAAC,GAAG8D,IAAI,CAAC2U,GAAL,CAASlE,MAAT,IAAmBuF,CAAhC;AACA,aAAOK,GAAP;AACD;;;WAxFD,mBAAyB;AACvB,aAAO,QAAP;AACD;;;;EAHwBjV;;AA4F3B,iEAAeuU,YAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/GA;AACA;;IAkBMW;;;;;;;;;;;;;;;;2DAKe;AACjBC,MAAAA,GAAG,EAAE,CADY;AAEjBC,MAAAA,GAAG,EAAE,CAFY;AAGjBC,MAAAA,GAAG,EAAE,CAHY;AAIjBC,MAAAA,GAAG,EAAE;AAJY;;;;;;;WAOnB,gCAAuC;AACrC,aAAO;AACL/H,QAAAA,KAAK,EAAE,EADF;AAELwC,QAAAA,UAAU,EAAE,CAFP;AAGLD,QAAAA,MAAM,EAAE,CAHH;AAILyF,QAAAA,IAAI,EAAE,CAJD;AAKLhH,QAAAA,KAAK,EAAE,CALF;AAMLiH,QAAAA,OAAO,EAAE;AANJ,OAAP;AAQD;;;WAED,gBACEjb,UADF,EAEEvG,KAFF,EAGEC,MAHF,EAIc;AACZ,UAAIgQ,GAAG,GAAGrF,IAAI,CAACqF,GAAL,CAAS1J,UAAU,CAACgU,KAApB,CAAV;AAAA,UACErK,GAAG,GAAGtF,IAAI,CAACsF,GAAL,CAAS3J,UAAU,CAACgU,KAApB,CADR;AAGA,aAAO;AACL4G,QAAAA,GAAG,EAAElR,GADA;AAELmR,QAAAA,GAAG,EAAElR,GAFA;AAGLmR,QAAAA,GAAG,EAAE,CAACnR,GAHD;AAILoR,QAAAA,GAAG,EAAErR;AAJA,OAAP;AAMD;;;WAED,kBACEpJ,CADF,EAEEC,CAFF,EAGEP,UAHF,EAIEvG,KAJF,EAKEC,MALF,EAMiB;AACf,UAAIgf,EAAE,GAAG,KAAKnV,IAAL,CAAUqX,GAAV,GAAgBta,CAAhB,GAAoB,KAAKiD,IAAL,CAAUsX,GAAV,GAAgBta,CAA7C;AAAA,UACEoY,EAAE,GAAG,KAAKpV,IAAL,CAAUuX,GAAV,GAAgBxa,CAAhB,GAAoB,KAAKiD,IAAL,CAAUwX,GAAV,GAAgBxa,CAD3C;AAGAmY,MAAAA,EAAE,IAAI1Y,UAAU,CAACgT,KAAjB;AACA2F,MAAAA,EAAE,IAAI3Y,UAAU,CAACgT,KAAX,GAAmBhT,UAAU,CAACib,OAApC;;AAEA,UAAIjb,UAAU,CAACwV,UAAX,KAA0B,CAA9B,EAAiC;AAC/B,eAAO,CACLlV,CAAC,GAAGN,UAAU,CAACuV,MAAX,GAAoB0D,6DAAA,CAAaP,EAAE,GAAG,GAAlB,EAAuBC,EAAvB,EAA2B3Y,UAAU,CAACgb,IAAtC,CADnB,EAELza,CAAC,GAAGP,UAAU,CAACuV,MAAX,GAAoB0D,6DAAA,CAAaP,EAAb,EAAiBC,EAAE,GAAG,GAAtB,EAA2B3Y,UAAU,CAACgb,IAAtC,CAFnB,CAAP;AAID;;AACD,aAAO,CACL1a,CAAC,GACCN,UAAU,CAACuV,MAAX,GACE0D,kEAAA,CACEP,EAAE,GAAG,GADP,EAEEC,EAFF,EAGE3Y,UAAU,CAACwV,UAHb,EAIExV,UAAU,CAACgb,IAJb,CAHC,EASLza,CAAC,GACCP,UAAU,CAACuV,MAAX,GACE0D,kEAAA,CACEP,EADF,EAEEC,EAAE,GAAG,GAFP,EAGE3Y,UAAU,CAACwV,UAHb,EAIExV,UAAU,CAACgb,IAJb,CAXC,CAAP;AAkBD;;;WA3ED,mBAAyB;AACvB,aAAO,MAAP;AACD;;;;EAHsBvV;;AA+EzB,iEAAekV,UAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClGA;;IAiBMS;;;;;;;;;;;;;;;;2DAKe;AACjBC,MAAAA,QAAQ,EAAE,CADO;AAEjBC,MAAAA,QAAQ,EAAE,CAFO;AAGjBvH,MAAAA,MAAM,EAAE,CAHS;AAIjBmE,MAAAA,OAAO,EAAE;AAJQ;;;;;;;WAOnB,gCAAwC;AACtC,aAAO;AACLlE,QAAAA,KAAK,EAAE,CADF;AAELE,QAAAA,OAAO,EAAE,GAFJ;AAGLC,QAAAA,OAAO,EAAE,GAHJ;AAILJ,QAAAA,MAAM,EAAE,GAJH;AAKLmE,QAAAA,OAAO,EAAE;AALJ,OAAP;AAOD;;;WAED,gBACElY,UADF,EAEEvG,KAFF,EAGEC,MAHF,EAIc;AACZ,UAAI2hB,QAAQ,GAAG5hB,KAAK,GAAGuG,UAAU,CAACkU,OAAlC;AAAA,UACEoH,QAAQ,GAAG5hB,MAAM,GAAGsG,UAAU,CAACmU,OADjC;AAAA,UAEEJ,MAAM,GAAG/T,UAAU,CAAC+T,MAFtB;AAAA,UAGEmE,OAHF;;AAKA,UAAInE,MAAM,KAAK,CAAf,EAAkB;AAChBA,QAAAA,MAAM,GAAG1P,IAAI,CAACC,GAAL,CAAS+W,QAAT,EAAmBC,QAAnB,CAAT;AACD;;AACDpD,MAAAA,OAAO,GAAGnE,MAAM,GAAGA,MAAnB;AAEA,aAAO;AACLsH,QAAAA,QAAQ,EAAEA,QADL;AAELC,QAAAA,QAAQ,EAAEA,QAFL;AAGLvH,QAAAA,MAAM,EAAEA,MAHH;AAILmE,QAAAA,OAAO,EAAEA;AAJJ,OAAP;AAMD;;;WAED,kBACE5X,CADF,EAEEC,CAFF,EAGEP,UAHF,EAIEvG,KAJF,EAKEC,MALF,EAMiB;AACf,UAAI0a,EAAE,GAAG9T,CAAC,GAAG,KAAKiD,IAAL,CAAU8X,QAAvB;AAAA,UACEhH,EAAE,GAAG9T,CAAC,GAAG,KAAKgD,IAAL,CAAU+X,QADrB;AAAA,UAEE3G,QAAQ,GAAGP,EAAE,GAAGA,EAAL,GAAUC,EAAE,GAAGA,EAF5B;AAAA,UAGEvP,CAHF;;AAKA,UAAI6P,QAAQ,GAAG3U,UAAU,CAACkY,OAA1B,EAAmC;AACjC,eAAO,CAAC5X,CAAD,EAAIC,CAAJ,CAAP;AACD;;AAEDoU,MAAAA,QAAQ,GAAGtQ,IAAI,CAACuF,IAAL,CAAU+K,QAAV,CAAX;AACA7P,MAAAA,CAAC,GACCT,IAAI,CAACkQ,KAAL,CAAWF,EAAX,EAAeD,EAAf,IACCpU,UAAU,CAACgU,KAAX,IAAoBhU,UAAU,CAAC+T,MAAX,GAAoBY,QAAxC,CAAD,GAAsD3U,UAAU,CAAC+T,MAFnE;AAIA,aAAO,CACL,KAAKxQ,IAAL,CAAU8X,QAAV,GAAqB1G,QAAQ,GAAGtQ,IAAI,CAACqF,GAAL,CAAS5E,CAAT,CAD3B,EAEL,KAAKvB,IAAL,CAAU+X,QAAV,GAAqB3G,QAAQ,GAAGtQ,IAAI,CAACsF,GAAL,CAAS7E,CAAT,CAF3B,CAAP;AAID;;;WArED,mBAAyB;AACvB,aAAO,OAAP;AACD;;;;EAHuBW;;AAyE1B,iEAAe2V,WAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1FA;;IAkBMG;;;;;;;;;;;;;;;;2DAKe;AACjBF,MAAAA,QAAQ,EAAE,CADO;AAEjBC,MAAAA,QAAQ,EAAE,CAFO;AAGjBpD,MAAAA,OAAO,EAAE,CAHQ;AAIjBnE,MAAAA,MAAM,EAAE;AAJS;;;;;;;WAOnB,gCAAwC;AACtC,aAAO;AACLyH,QAAAA,UAAU,EAAE,EADP;AAELC,QAAAA,SAAS,EAAE,EAFN;AAGLC,QAAAA,KAAK,EAAE,CAHF;AAILxH,QAAAA,OAAO,EAAE,GAJJ;AAKLC,QAAAA,OAAO,EAAE,GALJ;AAMLJ,QAAAA,MAAM,EAAE;AANH,OAAP;AAQD;;;WAED,gBACE/T,UADF,EAEEvG,KAFF,EAGEC,MAHF,EAIc;AACZ,UAAI2hB,QAAQ,GAAG5hB,KAAK,GAAGuG,UAAU,CAACkU,OAAlC;AAAA,UACEoH,QAAQ,GAAG5hB,MAAM,GAAGsG,UAAU,CAACmU,OADjC;AAAA,UAEEJ,MAAM,GAAG/T,UAAU,CAAC+T,MAFtB;AAAA,UAGEmE,OAHF;;AAKA,UAAInE,MAAM,KAAK,CAAf,EAAkB;AAChBA,QAAAA,MAAM,GAAG1P,IAAI,CAACC,GAAL,CAAS+W,QAAT,EAAmBC,QAAnB,CAAT;AACD;;AACDpD,MAAAA,OAAO,GAAGnE,MAAM,GAAGA,MAAnB;AAEA,aAAO;AACLsH,QAAAA,QAAQ,EAARA,QADK;AAELC,QAAAA,QAAQ,EAARA,QAFK;AAGLvH,QAAAA,MAAM,EAANA,MAHK;AAILmE,QAAAA,OAAO,EAAPA;AAJK,OAAP;AAMD;;;WAED,kBACE5X,CADF,EAEEC,CAFF,EAGEP,UAHF,EAIEvG,KAJF,EAKEC,MALF,EAMiB;AACf,UAAI0a,EAAE,GAAG9T,CAAC,GAAG,KAAKiD,IAAL,CAAU8X,QAAvB;AAAA,UACEhH,EAAE,GAAG9T,CAAC,GAAG,KAAKgD,IAAL,CAAU+X,QADrB;AAAA,UAEEK,SAAS,GAAGvH,EAAE,GAAGA,EAAL,GAAUC,EAAE,GAAGA,EAF7B;AAAA,UAGEM,QAHF;AAAA,UAIEY,MAJF;;AAMA,UAAIoG,SAAS,GAAG,KAAKpY,IAAL,CAAU2U,OAA1B,EAAmC;AACjC,eAAO,CAAC5X,CAAD,EAAIC,CAAJ,CAAP;AACD;;AACDoU,MAAAA,QAAQ,GAAGtQ,IAAI,CAACuF,IAAL,CAAU+R,SAAV,CAAX;AACApG,MAAAA,MAAM,GACJvV,UAAU,CAACyb,SAAX,GACApX,IAAI,CAACsF,GAAL,CACGgL,QAAQ,GAAG3U,UAAU,CAACwb,UAAvB,GAAqCnX,IAAI,CAAC+D,EAA1C,GAA+C,CAA/C,GAAmDpI,UAAU,CAAC0b,KADhE,CAFF;AAKAnG,MAAAA,MAAM,IAAI,CAACvV,UAAU,CAAC+T,MAAX,GAAoBY,QAArB,IAAiC3U,UAAU,CAAC+T,MAAtD;;AACA,UAAIY,QAAQ,KAAK,CAAjB,EAAoB;AAClBY,QAAAA,MAAM,IAAIvV,UAAU,CAACwb,UAAX,GAAwB7G,QAAlC;AACD;;AACD,aAAO,CAACrU,CAAC,GAAG8T,EAAE,GAAGmB,MAAV,EAAkBhV,CAAC,GAAG8T,EAAE,GAAGkB,MAA3B,CAAP;AACD;;;WAxED,mBAAyB;AACvB,aAAO,OAAP;AACD;;;;EAHuB9P;;AA4E1B,iEAAe8V,WAAf;;;;;;;;;;;;;;;;;;;;;;AC9FA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS7K,QAAT,CACL/L,CADK,EAELC,CAFK,EAGLC,CAHK,EAQL;AACA,MAAI+W,GAAJ;AAAA,MACEC,UADF;AAAA,MAEE5T,UAFF;AAAA,MAGE6T,IAAI,GAAGzX,IAAI,CAACE,GAAL,CAASI,CAAT,EAAYC,CAAZ,EAAeC,CAAf,CAHT;AAAA,MAIEkX,IAAI,GAAG1X,IAAI,CAACC,GAAL,CAASK,CAAT,EAAYC,CAAZ,EAAeC,CAAf,CAJT;AAMAoD,EAAAA,UAAU,GAAG6T,IAAI,GAAG,GAApB;;AACA,MAAIA,IAAI,KAAK,CAAb,EAAgB;AACdD,IAAAA,UAAU,GAAG,CAACC,IAAI,GAAGC,IAAR,IAAgBD,IAA7B;AACD,GAFD,MAEO;AACLD,IAAAA,UAAU,GAAG,CAAb;AACD;;AAED,MAAIA,UAAU,KAAK,CAAnB,EAAsB;AACpBD,IAAAA,GAAG,GAAG,CAAN;AACD,GAFD,MAEO;AACL,QAAII,IAAI,GAAG,CAACF,IAAI,GAAGnX,CAAR,KAAcmX,IAAI,GAAGC,IAArB,CAAX;AAAA,QACEE,MAAM,GAAG,CAACH,IAAI,GAAGlX,CAAR,KAAckX,IAAI,GAAGC,IAArB,CADX;AAAA,QAEEG,KAAK,GAAG,CAACJ,IAAI,GAAGjX,CAAR,KAAciX,IAAI,GAAGC,IAArB,CAFV;;AAIA,QAAIpX,CAAC,KAAKmX,IAAV,EAAgB;AACdF,MAAAA,GAAG,GAAGM,KAAK,GAAGD,MAAd;AACD,KAFD,MAEO;AACL,UAAIrX,CAAC,KAAKkX,IAAV,EAAgB;AACdF,QAAAA,GAAG,GAAG,IAAII,IAAJ,GAAWE,KAAjB;AACD,OAFD,MAEO;AACLN,QAAAA,GAAG,GAAG,IAAIK,MAAJ,GAAaD,IAAnB;AACD;AACF;;AAEDJ,IAAAA,GAAG,IAAI,CAAP;;AACA,QAAIA,GAAG,GAAG,CAAV,EAAa;AACXA,MAAAA,GAAG,IAAI,CAAP;AACD;AACF;;AAED,SAAO;AACL9U,IAAAA,CAAC,EAAE8U,GADE;AAEL/K,IAAAA,CAAC,EAAEgL,UAFE;AAGLhX,IAAAA,CAAC,EAAEoD;AAHE,GAAP;AAKD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAAS0I,QAAT,CACLiL,GADK,EAELC,UAFK,EAGL5T,UAHK,EAQL;AACA,MAAIgG,GAAJ,EAASC,KAAT,EAAgBC,IAAhB;;AACA,MAAI0N,UAAU,KAAK,CAAnB,EAAsB;AACpB5N,IAAAA,GAAG,GAAGhG,UAAU,GAAG,GAAb,GAAmB,GAAzB;AACAiG,IAAAA,KAAK,GAAGjG,UAAU,GAAG,GAAb,GAAmB,GAA3B;AACAkG,IAAAA,IAAI,GAAGlG,UAAU,GAAG,GAAb,GAAmB,GAA1B;AACD,GAJD,MAIO;AACL,QAAInB,CAAC,GAAG,CAAC8U,GAAG,GAAGvX,IAAI,CAACsL,KAAL,CAAWiM,GAAX,CAAP,IAA0B,CAAlC;AAAA,QACE5O,CAAC,GAAGlG,CAAC,GAAGzC,IAAI,CAACsL,KAAL,CAAW7I,CAAX,CADV;AAAA,QAEEqV,CAAC,GAAGlU,UAAU,IAAI,IAAI4T,UAAR,CAFhB;AAAA,QAGEO,CAAC,GAAGnU,UAAU,IAAI,IAAI4T,UAAU,GAAG7O,CAArB,CAHhB;AAAA,QAIEjG,CAAC,GAAGkB,UAAU,IAAI,IAAI4T,UAAU,IAAI,IAAI7O,CAAR,CAAlB,CAJhB;;AAMA,YAAQlG,CAAC,GAAG,CAAZ;AACE,WAAK,CAAL;AACEmH,QAAAA,GAAG,GAAGhG,UAAU,GAAG,GAAb,GAAmB,GAAzB;AACAiG,QAAAA,KAAK,GAAGnH,CAAC,GAAG,GAAJ,GAAU,GAAlB;AACAoH,QAAAA,IAAI,GAAGgO,CAAC,GAAG,GAAJ,GAAU,GAAjB;AACA;;AAEF,WAAK,CAAL;AACElO,QAAAA,GAAG,GAAGmO,CAAC,GAAG,GAAJ,GAAU,GAAhB;AACAlO,QAAAA,KAAK,GAAGjG,UAAU,GAAG,GAAb,GAAmB,GAA3B;AACAkG,QAAAA,IAAI,GAAGgO,CAAC,GAAG,GAAJ,GAAU,GAAjB;AACA;;AAEF,WAAK,CAAL;AACElO,QAAAA,GAAG,GAAGkO,CAAC,GAAG,GAAJ,GAAU,GAAhB;AACAjO,QAAAA,KAAK,GAAGjG,UAAU,GAAG,GAAb,GAAmB,GAA3B;AACAkG,QAAAA,IAAI,GAAGpH,CAAC,GAAG,GAAJ,GAAU,GAAjB;AACA;;AAEF,WAAK,CAAL;AACEkH,QAAAA,GAAG,GAAGkO,CAAC,GAAG,GAAJ,GAAU,GAAhB;AACAjO,QAAAA,KAAK,GAAGkO,CAAC,GAAG,GAAJ,GAAU,GAAlB;AACAjO,QAAAA,IAAI,GAAGlG,UAAU,GAAG,GAAb,GAAmB,GAA1B;AACA;;AAEF,WAAK,CAAL;AACEgG,QAAAA,GAAG,GAAGlH,CAAC,GAAG,GAAJ,GAAU,GAAhB;AACAmH,QAAAA,KAAK,GAAGiO,CAAC,GAAG,GAAJ,GAAU,GAAlB;AACAhO,QAAAA,IAAI,GAAGlG,UAAU,GAAG,GAAb,GAAmB,GAA1B;AACA;;AAEF,WAAK,CAAL;AACEgG,QAAAA,GAAG,GAAGhG,UAAU,GAAG,GAAb,GAAmB,GAAzB;AACAiG,QAAAA,KAAK,GAAGiO,CAAC,GAAG,GAAJ,GAAU,GAAlB;AACAhO,QAAAA,IAAI,GAAGiO,CAAC,GAAG,GAAJ,GAAU,GAAjB;AACA;;AAEF;AACEnO,QAAAA,GAAG,GAAG,CAAN;AACAC,QAAAA,KAAK,GAAG,CAAR;AACAC,QAAAA,IAAI,GAAG,CAAP;AACA;AAzCJ;AA2CD;;AACD,SAAO;AACLxJ,IAAAA,CAAC,EAAE0X,QAAQ,CAACpO,GAAD,CADN;AAELrJ,IAAAA,CAAC,EAAEyX,QAAQ,CAACnO,KAAD,CAFN;AAGLrJ,IAAAA,CAAC,EAAEwX,QAAQ,CAAClO,IAAD;AAHN,GAAP;AAKD;AAEM,SAASoF,SAAT,CACLxM,CADK,EAELuV,IAFK,EAQLC,IARK,EAmBL;AACA,SAAO;AACL5X,IAAAA,CAAC,EAAE2X,IAAI,CAAC3X,CAAL,GAASoC,CAAC,IAAIwV,IAAI,CAAC5X,CAAL,GAAS2X,IAAI,CAAC3X,CAAlB,CADR;AAELC,IAAAA,CAAC,EAAE0X,IAAI,CAAC1X,CAAL,GAASmC,CAAC,IAAIwV,IAAI,CAAC3X,CAAL,GAAS0X,IAAI,CAAC1X,CAAlB,CAFR;AAGLC,IAAAA,CAAC,EAAEyX,IAAI,CAACzX,CAAL,GAASkC,CAAC,IAAIwV,IAAI,CAAC1X,CAAL,GAASyX,IAAI,CAACzX,CAAlB,CAHR;AAILC,IAAAA,CAAC,EAAEwX,IAAI,CAACxX,CAAL,GAASiC,CAAC,IAAIwV,IAAI,CAACzX,CAAL,GAASwX,IAAI,CAACxX,CAAlB;AAJR,GAAP;AAMD;AAEM,SAAS+E,QAAT,CAAkB2S,GAAlB,EAIL;AACA,MAAMC,IAAI,GAAGJ,QAAQ,CAACG,GAAG,CAAChZ,OAAJ,CAAY,GAAZ,EAAiB,EAAjB,CAAD,EAAuB,EAAvB,CAArB;;AACA,MAAImB,CAAC,GAAG8X,IAAI,IAAI,EAAhB;AACA,MAAI7X,CAAC,GAAI6X,IAAI,IAAI,CAAT,GAAc,IAAtB;AACA,MAAI5X,CAAC,GAAG4X,IAAI,GAAG,IAAf;AACA,SAAO;AACL9X,IAAAA,CAAC,EAAEA,CADE;AAELC,IAAAA,CAAC,EAAEA,CAFE;AAGLC,IAAAA,CAAC,EAAEA;AAHE,GAAP;AAKD;AAEM,SAAS6X,QAAT,CAAkBnX,KAAlB,EAA8D;AACnE,MAAIoX,GAAG,GAAIpX,KAAK,CAACZ,CAAN,IAAW,EAAZ,GAAmBY,KAAK,CAACX,CAAN,IAAW,CAA9B,GAAmCW,KAAK,CAACV,CAAnD;AACA,SAAQ,UAAUiC,CAAV,EAAa;AACnB,WAAO,IAAI6K,KAAJ,CAAU,IAAI7K,CAAC,CAAClG,MAAhB,EAAwBgc,IAAxB,CAA6B,GAA7B,IAAoC9V,CAA3C;AACD,GAFM,CAEJ6V,GAAG,CAACE,QAAJ,CAAa,EAAb,EAAiBC,WAAjB,EAFI,CAAP;AAGD;AAEM,SAASC,QAAT,CACLpY,CADK,EAELC,CAFK,EAGLC,CAHK,EAQL;AACA,MAAImY,KAAK,GAAGrY,CAAC,GAAG,GAAhB;AACA,MAAIsY,KAAK,GAAGrY,CAAC,GAAG,GAAhB;AACA,MAAIsY,KAAK,GAAGrY,CAAC,GAAG,GAAhB;;AAEA,MAAImY,KAAK,GAAG,OAAZ,EAAqB;AACnBA,IAAAA,KAAK,GAAG3Y,IAAI,CAACkM,GAAL,CAAS,CAACyM,KAAK,GAAG,KAAT,IAAkB,KAA3B,EAAkC,GAAlC,CAAR;AACD,GAFD,MAEO;AACLA,IAAAA,KAAK,GAAGA,KAAK,GAAG,KAAhB;AACD;;AAED,MAAIC,KAAK,GAAG,OAAZ,EAAqB;AACnBA,IAAAA,KAAK,GAAG5Y,IAAI,CAACkM,GAAL,CAAS,CAAC0M,KAAK,GAAG,KAAT,IAAkB,KAA3B,EAAkC,GAAlC,CAAR;AACD,GAFD,MAEO;AACLA,IAAAA,KAAK,GAAGA,KAAK,GAAG,KAAhB;AACD;;AAED,MAAIC,KAAK,GAAG,OAAZ,EAAqB;AACnBA,IAAAA,KAAK,GAAG7Y,IAAI,CAACkM,GAAL,CAAS,CAAC2M,KAAK,GAAG,KAAT,IAAkB,KAA3B,EAAkC,GAAlC,CAAR;AACD,GAFD,MAEO;AACLA,IAAAA,KAAK,GAAGA,KAAK,GAAG,KAAhB;AACD;;AAEDF,EAAAA,KAAK,GAAGA,KAAK,GAAG,GAAhB;AACAC,EAAAA,KAAK,GAAGA,KAAK,GAAG,GAAhB;AACAC,EAAAA,KAAK,GAAGA,KAAK,GAAG,GAAhB;AAEA,SAAO;AACL5c,IAAAA,CAAC,EAAE0c,KAAK,GAAG,MAAR,GAAiBC,KAAK,GAAG,MAAzB,GAAkCC,KAAK,GAAG,MADxC;AAEL3c,IAAAA,CAAC,EAAEyc,KAAK,GAAG,MAAR,GAAiBC,KAAK,GAAG,MAAzB,GAAkCC,KAAK,GAAG,MAFxC;AAGL7C,IAAAA,CAAC,EAAE2C,KAAK,GAAG,MAAR,GAAiBC,KAAK,GAAG,MAAzB,GAAkCC,KAAK,GAAG;AAHxC,GAAP;AAKD;AAEM,SAASnX,WAAT,CACLpB,CADK,EAELC,CAFK,EAGLC,CAHK,EAQL;AACA,MAAIsY,GAAG,GAAGJ,QAAQ,CAACpY,CAAD,EAAIC,CAAJ,EAAOC,CAAP,CAAlB;AAEA,MAAIuY,KAAK,GAAGD,GAAG,CAAC7c,CAAJ,GAAQ,MAApB,CAHA,CAG4B;;AAC5B,MAAI+c,KAAK,GAAGF,GAAG,CAAC5c,CAAJ,GAAQ,GAApB,CAJA,CAIyB;;AACzB,MAAI+c,KAAK,GAAGH,GAAG,CAAC9C,CAAJ,GAAQ,OAApB,CALA,CAK6B;;AAE7B,MAAI+C,KAAK,GAAG,QAAZ,EAAsB;AACpBA,IAAAA,KAAK,GAAG/Y,IAAI,CAACkM,GAAL,CAAS6M,KAAT,EAAgB,IAAI,CAApB,CAAR;AACD,GAFD,MAEO;AACLA,IAAAA,KAAK,GAAG,QAAQA,KAAR,GAAgB,KAAK,GAA7B;AACD;;AAED,MAAIC,KAAK,GAAG,QAAZ,EAAsB;AACpBA,IAAAA,KAAK,GAAGhZ,IAAI,CAACkM,GAAL,CAAS8M,KAAT,EAAgB,IAAI,CAApB,CAAR;AACD,GAFD,MAEO;AACLA,IAAAA,KAAK,GAAG,QAAQA,KAAR,GAAgB,KAAK,GAA7B;AACD;;AAED,MAAIC,KAAK,GAAG,QAAZ,EAAsB;AACpBA,IAAAA,KAAK,GAAGjZ,IAAI,CAACkM,GAAL,CAAS+M,KAAT,EAAgB,IAAI,CAApB,CAAR;AACD,GAFD,MAEO;AACLA,IAAAA,KAAK,GAAG,QAAQA,KAAR,GAAgB,KAAK,GAA7B;AACD;;AAED,SAAO;AACL5W,IAAAA,CAAC,EAAE,MAAM2W,KAAN,GAAc,EADZ;AAELvY,IAAAA,CAAC,EAAE,OAAOsY,KAAK,GAAGC,KAAf,CAFE;AAGLxY,IAAAA,CAAC,EAAE,OAAOwY,KAAK,GAAGC,KAAf;AAHE,GAAP;AAKD;AAEM,SAASC,WAAT,CACL7W,CADK,EAEL5B,CAFK,EAGLD,CAHK,EAQL;AACA,MAAIwY,KAAK,GAAG,CAAC3W,CAAC,GAAG,EAAL,IAAW,GAAvB;AACA,MAAI0W,KAAK,GAAGtY,CAAC,GAAG,GAAJ,GAAUuY,KAAtB;AACA,MAAIC,KAAK,GAAGD,KAAK,GAAGxY,CAAC,GAAG,GAAxB;;AAEA,MAAIR,IAAI,CAACkM,GAAL,CAAS8M,KAAT,EAAgB,CAAhB,IAAqB,QAAzB,EAAmC;AACjCA,IAAAA,KAAK,GAAGhZ,IAAI,CAACkM,GAAL,CAAS8M,KAAT,EAAgB,CAAhB,CAAR;AACD,GAFD,MAEO;AACLA,IAAAA,KAAK,GAAG,CAACA,KAAK,GAAG,KAAK,GAAd,IAAqB,KAA7B;AACD;;AAED,MAAIhZ,IAAI,CAACkM,GAAL,CAAS6M,KAAT,EAAgB,CAAhB,IAAqB,QAAzB,EAAmC;AACjCA,IAAAA,KAAK,GAAG/Y,IAAI,CAACkM,GAAL,CAAS6M,KAAT,EAAgB,CAAhB,CAAR;AACD,GAFD,MAEO;AACLA,IAAAA,KAAK,GAAG,CAACA,KAAK,GAAG,KAAK,GAAd,IAAqB,KAA7B;AACD;;AAED,MAAI/Y,IAAI,CAACkM,GAAL,CAAS+M,KAAT,EAAgB,CAAhB,IAAqB,QAAzB,EAAmC;AACjCA,IAAAA,KAAK,GAAGjZ,IAAI,CAACkM,GAAL,CAAS+M,KAAT,EAAgB,CAAhB,CAAR;AACD,GAFD,MAEO;AACLA,IAAAA,KAAK,GAAG,CAACA,KAAK,GAAG,KAAK,GAAd,IAAqB,KAA7B;AACD;;AAED,SAAO;AACLhd,IAAAA,CAAC,EAAE,SAAS8c,KADP;AACc;AACnB7c,IAAAA,CAAC,EAAE,MAAM8c,KAFJ;AAEW;AAChBhD,IAAAA,CAAC,EAAE,UAAUiD,KAHR,CAGe;;AAHf,GAAP;AAKD;AAEM,SAAStX,WAAT,CACLU,CADK,EAEL5B,CAFK,EAGLD,CAHK,EAQL;AACA,MAAIsY,GAAG,GAAGI,WAAW,CAAC7W,CAAD,EAAI5B,CAAJ,EAAOD,CAAP,CAArB;AAEA,MAAIuY,KAAK,GAAGD,GAAG,CAAC7c,CAAJ,GAAQ,GAApB;AACA,MAAI+c,KAAK,GAAGF,GAAG,CAAC5c,CAAJ,GAAQ,GAApB;AACA,MAAI+c,KAAK,GAAGH,GAAG,CAAC9C,CAAJ,GAAQ,GAApB;AAEA,MAAI2C,KAAK,GAAGI,KAAK,GAAG,MAAR,GAAiBC,KAAK,GAAG,CAAC,MAA1B,GAAmCC,KAAK,GAAG,CAAC,MAAxD;AACA,MAAIL,KAAK,GAAGG,KAAK,GAAG,CAAC,MAAT,GAAkBC,KAAK,GAAG,MAA1B,GAAmCC,KAAK,GAAG,MAAvD;AACA,MAAIJ,KAAK,GAAGE,KAAK,GAAG,MAAR,GAAiBC,KAAK,GAAG,CAAC,KAA1B,GAAkCC,KAAK,GAAG,KAAtD;;AAEA,MAAIN,KAAK,GAAG,SAAZ,EAAuB;AACrBA,IAAAA,KAAK,GAAG,QAAQ3Y,IAAI,CAACkM,GAAL,CAASyM,KAAT,EAAgB,IAAI,GAApB,CAAR,GAAmC,KAA3C;AACD,GAFD,MAEO;AACLA,IAAAA,KAAK,GAAG,QAAQA,KAAhB;AACD;;AAED,MAAIC,KAAK,GAAG,SAAZ,EAAuB;AACrBA,IAAAA,KAAK,GAAG,QAAQ5Y,IAAI,CAACkM,GAAL,CAAS0M,KAAT,EAAgB,IAAI,GAApB,CAAR,GAAmC,KAA3C;AACD,GAFD,MAEO;AACLA,IAAAA,KAAK,GAAG,QAAQA,KAAhB;AACD;;AAED,MAAIC,KAAK,GAAG,SAAZ,EAAuB;AACrBA,IAAAA,KAAK,GAAG,QAAQ7Y,IAAI,CAACkM,GAAL,CAAS2M,KAAT,EAAgB,IAAI,GAApB,CAAR,GAAmC,KAA3C;AACD,GAFD,MAEO;AACLA,IAAAA,KAAK,GAAG,QAAQA,KAAhB;AACD;;AAED,SAAO;AACLvY,IAAAA,CAAC,EAAEqY,KAAK,GAAG,GADN;AAELpY,IAAAA,CAAC,EAAEqY,KAAK,GAAG,GAFN;AAGLpY,IAAAA,CAAC,EAAEqY,KAAK,GAAG;AAHN,GAAP;AAKD;;;;;;;;;;;;;;;;;;;;;AC/VD,IAAMM,aAAa,GAAG;AACpBC,EAAAA,OAAO,EAAE,iBAAUC,WAAV,EAA+BC,QAA/B,EAAyD;AAChE,WAAOA,QAAQ,GAAGD,WAAX,GAAyBC,QAAzB,GAAoCD,WAA3C;AACD,GAHmB;AAIpBE,EAAAA,MAAM,EAAE,gBAAUF,WAAV,EAA+BC,QAA/B,EAAyD;AAC/D,WAAOA,QAAQ,GAAGD,WAAX,GAAyBA,WAAzB,GAAuCC,QAA9C;AACD,GANmB;AAOpBE,EAAAA,QAAQ,EAAE,kBAAUH,WAAV,EAA+BC,QAA/B,EAAyD;AACjE,WAAQD,WAAW,GAAGC,QAAf,GAA2B,GAAlC;AACD,GATmB;AAUpBG,EAAAA,OAAO,EAAE,iBAAUJ,WAAV,EAA+BC,QAA/B,EAAyD;AAChE,WAAOD,WAAW,GAAGC,QAAQ,GAAG,CAAhC;AACD,GAZmB;AAapBlf,EAAAA,GAAG,EAAE,aAAUif,WAAV,EAA+BC,QAA/B,EAAyD;AAC5D,WAAOtZ,IAAI,CAACC,GAAL,CAAS,GAAT,EAAcoZ,WAAW,GAAGC,QAA5B,CAAP;AACD,GAfmB;AAgBpBI,EAAAA,QAAQ,EAAE,kBAAUL,WAAV,EAA+BC,QAA/B,EAAyD;AACjE,WAAOD,WAAW,GAAGC,QAAd,GAAyB,GAAzB,GAA+B,CAA/B,GAAmCD,WAAW,GAAGC,QAAd,GAAyB,GAAnE;AACD,GAlBmB;AAmBpBK,EAAAA,UAAU,EAAE,oBAAUN,WAAV,EAA+BC,QAA/B,EAAyD;AACnE,WAAOtZ,IAAI,CAAC0U,GAAL,CAAS2E,WAAW,GAAGC,QAAvB,CAAP;AACD,GArBmB;AAsBpBM,EAAAA,QAAQ,EAAE,kBAAUP,WAAV,EAA+BC,QAA/B,EAAyD;AACjE,WAAO,MAAMtZ,IAAI,CAAC0U,GAAL,CAAS,MAAM2E,WAAN,GAAoBC,QAA7B,CAAb;AACD,GAxBmB;AAyBpBO,EAAAA,MAAM,EAAE,gBAAUR,WAAV,EAA+BC,QAA/B,EAAyD;AAC/D,WAAO,OAAQ,CAAC,MAAMD,WAAP,KAAuB,MAAMC,QAA7B,CAAD,IAA4C,CAAnD,CAAP;AACD,GA3BmB;AA4BpBQ,EAAAA,SAAS,EAAE,mBAAUT,WAAV,EAA+BC,QAA/B,EAAyD;AAClE,WAAOD,WAAW,GAAGC,QAAd,GAA0B,IAAID,WAAJ,GAAkBC,QAAnB,GAA+B,GAA/D;AACD,GA9BmB;AA+BpBS,EAAAA,OAAO,EAAE,iBAAUV,WAAV,EAA+BC,QAA/B,EAAyD;AAChE,WAAOA,QAAQ,GAAG,GAAX,GACF,IAAID,WAAJ,GAAkBC,QAAnB,GAA+B,GAD5B,GAEH,MAAO,KAAK,MAAMD,WAAX,KAA2B,MAAMC,QAAjC,CAAD,GAA+C,GAFzD;AAGD,GAnCmB;AAoCpBU,EAAAA,SAAS,EAAE,mBAAUX,WAAV,EAA+BC,QAA/B,EAAyD;AAClE,WAAOA,QAAQ,GAAG,GAAX,GACH,KAAK,CAACD,WAAW,IAAI,CAAhB,IAAqB,EAA1B,KAAiCC,QAAQ,GAAG,GAA5C,CADG,GAEH,MAAO,KAAK,OAAO,CAACD,WAAW,IAAI,CAAhB,IAAqB,EAA5B,CAAL,KAAyC,MAAMC,QAA/C,CAAD,GAA6D,GAFvE;AAGD,GAxCmB;AAyCpBW,EAAAA,SAAS,EAAE,mBAAUZ,WAAV,EAA+BC,QAA/B,EAAyD;AAClE,WAAOH,aAAa,CAACa,SAAd,CAAwBV,QAAxB,EAAkCD,WAAlC,CAAP;AACD,GA3CmB;AA4CpBa,EAAAA,UAAU,EAAE,oBAAUb,WAAV,EAA+BC,QAA/B,EAAyD;AACnE,WAAOA,QAAQ,KAAK,GAAb,GACHA,QADG,GAEHtZ,IAAI,CAACC,GAAL,CAAS,GAAT,EAAc,CAACoZ,WAAW,IAAI,CAAhB,KAAsB,MAAMC,QAA5B,CAAd,CAFJ;AAGD,GAhDmB;AAiDpBa,EAAAA,SAAS,EAAE,mBAAUd,WAAV,EAA+BC,QAA/B,EAAyD;AAClE,WAAOA,QAAQ,KAAK,CAAb,GACHA,QADG,GAEHtZ,IAAI,CAACE,GAAL,CAAS,CAAT,EAAY,MAAM,CAAE,MAAMmZ,WAAP,IAAuB,CAAxB,IAA6BC,QAA/C,CAFJ;AAGD,GArDmB;AAsDpBc,EAAAA,WAAW,EAAE,qBAAUf,WAAV,EAA+BC,QAA/B,EAAyD;AACpE,WAAOH,aAAa,CAAC/e,GAAd,CAAkBif,WAAlB,EAA+BC,QAA/B,CAAP;AACD,GAxDmB;AAyDpBe,EAAAA,UAAU,EAAE,oBAAUhB,WAAV,EAA+BC,QAA/B,EAAyD;AACnE,WAAOH,aAAa,CAACO,QAAd,CAAuBL,WAAvB,EAAoCC,QAApC,CAAP;AACD,GA3DmB;AA4DpBgB,EAAAA,WAAW,EAAE,qBAAUjB,WAAV,EAA+BC,QAA/B,EAAyD;AACpE,WAAOA,QAAQ,GAAG,GAAX,GACHH,aAAa,CAACkB,UAAd,CAAyBhB,WAAzB,EAAsC,IAAIC,QAA1C,CADG,GAEHH,aAAa,CAACiB,WAAd,CAA0Bf,WAA1B,EAAuC,KAAKC,QAAQ,GAAG,GAAhB,CAAvC,CAFJ;AAGD,GAhEmB;AAiEpBiB,EAAAA,UAAU,EAAE,oBAAUlB,WAAV,EAA+BC,QAA/B,EAAyD;AACnE,WAAOA,QAAQ,GAAG,GAAX,GACHH,aAAa,CAACgB,SAAd,CAAwBd,WAAxB,EAAqC,IAAIC,QAAzC,CADG,GAEHH,aAAa,CAACe,UAAd,CAAyBb,WAAzB,EAAsC,KAAKC,QAAQ,GAAG,GAAhB,CAAtC,CAFJ;AAGD,GArEmB;AAsEpBkB,EAAAA,QAAQ,EAAE,kBAAUnB,WAAV,EAA+BC,QAA/B,EAAyD;AACjE,WAAOA,QAAQ,GAAG,GAAX,GACHH,aAAa,CAACI,MAAd,CAAqBF,WAArB,EAAkC,IAAIC,QAAtC,CADG,GAEHH,aAAa,CAACC,OAAd,CAAsBC,WAAtB,EAAmC,KAAKC,QAAQ,GAAG,GAAhB,CAAnC,CAFJ;AAGD,GA1EmB;AA2EpBmB,EAAAA,OAAO,EAAE,iBAAUpB,WAAV,EAA+BC,QAA/B,EAAyD;AAChE,WAAOH,aAAa,CAACoB,UAAd,CAAyBlB,WAAzB,EAAsCC,QAAtC,IAAkD,GAAlD,GAAwD,CAAxD,GAA4D,GAAnE;AACD,GA7EmB;AA8EpBoB,EAAAA,OAAO,EAAE,iBAAUrB,WAAV,EAA+BC,QAA/B,EAAyD;AAChE,WAAOA,QAAQ,KAAK,GAAb,GACHA,QADG,GAEHtZ,IAAI,CAACC,GAAL,CAAS,GAAT,EAAeoZ,WAAW,GAAGA,WAAf,IAA+B,MAAMC,QAArC,CAAd,CAFJ;AAGD,GAlFmB;AAmFpBqB,EAAAA,IAAI,EAAE,cAAUtB,WAAV,EAA+BC,QAA/B,EAAyD;AAC7D,WAAOH,aAAa,CAACuB,OAAd,CAAsBpB,QAAtB,EAAgCD,WAAhC,CAAP;AACD,GArFmB;AAsFpBuB,EAAAA,OAAO,EAAE,iBAAUvB,WAAV,EAA+BC,QAA/B,EAAyD;AAChE,WACEtZ,IAAI,CAACC,GAAL,CAASoZ,WAAT,EAAsBC,QAAtB,IAAkCtZ,IAAI,CAACE,GAAL,CAASmZ,WAAT,EAAsBC,QAAtB,CAAlC,GAAoE,GADtE;AAGD;AA1FmB,CAAtB;AA6FO,SAAS9d,cAAT,CAAwBqf,MAAxB,EAAgC7jB,GAAhC,EAAqC8jB,aAArC,EAAoD;AACzD,MAAI7e,CAAJ,EAAOC,CAAP,EAAU6e,EAAV,EAAcC,EAAd,EAAkBC,kBAAlB,EAAsCC,kBAAtC,EAA0DC,WAA1D;;AAEA,OACEjf,CAAC,GAAGlF,GAAG,CAACkF,CAAR,EAAW8e,EAAE,GAAG,CADlB,EAEE9e,CAAC,GAAG2e,MAAM,CAACxlB,MAAX,IAAqB2lB,EAAE,GAAGhkB,GAAG,CAAC3B,MAFhC,EAGE6G,CAAC,IAAI,CAAL,EAAQ8e,EAAE,IAAI,CAHhB,EAIE;AACA,SACE/e,CAAC,GAAGjF,GAAG,CAACiF,CAAR,EAAW8e,EAAE,GAAG,CADlB,EAEE9e,CAAC,GAAG4e,MAAM,CAACzlB,KAAX,IAAoB2lB,EAAE,GAAG/jB,GAAG,CAAC5B,KAF/B,EAGE6G,CAAC,IAAI,CAAL,EAAQ8e,EAAE,IAAI,CAHhB,EAIE;AACA,UAAIA,EAAE,GAAG/jB,GAAG,CAAC5B,KAAT,IAAkB4lB,EAAE,GAAGhkB,GAAG,CAAC3B,MAA/B,EAAuC;AACrC;AACA4lB,QAAAA,kBAAkB,GAAG/e,CAAC,GAAG2e,MAAM,CAACzlB,KAAX,GAAmB,CAAnB,GAAuB6G,CAAC,GAAG,CAAhD;AACAif,QAAAA,kBAAkB,GAAGF,EAAE,GAAGhkB,GAAG,CAAC5B,KAAT,GAAiB,CAAjB,GAAqB2lB,EAAE,GAAG,CAA/C;AAEAI,QAAAA,WAAW,GAAGL,aAAa,CACzB;AACExa,UAAAA,CAAC,EAAEua,MAAM,CAACtlB,SAAP,CAAiB2J,IAAjB,CAAsB+b,kBAAkB,GAAG,CAA3C,CADL;AAEE1a,UAAAA,CAAC,EAAEsa,MAAM,CAACtlB,SAAP,CAAiB2J,IAAjB,CAAsB+b,kBAAkB,GAAG,CAA3C,CAFL;AAGEza,UAAAA,CAAC,EAAEqa,MAAM,CAACtlB,SAAP,CAAiB2J,IAAjB,CAAsB+b,kBAAkB,GAAG,CAA3C,CAHL;AAIExa,UAAAA,CAAC,EAAEoa,MAAM,CAACtlB,SAAP,CAAiB2J,IAAjB,CAAsB+b,kBAAkB,GAAG,CAA3C;AAJL,SADyB,EAOzB;AACE3a,UAAAA,CAAC,EAAEtJ,GAAG,CAACzB,SAAJ,CAAc2J,IAAd,CAAmBgc,kBAAkB,GAAG,CAAxC,CADL;AAEE3a,UAAAA,CAAC,EAAEvJ,GAAG,CAACzB,SAAJ,CAAc2J,IAAd,CAAmBgc,kBAAkB,GAAG,CAAxC,CAFL;AAGE1a,UAAAA,CAAC,EAAExJ,GAAG,CAACzB,SAAJ,CAAc2J,IAAd,CAAmBgc,kBAAkB,GAAG,CAAxC,CAHL;AAIEza,UAAAA,CAAC,EAAEzJ,GAAG,CAACzB,SAAJ,CAAc2J,IAAd,CAAmBgc,kBAAkB,GAAG,CAAxC;AAJL,SAPyB,EAazBjf,CAbyB,EAczBC,CAdyB,EAezB;AACEL,UAAAA,YAAY,EAAE7E,GAAG,CAAC6E;AADpB,SAfyB,CAA3B;;AAoBA,YAAIsf,WAAW,KAAK,KAApB,EAA2B;AACzB;AACAN,UAAAA,MAAM,CAACtlB,SAAP,CAAiB2J,IAAjB,CAAsB+b,kBAAkB,GAAG,CAA3C,IAAgDE,WAAW,CAAC7a,CAA5D;AACAua,UAAAA,MAAM,CAACtlB,SAAP,CAAiB2J,IAAjB,CAAsB+b,kBAAkB,GAAG,CAA3C,IAAgDE,WAAW,CAAC5a,CAA5D;AACAsa,UAAAA,MAAM,CAACtlB,SAAP,CAAiB2J,IAAjB,CAAsB+b,kBAAkB,GAAG,CAA3C,IAAgDE,WAAW,CAAC3a,CAA5D;AACAqa,UAAAA,MAAM,CAACtlB,SAAP,CAAiB2J,IAAjB,CAAsB+b,kBAAkB,GAAG,CAA3C,IAAgDE,WAAW,CAAC1a,CAA5D;AACD;AACF;AACF;AACF;;AACD,SAAOoa,MAAM,CAACtlB,SAAd;AACD;AAEM,SAASkG,kBAAT,CACL4d,WADK,EAELC,QAFK,EAGLrd,CAHK,EAILC,CAJK,EAKLP,UALK,EAMqD;AAC1D,MAAI2d,QAAQ,CAAC7Y,CAAT,KAAe,CAAnB,EAAsB;AACpB,WAAO,KAAP,CADoB,CACN;AACf,GAHyD,CAK1D;;;AACA,MAAI2a,OAAJ;AAAA,MACEC,OADF;AAAA,MAEEC,OAFF;AAAA,MAGEC,OAAO,GAAGjC,QAAQ,CAAC7Y,CAAT,GAAa,GAHzB;AAAA,MAIE+a,KAAK,GAAInC,WAAW,CAAC5Y,CAAZ,GAAgB,GAAjB,IAAyB,IAAI8a,OAA7B,CAJV;AAAA,MAKEE,IAAI,GAAGF,OAAO,GAAIlC,WAAW,CAAC5Y,CAAZ,IAAiB,IAAI8a,OAArB,CAAD,GAAkC,GALrD;;AAOA,UAAQ5f,UAAU,CAACE,YAAnB;AACE,SAAK,SAAL;AACA,SAAK,QAAL;AACA,SAAK,UAAL;AACA,SAAK,SAAL;AACA,SAAK,KAAL;AACA,SAAK,UAAL;AACA,SAAK,YAAL;AACA,SAAK,UAAL;AACA,SAAK,QAAL;AACA,SAAK,WAAL;AACA,SAAK,SAAL;AACA,SAAK,WAAL;AACA,SAAK,WAAL;AACA,SAAK,YAAL;AACA,SAAK,WAAL;AACA,SAAK,aAAL;AACA,SAAK,YAAL;AACA,SAAK,aAAL;AACA,SAAK,YAAL;AACA,SAAK,UAAL;AACA,SAAK,SAAL;AACA,SAAK,SAAL;AACA,SAAK,MAAL;AACA,SAAK,SAAL;AACEyd,MAAAA,QAAQ,CAAChZ,CAAT,GAAa6Y,aAAa,CAACxd,UAAU,CAACE,YAAZ,CAAb,CACXwd,WAAW,CAAC/Y,CADD,EAEXgZ,QAAQ,CAAChZ,CAFE,CAAb;AAIAgZ,MAAAA,QAAQ,CAAC/Y,CAAT,GAAa4Y,aAAa,CAACxd,UAAU,CAACE,YAAZ,CAAb,CACXwd,WAAW,CAAC9Y,CADD,EAEX+Y,QAAQ,CAAC/Y,CAFE,CAAb;AAIA+Y,MAAAA,QAAQ,CAAC9Y,CAAT,GAAa2Y,aAAa,CAACxd,UAAU,CAACE,YAAZ,CAAb,CACXwd,WAAW,CAAC7Y,CADD,EAEX8Y,QAAQ,CAAC9Y,CAFE,CAAb;AAIA;;AAEF;AACE;AAxCJ;;AA2CA,MAAIkb,KAAK,GAAGrC,WAAW,CAAC/Y,CAAxB;AACA,MAAIqb,KAAK,GAAGtC,WAAW,CAAC9Y,CAAxB;AACA,MAAIqb,KAAK,GAAGvC,WAAW,CAAC7Y,CAAxB;AAEA4a,EAAAA,OAAO,GAAG9B,QAAQ,CAAChZ,CAAT,GAAaib,OAAb,GAAuBG,KAAK,GAAGF,KAAzC;AACAH,EAAAA,OAAO,GAAG/B,QAAQ,CAAC/Y,CAAT,GAAagb,OAAb,GAAuBI,KAAK,GAAGH,KAAzC;AACAF,EAAAA,OAAO,GAAGhC,QAAQ,CAAC9Y,CAAT,GAAa+a,OAAb,GAAuBK,KAAK,GAAGJ,KAAzC;AAEAJ,EAAAA,OAAO,GAAGK,IAAI,KAAK,CAAT,GAAa,CAAb,GAAiBL,OAAO,GAAGK,IAArC;AACAJ,EAAAA,OAAO,GAAGI,IAAI,KAAK,CAAT,GAAa,CAAb,GAAiBJ,OAAO,GAAGI,IAArC;AACAH,EAAAA,OAAO,GAAGG,IAAI,KAAK,CAAT,GAAa,CAAb,GAAiBH,OAAO,GAAGG,IAArC;AAEA,SAAO;AACLnb,IAAAA,CAAC,EAAEN,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,GAAL,CAAS,CAAT,EAAYkb,OAAZ,CAAT,EAA+B,GAA/B,IAAsC,CADpC;AAEL7a,IAAAA,CAAC,EAAEP,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,GAAL,CAAS,CAAT,EAAYmb,OAAZ,CAAT,EAA+B,GAA/B,IAAsC,CAFpC;AAGL7a,IAAAA,CAAC,EAAER,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,GAAL,CAAS,CAAT,EAAYob,OAAZ,CAAT,EAA+B,GAA/B,IAAsC,CAHpC;AAIL7a,IAAAA,CAAC,EAAG,MAAMgb,IAAP,GAAe;AAJb,GAAP;AAMD;AAEM,SAASne,aAAT,CACLtH,YADK,EAELC,YAFK,EAGLgH,MAHK,EAILC,MAJK,EAKL9H,KALK,EAMLC,MANK,EAOM;AACX,MAAIuI,QAAQ,GAAG5H,YAAY,CAACZ,KAA5B;AAAA,MACES,QAAQ,GAAGI,YAAY,CAACb,KAD1B;AAAA,MAEE6G,CAFF;AAAA,MAGEC,CAHF;AAAA,MAIE6e,EAJF;AAAA,MAKEC,EALF;AAAA,MAMEC,kBANF;AAAA,MAOEC,kBAPF;;AASA,OACEhf,CAAC,GAAGgB,MAAJ,EAAY8d,EAAE,GAAG,CADnB,EAEE9e,CAAC,GAAGgB,MAAM,GAAG7H,MAAb,IAAuB2lB,EAAE,GAAG3lB,MAF9B,EAGE6G,CAAC,IAAI,CAAL,EAAQ8e,EAAE,IAAI,CAHhB,EAIE;AACA,SACE/e,CAAC,GAAGgB,MAAJ,EAAY8d,EAAE,GAAG,CADnB,EAEE9e,CAAC,GAAGgB,MAAM,GAAG7H,KAAb,IAAsB2lB,EAAE,GAAG3lB,KAF7B,EAGE6G,CAAC,IAAI,CAAL,EAAQ8e,EAAE,IAAI,CAHhB,EAIE;AACAE,MAAAA,kBAAkB,GAAG/e,CAAC,GAAG0B,QAAJ,GAAe,CAAf,GAAmB3B,CAAC,GAAG,CAA5C;AACAif,MAAAA,kBAAkB,GAAGF,EAAE,GAAGnlB,QAAL,GAAgB,CAAhB,GAAoBklB,EAAE,GAAG,CAA9C;AAEA9kB,MAAAA,YAAY,CAACiJ,IAAb,CAAkBgc,kBAAlB,IACEllB,YAAY,CAACkJ,IAAb,CAAkB+b,kBAAlB,CADF;AAEAhlB,MAAAA,YAAY,CAACiJ,IAAb,CAAkBgc,kBAAkB,GAAG,CAAvC,IACEllB,YAAY,CAACkJ,IAAb,CAAkB+b,kBAAkB,GAAG,CAAvC,CADF;AAEAhlB,MAAAA,YAAY,CAACiJ,IAAb,CAAkBgc,kBAAkB,GAAG,CAAvC,IACEllB,YAAY,CAACkJ,IAAb,CAAkB+b,kBAAkB,GAAG,CAAvC,CADF;AAEAhlB,MAAAA,YAAY,CAACiJ,IAAb,CAAkBgc,kBAAkB,GAAG,CAAvC,IACEllB,YAAY,CAACkJ,IAAb,CAAkB+b,kBAAkB,GAAG,CAAvC,CADF;AAED;AACF;;AAED,SAAOhlB,YAAP;AACD;AAEM,SAAS8S,GAAT,CAAatI,CAAb,EAAwBD,CAAxB,EAA2C;AAChD,MAAIqb,CAAC,GAAG7b,IAAI,CAACsL,KAAL,CAAW7K,CAAC,GAAGD,CAAf,CAAR;AACAC,EAAAA,CAAC,IAAIob,CAAC,GAAGrb,CAAT;;AACA,MAAIC,CAAC,GAAG,CAAR,EAAW;AACT,WAAOA,CAAC,GAAGD,CAAX;AACD;;AACD,SAAOC,CAAP;AACD;AAEM,SAAS8P,QAAT,CAAkBtU,CAAlB,EAA6B;AAClC,MAAIqE,CAAC,GAAGyI,GAAG,CAAC9M,CAAD,EAAI,CAAJ,CAAX;AACA,SAAO,KAAKqE,CAAC,GAAG,GAAJ,GAAUA,CAAV,GAAc,IAAIA,CAAvB,CAAP;AACD;AAEM,SAAS4H,UAAT,CAAoBzH,CAApB,EAA+BD,CAA/B,EAA0CvE,CAA1C,EAA6D;AAClE,MAAIA,CAAC,GAAGwE,CAAR,EAAW;AACT,WAAO,CAAP;AACD;;AACD,MAAIxE,CAAC,IAAIuE,CAAT,EAAY;AACV,WAAO,CAAP;AACD;;AACDvE,EAAAA,CAAC,GAAG,CAACA,CAAC,GAAGwE,CAAL,KAAWD,CAAC,GAAGC,CAAf,CAAJ;AACA,SAAOxE,CAAC,GAAGA,CAAJ,IAAS,IAAI,IAAIA,CAAjB,CAAP;AACD;AAEM,SAAS2H,UAAT,CAAoB1C,KAApB,EAAgE;AACrE,SAAO,CAACA,KAAK,CAACZ,CAAN,GAAUY,KAAK,CAACX,CAAhB,GAAoBW,KAAK,CAACV,CAA3B,IAAgC,CAAvC;AACD;AAEM,SAASjK,SAAT,GAA8B;AACnC,SAAO,OAAOoE,MAAP,KAAkB,WAAzB;AACD;;;;;;;;;;;;;;AC7SD,IAAMgB,UAQL,GAAG,EARJ;AASA,IAAImgB,MAAM,GAAG,KAAb;AAEA,IAAIlH,KAAK,GAAG;AACVmH,EAAAA,IAAI,EAAE,gBAAqB;AACzB,QAAID,MAAJ,EAAY;AACV,aAAO,KAAP;AACD;;AACDA,IAAAA,MAAM,GAAG,IAAT;AAEAngB,IAAAA,UAAU,CAACiW,CAAX,GAAe,KAAf;AACAjW,IAAAA,UAAU,CAACqgB,EAAX,GAAgB,IAAhB;AACArgB,IAAAA,UAAU,CAACsgB,CAAX,GAAe,MAAf;AAEAtgB,IAAAA,UAAU,CAACugB,CAAX,GAAe,IAAI5O,KAAJ,CAAU3R,UAAU,CAACiW,CAAX,GAAejW,UAAU,CAACiW,CAA1B,GAA8B,CAAxC,CAAf;AACAjW,IAAAA,UAAU,CAACwgB,EAAX,GAAgB,IAAI7O,KAAJ,CAAU3R,UAAU,CAACiW,CAAX,GAAejW,UAAU,CAACiW,CAA1B,GAA8B,CAAxC,CAAhB;AACAjW,IAAAA,UAAU,CAACygB,EAAX,GAAgB,IAAI9O,KAAJ,CAAU3R,UAAU,CAACiW,CAAX,GAAejW,UAAU,CAACiW,CAA1B,GAA8B,CAAxC,CAAhB;;AACA,SAAK,IAAItV,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAGX,UAAU,CAACygB,EAAX,CAAc7f,MAAlC,EAA0CD,EAAC,IAAI,CAA/C,EAAkD;AAChDX,MAAAA,UAAU,CAACygB,EAAX,CAAc9f,EAAd,IAAmB,IAAIgR,KAAJ,CAAU,CAAV,CAAnB;AACD;;AACD3R,IAAAA,UAAU,CAAC0gB,EAAX,GAAgB,IAAI/O,KAAJ,CAAU3R,UAAU,CAACiW,CAAX,GAAejW,UAAU,CAACiW,CAA1B,GAA8B,CAAxC,CAAhB;;AACA,SAAK,IAAItV,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAGX,UAAU,CAAC0gB,EAAX,CAAc9f,MAAlC,EAA0CD,GAAC,IAAI,CAA/C,EAAkD;AAChDX,MAAAA,UAAU,CAAC0gB,EAAX,CAAc/f,GAAd,IAAmB,IAAIgR,KAAJ,CAAU,CAAV,CAAnB;AACD;;AACD,QAAIhR,CAAJ,EAAO2L,CAAP,EAAUqU,CAAV;;AAEA,SAAKhgB,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGX,UAAU,CAACiW,CAA3B,EAA8BtV,CAAC,IAAI,CAAnC,EAAsC;AACpCX,MAAAA,UAAU,CAACugB,CAAX,CAAa5f,CAAb,IAAkBA,CAAlB;AACAX,MAAAA,UAAU,CAACwgB,EAAX,CAAc7f,CAAd,IACE,CAAE,KAAKoM,MAAL,MAAiB/M,UAAU,CAACiW,CAAX,GAAejW,UAAU,CAACiW,CAA3C,CAAD,GAAkDjW,UAAU,CAACiW,CAA9D,IACAjW,UAAU,CAACiW,CAFb;AAGAjW,MAAAA,UAAU,CAACygB,EAAX,CAAc9f,CAAd,IAAmB,EAAnB;;AACA,WAAK2L,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,CAAhB,EAAmBA,CAAC,IAAI,CAAxB,EAA2B;AACzBtM,QAAAA,UAAU,CAACygB,EAAX,CAAc9f,CAAd,EAAiB2L,CAAjB,IACE,CAAE,KAAKS,MAAL,MAAiB/M,UAAU,CAACiW,CAAX,GAAejW,UAAU,CAACiW,CAA3C,CAAD,GAAkDjW,UAAU,CAACiW,CAA9D,IACAjW,UAAU,CAACiW,CAFb;AAGD;;AACDjW,MAAAA,UAAU,CAACygB,EAAX,CAAc9f,CAAd,IAAmB,KAAKigB,UAAL,CAAgB5gB,UAAU,CAACygB,EAAX,CAAc9f,CAAd,CAAhB,CAAnB;AAEAX,MAAAA,UAAU,CAAC0gB,EAAX,CAAc/f,CAAd,IAAmB,EAAnB;;AACA,WAAK2L,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,CAAhB,EAAmBA,CAAC,IAAI,CAAxB,EAA2B;AACzBtM,QAAAA,UAAU,CAAC0gB,EAAX,CAAc/f,CAAd,EAAiB2L,CAAjB,IACE,CAAE,KAAKS,MAAL,MAAiB/M,UAAU,CAACiW,CAAX,GAAejW,UAAU,CAACiW,CAA3C,CAAD,GAAkDjW,UAAU,CAACiW,CAA9D,IACAjW,UAAU,CAACiW,CAFb;AAGD;;AACDjW,MAAAA,UAAU,CAAC0gB,EAAX,CAAc/f,CAAd,IAAmB,KAAKkgB,UAAL,CAAgB7gB,UAAU,CAAC0gB,EAAX,CAAc/f,CAAd,CAAhB,CAAnB;AACD;;AAED,SAAKA,CAAC,GAAGX,UAAU,CAACiW,CAAX,GAAe,CAAxB,EAA2BtV,CAAC,IAAI,CAAhC,EAAmCA,CAAC,IAAI,CAAxC,EAA2C;AACzCggB,MAAAA,CAAC,GAAG3gB,UAAU,CAACugB,CAAX,CAAa5f,CAAb,CAAJ;AACAX,MAAAA,UAAU,CAACugB,CAAX,CAAa5f,CAAb,IAAkBX,UAAU,CAACugB,CAAX,CAAcjU,CAAC,GAAG,KAAKS,MAAL,KAAgB/M,UAAU,CAACiW,CAA7C,CAAlB;AACAjW,MAAAA,UAAU,CAACugB,CAAX,CAAajU,CAAb,IAAkBqU,CAAlB;AACD;;AAED,SAAKhgB,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGX,UAAU,CAACiW,CAAX,GAAe,CAA/B,EAAkCtV,CAAC,IAAI,CAAvC,EAA0C;AACxCX,MAAAA,UAAU,CAACugB,CAAX,CAAavgB,UAAU,CAACiW,CAAX,GAAetV,CAA5B,IAAiCX,UAAU,CAACugB,CAAX,CAAa5f,CAAb,CAAjC;AACAX,MAAAA,UAAU,CAACwgB,EAAX,CAAcxgB,UAAU,CAACiW,CAAX,GAAetV,CAA7B,IAAkCX,UAAU,CAACwgB,EAAX,CAAc7f,CAAd,CAAlC;;AACA,WAAK2L,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,CAAhB,EAAmBA,CAAC,IAAI,CAAxB,EAA2B;AACzBtM,QAAAA,UAAU,CAACygB,EAAX,CAAczgB,UAAU,CAACiW,CAAX,GAAetV,CAA7B,EAAgC2L,CAAhC,IAAqCtM,UAAU,CAACygB,EAAX,CAAc9f,CAAd,EAAiB2L,CAAjB,CAArC;AACD;;AACD,WAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,CAAhB,EAAmBA,CAAC,EAApB,EAAwB;AACtBtM,QAAAA,UAAU,CAAC0gB,EAAX,CAAc1gB,UAAU,CAACiW,CAAX,GAAetV,CAA7B,EAAgC2L,CAAhC,IAAqCtM,UAAU,CAAC0gB,EAAX,CAAc/f,CAAd,EAAiB2L,CAAjB,CAArC;AACD;AACF;AACF,GA7DS;AA8DVS,EAAAA,MAAM,EAAE,kBAAoB;AAC1B,WAAO,CAAE1I,IAAI,CAAC0I,MAAL,KAAgB,GAAhB,GAAsB,GAAvB,GAA8B,CAA/B,IAAoC,UAA3C;AACD,GAhES;AAiEV6T,EAAAA,UAAU,EAAE,oBAAUE,GAAV,EAA6B;AACvC,QAAIjQ,CAAC,GAAGxM,IAAI,CAACuF,IAAL,CAAUkX,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAAZ,GAAkBA,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAA9B,GAAoCA,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAA1D,CAAR;AACAA,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAAH,GAASjQ,CAAlB;AACAiQ,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAAH,GAASjQ,CAAlB;AACAiQ,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAAH,GAASjQ,CAAlB;AACA,WAAOiQ,GAAP;AACD,GAvES;AAwEVD,EAAAA,UAAU,EAAE,oBAAUC,GAAV,EAA6B;AACvC,QAAIjQ,CAAC,GAAGxM,IAAI,CAACuF,IAAL,CAAUkX,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAAZ,GAAkBA,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAAxC,CAAR;AACAA,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAAH,GAASjQ,CAAlB;AACAiQ,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAAH,GAASjQ,CAAlB;AACA,WAAOiQ,GAAP;AACD,GA7ES;AA8EVC,EAAAA,MAAM,EAAE,gBAAUha,CAAV,EAA6B;AACnC,WAAOA,CAAC,GAAGA,CAAJ,IAAS,MAAM,MAAMA,CAArB,CAAP;AACD,GAhFS;AAiFVia,EAAAA,IAAI,EAAE,cAAUja,CAAV,EAAqBjC,CAArB,EAAgCD,CAAhC,EAAmD;AACvD,WAAOC,CAAC,GAAGiC,CAAC,IAAIlC,CAAC,GAAGC,CAAR,CAAZ;AACD,GAnFS;;AAoFV;AACF;AACA;AACA;AACE4U,EAAAA,MAAM,EAAE,gBAAUpZ,CAAV,EAA6B;AACnC,QAAI2gB,GAAJ,EAASC,GAAT,EAAcC,GAAd,EAAmBC,GAAnB,EAAwBC,EAAxB,EAA4Bta,CAA5B,EAA+Bua,CAA/B,EAAkCxU,CAAlC;AAEA,SAAKsT,IAAL;AAEArZ,IAAAA,CAAC,GAAGzG,CAAC,GAAGN,UAAU,CAACsgB,CAAnB;AACAW,IAAAA,GAAG,GAAG5E,QAAQ,CAACtV,CAAD,CAAR,GAAc/G,UAAU,CAACqgB,EAA/B;AACAa,IAAAA,GAAG,GAAID,GAAG,GAAG,CAAP,GAAYjhB,UAAU,CAACqgB,EAA7B;AACAc,IAAAA,GAAG,GAAGpa,CAAC,GAAGsV,QAAQ,CAACtV,CAAD,CAAlB;AACAqa,IAAAA,GAAG,GAAGD,GAAG,GAAG,CAAZ;AAEAE,IAAAA,EAAE,GAAG,KAAKN,MAAL,CAAYI,GAAZ,CAAL;AAEAG,IAAAA,CAAC,GAAGH,GAAG,GAAGnhB,UAAU,CAACwgB,EAAX,CAAcxgB,UAAU,CAACugB,CAAX,CAAaU,GAAb,CAAd,CAAV;AACAnU,IAAAA,CAAC,GAAGsU,GAAG,GAAGphB,UAAU,CAACwgB,EAAX,CAAcxgB,UAAU,CAACugB,CAAX,CAAaW,GAAb,CAAd,CAAV;AAEA,WAAO,MAAM,KAAKF,IAAL,CAAUK,EAAV,EAAcC,CAAd,EAAiBxU,CAAjB,CAAb;AACD,GAzGS;;AA0GV;AACF;AACA;AACA;AACA;AACA;AACE2I,EAAAA,MAAM,EAAE,gBAAUnV,CAAV,EAAqBC,CAArB,EAAwC;AAC9C,QAAI0gB,GAAJ;AAAA,QACEC,GADF;AAAA,QAEEK,GAFF;AAAA,QAGEC,GAHF;AAAA,QAIEC,GAJF;AAAA,QAKEC,GALF;AAAA,QAMEC,GANF;AAAA,QAOEC,GAPF;AAAA,QAQET,GARF;AAAA,QASEC,GATF;AAAA,QAUES,GAVF;AAAA,QAWEC,GAXF;AAAA,QAYE1F,CAAC,GAAG,EAZN;AAAA,QAaEiF,EAbF;AAAA,QAcEU,EAdF;AAAA,QAeEjd,CAfF;AAAA,QAgBED,CAhBF;AAAA,QAiBEkC,CAjBF;AAAA,QAkBEua,CAlBF;AAAA,QAmBExU,CAnBF;AAAA,QAoBEnM,CApBF;AAAA,QAqBE2L,CArBF;AAuBA,SAAK8T,IAAL;AAEArZ,IAAAA,CAAC,GAAGzG,CAAC,GAAGN,UAAU,CAACsgB,CAAnB;AACAW,IAAAA,GAAG,GAAG5E,QAAQ,CAACtV,CAAD,CAAR,GAAc/G,UAAU,CAACqgB,EAA/B;AACAa,IAAAA,GAAG,GAAID,GAAG,GAAG,CAAP,GAAYjhB,UAAU,CAACqgB,EAA7B;AACAc,IAAAA,GAAG,GAAGpa,CAAC,GAAGsV,QAAQ,CAACtV,CAAD,CAAlB;AACAqa,IAAAA,GAAG,GAAGD,GAAG,GAAG,CAAZ;AAEApa,IAAAA,CAAC,GAAGxG,CAAC,GAAGP,UAAU,CAACsgB,CAAnB;AACAiB,IAAAA,GAAG,GAAGlF,QAAQ,CAACtV,CAAD,CAAR,GAAc/G,UAAU,CAACqgB,EAA/B;AACAmB,IAAAA,GAAG,GAAID,GAAG,GAAG,CAAP,GAAYvhB,UAAU,CAACqgB,EAA7B;AACAwB,IAAAA,GAAG,GAAG9a,CAAC,GAAGsV,QAAQ,CAACtV,CAAD,CAAlB;AACA+a,IAAAA,GAAG,GAAGD,GAAG,GAAG,CAAZ;AAEAlhB,IAAAA,CAAC,GAAGX,UAAU,CAACugB,CAAX,CAAaU,GAAb,CAAJ;AACA3U,IAAAA,CAAC,GAAGtM,UAAU,CAACugB,CAAX,CAAaW,GAAb,CAAJ;AAEAO,IAAAA,GAAG,GAAGzhB,UAAU,CAACugB,CAAX,CAAa5f,CAAC,GAAG4gB,GAAjB,CAAN;AACAG,IAAAA,GAAG,GAAG1hB,UAAU,CAACugB,CAAX,CAAajU,CAAC,GAAGiV,GAAjB,CAAN;AACAI,IAAAA,GAAG,GAAG3hB,UAAU,CAACugB,CAAX,CAAa5f,CAAC,GAAG6gB,GAAjB,CAAN;AACAI,IAAAA,GAAG,GAAG5hB,UAAU,CAACugB,CAAX,CAAajU,CAAC,GAAGkV,GAAjB,CAAN;AAEAH,IAAAA,EAAE,GAAG,KAAKN,MAAL,CAAYI,GAAZ,CAAL;AACAY,IAAAA,EAAE,GAAG,KAAKhB,MAAL,CAAYc,GAAZ,CAAL;AAEAzF,IAAAA,CAAC,GAAGpc,UAAU,CAACygB,EAAX,CAAcgB,GAAd,CAAJ;AACAH,IAAAA,CAAC,GAAGH,GAAG,GAAG/E,CAAC,CAAC,CAAD,CAAP,GAAayF,GAAG,GAAGzF,CAAC,CAAC,CAAD,CAAxB;AACAA,IAAAA,CAAC,GAAGpc,UAAU,CAACygB,EAAX,CAAciB,GAAd,CAAJ;AACA5U,IAAAA,CAAC,GAAGsU,GAAG,GAAGhF,CAAC,CAAC,CAAD,CAAP,GAAayF,GAAG,GAAGzF,CAAC,CAAC,CAAD,CAAxB;AACAtX,IAAAA,CAAC,GAAG,KAAKkc,IAAL,CAAUK,EAAV,EAAcC,CAAd,EAAiBxU,CAAjB,CAAJ;AAEAsP,IAAAA,CAAC,GAAGpc,UAAU,CAACygB,EAAX,CAAckB,GAAd,CAAJ;AACAL,IAAAA,CAAC,GAAGH,GAAG,GAAG/E,CAAC,CAAC,CAAD,CAAP,GAAa0F,GAAG,GAAG1F,CAAC,CAAC,CAAD,CAAxB;AACAA,IAAAA,CAAC,GAAGpc,UAAU,CAACygB,EAAX,CAAcmB,GAAd,CAAJ;AACA9U,IAAAA,CAAC,GAAGsU,GAAG,GAAGhF,CAAC,CAAC,CAAD,CAAP,GAAa0F,GAAG,GAAG1F,CAAC,CAAC,CAAD,CAAxB;AACAvX,IAAAA,CAAC,GAAG,KAAKmc,IAAL,CAAUK,EAAV,EAAcC,CAAd,EAAiBxU,CAAjB,CAAJ;AAEA,WAAO,MAAM,KAAKkU,IAAL,CAAUe,EAAV,EAAcjd,CAAd,EAAiBD,CAAjB,CAAb;AACD,GA9KS;;AA+KV;AACF;AACA;AACA;AACA;AACA;AACEqW,EAAAA,MAAM,EAAE,gBAAU5a,CAAV,EAAqBC,CAArB,EAAgC8Z,CAAhC,EAAmD;AACzD,QAAI4G,GAAJ,EACEC,GADF,EAEEK,GAFF,EAGEC,GAHF,EAIEQ,GAJF,EAKEC,GALF,EAMER,GANF,EAOEC,GAPF,EAQEC,GARF,EASEC,GATF,EAUET,GAVF,EAWEC,GAXF,EAYES,GAZF,EAaEC,GAbF,EAcEI,GAdF,EAeEC,GAfF,EAgBE/F,CAhBF,EAiBE2F,EAjBF,EAkBEK,EAlBF,EAmBEtd,CAnBF,EAoBED,CApBF,EAqBEmQ,CArBF,EAsBEnI,CAtBF,EAuBE9F,CAvBF,EAwBEua,CAxBF,EAyBExU,CAzBF,EA0BEnM,CA1BF,EA2BE2L,CA3BF;AA6BA,SAAK8T,IAAL;AAEArZ,IAAAA,CAAC,GAAGzG,CAAC,GAAGN,UAAU,CAACsgB,CAAnB;AACAW,IAAAA,GAAG,GAAG5E,QAAQ,CAACtV,CAAD,CAAR,GAAc/G,UAAU,CAACqgB,EAA/B;AACAa,IAAAA,GAAG,GAAID,GAAG,GAAG,CAAP,GAAYjhB,UAAU,CAACqgB,EAA7B;AACAc,IAAAA,GAAG,GAAGpa,CAAC,GAAGsV,QAAQ,CAACtV,CAAD,CAAlB;AACAqa,IAAAA,GAAG,GAAGD,GAAG,GAAG,CAAZ;AAEApa,IAAAA,CAAC,GAAGxG,CAAC,GAAGP,UAAU,CAACsgB,CAAnB;AACAiB,IAAAA,GAAG,GAAGlF,QAAQ,CAACtV,CAAD,CAAR,GAAc/G,UAAU,CAACqgB,EAA/B;AACAmB,IAAAA,GAAG,GAAID,GAAG,GAAG,CAAP,GAAYvhB,UAAU,CAACqgB,EAA7B;AACAwB,IAAAA,GAAG,GAAG9a,CAAC,GAAGsV,QAAQ,CAACtV,CAAD,CAAlB;AACA+a,IAAAA,GAAG,GAAGD,GAAG,GAAG,CAAZ;AAEA9a,IAAAA,CAAC,GAAGsT,CAAC,GAAGra,UAAU,CAACsgB,CAAnB;AACA0B,IAAAA,GAAG,GAAG3F,QAAQ,CAACtV,CAAD,CAAR,GAAc/G,UAAU,CAACqgB,EAA/B;AACA4B,IAAAA,GAAG,GAAID,GAAG,GAAG,CAAP,GAAYhiB,UAAU,CAACqgB,EAA7B;AACA6B,IAAAA,GAAG,GAAGnb,CAAC,GAAGsV,QAAQ,CAACtV,CAAD,CAAlB;AACAob,IAAAA,GAAG,GAAGD,GAAG,GAAG,CAAZ;AAEAvhB,IAAAA,CAAC,GAAGX,UAAU,CAACugB,CAAX,CAAaU,GAAb,CAAJ;AACA3U,IAAAA,CAAC,GAAGtM,UAAU,CAACugB,CAAX,CAAaW,GAAb,CAAJ;AAEAO,IAAAA,GAAG,GAAGzhB,UAAU,CAACugB,CAAX,CAAa5f,CAAC,GAAG4gB,GAAjB,CAAN;AACAG,IAAAA,GAAG,GAAG1hB,UAAU,CAACugB,CAAX,CAAajU,CAAC,GAAGiV,GAAjB,CAAN;AACAI,IAAAA,GAAG,GAAG3hB,UAAU,CAACugB,CAAX,CAAa5f,CAAC,GAAG6gB,GAAjB,CAAN;AACAI,IAAAA,GAAG,GAAG5hB,UAAU,CAACugB,CAAX,CAAajU,CAAC,GAAGkV,GAAjB,CAAN;AAEAza,IAAAA,CAAC,GAAG,KAAKga,MAAL,CAAYI,GAAZ,CAAJ;AACAY,IAAAA,EAAE,GAAG,KAAKhB,MAAL,CAAYc,GAAZ,CAAL;AACAO,IAAAA,EAAE,GAAG,KAAKrB,MAAL,CAAYmB,GAAZ,CAAL;AAEA9F,IAAAA,CAAC,GAAGpc,UAAU,CAAC0gB,EAAX,CAAce,GAAG,GAAGO,GAApB,CAAJ;AACAV,IAAAA,CAAC,GAAGH,GAAG,GAAG/E,CAAC,CAAC,CAAD,CAAP,GAAayF,GAAG,GAAGzF,CAAC,CAAC,CAAD,CAApB,GAA0B8F,GAAG,GAAG9F,CAAC,CAAC,CAAD,CAArC;AACAA,IAAAA,CAAC,GAAGpc,UAAU,CAAC0gB,EAAX,CAAcgB,GAAG,GAAGM,GAApB,CAAJ;AACAlV,IAAAA,CAAC,GAAGsU,GAAG,GAAGhF,CAAC,CAAC,CAAD,CAAP,GAAayF,GAAG,GAAGzF,CAAC,CAAC,CAAD,CAApB,GAA0B8F,GAAG,GAAG9F,CAAC,CAAC,CAAD,CAArC;AACAtX,IAAAA,CAAC,GAAG,KAAKkc,IAAL,CAAUja,CAAV,EAAaua,CAAb,EAAgBxU,CAAhB,CAAJ;AAEAsP,IAAAA,CAAC,GAAGpc,UAAU,CAAC0gB,EAAX,CAAciB,GAAG,GAAGK,GAApB,CAAJ;AACAV,IAAAA,CAAC,GAAGH,GAAG,GAAG/E,CAAC,CAAC,CAAD,CAAP,GAAa0F,GAAG,GAAG1F,CAAC,CAAC,CAAD,CAApB,GAA0B8F,GAAG,GAAG9F,CAAC,CAAC,CAAD,CAArC;AACAA,IAAAA,CAAC,GAAGpc,UAAU,CAAC0gB,EAAX,CAAckB,GAAG,GAAGI,GAApB,CAAJ;AACAlV,IAAAA,CAAC,GAAGsU,GAAG,GAAGhF,CAAC,CAAC,CAAD,CAAP,GAAa0F,GAAG,GAAG1F,CAAC,CAAC,CAAD,CAApB,GAA0B8F,GAAG,GAAG9F,CAAC,CAAC,CAAD,CAArC;AACAvX,IAAAA,CAAC,GAAG,KAAKmc,IAAL,CAAUja,CAAV,EAAaua,CAAb,EAAgBxU,CAAhB,CAAJ;AAEAkI,IAAAA,CAAC,GAAG,KAAKgM,IAAL,CAAUe,EAAV,EAAcjd,CAAd,EAAiBD,CAAjB,CAAJ;AAEAuX,IAAAA,CAAC,GAAGpc,UAAU,CAAC0gB,EAAX,CAAce,GAAG,GAAGQ,GAApB,CAAJ;AACAX,IAAAA,CAAC,GAAGH,GAAG,GAAG/E,CAAC,CAAC,CAAD,CAAP,GAAayF,GAAG,GAAGzF,CAAC,CAAC,CAAD,CAApB,GAA0B+F,GAAG,GAAG/F,CAAC,CAAC,CAAD,CAArC;AACAA,IAAAA,CAAC,GAAGpc,UAAU,CAAC0gB,EAAX,CAAcgB,GAAG,GAAGO,GAApB,CAAJ;AACAnV,IAAAA,CAAC,GAAGsU,GAAG,GAAGhF,CAAC,CAAC,CAAD,CAAP,GAAayF,GAAG,GAAGzF,CAAC,CAAC,CAAD,CAApB,GAA0B+F,GAAG,GAAG/F,CAAC,CAAC,CAAD,CAArC;AACAtX,IAAAA,CAAC,GAAG,KAAKkc,IAAL,CAAUja,CAAV,EAAaua,CAAb,EAAgBxU,CAAhB,CAAJ;AAEAsP,IAAAA,CAAC,GAAGpc,UAAU,CAAC0gB,EAAX,CAAciB,GAAG,GAAGM,GAApB,CAAJ;AACAX,IAAAA,CAAC,GAAGH,GAAG,GAAG/E,CAAC,CAAC,CAAD,CAAP,GAAa0F,GAAG,GAAG1F,CAAC,CAAC,CAAD,CAApB,GAA0B+F,GAAG,GAAG/F,CAAC,CAAC,CAAD,CAArC;AACAA,IAAAA,CAAC,GAAGpc,UAAU,CAAC0gB,EAAX,CAAckB,GAAG,GAAGK,GAApB,CAAJ;AACAnV,IAAAA,CAAC,GAAGsU,GAAG,GAAGhF,CAAC,CAAC,CAAD,CAAP,GAAa0F,GAAG,GAAG1F,CAAC,CAAC,CAAD,CAApB,GAA0B+F,GAAG,GAAG/F,CAAC,CAAC,CAAD,CAArC;AACAvX,IAAAA,CAAC,GAAG,KAAKmc,IAAL,CAAUja,CAAV,EAAaua,CAAb,EAAgBxU,CAAhB,CAAJ;AAEAD,IAAAA,CAAC,GAAG,KAAKmU,IAAL,CAAUe,EAAV,EAAcjd,CAAd,EAAiBD,CAAjB,CAAJ;AAEA,WAAO,MAAM,KAAKmc,IAAL,CAAUoB,EAAV,EAAcpN,CAAd,EAAiBnI,CAAjB,CAAb;AACD,GAhRS;;AAiRV;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACEsO,EAAAA,WAAW,EAAE,qBAAU7a,CAAV,EAAqBC,CAArB,EAAgC8Z,CAAhC,EAA2CgI,OAA3C,EAA4D;AACvE,QAAItb,CAAC,GAAG,CAAR;AAAA,QACEpG,CADF;;AAEA,SAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,IAAI0hB,OAAjB,EAA0B1hB,CAAC,IAAI,CAA/B,EAAkC;AAChCoG,MAAAA,CAAC,IAAI1C,IAAI,CAAC0U,GAAL,CAAS,KAAKmC,MAAL,CAAYva,CAAC,GAAGL,CAAhB,EAAmBK,CAAC,GAAGJ,CAAvB,EAA0BI,CAAC,GAAG0Z,CAA9B,CAAT,IAA6C1Z,CAAlD;AACD;;AACD,WAAOoG,CAAP;AACD;AAhSS,CAAZ;AAmSA,iEAAekS,KAAf;;;;;;;;;;;;;;;;AC9SO,SAAS5f,sBAAT,CACLgB,YADK,EAELC,YAFK,EAGLJ,QAHK,EAILC,SAJK,EAKM;AACX,MAAI8H,QAAQ,GAAG5H,YAAY,CAACZ,KAA5B;AAAA,MACEyI,SAAS,GAAG7H,YAAY,CAACX,MAD3B;AAAA,MAEEyI,MAAM,GAAGF,QAAQ,GAAG/H,QAFtB;AAAA,MAGEkI,MAAM,GAAGF,SAAS,GAAG/H,SAHvB;AAAA,MAIE0L,aAJF;AAAA,MAKEC,aALF;AAAA,MAMExF,CANF;AAAA,MAOEC,CAPF;;AASA,OAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGpG,SAAhB,EAA2BoG,CAAC,IAAI,CAAhC,EAAmC;AACjC,SAAKD,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGpG,QAAhB,EAA0BoG,CAAC,IAAI,CAA/B,EAAkC;AAChCuF,MAAAA,aAAa,GACXxB,IAAI,CAACsL,KAAL,CAAWpP,CAAC,GAAG6B,MAAf,IAAyBH,QAAzB,GAAoC,CAApC,GAAwCoC,IAAI,CAACsL,KAAL,CAAWrP,CAAC,GAAG6B,MAAf,IAAyB,CADnE;AAEA2D,MAAAA,aAAa,GAAGvF,CAAC,GAAGrG,QAAJ,GAAe,CAAf,GAAmBoG,CAAC,GAAG,CAAvC;AAEAhG,MAAAA,YAAY,CAACiJ,IAAb,CAAkBuC,aAAa,GAAG,CAAlC,IACEzL,YAAY,CAACkJ,IAAb,CAAkBsC,aAAa,GAAG,CAAlC,CADF;AAEAvL,MAAAA,YAAY,CAACiJ,IAAb,CAAkBuC,aAAa,GAAG,CAAlC,IACEzL,YAAY,CAACkJ,IAAb,CAAkBsC,aAAa,GAAG,CAAlC,CADF;AAEAvL,MAAAA,YAAY,CAACiJ,IAAb,CAAkBuC,aAAa,GAAG,CAAlC,IACEzL,YAAY,CAACkJ,IAAb,CAAkBsC,aAAa,GAAG,CAAlC,CADF;AAEAvL,MAAAA,YAAY,CAACiJ,IAAb,CAAkBuC,aAAa,GAAG,CAAlC,IACEzL,YAAY,CAACkJ,IAAb,CAAkBsC,aAAa,GAAG,CAAlC,CADF;AAED;AACF;;AAED,SAAOvL,YAAP;AACD;AAEM,SAAShB,2BAAT,CACLe,YADK,EAELC,YAFK,EAGLJ,QAHK,EAILC,SAJK,EAKM;AACX,MAAI8H,QAAQ,GAAG5H,YAAY,CAACZ,KAA5B;AAAA,MACEyI,SAAS,GAAG7H,YAAY,CAACX,MAD3B;AAAA,MAEEyI,MAAM,GAAGF,QAAQ,GAAG/H,QAFtB;AAAA,MAGEkI,MAAM,GAAGF,SAAS,GAAG/H,SAHvB;AAAA,MAIE2L,aAJF;AAAA,MAKExF,CALF;AAAA,MAMEC,CANF;AAAA,MAOEkW,EAPF;AAAA,MAQEC,EARF;AAAA,MASEtC,EATF;AAAA,MAUEC,EAVF;AAAA,MAWEsC,EAXF;AAAA,MAYEC,EAZF;AAAA,MAaE0L,eAbF;AAAA,MAcEC,eAdF;AAAA,MAeEC,eAfF;AAAA,MAgBEC,eAhBF;AAAA,MAiBE9hB,CAjBF;AAAA,MAkBE2L,CAlBF;;AAoBA,OAAK3L,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGxG,SAAhB,EAA2BwG,CAAC,IAAI,CAAhC,EAAmC;AACjC,SAAK2L,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGpS,QAAhB,EAA0BoS,CAAC,IAAI,CAA/B,EAAkC;AAChChM,MAAAA,CAAC,GAAGgM,CAAC,GAAGnK,MAAR;AACA5B,MAAAA,CAAC,GAAGI,CAAC,GAAGyB,MAAR;AACAqU,MAAAA,EAAE,GAAGpS,IAAI,CAACsL,KAAL,CAAWrP,CAAX,CAAL;AACAoW,MAAAA,EAAE,GAAGrS,IAAI,CAACsL,KAAL,CAAWpP,CAAX,CAAL;AACA6T,MAAAA,EAAE,GAAG9T,CAAC,GAAGmW,EAAT;AACApC,MAAAA,EAAE,GAAG9T,CAAC,GAAGmW,EAAT;AACAC,MAAAA,EAAE,GAAGF,EAAE,GAAG,CAAV;AACAG,MAAAA,EAAE,GAAGF,EAAE,GAAG,CAAV;;AAEA,UAAIC,EAAE,IAAI1U,QAAV,EAAoB;AAClB0U,QAAAA,EAAE,GAAGF,EAAL;AACD;;AACD,UAAIG,EAAE,IAAI1U,SAAV,EAAqB;AACnB0U,QAAAA,EAAE,GAAGF,EAAL;AACD;;AAED4L,MAAAA,eAAe,GAAG,CAAC5L,EAAE,GAAGzU,QAAL,GAAgBwU,EAAjB,IAAuB,CAAzC;AACA8L,MAAAA,eAAe,GAAG,CAAC7L,EAAE,GAAGzU,QAAL,GAAgB0U,EAAjB,IAAuB,CAAzC;AACA6L,MAAAA,eAAe,GAAG,CAAC5L,EAAE,GAAG3U,QAAL,GAAgBwU,EAAjB,IAAuB,CAAzC;AACAgM,MAAAA,eAAe,GAAG,CAAC7L,EAAE,GAAG3U,QAAL,GAAgB0U,EAAjB,IAAuB,CAAzC;AACA7Q,MAAAA,aAAa,GAAG,CAACnF,CAAC,GAAGzG,QAAJ,GAAeoS,CAAhB,IAAqB,CAArC;AAEAhS,MAAAA,YAAY,CAACiJ,IAAb,CAAkBuC,aAAlB,IACE,CAAC,MAAMuO,EAAP,KACG,CAAC,MAAMD,EAAP,IAAa/Z,YAAY,CAACkJ,IAAb,CAAkB+e,eAAlB,CAAb,GACClO,EAAE,GAAG/Z,YAAY,CAACkJ,IAAb,CAAkBgf,eAAlB,CAFT,IAGAlO,EAAE,IACC,CAAC,MAAMD,EAAP,IAAa/Z,YAAY,CAACkJ,IAAb,CAAkBif,eAAlB,CAAb,GACCpO,EAAE,GAAG/Z,YAAY,CAACkJ,IAAb,CAAkBkf,eAAlB,CAFP,CAJJ;AAOAnoB,MAAAA,YAAY,CAACiJ,IAAb,CAAkBuC,aAAa,GAAG,CAAlC,IACE,CAAC,MAAMuO,EAAP,KACG,CAAC,MAAMD,EAAP,IAAa/Z,YAAY,CAACkJ,IAAb,CAAkB+e,eAAe,GAAG,CAApC,CAAb,GACClO,EAAE,GAAG/Z,YAAY,CAACkJ,IAAb,CAAkBgf,eAAe,GAAG,CAApC,CAFT,IAGAlO,EAAE,IACC,CAAC,MAAMD,EAAP,IAAa/Z,YAAY,CAACkJ,IAAb,CAAkBif,eAAe,GAAG,CAApC,CAAb,GACCpO,EAAE,GAAG/Z,YAAY,CAACkJ,IAAb,CAAkBkf,eAAe,GAAG,CAApC,CAFP,CAJJ;AAOAnoB,MAAAA,YAAY,CAACiJ,IAAb,CAAkBuC,aAAa,GAAG,CAAlC,IACE,CAAC,MAAMuO,EAAP,KACG,CAAC,MAAMD,EAAP,IAAa/Z,YAAY,CAACkJ,IAAb,CAAkB+e,eAAe,GAAG,CAApC,CAAb,GACClO,EAAE,GAAG/Z,YAAY,CAACkJ,IAAb,CAAkBgf,eAAe,GAAG,CAApC,CAFT,IAGAlO,EAAE,IACC,CAAC,MAAMD,EAAP,IAAa/Z,YAAY,CAACkJ,IAAb,CAAkBif,eAAe,GAAG,CAApC,CAAb,GACCpO,EAAE,GAAG/Z,YAAY,CAACkJ,IAAb,CAAkBkf,eAAe,GAAG,CAApC,CAFP,CAJJ;AAOAnoB,MAAAA,YAAY,CAACiJ,IAAb,CAAkBuC,aAAa,GAAG,CAAlC,IACE,CAAC,MAAMuO,EAAP,KACG,CAAC,MAAMD,EAAP,IAAa/Z,YAAY,CAACkJ,IAAb,CAAkB+e,eAAe,GAAG,CAApC,CAAb,GACClO,EAAE,GAAG/Z,YAAY,CAACkJ,IAAb,CAAkBgf,eAAe,GAAG,CAApC,CAFT,IAGAlO,EAAE,IACC,CAAC,MAAMD,EAAP,IAAa/Z,YAAY,CAACkJ,IAAb,CAAkBif,eAAe,GAAG,CAApC,CAAb,GACCpO,EAAE,GAAG/Z,YAAY,CAACkJ,IAAb,CAAkBkf,eAAe,GAAG,CAApC,CAFP,CAJJ;AAOD;AACF;;AAED,SAAOnoB,YAAP;AACD;AAEM,SAASf,8BAAT,CACLc,YADK,EAELC,YAFK,EAGLJ,QAHK,EAILC,SAJK,EAKM;AACX,MAAIuoB,WAAW,GAAG,SAASA,WAAT,CAAqBC,EAArB,EAAyBC,EAAzB,EAA6BC,EAA7B,EAAiChW,CAAjC,EAAoC;AAClD,WAAO+V,EAAE,GAAG,CAACC,EAAE,GAAGF,EAAN,IAAY9V,CAAjB,GAAqB,CAAC8V,EAAE,GAAG,IAAIC,EAAT,GAAcC,EAAf,IAAqBhW,CAArB,GAAyBA,CAArD;AACD,GAFH;AAAA,MAGEiW,oBAAoB,GAAG,SAASA,oBAAT,CAA8BH,EAA9B,EAAkCC,EAAlC,EAAsCC,EAAtC,EAA0ChW,CAA1C,EAA6C;AAClE,QAAIrK,MAAM,GAAGkgB,WAAW,CAACC,EAAD,EAAKC,EAAL,EAASC,EAAT,EAAahW,CAAb,CAAxB;;AACA,QAAIrK,MAAM,GAAG,GAAb,EAAkB;AAChB,aAAO,GAAP;AACD;;AACD,QAAIA,MAAM,GAAG,CAAb,EAAgB;AACd,aAAO,CAAP;AACD;;AACD,WAAO6B,IAAI,CAACsL,KAAL,CAAWnN,MAAX,CAAP;AACD,GAZH;AAAA,MAaEP,QAAQ,GAAG5H,YAAY,CAACZ,KAb1B;AAAA,MAcEyI,SAAS,GAAG7H,YAAY,CAACX,MAd3B;AAAA,MAeEyI,MAAM,GAAGF,QAAQ,GAAG/H,QAftB;AAAA,MAgBEkI,MAAM,GAAGF,SAAS,GAAG/H,SAhBvB;AAAA,MAiBEmG,CAjBF;AAAA,MAkBEC,CAlBF;AAAA,MAmBEkW,EAnBF;AAAA,MAoBEC,EApBF;AAAA,MAqBEC,EArBF;AAAA,MAsBEC,EAtBF;AAAA,MAuBEC,EAvBF;AAAA,MAwBEC,EAxBF;AAAA,MAyBE1C,EAzBF;AAAA,MA0BEC,EA1BF;AAAA,MA2BEiO,eA3BF;AAAA,MA4BEC,eA5BF;AAAA,MA6BEQ,eA7BF;AAAA,MA8BEP,eA9BF;AAAA,MA+BEC,eA/BF;AAAA,MAgCEO,eAhCF;AAAA,MAiCEC,eAjCF;AAAA,MAkCEC,eAlCF;AAAA,MAmCEC,eAnCF;AAAA,MAoCErd,aApCF;AAAA,MAqCEnF,CArCF;AAAA,MAsCE2L,CAtCF;;AAwCA,OAAK3L,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGxG,SAAhB,EAA2BwG,CAAC,IAAI,CAAhC,EAAmC;AACjC,SAAK2L,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGpS,QAAhB,EAA0BoS,CAAC,IAAI,CAA/B,EAAkC;AAChChM,MAAAA,CAAC,GAAGgM,CAAC,GAAGnK,MAAR;AACA5B,MAAAA,CAAC,GAAGI,CAAC,GAAGyB,MAAR;AAEAuU,MAAAA,EAAE,GAAGtS,IAAI,CAACsL,KAAL,CAAWrP,CAAX,CAAL;AACAsW,MAAAA,EAAE,GAAGvS,IAAI,CAACsL,KAAL,CAAWpP,CAAX,CAAL;AACA6T,MAAAA,EAAE,GAAG,CAAC9T,CAAC,GAAGqW,EAAL,IAAW,GAAhB;AACAtC,MAAAA,EAAE,GAAG,CAAC9T,CAAC,GAAGqW,EAAL,IAAW,GAAhB;;AAEA,UAAID,EAAE,GAAG,CAAL,IAAU,CAAd,EAAiB;AACfF,QAAAA,EAAE,GAAGE,EAAE,GAAG,CAAV;AACD,OAFD,MAEO;AACLF,QAAAA,EAAE,GAAGE,EAAL;AACD;;AAED,UAAIC,EAAE,GAAG,CAAL,IAAU,CAAd,EAAiB;AACfF,QAAAA,EAAE,GAAGE,EAAE,GAAG,CAAV;AACD,OAFD,MAEO;AACLF,QAAAA,EAAE,GAAGE,EAAL;AACD;;AAED,UAAID,EAAE,GAAG,CAAL,IAAU1U,QAAd,EAAwB;AACtB4U,QAAAA,EAAE,GAAGF,EAAL;AACD,OAFD,MAEO;AACLE,QAAAA,EAAE,GAAGF,EAAE,GAAG,CAAV;AACD;;AAED,UAAIC,EAAE,GAAG,CAAL,IAAU3U,QAAd,EAAwB;AACtB6U,QAAAA,EAAE,GAAGF,EAAL;AACD,OAFD,MAEO;AACLE,QAAAA,EAAE,GAAGF,EAAE,GAAG,CAAV;AACD;;AAED0L,MAAAA,eAAe,GAAG,CAAC5L,EAAE,GAAGzU,QAAL,GAAgBwU,EAAjB,IAAuB,CAAzC;AACA8L,MAAAA,eAAe,GAAG,CAAC7L,EAAE,GAAGzU,QAAL,GAAgB0U,EAAjB,IAAuB,CAAzC;AACAoM,MAAAA,eAAe,GAAG,CAACrM,EAAE,GAAGzU,QAAL,GAAgB4U,EAAjB,IAAuB,CAAzC;AACA2L,MAAAA,eAAe,GAAG,CAAC5L,EAAE,GAAG3U,QAAL,GAAgBwU,EAAjB,IAAuB,CAAzC;AACAgM,MAAAA,eAAe,GAAG,CAAC7L,EAAE,GAAG3U,QAAL,GAAgB0U,EAAjB,IAAuB,CAAzC;AACAqM,MAAAA,eAAe,GAAG,CAACpM,EAAE,GAAG3U,QAAL,GAAgB4U,EAAjB,IAAuB,CAAzC;AACAoM,MAAAA,eAAe,GAAG,CAACnM,EAAE,GAAG7U,QAAL,GAAgBwU,EAAjB,IAAuB,CAAzC;AACAyM,MAAAA,eAAe,GAAG,CAACpM,EAAE,GAAG7U,QAAL,GAAgB0U,EAAjB,IAAuB,CAAzC;AACAwM,MAAAA,eAAe,GAAG,CAACrM,EAAE,GAAG7U,QAAL,GAAgB4U,EAAjB,IAAuB,CAAzC;AAEA/Q,MAAAA,aAAa,GAAG,CAACnF,CAAC,GAAGzG,QAAJ,GAAeoS,CAAhB,IAAqB,CAArC;AAEAhS,MAAAA,YAAY,CAACiJ,IAAb,CAAkBuC,aAAlB,IAAmCgd,oBAAoB,CACrDJ,WAAW,CACTroB,YAAY,CAACkJ,IAAb,CAAkB+e,eAAlB,CADS,EAETjoB,YAAY,CAACkJ,IAAb,CAAkBgf,eAAlB,CAFS,EAGTloB,YAAY,CAACkJ,IAAb,CAAkBwf,eAAlB,CAHS,EAIT3O,EAJS,CAD0C,EAOrDsO,WAAW,CACTroB,YAAY,CAACkJ,IAAb,CAAkBif,eAAlB,CADS,EAETnoB,YAAY,CAACkJ,IAAb,CAAkBkf,eAAlB,CAFS,EAGTpoB,YAAY,CAACkJ,IAAb,CAAkByf,eAAlB,CAHS,EAIT5O,EAJS,CAP0C,EAarDsO,WAAW,CACTroB,YAAY,CAACkJ,IAAb,CAAkB0f,eAAlB,CADS,EAET5oB,YAAY,CAACkJ,IAAb,CAAkB2f,eAAlB,CAFS,EAGT7oB,YAAY,CAACkJ,IAAb,CAAkB4f,eAAlB,CAHS,EAIT/O,EAJS,CAb0C,EAmBrDC,EAnBqD,CAAvD;AAsBA/Z,MAAAA,YAAY,CAACiJ,IAAb,CAAkBuC,aAAa,GAAG,CAAlC,IAAuCgd,oBAAoB,CACzDJ,WAAW,CACTroB,YAAY,CAACkJ,IAAb,CAAkB+e,eAAe,GAAG,CAApC,CADS,EAETjoB,YAAY,CAACkJ,IAAb,CAAkBgf,eAAe,GAAG,CAApC,CAFS,EAGTloB,YAAY,CAACkJ,IAAb,CAAkBwf,eAAe,GAAG,CAApC,CAHS,EAIT3O,EAJS,CAD8C,EAOzDsO,WAAW,CACTroB,YAAY,CAACkJ,IAAb,CAAkBif,eAAe,GAAG,CAApC,CADS,EAETnoB,YAAY,CAACkJ,IAAb,CAAkBkf,eAAe,GAAG,CAApC,CAFS,EAGTpoB,YAAY,CAACkJ,IAAb,CAAkByf,eAAe,GAAG,CAApC,CAHS,EAIT5O,EAJS,CAP8C,EAazDsO,WAAW,CACTroB,YAAY,CAACkJ,IAAb,CAAkB0f,eAAe,GAAG,CAApC,CADS,EAET5oB,YAAY,CAACkJ,IAAb,CAAkB2f,eAAe,GAAG,CAApC,CAFS,EAGT7oB,YAAY,CAACkJ,IAAb,CAAkB4f,eAAe,GAAG,CAApC,CAHS,EAIT/O,EAJS,CAb8C,EAmBzDC,EAnByD,CAA3D;AAsBA/Z,MAAAA,YAAY,CAACiJ,IAAb,CAAkBuC,aAAa,GAAG,CAAlC,IAAuCgd,oBAAoB,CACzDJ,WAAW,CACTroB,YAAY,CAACkJ,IAAb,CAAkB+e,eAAe,GAAG,CAApC,CADS,EAETjoB,YAAY,CAACkJ,IAAb,CAAkBgf,eAAe,GAAG,CAApC,CAFS,EAGTloB,YAAY,CAACkJ,IAAb,CAAkBwf,eAAe,GAAG,CAApC,CAHS,EAIT3O,EAJS,CAD8C,EAOzDsO,WAAW,CACTroB,YAAY,CAACkJ,IAAb,CAAkBif,eAAe,GAAG,CAApC,CADS,EAETnoB,YAAY,CAACkJ,IAAb,CAAkBkf,eAAe,GAAG,CAApC,CAFS,EAGTpoB,YAAY,CAACkJ,IAAb,CAAkByf,eAAe,GAAG,CAApC,CAHS,EAIT5O,EAJS,CAP8C,EAazDsO,WAAW,CACTroB,YAAY,CAACkJ,IAAb,CAAkB0f,eAAe,GAAG,CAApC,CADS,EAET5oB,YAAY,CAACkJ,IAAb,CAAkB2f,eAAe,GAAG,CAApC,CAFS,EAGT7oB,YAAY,CAACkJ,IAAb,CAAkB4f,eAAe,GAAG,CAApC,CAHS,EAIT/O,EAJS,CAb8C,EAmBzDC,EAnByD,CAA3D;AAsBA/Z,MAAAA,YAAY,CAACiJ,IAAb,CAAkBuC,aAAa,GAAG,CAAlC,IAAuCgd,oBAAoB,CACzDJ,WAAW,CACTroB,YAAY,CAACkJ,IAAb,CAAkB+e,eAAe,GAAG,CAApC,CADS,EAETjoB,YAAY,CAACkJ,IAAb,CAAkBgf,eAAe,GAAG,CAApC,CAFS,EAGTloB,YAAY,CAACkJ,IAAb,CAAkBwf,eAAe,GAAG,CAApC,CAHS,EAIT3O,EAJS,CAD8C,EAOzDsO,WAAW,CACTroB,YAAY,CAACkJ,IAAb,CAAkBif,eAAe,GAAG,CAApC,CADS,EAETnoB,YAAY,CAACkJ,IAAb,CAAkBkf,eAAe,GAAG,CAApC,CAFS,EAGTpoB,YAAY,CAACkJ,IAAb,CAAkByf,eAAe,GAAG,CAApC,CAHS,EAIT5O,EAJS,CAP8C,EAazDsO,WAAW,CACTroB,YAAY,CAACkJ,IAAb,CAAkB0f,eAAe,GAAG,CAApC,CADS,EAET5oB,YAAY,CAACkJ,IAAb,CAAkB2f,eAAe,GAAG,CAApC,CAFS,EAGT7oB,YAAY,CAACkJ,IAAb,CAAkB4f,eAAe,GAAG,CAApC,CAHS,EAIT/O,EAJS,CAb8C,EAmBzDC,EAnByD,CAA3D;AAqBD;AACF;;AAED,SAAO/Z,YAAP;AACD;;;;;;;;;;AC9SD;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;ACNA;AACA","sources":["webpack://imagizer/./src/classes/BaseOnLayerObject.tsx","webpack://imagizer/./src/classes/CanvasWrapper.tsx","webpack://imagizer/./src/classes/EffectsRepository.tsx","webpack://imagizer/./src/classes/Image.tsx","webpack://imagizer/./src/classes/Layer.tsx","webpack://imagizer/./src/classes/LayerObject.tsx","webpack://imagizer/./src/classes/Project.tsx","webpack://imagizer/./src/classes/effects/Base.tsx","webpack://imagizer/./src/classes/effects/BaseCustom.tsx","webpack://imagizer/./src/classes/effects/BasePoint.tsx","webpack://imagizer/./src/classes/effects/BaseTransform.tsx","webpack://imagizer/./src/classes/effects/custom/AutoWhiteBalance.tsx","webpack://imagizer/./src/classes/effects/custom/Block.tsx","webpack://imagizer/./src/classes/effects/custom/Border.tsx","webpack://imagizer/./src/classes/effects/custom/ComponentStretching.tsx","webpack://imagizer/./src/classes/effects/custom/Emboss.tsx","webpack://imagizer/./src/classes/effects/custom/FillColor.tsx","webpack://imagizer/./src/classes/effects/custom/Flip.tsx","webpack://imagizer/./src/classes/effects/point/AutoContrast.tsx","webpack://imagizer/./src/classes/effects/point/Brightness.tsx","webpack://imagizer/./src/classes/effects/point/ChannelMix.tsx","webpack://imagizer/./src/classes/effects/point/Contrast.tsx","webpack://imagizer/./src/classes/effects/point/Diffusion.tsx","webpack://imagizer/./src/classes/effects/point/Dissolve.tsx","webpack://imagizer/./src/classes/effects/point/Dither.tsx","webpack://imagizer/./src/classes/effects/point/Edge.tsx","webpack://imagizer/./src/classes/effects/point/Exposure.tsx","webpack://imagizer/./src/classes/effects/point/Gain.tsx","webpack://imagizer/./src/classes/effects/point/Gamma.tsx","webpack://imagizer/./src/classes/effects/point/GrayScale.tsx","webpack://imagizer/./src/classes/effects/point/HSBAdjust.tsx","webpack://imagizer/./src/classes/effects/point/Invert.tsx","webpack://imagizer/./src/classes/effects/point/InvertAlpha.tsx","webpack://imagizer/./src/classes/effects/point/Levels.tsx","webpack://imagizer/./src/classes/effects/point/Rescale.tsx","webpack://imagizer/./src/classes/effects/point/Sepia.tsx","webpack://imagizer/./src/classes/effects/point/Solarize.tsx","webpack://imagizer/./src/classes/effects/point/Threshold.tsx","webpack://imagizer/./src/classes/effects/point/Tritone.tsx","webpack://imagizer/./src/classes/effects/transform/Circle.tsx","webpack://imagizer/./src/classes/effects/transform/Diffuse.tsx","webpack://imagizer/./src/classes/effects/transform/Kaleidoscope.tsx","webpack://imagizer/./src/classes/effects/transform/Marble.tsx","webpack://imagizer/./src/classes/effects/transform/Offset.tsx","webpack://imagizer/./src/classes/effects/transform/Perspective.tsx","webpack://imagizer/./src/classes/effects/transform/Pinch.tsx","webpack://imagizer/./src/classes/effects/transform/Polar.tsx","webpack://imagizer/./src/classes/effects/transform/Ripple.tsx","webpack://imagizer/./src/classes/effects/transform/Rotate.tsx","webpack://imagizer/./src/classes/effects/transform/Shear.tsx","webpack://imagizer/./src/classes/effects/transform/Sphere.tsx","webpack://imagizer/./src/classes/effects/transform/Swim.tsx","webpack://imagizer/./src/classes/effects/transform/Twirl.tsx","webpack://imagizer/./src/classes/effects/transform/Water.tsx","webpack://imagizer/./src/helpers/color.tsx","webpack://imagizer/./src/helpers/common.tsx","webpack://imagizer/./src/helpers/noise.tsx","webpack://imagizer/./src/helpers/resize.tsx","webpack://imagizer/external commonjs2 \"canvas\"","webpack://imagizer/external commonjs2 \"fs\"","webpack://imagizer/webpack/bootstrap","webpack://imagizer/webpack/runtime/define property getters","webpack://imagizer/webpack/runtime/hasOwnProperty shorthand","webpack://imagizer/webpack/runtime/make namespace object","webpack://imagizer/./src/main.tsx"],"sourcesContent":["import CanvasWrapper from \"./CanvasWrapper\";\nimport {\n  resizeNearestNeighbour,\n  resizeBilinearInterpolation,\n  resizeBiquadraticInterpolation,\n} from \"../helpers/resize\";\n\nclass BaseOnLayerObject {\n  protected imageData: ImageData = null;\n\n  protected canvas: CanvasWrapper = null;\n\n  protected width: number = 0;\n\n  protected height: number = 0;\n\n  getWidth(): number {\n    return this.width;\n  }\n\n  getHeight(): number {\n    return this.height;\n  }\n\n  setWidth(value: number): BaseOnLayerObject {\n    this.width = value;\n    return this;\n  }\n\n  setHeight(value: number): BaseOnLayerObject {\n    this.height = value;\n    return this;\n  }\n\n  getImageData(): ImageData {\n    if (!this.imageData) {\n      this.imageData = this.canvas\n        .getContext()\n        .getImageData(0, 0, this.getWidth(), this.getHeight());\n    }\n    return this.imageData;\n  }\n\n  setImageData(value: ImageData): BaseOnLayerObject {\n    this.imageData = value;\n    return this;\n  }\n\n  resize(\n    newWidth: number,\n    newHeight: number,\n    mode: string = \"nearest-neighbour\"\n  ): BaseOnLayerObject {\n    const oldImageData = this.getImageData(),\n      canvas = new CanvasWrapper(newWidth, newHeight);\n    let newImageData = canvas.getContext().createImageData(newWidth, newHeight);\n\n    switch (mode) {\n      case \"nearest-neighbour\":\n        newImageData = resizeNearestNeighbour(\n          oldImageData,\n          newImageData,\n          newWidth,\n          newHeight\n        );\n        break;\n\n      case \"bilinear-interpolation\":\n        newImageData = resizeBilinearInterpolation(\n          oldImageData,\n          newImageData,\n          newWidth,\n          newHeight\n        );\n        break;\n\n      case \"biquadratic-interpolation\":\n        newImageData = resizeBiquadraticInterpolation(\n          oldImageData,\n          newImageData,\n          newWidth,\n          newHeight\n        );\n        break;\n\n      default:\n        canvas.destroy();\n        return this;\n    }\n\n    canvas.destroy();\n\n    return this.setWidth(newWidth)\n      .setHeight(newHeight)\n      .setImageData(newImageData);\n  }\n}\n\nexport default BaseOnLayerObject;\n","import { isBrowser } from \"../helpers/common\";\nimport { NodeCanvasRenderingContext2D, Canvas } from \"canvas/types\";\n\nclass CanvasWrapper {\n  protected canvas: Canvas | HTMLCanvasElement = null;\n\n  protected context: NodeCanvasRenderingContext2D | CanvasRenderingContext2D =\n    null;\n\n  protected width: number = 0;\n\n  protected height: number = 0;\n\n  constructor(width: number, height: number) {\n    this.initialize(width, height);\n  }\n\n  initialize(width: number = 0, height: number = 0): void {\n    if (!isBrowser()) {\n      const { createCanvas } = require(\"canvas\");\n      this.canvas = createCanvas(width, height);\n    } else {\n      this.canvas = document.createElement(\"canvas\");\n\n      // hide from viewport\n      this.canvas.style.position = \"absolute\";\n      this.canvas.style.left = \"-99999px\";\n      this.canvas.style.top = \"-99999px\";\n\n      this.setWidth(width);\n      this.setHeight(height);\n\n      document.body.appendChild(this.canvas);\n    }\n  }\n\n  setWidth(value: number): CanvasWrapper {\n    this.canvas.setAttribute(\"width\", \"\" + value);\n    this.width = value;\n    return this;\n  }\n\n  setHeight(value: number): CanvasWrapper {\n    this.canvas.setAttribute(\"height\", \"\" + value);\n    this.height = value;\n    return this;\n  }\n\n  getContext(): NodeCanvasRenderingContext2D | CanvasRenderingContext2D {\n    if (!this.context) {\n      this.context = this.canvas.getContext(\"2d\");\n    }\n    return this.context;\n  }\n\n  getCanvas(): Canvas | HTMLCanvasElement {\n    return this.canvas;\n  }\n\n  toDataURL(type: string = \"image/png\"): string {\n    return this.canvas.toDataURL(type);\n  }\n\n  destroy(): void {\n    if (isBrowser()) {\n      document.body.removeChild(this.canvas);\n    }\n    this.canvas = null;\n    this.context = null;\n  }\n}\n\nexport default CanvasWrapper;\n","import GrayScale from \"./effects/point/GrayScale\";\nimport Sepia from \"./effects/point/Sepia\";\nimport Contrast from \"./effects/point/Contrast\";\nimport Brightness from \"./effects/point/Brightness\";\nimport Diffusion from \"./effects/point/Diffusion\";\nimport Dither from \"./effects/point/Dither\";\nimport Exposure from \"./effects/point/Exposure\";\nimport Gain from \"./effects/point/Gain\";\nimport Gamma from \"./effects/point/Gamma\";\nimport HSBAdjust from \"./effects/point/HSBAdjust\";\nimport InvertAlpha from \"./effects/point/InvertAlpha\";\nimport Invert from \"./effects/point/Invert\";\nimport Levels from \"./effects/point/Levels\";\nimport Rescale from \"./effects/point/Rescale\";\nimport Solarize from \"./effects/point/Solarize\";\nimport Threshold from \"./effects/point/Threshold\";\nimport Tritone from \"./effects/point/Tritone\";\nimport Dissolve from \"./effects/point/Dissolve\";\nimport Edge from \"./effects/point/Edge\";\nimport ChannelMix from \"./effects/point/ChannelMix\";\nimport AutoContrast from \"./effects/point/AutoContrast\";\n\nimport Diffuse from \"./effects/transform/Diffuse\";\nimport Kaleidoscope from \"./effects/transform/Kaleidoscope\";\nimport Marble from \"./effects/transform/Marble\";\nimport Pinch from \"./effects/transform/Pinch\";\nimport Ripple from \"./effects/transform/Ripple\";\nimport Shear from \"./effects/transform/Shear\";\nimport Sphere from \"./effects/transform/Sphere\";\nimport Swim from \"./effects/transform/Swim\";\nimport Twirl from \"./effects/transform/Twirl\";\nimport Water from \"./effects/transform/Water\";\nimport Circle from \"./effects/transform/Circle\";\nimport Rotate from \"./effects/transform/Rotate\";\nimport Offset from \"./effects/transform/Offset\";\nimport Polar from \"./effects/transform/Polar\";\nimport Perspective from \"./effects/transform/Perspective\";\n\nimport AutoWhiteBalance from \"./effects/custom/AutoWhiteBalance\";\nimport FillColor from \"./effects/custom/FillColor\";\nimport Flip from \"./effects/custom/Flip\";\nimport Block from \"./effects/custom/Block\";\nimport Border from \"./effects/custom/Border\";\nimport Emboss from \"./effects/custom/Emboss\";\nimport ComponentStretching from \"./effects/custom/ComponentStretching\";\n\nconst availableEffects = {};\n\nfunction add(_class) {\n  if (availableEffects[_class.getName()]) {\n    throw `Effect: ${_class.getName()} exists already!`;\n  }\n  availableEffects[_class.getName()] = _class;\n}\n\nadd(GrayScale);\nadd(Sepia);\nadd(Contrast);\nadd(Brightness);\nadd(Diffusion);\nadd(Dither);\nadd(Exposure);\nadd(Gain);\nadd(Gamma);\nadd(HSBAdjust);\nadd(InvertAlpha);\nadd(Invert);\nadd(Levels);\nadd(Rescale);\nadd(Solarize);\nadd(Threshold);\nadd(Tritone);\nadd(Diffuse);\nadd(Dissolve);\nadd(Kaleidoscope);\nadd(Marble);\nadd(Pinch);\nadd(Ripple);\nadd(Shear);\nadd(Sphere);\nadd(Swim);\nadd(Twirl);\nadd(Water);\nadd(Edge);\nadd(ChannelMix);\nadd(Circle);\nadd(Rotate);\nadd(Offset);\nadd(Polar);\nadd(Perspective);\nadd(AutoContrast);\nadd(AutoWhiteBalance);\nadd(FillColor);\nadd(Flip);\nadd(Block);\nadd(Border);\nadd(Emboss);\nadd(ComponentStretching);\n\nclass EffectsRepository {\n  static get(name) {\n    return availableEffects[name];\n  }\n}\n\nexport default EffectsRepository;\n","import BaseOnLayerObject from \"./BaseOnLayerObject\";\nimport CanvasWrapper from \"./CanvasWrapper\";\nimport { isBrowser } from \"../helpers/common\";\nimport { Image as ImageType } from \"canvas/types\";\n\nclass Image extends BaseOnLayerObject {\n  protected url: string = null;\n\n  protected image: HTMLImageElement | ImageType = null;\n\n  constructor() {\n    super();\n\n    if (!isBrowser()) {\n      const canvas = require(\"canvas\");\n      this.image = new canvas.Image();\n    } else {\n      this.image = new window.Image();\n\n      // hide from viewport\n      this.image.style.position = \"absolute\";\n      this.image.style.left = \"-99999px\";\n      this.image.style.top = \"-99999px\";\n    }\n  }\n\n  load(url: string, callback: () => void): void {\n    const load = () => {\n      this.setWidth(!isBrowser() ? this.image.width : this.image.clientWidth);\n      this.setHeight(\n        !isBrowser() ? this.image.height : this.image.clientHeight\n      );\n\n      // get image data\n      this.canvas = new CanvasWrapper(this.getWidth(), this.getHeight());\n      this.canvas\n        .getContext()\n        .drawImage(this.image, 0, 0, this.getWidth(), this.getHeight());\n\n      if (isBrowser()) {\n        document.body.removeChild(this.image);\n      }\n\n      if (typeof callback === \"function\") {\n        callback.call(this);\n      }\n    };\n\n    this.url = url;\n\n    if (isBrowser()) {\n      document.body.appendChild(this.image);\n      this.image.onload = function () {\n        load();\n      };\n      this.image.src = url;\n    } else {\n      const fs = require(\"fs\");\n      this.image.src = fs.readFileSync(url);\n      load();\n    }\n  }\n}\n\nexport default Image;\n","import CanvasWrapper from \"./CanvasWrapper\";\nimport LayerObject from \"./LayerObject\";\nimport { mergeImageData, mergePixelCallback } from \"../helpers/common\";\nimport EffectsRepository from \"./EffectsRepository\";\nimport BaseEffect from \"./effects/Base\";\n\ninterface EffectType {\n  name: string;\n  effect: BaseEffect;\n  parameters: object;\n}\n\nclass Layer {\n  protected objects: LayerObject[] = [];\n\n  protected effects: EffectType[] = [];\n\n  protected x: number = 0;\n\n  protected y: number = 0;\n\n  protected canvas: CanvasWrapper = null;\n\n  protected imageData: ImageData = null;\n\n  protected width: number = 0;\n\n  protected height: number = 0;\n\n  parameters: {\n    backgroundColor?: string;\n    blendingMode?: string;\n  } = {\n    backgroundColor: \"\",\n    blendingMode: \"\",\n  };\n\n  constructor(\n    width: number,\n    height: number,\n    parameters: {\n      backgroundColor?: string;\n      blendingMode?: string;\n    } = {\n      backgroundColor: \"\",\n      blendingMode: \"\",\n    }\n  ) {\n    this.initialize(width, height, parameters);\n\n    if (\n      parameters.backgroundColor &&\n      parameters.backgroundColor !== \"transparent\"\n    ) {\n      this.applyEffect(\"fill-color\", {\n        color: parameters.backgroundColor,\n      });\n    }\n  }\n\n  initialize(width: number, height: number, parameters): void {\n    this.canvas = new CanvasWrapper(width, height);\n    this.imageData = this.canvas.getContext().createImageData(width, height);\n    this.width = width;\n    this.height = height;\n    this.parameters = parameters;\n  }\n\n  put(obj: any, x: number, y: number): LayerObject {\n    const put = new LayerObject(obj, this, x, y, {});\n    this.objects.push(put);\n    return put;\n  }\n\n  exportLayer(): ImageData {\n    for (let i = 0; i < this.objects.length; i += 1) {\n      const layerObject = this.objects[i];\n      this.imageData = mergeImageData(\n        {\n          width: this.width,\n          height: this.height,\n          imageData: this.imageData,\n        },\n        {\n          x: layerObject.getX(),\n          y: layerObject.getY(),\n          width: layerObject.getWidth(),\n          height: layerObject.getHeight(),\n          imageData: layerObject.exportObject(),\n        },\n        mergePixelCallback\n      );\n    }\n\n    for (let i = 0; i < this.effects.length; i++) {\n      this.imageData = this.effects[i].effect.run(\n        this.imageData,\n        this.effects[i].parameters\n      );\n    }\n\n    return this.imageData;\n  }\n\n  applyEffect(name: string, parameters: object): Layer {\n    this.effects.push({\n      name,\n      effect: new (EffectsRepository.get(name))(),\n      parameters,\n    });\n    return this;\n  }\n\n  resize(newWidth: number, newHeight: number, mode: string): Layer {\n    this.canvas.destroy();\n    this.canvas = null;\n    this.imageData = null;\n\n    if (typeof newHeight === \"undefined\") {\n      this.initialize(this.width * newWidth, this.height * newWidth, this.parameters);\n    } else {\n      this.initialize(newWidth, newHeight, this.parameters);\n    }\n\n    for (let i = 0; i < this.objects.length; i += 1) {\n      this.objects[i].resize(newWidth, newHeight, mode, true);\n    }\n\n    return this;\n  }\n\n  crop(startX: number, startY: number, width: number, height: number): Layer {\n    for (let i = 0; i < this.objects.length; i += 1) {\n      this.objects[i].crop(startX, startY, width, height);\n    }\n\n    return this;\n  }\n\n  moveXY(x: number, y: number): Layer {\n    this.moveX(x);\n    this.moveY(y);\n    return this;\n  }\n\n  moveX(x: number): Layer {\n    this.x += x | 0;\n    return this;\n  }\n\n  moveY(y: number): Layer {\n    this.y += y | 0;\n    return this;\n  }\n\n  setX(x: number): Layer {\n    this.x = x;\n    return this;\n  }\n\n  setY(y: number): Layer {\n    this.y = y;\n    return this;\n  }\n\n  setBlendingMode(blendingMode: string): Layer {\n    this.parameters.blendingMode = blendingMode;\n    return this;\n  }\n\n  getX(): number {\n    return this.x;\n  }\n\n  getY(): number {\n    return this.y;\n  }\n\n  getWidth(): number {\n    return this.width;\n  }\n\n  getHeight(): number {\n    return this.height;\n  }\n\n  getParameter(name: string): any {\n    return this.parameters[name];\n  }\n}\n\nexport default Layer;\n","import CanvasWrapper from \"./CanvasWrapper\";\nimport { cropImageData } from \"../helpers/common\";\nimport EffectsRepository from \"./EffectsRepository\";\nimport Layer from \"./Layer\";\nimport BaseEffect from \"./effects/Base\";\nimport BaseOnLayerObject from \"./BaseOnLayerObject\";\n\ninterface EffectType {\n  name: string;\n  effect: BaseEffect;\n  parameters: object;\n}\n\nclass LayerObject {\n  protected obj: BaseOnLayerObject = null;\n\n  protected layer: Layer = null;\n\n  protected x: number = 0;\n\n  protected y: number = 0;\n\n  protected opts: object = {};\n\n  protected effects: EffectType[] = [];\n\n  constructor(\n    obj: BaseOnLayerObject,\n    layer: Layer,\n    x: number,\n    y: number,\n    opts: object\n  ) {\n    this.obj = obj;\n    this.layer = layer;\n    this.x = x;\n    this.y = y;\n    this.opts = opts;\n  }\n\n  getObject(): BaseOnLayerObject {\n    return this.obj;\n  }\n\n  getX(): number {\n    return this.x;\n  }\n\n  getY(): number {\n    return this.y;\n  }\n\n  getWidth(): number {\n    return this.obj.getWidth();\n  }\n\n  getHeight(): number {\n    return this.obj.getHeight();\n  }\n\n  exportObject(): ImageData {\n    let imageData = this.obj.getImageData();\n    for (let i = 0; i < this.effects.length; i += 1) {\n      imageData = this.effects[i].effect.run(\n        imageData,\n        this.effects[i].parameters\n      );\n    }\n    return imageData;\n  }\n\n  applyEffect(name: string, parameters: object = {}): LayerObject {\n    this.effects.push({\n      name,\n      effect: new (EffectsRepository.get(name))(),\n      parameters,\n    });\n    return this;\n  }\n\n  moveXY(x: number, y: number): LayerObject {\n    this.moveX(x);\n    this.moveY(y);\n    return this;\n  }\n\n  moveX(x: number): LayerObject {\n    this.x += x | 0;\n    return this;\n  }\n\n  moveY(y: number): LayerObject {\n    this.y += y | 0;\n    return this;\n  }\n\n  setXY(x: number, y: number): LayerObject {\n    this.setX(x);\n    this.setY(y);\n    return this;\n  }\n\n  setX(x: number): LayerObject {\n    this.x = x;\n    return this;\n  }\n\n  setY(y: number): LayerObject {\n    this.y = y;\n    return this;\n  }\n\n  resize(\n    newWidth: number,\n    newHeight: number,\n    mode: string,\n    isLayerResize: boolean\n  ): LayerObject {\n    const oldWidth = this.getWidth(),\n      oldHeight = this.getHeight(),\n      ratioX = newWidth / oldWidth,\n      ratioY = newHeight / oldHeight;\n\n    if (isLayerResize) {\n      this.moveXY(-this.getX() * ratioX, -this.getY() * ratioY);\n    }\n\n    if (typeof newHeight === \"undefined\") {\n      this.getObject().resize(oldWidth * newWidth, oldHeight * newWidth, mode);\n    } else {\n      this.getObject().resize(newWidth, newHeight, mode);\n    }\n\n    return this;\n  }\n\n  crop(\n    startX: number,\n    startY: number,\n    width: number,\n    height: number\n  ): LayerObject {\n    const object = this.getObject(),\n      oldImageData = object.getImageData(),\n      canvas = new CanvasWrapper(width, height),\n      newImageData = canvas.getContext().createImageData(width, height),\n      result = cropImageData(\n        oldImageData,\n        newImageData,\n        startX,\n        startY,\n        width,\n        height\n      );\n\n    object.setImageData(result).setWidth(width).setHeight(height);\n\n    this.setXY(startX, startY);\n\n    return this;\n  }\n}\n\nexport default LayerObject;\n","import CanvasWrapper from \"./CanvasWrapper\";\nimport Layer from \"./Layer\";\nimport {\n  mergeImageData,\n  mergePixelCallback,\n  isBrowser,\n} from \"../helpers/common\";\nimport EffectsRepository from \"./EffectsRepository\";\nimport BaseEffect from \"./effects/Base\";\n\ninterface EffectType {\n  name: string;\n  effect: BaseEffect;\n  parameters: object;\n}\n\nclass Project {\n  protected imageData: ImageData = null;\n\n  protected effects: EffectType[] = [];\n\n  protected layers: Layer[] = [];\n\n  protected startTime: Date = new Date();\n\n  protected parameters: object = {};\n\n  protected width: number = 0;\n\n  protected height: number = 0;\n\n  protected canvas: CanvasWrapper = null;\n\n  constructor(width: number, height: number, parameters: object = {}) {\n    this.initialize(width, height, parameters);\n  }\n\n  initialize(width: number, height: number, parameters: object = {}): void {\n    this.parameters = parameters;\n    this.width = width;\n    this.height = height;\n    this.canvas = new CanvasWrapper(width, height);\n    this.imageData = this.canvas.getContext().getImageData(0, 0, width, height);\n  }\n\n  createLayer(\n    parameters: {\n      backgroundColor?: string;\n      blendingMode?: string;\n    } = { backgroundColor: \"\", blendingMode: \"\" }\n  ): Layer {\n    let layer = new Layer(this.width, this.height, parameters);\n    this.layers.push(layer);\n    return layer;\n  }\n\n  getTime(): number {\n    let end = new Date();\n    return end.getTime() - this.startTime.getTime();\n  }\n\n  save(path: string, imageType: string = \"image/png\"): void {\n    if (isBrowser()) {\n      throw new Error(\"Available only in node.js environment\");\n    }\n\n    for (let i = 0; i < this.layers.length; i++) {\n      this.imageData = mergeImageData(\n        {\n          width: this.width,\n          height: this.height,\n          imageData: this.imageData,\n        },\n        {\n          x: this.layers[i].getX(),\n          y: this.layers[i].getY(),\n          width: this.layers[i].getWidth(),\n          height: this.layers[i].getHeight(),\n          imageData: this.layers[i].exportLayer(),\n          blendingMode: this.layers[i].getParameter(\"blendingMode\"),\n        },\n        mergePixelCallback\n      );\n    }\n\n    for (let i = 0; i < this.effects.length; i++) {\n      this.imageData = this.effects[i].effect.run(\n        this.imageData,\n        this.effects[i].parameters\n      );\n    }\n\n    this.canvas.getContext().putImageData(this.imageData, 0, 0);\n\n    const fs = require(\"fs\"),\n      img = this.canvas.toDataURL(),\n      data = img.replace(/^data:image\\/\\w+;base64,/, \"\"),\n      buff = Buffer.from(data, \"base64\");\n\n    fs.writeFileSync(path, buff);\n  }\n\n  render(imageType: string = \"image/png\"): HTMLImageElement {\n    if (!isBrowser()) {\n      throw new Error(\"Available only in browser environment\");\n    }\n\n    const exportedImage = new window.Image();\n\n    for (let i = 0; i < this.layers.length; i++) {\n      this.imageData = mergeImageData(\n        {\n          width: this.width,\n          height: this.height,\n          imageData: this.imageData,\n        },\n        {\n          x: this.layers[i].getX(),\n          y: this.layers[i].getY(),\n          width: this.layers[i].getWidth(),\n          height: this.layers[i].getHeight(),\n          imageData: this.layers[i].exportLayer(),\n          blendingMode: this.layers[i].getParameter(\"blendingMode\"),\n        },\n        mergePixelCallback\n      );\n    }\n\n    for (let i = 0; i < this.effects.length; i++) {\n      this.imageData = this.effects[i].effect.run(\n        this.imageData,\n        this.effects[i].parameters\n      );\n    }\n\n    this.canvas.getContext().putImageData(this.imageData, 0, 0);\n\n    exportedImage.src = this.canvas.toDataURL(imageType);\n    return exportedImage;\n  }\n\n  applyEffect(name: string, parameters: object = {}): Project {\n    this.effects.push({\n      name,\n      effect: new (EffectsRepository.get(name))(),\n      parameters,\n    });\n    return this;\n  }\n\n  resize(newWidth: number, newHeight: number, mode: string = \"nearest-neighbour\"): Project {\n    this.canvas.destroy();\n    this.canvas = null;\n    this.imageData = null;\n\n    if (typeof newHeight === \"undefined\") {\n      this.initialize((this.width * newWidth) | 0, (this.height * newWidth) | 0)\n    } else {\n      this.initialize(newWidth, newHeight);\n    }\n\n    for (let i = 0; i < this.layers.length; i += 1) {\n      this.layers[i].resize(newWidth, newHeight, mode);\n    }\n\n    return this;\n  }\n}\n\nexport default Project;\n","class BaseEffect {\n  protected opts: object = {};\n\n  constructor(opts: object = {}) {\n    this.opts = opts;\n  }\n\n  getDefaultParameters(): object {\n    return {};\n  }\n\n  before(\n    parameters: object,\n    width: number,\n    height: number,\n    imageData: ImageData\n  ): object {\n    return {};\n  }\n\n  static getName(): string {\n    throw \"Extend it.\";\n  }\n\n  run(imageData: ImageData, parameters: object): ImageData {\n    return null;\n  }\n}\n\nexport default BaseEffect;\n","import BaseEffect from \"./Base\";\n\nclass BaseCustomEffect extends BaseEffect {\n  callback(width: number, height: number, parameters: object) {\n    throw \"Extend it.\";\n  }\n\n  run(imageData: ImageData, parameters: object): ImageData {\n    parameters = {\n      ...this.getDefaultParameters(),\n      ...parameters,\n    };\n\n    const imageDataCopy = new Uint8ClampedArray(imageData.data), // copy image data\n      /**\n       * Get ImageData array index from x and y position\n       * @param x\n       * @param y\n       * @returns {Number}\n       */\n      getIndex = function getIndex(x, y) {\n        return y * imageData.width * 4 + x * 4;\n      },\n      normalizePixelValue = function (value) {\n        return Math.min(Math.max(value, 0), 255) | 0;\n      },\n      sandbox = {\n        // object invoked as this in effect callback\n        /**\n         * Get changed pixel\n         * @param {int} x\n         * @param {int} y\n         * @returns {{r: *, g: *, b: *, a: *}}\n         */\n        getPixel: function (\n          x: number,\n          y: number\n        ): {\n          r: number;\n          g: number;\n          b: number;\n          a: number;\n        } {\n          const index = getIndex(x, y);\n          return {\n            r: imageDataCopy[index + 0],\n            g: imageDataCopy[index + 1],\n            b: imageDataCopy[index + 2],\n            a: imageDataCopy[index + 3],\n          };\n        },\n        /**\n         * Get pixel by its index\n         * @param index\n         */\n        getOriginalPixelByIndex: function (index: number): {\n          r: number;\n          g: number;\n          b: number;\n          a: number;\n        } {\n          index *= 4;\n          return {\n            r: imageData.data[index],\n            g: imageData.data[index + 1],\n            b: imageData.data[index + 2],\n            a: imageData.data[index + 3],\n          };\n        },\n        /**\n         * Get original pixel.\n         * @param {int} x\n         * @param {int} y\n         * @returns {{r: *, g: *, b: *, a: *}}\n         */\n        getOriginalPixel: function (\n          x: number,\n          y: number\n        ): {\n          r: number;\n          g: number;\n          b: number;\n          a: number;\n        } {\n          const index = getIndex(x, y);\n          return {\n            r: imageData.data[index + 0],\n            g: imageData.data[index + 1],\n            b: imageData.data[index + 2],\n            a: imageData.data[index + 3],\n          };\n        },\n        /**\n         * Set new pixel\n         * @param {int} x\n         * @param {int} y\n         * @param {Object} rgba\n         */\n        setPixel: function (\n          x: number,\n          y: number,\n          rgba: {\n            r: number;\n            g: number;\n            b: number;\n            a: number;\n          }\n        ): void {\n          const index = getIndex(x, y);\n          imageDataCopy[index + 0] = normalizePixelValue(rgba.r);\n          imageDataCopy[index + 1] = normalizePixelValue(rgba.g);\n          imageDataCopy[index + 2] = normalizePixelValue(rgba.b);\n          imageDataCopy[index + 3] = normalizePixelValue(rgba.a);\n        },\n        /**\n         * Set pixel by index.\n         * @param index\n         * @param rgba\n         */\n        setPixelByIndex: function (\n          index: number,\n          rgba: {\n            r: number;\n            g: number;\n            b: number;\n            a: number;\n          }\n        ) {\n          index *= 4;\n          imageDataCopy[index + 0] = normalizePixelValue(rgba.r);\n          imageDataCopy[index + 1] = normalizePixelValue(rgba.g);\n          imageDataCopy[index + 2] = normalizePixelValue(rgba.b);\n          imageDataCopy[index + 3] = normalizePixelValue(rgba.a);\n        },\n        /**\n         * Data created by effect init function\n         */\n        data: null,\n        /**\n         * ImageData width\n         */\n        width: imageData.width,\n        /**\n         * ImageData height\n         */\n        height: imageData.height,\n      };\n\n    sandbox.data = this.before.call(\n      sandbox,\n      parameters,\n      imageData.width,\n      imageData.height,\n      imageData\n    );\n\n    this.callback.call(sandbox, imageData.width, imageData.height, parameters);\n\n    imageData.data.set(imageDataCopy);\n\n    return imageData;\n  }\n}\n\nexport default BaseCustomEffect;\n","import BaseEffect from \"./Base\";\n\nclass BasePointEffect extends BaseEffect {\n  callback(\n    pixel: {\n      r: number;\n      g: number;\n      b: number;\n      a: number;\n    },\n    x: number,\n    y: number,\n    parameters: object,\n    width: number,\n    height: number\n  ) {\n    throw \"Extend it.\";\n  }\n\n  run(imageData: ImageData, parameters: object): ImageData {\n    parameters = parameters = {\n      ...this.getDefaultParameters(),\n      ...parameters,\n    };\n\n    let x, y, firstPixelIndex, result;\n    const imageDataCopy = new Uint8ClampedArray(imageData.data), // copy image data\n      /**\n       * Get ImageData array index from x and y position\n       * @param x\n       * @param y\n       * @returns {number}\n       */\n      getIndex = function getIndex(x: number, y: number): number {\n        return y * imageData.width * 4 + x * 4;\n      },\n      normalizePixelValue = function (value): number {\n        return Math.min(Math.max(value, 0), 255) | 0;\n      },\n      sandbox = {\n        // object invoked as this in effect callback\n        /**\n         * Get changed pixel\n         * @param {int} x\n         * @param {int} y\n         * @returns {{r: *, g: *, b: *, a: *}}\n         */\n        getPixel: function (\n          x: number,\n          y: number\n        ): {\n          r: number;\n          g: number;\n          b: number;\n          a: number;\n        } {\n          let index = getIndex(x, y);\n          return {\n            r: imageDataCopy[index + 0],\n            g: imageDataCopy[index + 1],\n            b: imageDataCopy[index + 2],\n            a: imageDataCopy[index + 3],\n          };\n        },\n        /**\n         * Get original pixel.\n         * @param {int} x\n         * @param {int} y\n         * @returns {{r: *, g: *, b: *, a: *}}\n         */\n        getOriginalPixel: function (\n          x: number,\n          y: number\n        ): {\n          r: number;\n          g: number;\n          b: number;\n          a: number;\n        } {\n          let index = getIndex(x, y);\n          return {\n            r: imageData.data[index + 0],\n            g: imageData.data[index + 1],\n            b: imageData.data[index + 2],\n            a: imageData.data[index + 3],\n          };\n        },\n        /**\n         * Set new pixel\n         * @param {int} x\n         * @param {int} y\n         * @param {object} rgba\n         */\n        setPixel: function (\n          x: number,\n          y: number,\n          rgba: {\n            r: number;\n            g: number;\n            b: number;\n            a: number;\n          }\n        ): void {\n          let index = getIndex(x, y);\n          imageDataCopy[index + 0] = normalizePixelValue(rgba.r);\n          imageDataCopy[index + 1] = normalizePixelValue(rgba.g);\n          imageDataCopy[index + 2] = normalizePixelValue(rgba.b);\n          imageDataCopy[index + 3] = normalizePixelValue(rgba.a);\n        },\n        /**\n         * Data created by effect init function\n         */\n        data: null,\n        /**\n         * ImageData width\n         */\n        width: imageData.width,\n        /**\n         * ImageData height\n         */\n        height: imageData.height,\n      };\n\n    sandbox.data = this.before.call(\n      sandbox,\n      parameters,\n      imageData.width,\n      imageData.height,\n      imageData\n    );\n\n    for (y = 0; y < imageData.height; y += 1) {\n      for (x = 0; x < imageData.width; x += 1) {\n        firstPixelIndex = getIndex(x, y);\n\n        result = this.callback.call(\n          sandbox,\n          {\n            r: imageDataCopy[firstPixelIndex + 0],\n            g: imageDataCopy[firstPixelIndex + 1],\n            b: imageDataCopy[firstPixelIndex + 2],\n            a: imageDataCopy[firstPixelIndex + 3],\n          },\n          x,\n          y,\n          parameters,\n          imageData.width,\n          imageData.height\n        );\n\n        if (typeof result === \"object\") {\n          imageDataCopy[firstPixelIndex + 0] = normalizePixelValue(result.r);\n          imageDataCopy[firstPixelIndex + 1] = normalizePixelValue(result.g);\n          imageDataCopy[firstPixelIndex + 2] = normalizePixelValue(result.b);\n          imageDataCopy[firstPixelIndex + 3] = normalizePixelValue(result.a);\n        }\n      }\n    }\n\n    imageData.data.set(imageDataCopy);\n    return imageData;\n  }\n}\n\nexport default BasePointEffect;\n","import BaseEffect from \"./Base\";\n\nclass BaseTransformEffect extends BaseEffect {\n  callback(\n    x: number,\n    y: number,\n    parameters: object,\n    width: number,\n    height: number\n  ): Array<number> {\n    throw \"Extend it.\";\n  }\n\n  run(imageData: ImageData, parameters: object): ImageData {\n    parameters = {\n      ...this.getDefaultParameters(),\n      ...parameters,\n    };\n\n    let x, y;\n    const normalizePixelValue = function (value: number): number {\n        return Math.min(Math.max(value, 0), 255) | 0;\n      },\n      sandbox = {\n        data: null,\n      },\n      imageDataCopy = new Uint8ClampedArray(imageData.data);\n\n    sandbox.data = this.before.call(\n      sandbox,\n      parameters,\n      imageData.width,\n      imageData.height,\n      imageData\n    );\n\n    for (y = 0; y < imageData.height; y += 1) {\n      for (x = 0; x < imageData.width; x += 1) {\n        const newXY = this.callback.call(\n            sandbox,\n            x,\n            y,\n            parameters,\n            imageData.width,\n            imageData.height\n          ),\n          newX = normalizePixelValue(newXY[0]),\n          newY = normalizePixelValue(newXY[1]),\n          oldPixelIndex = y * imageData.width * 4 + x * 4,\n          newPixelIndex = newY * imageData.width * 4 + newX * 4;\n\n        imageDataCopy[oldPixelIndex + 0] = imageData.data[newPixelIndex + 0];\n        imageDataCopy[oldPixelIndex + 1] = imageData.data[newPixelIndex + 1];\n        imageDataCopy[oldPixelIndex + 2] = imageData.data[newPixelIndex + 2];\n        imageDataCopy[oldPixelIndex + 3] = imageData.data[newPixelIndex + 3];\n      }\n    }\n\n    imageData.data.set(imageDataCopy);\n    return imageData;\n  }\n}\n\nexport default BaseTransformEffect;\n","import BaseCustomEffect from \"../BaseCustom\";\nimport { RGBtoCIELab, CIELabToRGB } from \"../../../helpers/color\";\n\nexport interface AutoWhiteBalanceParameters {\n  intensity: number;\n}\n\nclass AutoWhiteBalanceEffect extends BaseCustomEffect {\n  static getName(): string {\n    return \"auto-white-balance\";\n  }\n\n  getDefaultParameters(): AutoWhiteBalanceParameters {\n    return {\n      intensity: 50,\n    };\n  }\n\n  callback(\n    width: number,\n    height: number,\n    parameters: AutoWhiteBalanceParameters\n  ) {\n    let sumA = 0,\n      sumB = 0,\n      pixel,\n      lab,\n      avgSumA,\n      avgSumB,\n      aDelta,\n      bDelta;\n\n    for (let y = 0; y < height; y += 1) {\n      for (let x = 0; x < width; x += 1) {\n        pixel = this.getPixel(x, y);\n        lab = RGBtoCIELab(pixel.r, pixel.g, pixel.b);\n        sumA += lab.a;\n        sumB += lab.b;\n      }\n    }\n\n    avgSumA = 0 - sumA / (width * height);\n    avgSumB = 0 - sumB / (width * height);\n\n    aDelta = avgSumA * (parameters.intensity / 100) * 1.1;\n    bDelta = avgSumB * (parameters.intensity / 100) * 1.1;\n\n    for (let y = 0; y < height; y += 1) {\n      for (let x = 0; x < width; x += 1) {\n        pixel = this.getPixel(x, y);\n\n        lab = RGBtoCIELab(pixel.r, pixel.g, pixel.b);\n\n        lab.a += aDelta;\n        lab.b += bDelta;\n\n        pixel = CIELabToRGB(lab.l, lab.a, lab.b);\n        pixel.a = this.getPixel(x, y).a;\n\n        this.setPixel(x, y, pixel);\n      }\n    }\n  }\n}\n\nexport default AutoWhiteBalanceEffect;\n","import BaseCustomEffect from \"../BaseCustom\";\n\nexport interface BlockParameters {\n  blockSize: number;\n}\n\nclass BlockEffect extends BaseCustomEffect {\n  static getName(): string {\n    return \"block\";\n  }\n\n  getDefaultParameters(): BlockParameters {\n    return {\n      blockSize: 5,\n    };\n  }\n\n  callback(width: number, height: number, parameters: BlockParameters) {\n    let w, h, t, r, g, b, pixel;\n\n    for (let y = 0; y < height; y += parameters.blockSize) {\n      for (let x = 0; x < width; x += parameters.blockSize) {\n        w = Math.min(parameters.blockSize, width - x);\n        h = Math.min(parameters.blockSize, height - y);\n        t = w * h;\n\n        r = 0;\n        g = 0;\n        b = 0;\n\n        for (let by = 0; by < h; by += 1) {\n          for (let bx = 0; bx < w; bx += 1) {\n            pixel = this.getOriginalPixel(x + bx, y + by);\n\n            r += pixel.r & 0xff;\n            g += pixel.g & 0xff;\n            b += pixel.b & 0xff;\n          }\n        }\n\n        r = r / t;\n        g = g / t;\n        b = b / t;\n\n        for (let by = 0; by < h; by += 1) {\n          for (let bx = 0; bx < w; bx += 1) {\n            this.setPixel(x + bx, y + by, {\n              r: r,\n              g: g,\n              b: b,\n              a: 255,\n            });\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default BlockEffect;\n","import BaseCustomEffect from \"../BaseCustom\";\n\nexport interface BorderParameters {\n  leftBorder: number;\n  rightBorder: number;\n  topBorder: number;\n  bottomBorder: number;\n  borderColor?: {\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n  };\n}\n\nclass BorderEffect extends BaseCustomEffect {\n  static getName(): string {\n    return \"border\";\n  }\n\n  data = {\n    leftBorder: 0,\n    rightBorder: 0,\n    topBorder: 0,\n    bottomBorder: 0,\n    borderColor: {\n      r: 0,\n      g: 0,\n      b: 0,\n      a: 255,\n    },\n  };\n\n  getDefaultParameters(): BorderParameters {\n    return {\n      leftBorder: 10,\n      rightBorder: 10,\n      topBorder: 10,\n      bottomBorder: 10,\n      borderColor: {\n        r: 0,\n        g: 0,\n        b: 0,\n        a: 255,\n      },\n    };\n  }\n\n  before(\n    parameters: BorderParameters,\n    width: number,\n    height: number,\n    imageData: ImageData\n  ): BorderParameters {\n    return {\n      leftBorder: parameters.leftBorder | 0,\n      rightBorder: parameters.rightBorder | 0,\n      topBorder: parameters.topBorder | 0,\n      bottomBorder: parameters.bottomBorder | 0,\n    };\n  }\n\n  callback(width, height, parameters) {\n    for (let y = 0; y < height; y += 1) {\n      for (let x = 0; x < width; x += 1) {\n        if (this.data.leftBorder > 0 && x < this.data.leftBorder) {\n          this.setPixel(x, y, parameters.borderColor);\n        }\n        if (this.data.rightBorder > 0 && width - this.data.rightBorder < x) {\n          this.setPixel(x, y, parameters.borderColor);\n        }\n        if (this.data.topBorder > 0 && y < this.data.topBorder) {\n          this.setPixel(x, y, parameters.borderColor);\n        }\n        if (this.data.bottomBorder > 0 && height - this.data.bottomBorder < y) {\n          this.setPixel(x, y, parameters.borderColor);\n        }\n      }\n    }\n  }\n}\n\nexport default BorderEffect;\n","import BaseCustomEffect from \"../BaseCustom\";\n\nclass ComponentStretchingEffect extends BaseCustomEffect {\n  static getName(): string {\n    return \"component-stretching\";\n  }\n\n  callback(width: number, height: number, parameters: object) {\n    let minR = Infinity,\n      minG = Infinity,\n      minB = Infinity,\n      maxR = -1,\n      maxG = -1,\n      maxB = -1,\n      pixel;\n\n    const remap = function remap(value, min, max) {\n      return ((value - min) * 255) / (max - min);\n    };\n\n    for (let y = 0; y < height; y += 1) {\n      for (let x = 0; x < width; x += 1) {\n        pixel = this.getPixel(x, y);\n\n        minR = Math.min(pixel.r, minR);\n        minG = Math.min(pixel.g, minG);\n        minB = Math.min(pixel.b, minB);\n\n        maxR = Math.max(pixel.r, maxR);\n        maxG = Math.max(pixel.g, maxG);\n        maxB = Math.max(pixel.b, maxB);\n      }\n    }\n\n    for (let y = 0; y < height; y += 1) {\n      for (let x = 0; x < width; x += 1) {\n        pixel = this.getPixel(x, y);\n\n        pixel.r = remap(pixel.r, minR, maxR);\n        pixel.g = remap(pixel.g, minG, maxG);\n        pixel.b = remap(pixel.b, minB, maxB);\n\n        this.setPixel(x, y, pixel);\n      }\n    }\n  }\n}\n\nexport default ComponentStretchingEffect;\n","import BaseCustomEffect from \"../BaseCustom\";\nimport { brightness } from \"../../../helpers/common\";\n\nexport interface EmbossParameters {\n  azimuth: number;\n  elevation: number;\n  width45: number;\n  emboss: boolean;\n}\n\nclass EmbossEffect extends BaseCustomEffect {\n  static getName(): string {\n    return \"emboss\";\n  }\n\n  getDefaultParameters(): EmbossParameters {\n    return {\n      azimuth: (135 * Math.PI) / 180,\n      elevation: (30 * Math.PI) / 180,\n      width45: 3,\n      emboss: true,\n    };\n  }\n\n  callback(width: number, height: number, parameters: EmbossParameters) {\n    let bumpMapWidth = width,\n      bumpPixels = [],\n      Nx,\n      Ny,\n      Nz,\n      Lx,\n      Ly,\n      Lz,\n      Nz2,\n      NzLz,\n      NdotL,\n      s1,\n      s2,\n      s3,\n      shade,\n      background,\n      pixelScale = 255.9,\n      bumpIndex = 0,\n      index = 0,\n      pixel,\n      r,\n      g,\n      b;\n\n    Lx =\n      (Math.cos(parameters.azimuth) *\n        Math.cos(parameters.elevation) *\n        pixelScale) |\n      0;\n    Ly =\n      (Math.sin(parameters.azimuth) *\n        Math.cos(parameters.elevation) *\n        pixelScale) |\n      0;\n    Lz = (Math.sin(parameters.elevation) * pixelScale) | 0;\n\n    Nz = ((6 * 255) / parameters.width45) | 0;\n    Nz2 = Nz * Nz;\n    NzLz = Nz * Lz;\n\n    background = Lz;\n\n    for (let y = 0; y < height; y += 1) {\n      for (let x = 0; x < width; x += 1) {\n        bumpPixels.push(brightness(this.getOriginalPixel(x, y)) | 0);\n      }\n    }\n\n    for (let y = 0; y < height; y += 1, bumpIndex += bumpMapWidth) {\n      s1 = bumpIndex;\n      s2 = s1 + bumpMapWidth;\n      s3 = s2 + bumpMapWidth;\n\n      for (let x = 0; x < width; x += 1, s1 += 1, s2 += 1, s3 += 1) {\n        if (y != 0 && y < height - 2 && x != 0 && x < width - 2) {\n          Nx =\n            bumpPixels[s1 - 1] +\n            bumpPixels[s2 - 1] +\n            bumpPixels[s3 - 1] -\n            bumpPixels[s1 + 1] -\n            bumpPixels[s2 + 1] -\n            bumpPixels[s3 + 1];\n          Ny =\n            bumpPixels[s3 - 1] +\n            bumpPixels[s3] +\n            bumpPixels[s3 + 1] -\n            bumpPixels[s1 - 1] -\n            bumpPixels[s1] -\n            bumpPixels[s1 + 1];\n\n          if (Nx == 0 && Ny == 0) {\n            shade = background;\n          } else {\n            if ((NdotL = Nx * Lx + Ny * Ly + NzLz) < 0) {\n              shade = 0;\n            } else {\n              shade = NdotL / Math.sqrt(Nx * Nx + Ny * Ny + Nz2);\n            }\n          }\n        } else {\n          shade = background;\n        }\n\n        if (parameters.emboss) {\n          pixel = this.getOriginalPixelByIndex(index);\n          r = (pixel.r * shade) >> 8;\n          g = (pixel.g * shade) >> 8;\n          b = (pixel.b * shade) >> 8;\n          this.setPixelByIndex(index++, {\n            r: r,\n            g: g,\n            b: b,\n            a: pixel.a,\n          });\n        } else {\n          this.setPixelByIndex(index++, {\n            r: shade,\n            g: shade << 8,\n            b: shade << 16,\n            a: 255,\n          });\n        }\n      }\n    }\n  }\n}\n\nexport default EmbossEffect;\n","import BaseCustomEffect from \"../BaseCustom\";\nimport { hexToRGB } from \"../../../helpers/color\";\n\nexport interface FillColorParameters {\n  color: string;\n}\n\nclass FillColorEffect extends BaseCustomEffect {\n  static getName(): string {\n    return \"fill-color\";\n  }\n\n  getDefaultParameters(): FillColorParameters {\n    return {\n      color: \"transparent\",\n    };\n  }\n\n  callback(width: number, height: number, parameters: FillColorParameters) {\n    let color;\n\n    if (parameters.color === \"transparent\") {\n      color = {\n        r: 0,\n        g: 0,\n        b: 0,\n        a: 0,\n      };\n    } else {\n      color = hexToRGB(parameters.color);\n      color.a = 255;\n    }\n\n    for (let y = 0; y < height; y += 1) {\n      for (let x = 0; x < width; x += 1) {\n        this.setPixel(x, y, color);\n      }\n    }\n  }\n}\n\nexport default FillColorEffect;\n","import BaseCustomEffect from \"../BaseCustom\";\n\nexport interface FlipParameters {\n  operation: string;\n}\n\nclass FlipEffect extends BaseCustomEffect {\n  static getName(): string {\n    return \"flip\";\n  }\n\n  getDefaultParameters() {\n    return {\n      operation: \"FLIP_H\", // FLIP_H, FLIP_V, FLIP_HV, FLIP_90CW, FLIP_90CCW, FLIP_180\n    };\n  }\n\n  callback(width: number, height: number, parameters: FlipParameters) {\n    let x = 0,\n      y = 0,\n      w = width,\n      h = height,\n      newX = 0,\n      newY = 0,\n      newW = w,\n      newH = h,\n      newRow,\n      newCol;\n\n    switch (parameters.operation) {\n      case \"FLIP_H\":\n        newX = width - (x + w);\n        break;\n      case \"FLIP_V\":\n        newY = height - (y + h);\n        break;\n      case \"FLIP_HV\":\n        newW = h;\n        newH = w;\n        newX = y;\n        newY = x;\n        break;\n      case \"FLIP_90CW\":\n        newW = h;\n        newH = w;\n        newX = height - (y + h);\n        newY = x;\n        break;\n      case \"FLIP_90CCW\":\n        newW = h;\n        newH = w;\n        newX = y;\n        newY = width - (x + w);\n        break;\n      case \"FLIP_180\":\n        newX = width - (x + w);\n        newY = height - (y + h);\n        break;\n    }\n\n    for (y = 0; y < height; y += 1) {\n      for (x = 0; x < width; x += 1) {\n        newRow = y;\n        newCol = x;\n\n        switch (parameters.operation) {\n          case \"FLIP_H\":\n            newCol = w - x - 1;\n            break;\n          case \"FLIP_V\":\n            newRow = h - y - 1;\n            break;\n          case \"FLIP_HV\":\n            newRow = x;\n            newCol = y;\n            break;\n          case \"FLIP_90CW\":\n            newRow = x;\n            newCol = h - y - 1;\n            break;\n          case \"FLIP_90CCW\":\n            newRow = w - x - 1;\n            newCol = y;\n            break;\n          case \"FLIP_180\":\n            newRow = h - y - 1;\n            newCol = w - x - 1;\n            break;\n        }\n\n        this.setPixel(newCol, newRow, this.getOriginalPixel(x, y));\n      }\n    }\n  }\n}\n\nexport default FlipEffect;\n","import BasePointEffect from \"../BasePoint\";\n\ninterface BeforeData {\n  remap: (value: number) => number;\n  min: number;\n  max: number;\n}\n\nclass AutoContrastEffect extends BasePointEffect {\n  static getName(): string {\n    return \"auto-contrast\";\n  }\n\n  data: BeforeData = {\n    remap: (value: number): number => 0,\n    min: 0,\n    max: 0,\n  };\n\n  before(parameters: object, width: number, height: number): BeforeData {\n    let min = Infinity,\n      max = -1;\n\n    for (let y = 0; y < height; y += 1) {\n      for (let x = 0; x < width; x += 1) {\n        const pixel = this.getPixel(x, y);\n\n        min = Math.min((pixel.r + pixel.g + pixel.b) / 3, min);\n        max = Math.max((pixel.r + pixel.g + pixel.b) / 3, max);\n      }\n    }\n\n    return {\n      min: min,\n      max: max,\n      remap: function (value: number): number {\n        return ((value - min) * 255) / (max - min);\n      },\n    };\n  }\n\n  callback(\n    pixel: {\n      r: number;\n      g: number;\n      b: number;\n      a: number;\n    },\n    x: number,\n    y: number,\n    parameters: object,\n    width: number,\n    height: number\n  ): {\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n  } {\n    pixel.r = this.data.remap(pixel.r);\n    pixel.g = this.data.remap(pixel.g);\n    pixel.b = this.data.remap(pixel.b);\n\n    return pixel;\n  }\n}\n\nexport default AutoContrastEffect;\n","import BasePointEffect from \"../BasePoint\";\n\ninterface BeforeData {\n  brightness: number;\n}\n\nexport interface BrightnessParameters {\n  brightness: number;\n}\n\nclass BrightnessEffect extends BasePointEffect {\n  static getName(): string {\n    return \"brightness\";\n  }\n\n  data: BeforeData = {\n    brightness: 0,\n  };\n\n  getDefaultParameters(): BrightnessParameters {\n    return {\n      brightness: 0.5,\n    };\n  }\n\n  before(parameters: BrightnessParameters): BeforeData {\n    return {\n      brightness: 255 * parameters.brightness,\n    };\n  }\n\n  callback(\n    pixel: {\n      r: number;\n      g: number;\n      b: number;\n      a: number;\n    },\n    x: number,\n    y: number,\n    parameters: object,\n    width: number,\n    height: number\n  ): {\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n  } {\n    pixel.r = pixel.r + this.data.brightness;\n    pixel.g = pixel.g + this.data.brightness;\n    pixel.b = pixel.b + this.data.brightness;\n\n    return pixel;\n  }\n}\n\nexport default BrightnessEffect;\n","import BasePointEffect from \"../BasePoint\";\n\nexport interface ChannelMixParameters {\n  blueGreen: number;\n  redBlue: number;\n  greenRed: number;\n  intoR: number;\n  intoG: number;\n  intoB: number;\n}\n\nclass ChannelMixEffect extends BasePointEffect {\n  static getName(): string {\n    return \"channel-mix\";\n  }\n\n  getDefaultParameters(): ChannelMixParameters {\n    return {\n      blueGreen: 1,\n      redBlue: 1,\n      greenRed: 1,\n      intoR: 1,\n      intoG: 1,\n      intoB: 1,\n    };\n  }\n\n  callback(\n    pixel: {\n      r: number;\n      g: number;\n      b: number;\n      a: number;\n    },\n    x: number,\n    y: number,\n    parameters: ChannelMixParameters,\n    width: number,\n    height: number\n  ): {\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n  } {\n    const { r, g, b } = pixel;\n\n    return {\n      r:\n        ((parameters.intoR *\n          (parameters.blueGreen * g + (255 - parameters.blueGreen) * b)) /\n          255 +\n          (255 - parameters.intoR) * r) /\n        255,\n      g:\n        ((parameters.intoG *\n          (parameters.redBlue * g + (255 - parameters.redBlue) * r)) /\n          255 +\n          (255 - parameters.intoG) * g) /\n        255,\n      b:\n        ((parameters.intoB *\n          (parameters.greenRed * g + (255 - parameters.greenRed) * g)) /\n          255 +\n          (255 - parameters.intoB) * b) /\n        255,\n      a: pixel.a,\n    };\n  }\n}\n\nexport default ChannelMixEffect;\n","import BasePointEffect from \"../BasePoint\";\n\ninterface BeforeData {\n  factor: number;\n}\n\nexport interface ContrastParameters {\n  contrast: number;\n}\n\nclass ContrastEffect extends BasePointEffect {\n  static getName(): string {\n    return \"contrast\";\n  }\n\n  data: BeforeData = {\n    factor: 1,\n  };\n\n  getDefaultParameters(): ContrastParameters {\n    return {\n      contrast: 0.5,\n    };\n  }\n\n  before(parameters: ContrastParameters): BeforeData {\n    return {\n      factor:\n        (259 * (parameters.contrast * 255 + 255)) /\n        (255 * (259 - parameters.contrast * 255)),\n    };\n  }\n\n  callback(\n    pixel: {\n      r: number;\n      g: number;\n      b: number;\n      a: number;\n    },\n    x: number,\n    y: number,\n    parameters: ContrastParameters,\n    width: number,\n    height: number\n  ): {\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n  } {\n    pixel.r = this.data.factor * (pixel.r - 128) + 128;\n    pixel.g = this.data.factor * (pixel.g - 128) + 128;\n    pixel.b = this.data.factor * (pixel.b - 128) + 128;\n\n    return pixel;\n  }\n}\n\nexport default ContrastEffect;\n","import BasePointEffect from \"../BasePoint\";\n\nexport interface DiffusionParameters {\n  matrix: Array<number>;\n  levels: number;\n  colorDither: boolean;\n  granulate: boolean;\n}\n\ninterface BeforeData {\n  map: object;\n  div: object;\n  sum: number;\n}\n\nclass DiffusionEffect extends BasePointEffect {\n  static getName(): string {\n    return \"diffusion\";\n  }\n\n  data: BeforeData = {\n    map: {},\n    div: {},\n    sum: 0,\n  };\n\n  getDefaultParameters(): DiffusionParameters {\n    return {\n      matrix: [0, 0, 0, 0, 0, 7, 3, 5, 1],\n      levels: 6,\n      colorDither: true,\n      granulate: true,\n    };\n  }\n\n  before(\n    parameters: DiffusionParameters,\n    width: number,\n    height: number,\n    imageData: ImageData\n  ): BeforeData {\n    let sum = 0;\n    const map = [],\n      div = [];\n\n    for (let i = 0; i < parameters.matrix.length; i += 1) {\n      sum += parameters.matrix[i];\n    }\n\n    for (let i = 0; i < parameters.levels; i += 1) {\n      map[i] = ((255 * i) / (parameters.levels - 1)) | 0;\n    }\n\n    for (let i = 0; i < 256; i += 1) {\n      div[i] = ((parameters.levels * i) / 256) | 0;\n    }\n\n    return {\n      sum: sum,\n      map: map,\n      div: div,\n    };\n  }\n\n  callback(\n    pixel: {\n      r: number;\n      g: number;\n      b: number;\n      a: number;\n    },\n    x: number,\n    y: number,\n    parameters: DiffusionParameters,\n    width: number,\n    height: number\n  ): {\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n  } {\n    let red1 = pixel.r,\n      green1 = pixel.g,\n      blue1 = pixel.b,\n      red2,\n      green2,\n      blue2,\n      data = this.data,\n      tmpPixel,\n      tmpRed,\n      tmpGreen,\n      tmpBlue,\n      iy,\n      jx,\n      w,\n      grayScale;\n\n    if (!parameters.colorDither) {\n      grayScale = (red1 + green1 + blue1) / 3;\n      red1 = grayScale;\n      green1 = grayScale;\n      blue1 = grayScale;\n    }\n\n    red2 = data.map[data.div[red1]];\n    green2 = data.map[data.div[green1]];\n    blue2 = data.map[data.div[blue1]];\n\n    tmpRed = red1 - red2;\n    tmpGreen = green1 - green2;\n    tmpBlue = blue1 - blue2;\n\n    if (parameters.granulate) {\n      for (let i = -1; i <= 1; i += 1) {\n        iy = i + y;\n        if (iy < 0 || iy >= height) {\n          continue;\n        }\n        for (let j = -1; j <= 1; j += 1) {\n          jx = j + x;\n          if (jx < 0 || jx >= width) {\n            continue;\n          }\n          w = parameters.matrix[(i + 1) * 3 + j + 1];\n          if (w !== 0) {\n            tmpPixel = this.getPixel(jx, iy);\n            tmpPixel.r += (tmpRed * w) / data.sum;\n            tmpPixel.g += (tmpGreen * w) / data.sum;\n            tmpPixel.b += (tmpBlue * w) / data.sum;\n            this.setPixel(jx, iy, tmpPixel);\n          }\n        }\n      }\n    }\n\n    return {\n      r: red2,\n      g: green2,\n      b: blue2,\n      a: pixel.a,\n    };\n  }\n}\n\nexport default DiffusionEffect;\n","import BasePointEffect from \"../BasePoint\";\nimport { smoothStep } from \"../../../helpers/common\";\n\nexport interface DissolveParameters {\n  density: number;\n  softness: number;\n}\n\ninterface BeforeData {\n  minDensity: number;\n  maxDensity: number;\n}\n\nclass DissolveEffect extends BasePointEffect {\n  static getName(): string {\n    return \"dissolve\";\n  }\n\n  data: BeforeData = {\n    minDensity: 0,\n    maxDensity: 0,\n  };\n\n  getDefaultParameters(): DissolveParameters {\n    return {\n      density: 1,\n      softness: 0,\n    };\n  }\n\n  before(\n    parameters: DissolveParameters,\n    width: number,\n    height: number,\n    imageData: ImageData\n  ): BeforeData {\n    const d = (1 - parameters.density) * (1 + parameters.softness);\n    return {\n      minDensity: d - parameters.softness,\n      maxDensity: d,\n    };\n  }\n\n  callback(\n    pixel: {\n      r: number;\n      g: number;\n      b: number;\n      a: number;\n    },\n    x: number,\n    y: number,\n    parameters: DissolveParameters,\n    width: number,\n    height: number\n  ): {\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n  } {\n    const v = Math.random(),\n      f = smoothStep(this.data.minDensity, this.data.maxDensity, v);\n    pixel.a = pixel.a * f;\n    return pixel;\n  }\n}\n\nexport default DissolveEffect;\n","import BasePointEffect from \"../BasePoint\";\n\ninterface BeforeData {\n  cols: number;\n  rows: number;\n  map: object;\n  mod: object;\n  div: object;\n}\n\nexport interface DitherParameters {\n  matrices: {\n    ditherMagic4x4Matrix: Array<number>;\n    ditherOrdered4x4Matrix: Array<number>;\n    ditherLines4x4Matrix: Array<number>;\n    dither90Halftone6x6Matrix: Array<number>;\n    ditherOrdered6x6Matrix: Array<number>;\n    ditherOrdered8x8Matrix: Array<number>;\n    ditherCluster3Matrix: Array<number>;\n    ditherCluster4Matrix: Array<number>;\n    ditherCluster8Matrix: Array<number>;\n  };\n  levels: number;\n  matrix: string | Array<number>;\n  colorDither: boolean;\n}\n\nclass DitherEffect extends BasePointEffect {\n  static getName(): string {\n    return \"dither\";\n  }\n\n  data: BeforeData = {\n    cols: 0,\n    rows: 0,\n    map: {},\n    mod: {},\n    div: {},\n  };\n\n  getDefaultParameters(): DitherParameters {\n    return {\n      matrices: {\n        ditherMagic4x4Matrix: [\n          0, 14, 3, 13, 11, 5, 8, 6, 12, 2, 15, 1, 7, 9, 4, 10,\n        ],\n        ditherOrdered4x4Matrix: [\n          0, 8, 2, 10, 12, 4, 14, 6, 3, 11, 1, 9, 15, 7, 13, 5,\n        ],\n        ditherLines4x4Matrix: [\n          0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n        ],\n        dither90Halftone6x6Matrix: [\n          29, 18, 12, 19, 30, 34, 17, 7, 4, 8, 20, 28, 11, 3, 0, 1, 9, 27, 16,\n          6, 2, 5, 13, 26, 25, 15, 10, 14, 21, 31, 33, 25, 24, 23, 33, 36,\n        ],\n        ditherOrdered6x6Matrix: [\n          1, 59, 15, 55, 2, 56, 12, 52, 33, 17, 47, 31, 34, 18, 44, 28, 9, 49,\n          5, 63, 10, 50, 6, 60, 41, 25, 37, 21, 42, 26, 38, 22, 3, 57, 13, 53,\n          0, 58, 14, 54, 35, 19, 45, 29, 32, 16, 46, 30, 11, 51, 7, 61, 8, 48,\n          4, 62, 43, 27, 39, 23, 40, 24, 36, 20,\n        ],\n        ditherOrdered8x8Matrix: [\n          1, 235, 59, 219, 15, 231, 55, 215, 2, 232, 56, 216, 12, 228, 52, 212,\n          129, 65, 187, 123, 143, 79, 183, 119, 130, 66, 184, 120, 140, 76, 180,\n          116, 33, 193, 17, 251, 47, 207, 31, 247, 34, 194, 18, 248, 44, 204,\n          28, 244, 161, 97, 145, 81, 175, 111, 159, 95, 162, 98, 146, 82, 172,\n          108, 156, 92, 9, 225, 49, 209, 5, 239, 63, 223, 10, 226, 50, 210, 6,\n          236, 60, 220, 137, 73, 177, 113, 133, 69, 191, 127, 138, 74, 178, 114,\n          134, 70, 188, 124, 41, 201, 25, 241, 37, 197, 21, 255, 42, 202, 26,\n          242, 38, 198, 22, 252, 169, 105, 153, 89, 165, 101, 149, 85, 170, 106,\n          154, 90, 166, 102, 150, 86, 3, 233, 57, 217, 13, 229, 53, 213, 0, 234,\n          58, 218, 14, 230, 54, 214, 131, 67, 185, 121, 141, 77, 181, 117, 128,\n          64, 186, 122, 142, 78, 182, 118, 35, 195, 19, 249, 45, 205, 29, 245,\n          32, 192, 16, 250, 46, 206, 30, 246, 163, 99, 147, 83, 173, 109, 157,\n          93, 160, 96, 144, 80, 174, 110, 158, 94, 11, 227, 51, 211, 7, 237, 61,\n          221, 8, 224, 48, 208, 4, 238, 62, 222, 139, 75, 179, 115, 135, 71,\n          189, 125, 136, 72, 176, 112, 132, 68, 190, 126, 43, 203, 27, 243, 39,\n          199, 23, 253, 40, 200, 24, 240, 36, 196, 20, 254, 171, 107, 155, 91,\n          167, 103, 151, 87, 168, 104, 152, 88, 164, 100, 148, 84,\n        ],\n        ditherCluster3Matrix: [\n          9, 11, 10, 8, 6, 7, 12, 17, 16, 5, 0, 1, 13, 14, 15, 4, 3, 2, 8, 6, 7,\n          9, 11, 10, 5, 0, 1, 12, 17, 16, 4, 3, 2, 13, 14, 15,\n        ],\n        ditherCluster4Matrix: [\n          18, 20, 19, 16, 13, 11, 12, 15, 27, 28, 29, 22, 4, 3, 2, 9, 26, 31,\n          30, 21, 5, 0, 1, 10, 23, 25, 24, 17, 8, 6, 7, 14, 13, 11, 12, 15, 18,\n          20, 19, 16, 4, 3, 2, 9, 27, 28, 29, 22, 5, 0, 1, 10, 26, 31, 30, 21,\n          8, 6, 7, 14, 23, 25, 24, 17,\n        ],\n        ditherCluster8Matrix: [\n          64, 69, 77, 87, 86, 76, 68, 67, 63, 58, 50, 40, 41, 51, 59, 60, 70,\n          94, 100, 109, 108, 99, 93, 75, 57, 33, 27, 18, 19, 28, 34, 52, 78,\n          101, 114, 116, 115, 112, 98, 83, 49, 26, 13, 11, 12, 15, 29, 44, 88,\n          110, 123, 124, 125, 118, 107, 85, 39, 17, 4, 3, 2, 9, 20, 42, 89, 111,\n          122, 127, 126, 117, 106, 84, 38, 16, 5, 0, 1, 10, 21, 43, 79, 102,\n          119, 121, 120, 113, 97, 82, 48, 25, 8, 6, 7, 14, 30, 45, 71, 95, 103,\n          104, 105, 96, 92, 74, 56, 32, 24, 23, 22, 31, 35, 53, 65, 72, 80, 90,\n          91, 81, 73, 66, 62, 55, 47, 37, 36, 46, 54, 61, 63, 58, 50, 40, 41,\n          51, 59, 60, 64, 69, 77, 87, 86, 76, 68, 67, 57, 33, 27, 18, 19, 28,\n          34, 52, 70, 94, 100, 109, 108, 99, 93, 75, 49, 26, 13, 11, 12, 15, 29,\n          44, 78, 101, 114, 116, 115, 112, 98, 83, 39, 17, 4, 3, 2, 9, 20, 42,\n          88, 110, 123, 124, 125, 118, 107, 85, 38, 16, 5, 0, 1, 10, 21, 43, 89,\n          111, 122, 127, 126, 117, 106, 84, 48, 25, 8, 6, 7, 14, 30, 45, 79,\n          102, 119, 121, 120, 113, 97, 82, 56, 32, 24, 23, 22, 31, 35, 53, 71,\n          95, 103, 104, 105, 96, 92, 74, 62, 55, 47, 37, 36, 46, 54, 61, 65, 72,\n          80, 90, 91, 81, 73, 66,\n        ],\n      },\n      levels: 6,\n      matrix: \"ditherMagic4x4Matrix\",\n      colorDither: true,\n    };\n  }\n\n  before(\n    parameters: DitherParameters,\n    width: number,\n    height: number,\n    imageData: ImageData\n  ): BeforeData {\n    let matrix = parameters.matrix,\n      rows,\n      cols,\n      map = [],\n      div = [],\n      mod = [];\n\n    if (typeof matrix === \"string\") {\n      matrix = parameters.matrices[matrix];\n    }\n\n    rows = Math.sqrt(matrix.length);\n    cols = Math.sqrt(matrix.length);\n\n    for (let i = 0; i < parameters.levels; i += 1) {\n      map[i] = (255 * i) / (parameters.levels - 1);\n    }\n\n    for (let i = 0; i < 256; i += 1) {\n      div[i] = (((parameters.levels - 1) * i) / 256) | 0;\n      mod[i] = ((i * (rows * cols + 1)) / 256) | 0;\n    }\n\n    return {\n      matrix,\n      map,\n      div,\n      mod,\n      cols,\n      rows,\n    };\n  }\n\n  callback(\n    pixel: {\n      r: number;\n      g: number;\n      b: number;\n      a: number;\n    },\n    x: number,\n    y: number,\n    parameters: DitherParameters,\n    width: number,\n    height: number\n  ): {\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n  } {\n    let col = x % this.data.cols,\n      row = y % this.data.rows,\n      v = parameters.matrix[row * this.data.cols + col],\n      red = pixel.r,\n      green = pixel.g,\n      blue = pixel.b,\n      result = { a: pixel.a, r: 0, g: 0, b: 0 },\n      value;\n\n    if (parameters.colorDither) {\n      result.r =\n        this.data.map[\n          this.data.mod[red] > v ? this.data.div[red] + 1 : this.data.div[red]\n        ];\n      result.g =\n        this.data.map[\n          this.data.mod[green] > v\n            ? this.data.div[green] + 1\n            : this.data.div[green]\n        ];\n      result.b =\n        this.data.map[\n          this.data.mod[blue] > v\n            ? this.data.div[blue] + 1\n            : this.data.div[blue]\n        ];\n    } else {\n      value = (red + green + blue) / 3;\n      result.r =\n        result.g =\n        result.b =\n          this.data.map[\n            this.data.mod[value] > v\n              ? this.data.div[value] + 1\n              : this.data.div[value]\n          ];\n    }\n\n    return result;\n  }\n}\n\nexport default DitherEffect;\n","import BasePointEffect from \"../BasePoint\";\n\ninterface BeforeData {\n  hEdgeMatrix: Array<number>;\n  vEdgeMatrix: Array<number>;\n}\n\nexport interface EdgeParameters {\n  matrixes: {\n    robertsV: Array<number>;\n    robertsH: Array<number>;\n    prewittV: Array<number>;\n    prewittH: Array<number>;\n    sobelV: Array<number>;\n    sobelH: Array<number>;\n    freiChenV: Array<number>;\n    freiChenH: Array<number>;\n  };\n  hEdgeMatrix: string;\n  vEdgeMatrix: string;\n}\n\nclass EdgeEffect extends BasePointEffect {\n  static getName(): string {\n    return \"edge\";\n  }\n\n  data: BeforeData = {\n    hEdgeMatrix: [],\n    vEdgeMatrix: [],\n  };\n\n  getDefaultParameters(): EdgeParameters {\n    return {\n      matrixes: {\n        robertsV: [0, 0, -1, 0, 1, 0, 0, 0, 0],\n        robertsH: [-1, 0, 0, 0, 1, 0, 0, 0, 0],\n        prewittV: [-1, 0, 1, -1, 0, 1, -1, 0, 1],\n        prewittH: [-1, -1, -1, 0, 0, 0, 1, 1, 1],\n        sobelV: [-1, 0, 1, -2, 0, 2, -1, 0, 1],\n        sobelH: [-1, -2, -1, 0, 0, 0, 1, 2, 1],\n        freiChenV: [-1, 0, 1, -Math.sqrt(2), 0, Math.sqrt(2), -1, 0, 1],\n        freiChenH: [-1, -Math.sqrt(2), -1, 0, 0, 0, 1, Math.sqrt(2), 1],\n      },\n      hEdgeMatrix: \"sobelV\",\n      vEdgeMatrix: \"sobelH\",\n    };\n  }\n\n  before(\n    parameters: EdgeParameters,\n    width: number,\n    height: number,\n    imageData: ImageData\n  ): BeforeData {\n    let _hEdgeMatrix = parameters.hEdgeMatrix,\n      _vEdgeMatrix = parameters.vEdgeMatrix,\n      hEdgeMatrix,\n      vEdgeMatrix;\n\n    if (typeof _hEdgeMatrix === \"string\") {\n      hEdgeMatrix = parameters.matrixes[parameters.hEdgeMatrix];\n    }\n    if (typeof _vEdgeMatrix === \"string\") {\n      vEdgeMatrix = parameters.matrixes[parameters.vEdgeMatrix];\n    }\n    return {\n      hEdgeMatrix,\n      vEdgeMatrix,\n    };\n  }\n\n  callback(\n    pixel: {\n      r: number;\n      g: number;\n      b: number;\n      a: number;\n    },\n    x: number,\n    y: number,\n    parameters: EdgeParameters,\n    width: number,\n    height: number\n  ): {\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n  } {\n    let r = 0,\n      g = 0,\n      b = 0,\n      rh = 0,\n      gh = 0,\n      bh = 0,\n      rv = 0,\n      gv = 0,\n      bv = 0,\n      iy,\n      ix,\n      mOffset,\n      pixel2,\n      h,\n      v;\n\n    for (let row = -1; row <= 1; row += 1) {\n      iy = y + row;\n      if (!(0 <= iy && iy < height)) {\n        iy = y;\n      }\n      mOffset = 3 * (row + 1) + 1;\n      for (let col = -1; col <= 1; col += 1) {\n        ix = x + col;\n        if (!(0 <= ix && ix < width)) {\n          ix = x;\n        }\n        pixel2 = this.getOriginalPixel(ix, iy);\n        h = this.data.hEdgeMatrix[mOffset + col];\n        v = this.data.vEdgeMatrix[mOffset + col];\n\n        r = pixel2.r;\n        g = pixel2.g;\n        b = pixel2.b;\n\n        rh += Math.floor(h * r);\n        gh += Math.floor(h * g);\n        bh += Math.floor(h * b);\n\n        rv += Math.floor(v * r);\n        gv += Math.floor(v * g);\n        bv += Math.floor(v + b);\n      }\n    }\n    r = Math.floor(Math.sqrt(rh * rh + rv * rv) / 1.8);\n    g = Math.floor(Math.sqrt(gh * gh + gv * gv) / 1.8);\n    b = Math.floor(Math.sqrt(bh * bh + bv * bv) / 1.8);\n    return {\n      r: r,\n      g: g,\n      b: b,\n      a: pixel.a,\n    };\n  }\n}\n\nexport default EdgeEffect;\n","import BasePointEffect from \"../BasePoint\";\n\nexport interface ExposureParameters {\n  exposure: number;\n}\n\nclass ExposureEffect extends BasePointEffect {\n  static getName(): string {\n    return \"exposure\";\n  }\n\n  getDefaultParameters(): ExposureParameters {\n    return {\n      exposure: 1,\n    };\n  }\n\n  callback(\n    pixel: {\n      r: number;\n      g: number;\n      b: number;\n      a: number;\n    },\n    x: number,\n    y: number,\n    parameters: ExposureParameters,\n    width: number,\n    height: number\n  ): {\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n  } {\n    pixel.r = (1 - Math.exp((-pixel.r / 255) * parameters.exposure)) * 255;\n    pixel.g = (1 - Math.exp((-pixel.g / 255) * parameters.exposure)) * 255;\n    pixel.b = (1 - Math.exp((-pixel.b / 255) * parameters.exposure)) * 255;\n\n    return pixel;\n  }\n}\n\nexport default ExposureEffect;\n","import BasePointEffect from \"../BasePoint\";\n\nexport interface GainParameters {\n  gain: number;\n  bias: number;\n}\n\nclass GainEffect extends BasePointEffect {\n  static getName(): string {\n    return \"gain\";\n  }\n\n  getDefaultParameters(): GainParameters {\n    return {\n      gain: 1,\n      bias: 1,\n    };\n  }\n\n  callback(\n    pixel: {\n      r: number;\n      g: number;\n      b: number;\n      a: number;\n    },\n    x: number,\n    y: number,\n    parameters: GainParameters,\n    width: number,\n    height: number\n  ): {\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n  } {\n    let red = (1 / parameters.gain - 2) * (1 - (2 * pixel.r) / 255),\n      green = (1 / parameters.gain - 2) * (1 - (2 * pixel.g) / 255),\n      blue = (1 / parameters.gain - 2) * (1 - (2 * pixel.b) / 255);\n\n    if (pixel.r / 255 < 0.5) {\n      red = pixel.r / 255 / red + 1;\n    } else {\n      red = (red - pixel.r / 255) / (red - 1);\n    }\n\n    if (pixel.g / 255 < 0.5) {\n      green = pixel.g / 255 / green + 1;\n    } else {\n      green = (green - pixel.g / 255) / (green - 1);\n    }\n\n    if (pixel.b / 255 < 0.5) {\n      blue = pixel.b / 255 / blue + 1;\n    } else {\n      blue = (blue - pixel.b / 255) / (blue - 1);\n    }\n\n    red = red / ((1 / parameters.bias - 2) * (1 - red) + 1);\n    green = green / ((1 / parameters.bias - 2) * (1 - green) + 1);\n    blue = blue / ((1 / parameters.bias - 2) * (1 - blue) + 1);\n\n    pixel.r = red * 255;\n    pixel.g = green * 255;\n    pixel.b = blue * 255;\n\n    return pixel;\n  }\n}\n\nexport default GainEffect;\n","import BasePointEffect from \"../BasePoint\";\n\nexport interface GammaParameters {\n  gammaRed: number;\n  gammaGreen: number;\n  gammaBlue: number;\n}\n\ninterface BeforeData {\n  table: {\n    r: object;\n    g: object;\n    b: object;\n  };\n}\n\nclass GammaEffect extends BasePointEffect {\n  static getName(): string {\n    return \"gamma\";\n  }\n\n  data: BeforeData = {\n    table: {\n      r: {},\n      g: {},\n      b: {},\n    },\n  };\n\n  getDefaultParameters(): GammaParameters {\n    return {\n      gammaRed: 1,\n      gammaGreen: 1,\n      gammaBlue: 1,\n    };\n  }\n\n  before(\n    parameters: GammaParameters,\n    width: number,\n    height: number,\n    imageData: ImageData\n  ): BeforeData {\n    const table = {\n      r: [],\n      g: [],\n      b: [],\n    };\n\n    for (let i = 0; i < 256; i += 1) {\n      table.r[i] = (255 * Math.pow(i / 255, 1 / parameters.gammaRed) + 0.5) | 0;\n      table.g[i] =\n        (255 * Math.pow(i / 255, 1 / parameters.gammaGreen) + 0.5) | 0;\n      table.b[i] =\n        (255 * Math.pow(i / 255, 1 / parameters.gammaBlue) + 0.5) | 0;\n    }\n\n    return {\n      table: table,\n    };\n  }\n\n  callback(\n    pixel: {\n      r: number;\n      g: number;\n      b: number;\n      a: number;\n    },\n    x: number,\n    y: number,\n    parameters: GammaParameters,\n    width: number,\n    height: number\n  ): {\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n  } {\n    return {\n      r: this.data.table.r[pixel.r],\n      g: this.data.table.g[pixel.g],\n      b: this.data.table.b[pixel.b],\n      a: pixel.a,\n    };\n  }\n}\n\nexport default GammaEffect;\n","import BasePointEffect from \"../BasePoint\";\n\nclass GrayScaleEffect extends BasePointEffect {\n  static getName(): string {\n    return \"gray-scale\";\n  }\n\n  callback(\n    pixel: {\n      r: number;\n      g: number;\n      b: number;\n      a: number;\n    },\n    x: number,\n    y: number,\n    parameters: object,\n    width: number,\n    height: number\n  ): {\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n  } {\n    const newRGB = 0.299 * pixel.r + 0.587 * pixel.g + 0.114 * pixel.b;\n    return {\n      r: newRGB,\n      g: newRGB,\n      b: newRGB,\n      a: pixel.a,\n    };\n  }\n}\n\nexport default GrayScaleEffect;\n","import BasePointEffect from \"../BasePoint\";\nimport { RGBtoHSB, HSBtoRGB } from \"../../../helpers/color\";\n\nexport interface HSBAdjustParameters {\n  h: number;\n  s: number;\n  b: number;\n}\n\nclass HSBAdjustEffect extends BasePointEffect {\n  static getName(): string {\n    return \"hsb-adjust\";\n  }\n\n  getDefaultParameters(): HSBAdjustParameters {\n    return {\n      h: 1,\n      s: 1,\n      b: 1,\n    };\n  }\n\n  callback(\n    pixel: {\n      r: number;\n      g: number;\n      b: number;\n      a: number;\n    },\n    x: number,\n    y: number,\n    parameters: HSBAdjustParameters,\n    width: number,\n    height: number\n  ): {\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n  } {\n    const hsb = RGBtoHSB(pixel.r, pixel.g, pixel.b);\n\n    hsb.h += parameters.h;\n    while (hsb.h < 0) {\n      hsb.h += Math.PI * 2;\n    }\n\n    hsb.s += parameters.s;\n    hsb.s = Math.max(Math.min(hsb.s, 1), 0);\n\n    hsb.b += parameters.b;\n    hsb.b = Math.max(Math.min(hsb.b, 1), 0);\n\n    let result = HSBtoRGB(hsb.h, hsb.s, hsb.b);\n    pixel.r = result.r;\n    pixel.g = result.g;\n    pixel.b = result.b;\n\n    return pixel;\n  }\n}\n\nexport default HSBAdjustEffect;\n","import BasePointEffect from \"../BasePoint\";\n\nclass InvertEffect extends BasePointEffect {\n  static getName(): string {\n    return \"invert\";\n  }\n\n  callback(\n    pixel: {\n      r: number;\n      g: number;\n      b: number;\n      a: number;\n    },\n    x: number,\n    y: number,\n    parameters: object,\n    width: number,\n    height: number\n  ): {\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n  } {\n    pixel.r = 255 - pixel.r;\n    pixel.g = 255 - pixel.g;\n    pixel.b = 255 - pixel.b;\n    return pixel;\n  }\n}\n\nexport default InvertEffect;\n","import BasePointEffect from \"../BasePoint\";\n\nclass InvertAlphaEffect extends BasePointEffect {\n  static getName(): string {\n    return \"invert-alpha\";\n  }\n\n  callback(\n    pixel: {\n      r: number;\n      g: number;\n      b: number;\n      a: number;\n    },\n    x: number,\n    y: number,\n    parameters: object,\n    width: number,\n    height: number\n  ): {\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n  } {\n    pixel.a = 255 - pixel.a;\n    return pixel;\n  }\n}\n\nexport default InvertAlphaEffect;\n","import BasePointEffect from \"../BasePoint\";\n\nexport interface LevelsParameters {\n  low: number;\n  high: number;\n  lowOutput: number;\n  highOutput: number;\n}\n\ninterface BeforeData {\n  lut: Array<Array<number>>;\n}\n\nclass LevelsEffect extends BasePointEffect {\n  static getName(): string {\n    return \"levels\";\n  }\n\n  data: BeforeData = {\n    lut: [],\n  };\n\n  getDefaultParameters(): LevelsParameters {\n    return {\n      low: 0,\n      high: 1,\n      lowOutput: 0,\n      highOutput: 1,\n    };\n  }\n\n  before(\n    parameters: LevelsParameters,\n    width: number,\n    height: number,\n    imageData: ImageData\n  ): BeforeData {\n    let Histogram = function (imageData, width, height, offset, stride) {\n      let index,\n        histogram = new Array(3),\n        minValue = new Array(4),\n        maxValue = new Array(4),\n        minFrequency = new Array(3),\n        maxFrequency = new Array(3),\n        mean = new Array(3),\n        numSamples = width * height,\n        isGray = true,\n        RED = 0,\n        GREEN = 1,\n        BLUE = 2,\n        GRAY = 3;\n\n      for (let i = 0; i < histogram.length; i += 1) {\n        histogram[i] = new Array(256);\n        for (let j = 0; j < 256; j += 1) {\n          histogram[i][j] = 0;\n        }\n      }\n\n      for (let y = 0; y < height; y += 1) {\n        for (let x = 0; x < width; x += 1) {\n          index = y * width * 4 + x * 4;\n          histogram[RED][imageData.data[index]]++;\n          histogram[GREEN][imageData.data[index + 1]]++;\n          histogram[BLUE][imageData.data[index + 2]]++;\n        }\n      }\n\n      for (let i = 0; i < 256; i += 1) {\n        if (\n          histogram[RED][i] !== histogram[GREEN][i] ||\n          histogram[GREEN][i] !== histogram[BLUE][i]\n        ) {\n          isGray = false;\n          break;\n        }\n      }\n\n      for (let i = 0; i < 3; i += 1) {\n        for (let j = 0; j < 256; j += 1) {\n          if (histogram[i][j] > 0) {\n            minValue[i] = j;\n            break;\n          }\n        }\n        for (let j = 255; j >= 0; j -= 1) {\n          if (histogram[i][j] > 0) {\n            maxValue[i] = j;\n            break;\n          }\n        }\n        minFrequency[i] = Infinity;\n        maxFrequency[i] = 0;\n        for (let j = 0; j < 256; j += 1) {\n          minFrequency[i] = Math.min(minFrequency[i], histogram[i][j]);\n          maxFrequency[i] = Math.max(maxFrequency[i], histogram[i][j]);\n          mean[i] += j * histogram[i][j];\n        }\n        mean[i] /= numSamples;\n        minValue[GRAY] = Math.min(\n          minValue[RED],\n          minValue[GREEN],\n          minValue[BLUE]\n        );\n        maxValue[GRAY] = Math.max(\n          maxValue[RED],\n          maxValue[GREEN],\n          maxValue[BLUE]\n        );\n      }\n\n      this.getNumSamples = () => {\n        return numSamples;\n      };\n\n      this.isGray = () => {\n        return isGray;\n      };\n\n      this.getFrequency = (channel, value) => {\n        if (!value) {\n          if (numSamples > 0 && isGray && value >= 0 && value <= 255) {\n            return histogram[0][value];\n          }\n          return -1;\n        }\n        if (\n          numSamples < 1 ||\n          channel < 0 ||\n          channel > 2 ||\n          value < 0 ||\n          value > 255\n        ) {\n          return -1;\n        }\n        return histogram[channel][value];\n      };\n\n      this.getMinFrequency = (channel) => {\n        if (!channel) {\n          if (numSamples > 0 && isGray) {\n            return minFrequency[0];\n          }\n          return -1;\n        }\n        if (numSamples < 1 || channel < 0 || channel > 2) {\n          return -1;\n        }\n        return minFrequency[channel];\n      };\n\n      this.getMaxFrequency = (channel) => {\n        if (!channel) {\n          if (numSamples > 0 && isGray) {\n            return maxFrequency[0];\n          }\n          return -1;\n        }\n        if (numSamples < 1 || channel < 0 || channel > 2) {\n          return -1;\n        }\n        return maxFrequency[channel];\n      };\n\n      this.getMinValue = (channel) => {\n        if (!channel) {\n          if (numSamples > 0 && isGray) {\n            return minValue[0];\n          }\n          return -1;\n        }\n        return minValue[channel];\n      };\n\n      this.getMaxValue = (channel) => {\n        if (!channel) {\n          if (numSamples > 0 && isGray) {\n            return maxValue[0];\n          }\n          return -1;\n        }\n        return maxValue[channel];\n      };\n\n      this.getMeanValue = (channel) => {\n        if (!channel) {\n          if (numSamples > 0 && isGray) {\n            return mean[0];\n          }\n          return -1;\n        }\n        return mean[channel];\n      };\n    };\n\n    let histogram = new Histogram(imageData, width, height, 0, width),\n      lut = new Array(3),\n      low = parameters.low * 255,\n      high = parameters.high * 255;\n\n    for (let i = 0; i < lut.length; i += 1) {\n      lut[i] = new Array(256);\n    }\n    if (low === high) {\n      high++;\n    }\n\n    for (let i = 0; i < 3; i += 1) {\n      for (let j = 0; j < 256; j += 1) {\n        lut[i][j] =\n          255 *\n          (parameters.lowOutput +\n            ((parameters.highOutput - parameters.lowOutput) * (j - low)) /\n              (high - low));\n      }\n    }\n\n    histogram.isGray(); // uglify fix - \"Side effects in initialization of unused letiable histogram\" warning\n\n    return {\n      lut,\n    };\n  }\n\n  callback(\n    pixel: {\n      r: number;\n      g: number;\n      b: number;\n      a: number;\n    },\n    x: number,\n    y: number,\n    parameters: LevelsParameters,\n    width: number,\n    height: number\n  ): {\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n  } {\n    return {\n      r: this.data.lut[0][pixel.r],\n      g: this.data.lut[1][pixel.g],\n      b: this.data.lut[2][pixel.b],\n      a: pixel.a,\n    };\n  }\n}\n\nexport default LevelsEffect;\n","import BasePointEffect from \"../BasePoint\";\n\nexport interface RescaleParameters {\n  scale: number;\n}\n\nclass RescaleEffect extends BasePointEffect {\n  static getName(): string {\n    return \"rescale\";\n  }\n\n  getDefaultParameters(): RescaleParameters {\n    return {\n      scale: 1,\n    };\n  }\n\n  callback(\n    pixel: {\n      r: number;\n      g: number;\n      b: number;\n      a: number;\n    },\n    x: number,\n    y: number,\n    parameters: RescaleParameters,\n    width: number,\n    height: number\n  ): {\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n  } {\n    pixel.r = parameters.scale * pixel.r;\n    pixel.g = parameters.scale * pixel.g;\n    pixel.b = parameters.scale * pixel.b;\n\n    return pixel;\n  }\n}\n\nexport default RescaleEffect;\n","import BasePointEffect from \"../BasePoint\";\n\nexport interface SepiaParameters {\n  sepiaValue: number;\n}\n\nclass SepiaEffect extends BasePointEffect {\n  static getName(): string {\n    return \"sepia\";\n  }\n\n  getDefaultParameters(): SepiaParameters {\n    return {\n      sepiaValue: 1,\n    };\n  }\n\n  callback(\n    pixel: {\n      r: number;\n      g: number;\n      b: number;\n      a: number;\n    },\n    x: number,\n    y: number,\n    parameters: SepiaParameters,\n    width: number,\n    height: number\n  ): {\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n  } {\n    const tmp = 0.299 * pixel.r + 0.587 * pixel.g + 0.114 * pixel.b;\n\n    pixel.r = tmp + 2 * parameters.sepiaValue;\n    pixel.g = tmp + parameters.sepiaValue;\n    pixel.b = tmp;\n\n    return pixel;\n  }\n}\n\nexport default SepiaEffect;\n","import BasePointEffect from \"../BasePoint\";\n\nclass SolarizeEffect extends BasePointEffect {\n  static getName(): string {\n    return \"solarize\";\n  }\n\n  callback(\n    pixel: {\n      r: number;\n      g: number;\n      b: number;\n      a: number;\n    },\n    x: number,\n    y: number,\n    parameters: object,\n    width: number,\n    height: number\n  ): {\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n  } {\n    const red =\n        pixel.r / 255 > 0.5\n          ? 2 * (pixel.r / 255 - 0.5)\n          : 2 * (0.5 - pixel.r / 255),\n      green =\n        pixel.g / 255 > 0.5\n          ? 2 * (pixel.g / 255 - 0.5)\n          : 2 * (0.5 - pixel.g / 255),\n      blue =\n        pixel.b / 255 > 0.5\n          ? 2 * (pixel.b / 255 - 0.5)\n          : 2 * (0.5 - pixel.b / 255);\n\n    return {\n      r: red * 255,\n      g: green * 255,\n      b: blue * 255,\n      a: pixel.a,\n    };\n  }\n}\n\nexport default SolarizeEffect;\n","import BasePointEffect from \"../BasePoint\";\n\nclass ThresholdEffect extends BasePointEffect {\n  static getName(): string {\n    return \"threshold\";\n  }\n\n  callback(\n    pixel: {\n      r: number;\n      g: number;\n      b: number;\n      a: number;\n    },\n    x: number,\n    y: number,\n    parameters: object,\n    width: number,\n    height: number\n  ): {\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n  } {\n    const grayscale = (pixel.r + pixel.g + pixel.b) / 3;\n\n    if (grayscale >= 127) {\n      return {\n        r: 255,\n        g: 255,\n        b: 255,\n        a: pixel.a,\n      };\n    }\n\n    return {\n      r: 0,\n      g: 0,\n      b: 0,\n      a: pixel.a,\n    };\n  }\n}\n\nexport default ThresholdEffect;\n","import BasePointEffect from \"../BasePoint\";\nimport { mixColors } from \"../../../helpers/color\";\n\nexport interface TritoneParameters {\n  shadowColor: {\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n  };\n  midColor: {\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n  };\n  highColor: {\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n  };\n}\n\ninterface BeforeData {\n  lut: Array<{\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n  }>;\n}\n\nclass TritoneEffect extends BasePointEffect {\n  static getName(): string {\n    return \"tritone\";\n  }\n\n  data: BeforeData = {\n    lut: [],\n  };\n\n  getDefaultParameters(): TritoneParameters {\n    return {\n      shadowColor: {\n        r: 0,\n        g: 0,\n        b: 0,\n        a: 255,\n      },\n      midColor: {\n        r: 136,\n        g: 136,\n        b: 136,\n        a: 255,\n      },\n      highColor: {\n        r: 255,\n        g: 255,\n        b: 255,\n        a: 255,\n      },\n    };\n  }\n\n  before(parameters: TritoneParameters): BeforeData {\n    let lut = [],\n      t;\n\n    for (let i = 0; i < 128; i += 1) {\n      t = i / 127;\n      lut[i] = mixColors(t, parameters.shadowColor, parameters.midColor);\n    }\n    for (let i = 128; i < 256; i += 1) {\n      t = (i - 127) / 128;\n      lut[i] = mixColors(t, parameters.midColor, parameters.highColor);\n    }\n    return {\n      lut: lut,\n    };\n  }\n\n  callback(\n    pixel: {\n      r: number;\n      g: number;\n      b: number;\n      a: number;\n    },\n    x: number,\n    y: number,\n    parameters: object,\n    width: number,\n    height: number\n  ): {\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n  } {\n    const brightness = Math.floor((pixel.r + pixel.g + pixel.b) / 3);\n    return this.data.lut[brightness];\n  }\n}\n\nexport default TritoneEffect;\n","import BaseTransformEffect from \"../BaseTransform\";\nimport { mod } from \"../../../helpers/common\";\n\nexport interface CircleParameters {\n  radius: number;\n  height: number;\n  angle: number;\n  spreadAngle: number;\n  centreX: number;\n  centreY: number;\n}\n\ninterface BeforeData {\n  icentreX: number;\n  icentreY: number;\n  width: number;\n}\n\nclass CircleEffect extends BaseTransformEffect {\n  static getName(): string {\n    return \"circle\";\n  }\n\n  data: BeforeData = {\n    icentreX: 0,\n    icentreY: 0,\n    width: 0,\n  };\n\n  getDefaultParameters(): CircleParameters {\n    return {\n      radius: 10,\n      height: 20,\n      angle: 0,\n      spreadAngle: Math.PI,\n      centreX: 0.5,\n      centreY: 0.5,\n    };\n  }\n\n  before(\n    parameters: CircleParameters,\n    width: number,\n    height: number,\n    imageData: ImageData\n  ): BeforeData {\n    return {\n      icentreX: width * parameters.centreX,\n      icentreY: height * parameters.centreY,\n      width: --width,\n    };\n  }\n\n  callback(\n    x: number,\n    y: number,\n    parameters: CircleParameters,\n    width: number,\n    height: number\n  ): Array<number> {\n    let dx = x - this.data.icentreX,\n      dy = y - this.data.icentreX,\n      theta = Math.atan2(-dy, -dx) + parameters.angle,\n      r = Math.sqrt(dx * dx + dy * dy);\n\n    theta = mod(theta, 2 * Math.PI);\n\n    return [\n      (this.data.width * theta) / parameters.spreadAngle + 0.00001,\n      height * (1 - (r - parameters.radius) / (height + 0.00001)),\n    ];\n  }\n}\n\nexport default CircleEffect;\n","import BaseTransformEffect from \"../BaseTransform\";\n\nexport interface DiffuseParameters {\n  scale: number;\n}\n\ninterface BeforeData {\n  sinTable: Array<number>;\n  cosTable: Array<number>;\n}\n\nclass DiffuseEffect extends BaseTransformEffect {\n  static getName(): string {\n    return \"diffuse\";\n  }\n\n  data: BeforeData = {\n    sinTable: [],\n    cosTable: [],\n  };\n\n  getDefaultParameters(): DiffuseParameters {\n    return {\n      scale: 4,\n    };\n  }\n\n  before(\n    parameters: DiffuseParameters,\n    width: number,\n    height: number,\n    imageData: ImageData\n  ): BeforeData {\n    let sinTable = new Array(256),\n      cosTable = new Array(256),\n      angle;\n    for (let i = 0; i < 256; i += 1) {\n      angle = (Math.PI * 2 * i) / 256;\n      sinTable[i] = parameters.scale * Math.sin(angle);\n      cosTable[i] = parameters.scale * Math.cos(angle);\n    }\n    return {\n      sinTable: sinTable,\n      cosTable: cosTable,\n    };\n  }\n\n  callback(\n    x: number,\n    y: number,\n    parameters: DiffuseParameters,\n    width: number,\n    height: number\n  ): Array<number> {\n    let angle = (Math.random() * 255) | 0,\n      distance = Math.random();\n\n    return [\n      x + distance * this.data.sinTable[angle],\n      y + distance * this.data.cosTable[angle],\n    ];\n  }\n}\n\nexport default DiffuseEffect;\n","import BaseTransformEffect from \"../BaseTransform\";\nimport { triangle } from \"../../../helpers/common\";\n\ninterface BeforeData {\n  icentreX: number;\n  icentreY: number;\n}\n\nexport interface KaleidoscopeParameters {\n  centreX: number;\n  centreY: number;\n  angle: number;\n  angle2: number;\n  sides: number;\n  radius: number;\n}\n\nclass KaleidoscopeEffect extends BaseTransformEffect {\n  static getName(): string {\n    return \"kaleidoscope\";\n  }\n\n  data: BeforeData = {\n    icentreX: 0,\n    icentreY: 0,\n  };\n\n  getDefaultParameters(): KaleidoscopeParameters {\n    return {\n      centreX: 0.5,\n      centreY: 0.5,\n      angle: 0,\n      angle2: 0,\n      sides: 3,\n      radius: 0,\n    };\n  }\n\n  before(\n    parameters: KaleidoscopeParameters,\n    width: number,\n    height: number,\n    imageData: ImageData\n  ): BeforeData {\n    return {\n      icentreX: width * parameters.centreX,\n      icentreY: height * parameters.centreY,\n    };\n  }\n\n  callback(\n    x: number,\n    y: number,\n    parameters: KaleidoscopeParameters,\n    width: number,\n    height: number\n  ): Array<number> {\n    let dx = x - this.data.icentreX,\n      dy = y - this.data.icentreY,\n      r = Math.sqrt(dx * dx + dy * dy),\n      theta = Math.atan2(dy, dx) - parameters.angle - parameters.angle2;\n\n    theta = triangle((theta / Math.PI) * parameters.sides * 0.5);\n\n    if (parameters.radius !== 0) {\n      let c = Math.cos(theta),\n        radiusC = parameters.radius / c;\n      r = radiusC * triangle(r / radiusC);\n    }\n\n    theta += parameters.angle;\n\n    return [\n      this.data.icentreX + r * Math.cos(theta),\n      this.data.icentreY + r * Math.sin(theta),\n    ];\n  }\n}\n\nexport default KaleidoscopeEffect;\n","import BaseTransformEffect from \"../BaseTransform\";\nimport noiseHelper from \"../../../helpers/noise\";\n\ninterface BeforeData {\n  sinTable: Array<number>;\n  cosTable: Array<number>;\n  displacementMap: (x: number, y: number) => number;\n}\n\nexport interface MarbleParameters {\n  xScale: number;\n  yScale: number;\n  amount: number;\n  turbulence: number;\n}\n\nclass MarbleEffect extends BaseTransformEffect {\n  static getName(): string {\n    return \"marble\";\n  }\n\n  data: BeforeData = {\n    sinTable: [],\n    cosTable: [],\n    displacementMap: (x: number, y: number) => 0,\n  };\n\n  getDefaultParameters(): MarbleParameters {\n    return {\n      xScale: 4,\n      yScale: 4,\n      amount: 1,\n      turbulence: 1,\n    };\n  }\n\n  before(\n    parameters: MarbleParameters,\n    width: number,\n    height: number,\n    imageData: ImageData\n  ): BeforeData {\n    let sinTable = new Array(256),\n      cosTable = new Array(256),\n      angle;\n\n    for (let i = 0; i < 256; i += 1) {\n      angle = ((Math.PI * 2 * i) / 256) * parameters.turbulence;\n      sinTable[i] = -parameters.yScale * Math.sin(angle);\n      cosTable[i] = parameters.yScale * Math.cos(angle);\n    }\n    return {\n      sinTable: sinTable,\n      cosTable: cosTable,\n      displacementMap: function (x, y) {\n        let result =\n          127 *\n          (1 +\n            noiseHelper.noise2(x / parameters.xScale, y / parameters.yScale));\n        return Math.min(255, Math.max(0, result));\n      },\n    };\n  }\n\n  callback(\n    x: number,\n    y: number,\n    parameters: MarbleParameters,\n    width: number,\n    height: number\n  ): Array<number> {\n    let displacement = Math.floor(this.data.displacementMap(x, y));\n    return [\n      x + this.data.sinTable[displacement],\n      y + this.data.cosTable[displacement],\n    ];\n  }\n}\n\nexport default MarbleEffect;\n","import BaseTransformEffect from \"../BaseTransform\";\n\nexport interface OffsetParameters {\n  xOffset: number;\n  yOffset: number;\n  wrap: boolean;\n}\n\nclass RotateEffect extends BaseTransformEffect {\n  static getName(): string {\n    return \"offset\";\n  }\n\n  getDefaultParameters(): OffsetParameters {\n    return {\n      xOffset: 100,\n      yOffset: 100,\n      wrap: true,\n    };\n  }\n\n  callback(\n    x: number,\n    y: number,\n    parameters: OffsetParameters,\n    width: number,\n    height: number\n  ): Array<number> {\n    if (parameters.wrap) {\n      return [\n        (x + width - parameters.xOffset) % width,\n        (y + height - parameters.yOffset) % height,\n      ];\n    } else {\n      return [x - parameters.xOffset, y - parameters.yOffset];\n    }\n  }\n}\n\nexport default RotateEffect;\n","import BaseTransformEffect from \"../BaseTransform\";\n\ninterface BeforeData {\n  A: number;\n  B: number;\n  C: number;\n  D: number;\n  E: number;\n  F: number;\n  G: number;\n  H: number;\n  I: number;\n}\n\nexport interface PerspectiveParameters {\n  x0: number;\n  y0: number;\n  x1: number;\n  y1: number;\n  x2: number;\n  y2: number;\n  x3: number;\n  y3: number;\n}\n\nclass PerspectiveEffect extends BaseTransformEffect {\n  static getName(): string {\n    return \"perspective\";\n  }\n\n  data: BeforeData = {\n    A: 0,\n    B: 0,\n    C: 0,\n    D: 0,\n    E: 0,\n    F: 0,\n    G: 0,\n    H: 0,\n    I: 0,\n  };\n\n  getDefaultParameters(): PerspectiveParameters {\n    return {\n      x0: 0,\n      y0: 0,\n      x1: 1,\n      y1: 0,\n      x2: 1,\n      y2: 1,\n      x3: 0,\n      y3: 1,\n    };\n  }\n\n  before(\n    parameters: PerspectiveParameters,\n    width: number,\n    height: number,\n    imageData: ImageData\n  ): BeforeData {\n    function unitSquareToQuad() {\n      let result = {\n          a11: 0,\n          a21: 0,\n          a31: 0,\n          a12: 0,\n          a22: 0,\n          a32: 0,\n          a13: 0,\n          a23: 0,\n          a33: 0,\n          A: 0,\n          B: 0,\n          C: 0,\n          D: 0,\n          E: 0,\n          F: 0,\n          G: 0,\n          H: 0,\n          I: 0,\n        },\n        x0 = Math.floor(width * parameters.x0),\n        y0 = Math.floor(height * parameters.y0),\n        x1 = Math.floor(width * parameters.x1),\n        y1 = Math.floor(height * parameters.y1),\n        x2 = Math.floor(width * parameters.x2),\n        y2 = Math.floor(height * parameters.y2),\n        x3 = Math.floor(width * parameters.x3),\n        y3 = Math.floor(height * parameters.y3),\n        dx1 = x1 - x2,\n        dy1 = y1 - y2,\n        dx2 = x3 - x2,\n        dy2 = y3 - y2,\n        dx3 = x0 - x1 + x2 - x3,\n        dy3 = y0 - y1 + y2 - y3;\n\n      if (dx3 == 0 && dy3 == 0) {\n        result.a11 = x1 - x0;\n        result.a21 = x2 - x1;\n        result.a31 = x0;\n        result.a12 = y1 - y0;\n        result.a22 = y2 - y1;\n        result.a32 = y0;\n        result.a13 = result.a23 = 0;\n      } else {\n        result.a13 = (dx3 * dy2 - dx2 * dy3) / (dx1 * dy2 - dy1 * dx2);\n        result.a23 = (dx1 * dy3 - dy1 * dx3) / (dx1 * dy2 - dy1 * dx2);\n        result.a11 = x1 - x0 + result.a13 * x1;\n        result.a21 = x3 - x0 + result.a23 * x3;\n        result.a31 = x0;\n        result.a12 = y1 - y0 + result.a13 * y1;\n        result.a22 = y3 - y0 + result.a23 * y3;\n        result.a32 = y0;\n      }\n\n      result.a33 = 1;\n\n      return result;\n    }\n\n    let result = unitSquareToQuad();\n\n    result.A = result.a22 * result.a33 - result.a32 * result.a23;\n    result.B = result.a31 * result.a23 - result.a21 * result.a33;\n    result.C = result.a21 * result.a32 - result.a31 * result.a22;\n    result.D = result.a32 * result.a13 - result.a12 * result.a33;\n    result.E = result.a11 * result.a33 - result.a31 * result.a13;\n    result.F = result.a31 * result.a12 - result.a11 * result.a32;\n    result.G = result.a12 * result.a23 - result.a22 * result.a13;\n    result.H = result.a21 * result.a13 - result.a11 * result.a23;\n    result.I = result.a11 * result.a22 - result.a21 * result.a12;\n\n    return result;\n  }\n\n  callback(\n    x: number,\n    y: number,\n    parameters: PerspectiveParameters,\n    width: number,\n    height: number\n  ): Array<number> {\n    return [\n      (width * (this.data.A * x + this.data.B * y + this.data.C)) /\n        (this.data.G * x + this.data.H * y + this.data.I),\n      (height * (this.data.D * x + this.data.E * y + this.data.F)) /\n        (this.data.G * x + this.data.H * y + this.data.I),\n    ];\n  }\n}\n\nexport default PerspectiveEffect;\n","import BaseTransformEffect from \"../BaseTransform\";\n\nexport interface PinchParameters {\n  angle: number;\n  centreX: number;\n  centreY: number;\n  radius: number;\n  amount: number;\n}\n\ninterface BeforeData {\n  icentreX: number;\n  icentreY: number;\n  radius2: number;\n  radius: number;\n}\n\nclass PinchEffect extends BaseTransformEffect {\n  static getName(): string {\n    return \"pinch\";\n  }\n\n  data: BeforeData = {\n    icentreX: 0,\n    icentreY: 0,\n    radius2: 0,\n    radius: 0,\n  };\n\n  getDefaultParameters(): PinchParameters {\n    return {\n      angle: 0,\n      centreX: 0.5,\n      centreY: 0.5,\n      radius: 100,\n      amount: 0.5,\n    };\n  }\n\n  before(\n    parameters: PinchParameters,\n    width: number,\n    height: number,\n    imageData: ImageData\n  ): BeforeData {\n    let icentreX = width * parameters.centreX,\n      icentreY = height * parameters.centreY,\n      radius = parameters.radius,\n      radius2;\n    if (radius === 0) {\n      radius = Math.min(icentreX, icentreY);\n    }\n    radius2 = radius * radius;\n    return {\n      icentreX: icentreX,\n      icentreY: icentreY,\n      radius: radius,\n      radius2: radius2,\n    };\n  }\n\n  callback(\n    x: number,\n    y: number,\n    parameters: PinchParameters,\n    width: number,\n    height: number\n  ): Array<number> {\n    let dx = x - this.data.icentreX,\n      dy = y - this.data.icentreY,\n      distance = dx * dx + dy * dy,\n      d,\n      t,\n      e,\n      a,\n      s,\n      c;\n\n    if (distance > this.data.radius2 || distance === 0) {\n      return [x, y];\n    }\n    d = Math.sqrt(distance / this.data.radius2);\n    t = Math.pow(Math.sin(Math.PI * 0.5 * d), -parameters.amount);\n\n    dx *= t;\n    dy *= t;\n\n    e = 1 - d;\n    a = parameters.angle * e * e;\n\n    s = Math.sin(a);\n    c = Math.cos(a);\n\n    return [\n      this.data.icentreX + c * dx - s * dy,\n      this.data.icentreY + s * dx + c * dy,\n    ];\n  }\n}\n\nexport default PinchEffect;\n","import BaseTransformEffect from \"../BaseTransform\";\n\ninterface BeforeData {\n  centreX: number;\n  centreY: number;\n  sqr: (value: number) => number;\n  radius: number;\n}\n\nexport interface PolarParameters {\n  type: string;\n}\n\nclass PolarEffect extends BaseTransformEffect {\n  static getName(): string {\n    return \"polar\";\n  }\n\n  data: BeforeData = {\n    centreX: 0,\n    centreY: 0,\n    sqr: (value: number) => 0,\n    radius: 0,\n  };\n\n  getDefaultParameters(): PolarParameters {\n    return {\n      type: \"RECT_TO_POLAR\", // RECT_TO_POLAR, POLAR_TO_RECT, INVERT_IN_CIRCLE\n    };\n  }\n\n  before(\n    parameters: PolarParameters,\n    width: number,\n    height: number,\n    imageData: ImageData\n  ): BeforeData {\n    return {\n      centreX: width / 2,\n      centreY: height / 2,\n      radius: Math.max(width / 2, height / 2),\n      sqr: function (x) {\n        return x * x;\n      },\n    };\n  }\n\n  callback(\n    x: number,\n    y: number,\n    parameters: PolarParameters,\n    width: number,\n    height: number\n  ): Array<number> {\n    let theta,\n      theta2,\n      t,\n      m,\n      xMax,\n      yMax,\n      nx,\n      ny,\n      xmax,\n      ymax,\n      dx,\n      dy,\n      distance,\n      r = 0;\n\n    switch (parameters.type) {\n      case \"RECT_TO_POLAR\":\n        if (x >= this.data.centreX) {\n          if (y > this.data.centreY) {\n            theta =\n              Math.PI -\n              Math.atan((x - this.data.centreX) / (y - this.data.centreY));\n            r = Math.sqrt(\n              this.data.sqr(x - this.data.centreX) +\n                this.data.sqr(y - this.data.centreY)\n            );\n          } else {\n            if (y < this.data.centreY) {\n              theta = Math.atan(\n                (x - this.data.centreX) / (this.data.centreY - y)\n              );\n              r = Math.sqrt(\n                this.data.sqr(x - this.data.centreX) +\n                  this.data.sqr(this.data.centreY - y)\n              );\n            } else {\n              theta = Math.PI / 2;\n              r = x - this.data.centreX;\n            }\n          }\n        } else {\n          if (x < this.data.centreX) {\n            if (y < this.data.centreY) {\n              theta =\n                Math.PI * 2 -\n                Math.atan((this.data.centreX - x) / (this.data.centreY - y));\n              r = Math.sqrt(\n                this.data.sqr(this.data.centreX - x) +\n                  this.data.sqr(this.data.centreY - y)\n              );\n            } else {\n              if (y > this.data.centreY) {\n                theta =\n                  Math.PI +\n                  Math.atan((this.data.centreX - x) / (y - this.data.centreY));\n                r = Math.sqrt(\n                  this.data.sqr(this.data.centreX - x) +\n                    this.data.sqr(y - this.data.centreY)\n                );\n              } else {\n                theta = 1.5 * Math.PI;\n                r = this.data.centreX - x;\n              }\n            }\n          }\n        }\n        if (x != this.data.centreX) {\n          m = Math.abs((y - this.data.centreY) / (x - this.data.centreX));\n        } else {\n          m = 0;\n        }\n\n        if (m <= height / width) {\n          if (x == this.data.centreX) {\n            xMax = 0;\n            yMax = this.data.centreY;\n          } else {\n            xMax = this.data.centreX;\n            yMax = m * xMax;\n          }\n        } else {\n          yMax = this.data.centreY;\n          xMax = yMax / m;\n        }\n\n        return [\n          width - 1 - (width - 1) / (Math.PI * 2 * theta),\n          (height * r) / this.data.radius,\n        ];\n\n      case \"POLAR_TO_RECT\":\n        theta = (x / width) * Math.PI * 2;\n\n        if (theta >= 1.5 * Math.PI) {\n          theta2 = Math.PI * 2 - theta;\n        } else {\n          if (theta >= Math.PI) {\n            theta2 = theta - Math.PI;\n          } else {\n            if (theta >= 0.5 * Math.PI) {\n              theta2 = Math.PI - theta;\n            } else {\n              theta2 = theta;\n            }\n          }\n        }\n\n        t = Math.tan(theta2);\n        if (t != 0) {\n          m = 1.0 / t;\n        } else {\n          m = 0;\n        }\n\n        if (m <= height / width) {\n          if (theta2 == 0) {\n            xmax = 0;\n            ymax = this.data.centreY;\n          } else {\n            xmax = this.data.centreX;\n            ymax = m * xmax;\n          }\n        } else {\n          ymax = this.data.centreY;\n          xmax = ymax / m;\n        }\n\n        r = this.data.radius * (y / height);\n\n        nx = -r * Math.sin(theta2);\n        ny = r * Math.cos(theta2);\n\n        if (theta >= 1.5 * Math.PI) {\n          return [this.data.centreX - nx, this.data.centreY - ny];\n        } else {\n          if (theta >= Math.PI) {\n            return [this.data.centreX - nx, this.data.centreY + ny];\n          } else {\n            if (theta >= 0.5 * Math.PI) {\n              return [this.data.centreX + nx, this.data.centreY + ny];\n            } else {\n              return [this.data.centreX + nx, this.data.centreY - ny];\n            }\n          }\n        }\n        break; // TODO: ???\n\n      case \"INVERT_IN_CIRCLE\":\n        dx = x - this.data.centreX;\n        dy = y - this.data.centreY;\n        distance = dx * dx + dy * dy;\n\n        return [\n          this.data.centreX +\n            (this.data.centreX * this.data.centreX * dx) / distance,\n          this.data.centreY +\n            (this.data.centreY * this.data.centreY * dy) / distance,\n        ];\n    }\n  }\n}\n\nexport default PolarEffect;\n","import BaseTransformEffect from \"../BaseTransform\";\nimport { triangle, mod } from \"../../../helpers/common\";\nimport noise from \"../../../helpers/noise\";\n\nexport interface RippleParameters {\n  xAmplitude: number;\n  yAmplitude: number;\n  xWaveLength: number;\n  yWaveLength: number;\n  waveType: string;\n}\n\nclass RippleEffect extends BaseTransformEffect {\n  static getName(): string {\n    return \"ripple\";\n  }\n\n  getDefaultParameters(): RippleParameters {\n    return {\n      xAmplitude: 5,\n      yAmplitude: 0,\n      xWaveLength: 16,\n      yWaveLength: 16,\n      waveType: \"SINE\", // SAWTOOTH TRIANGLE NOISE\n    };\n  }\n\n  callback(\n    x: number,\n    y: number,\n    parameters: RippleParameters,\n    width: number,\n    height: number\n  ): Array<number> {\n    let nx = y / parameters.xWaveLength,\n      ny = x / parameters.yWaveLength,\n      fx,\n      fy;\n\n    switch (parameters.waveType) {\n      case \"SINE\":\n      default:\n        fx = Math.sin(nx);\n        fy = Math.sin(ny);\n        break;\n\n      case \"SAWTOOTH\":\n        fx = mod(nx, 1);\n        fy = mod(ny, 1);\n        break;\n\n      case \"TRIANGLE\":\n        fx = triangle(nx);\n        fy = triangle(ny);\n        break;\n\n      case \"NOISE\":\n        fx = noise.noise1(nx);\n        fy = noise.noise1(ny);\n        break;\n    }\n\n    return [x + parameters.xAmplitude * fx, y + parameters.yAmplitude * fy];\n  }\n}\n\nexport default RippleEffect;\n","import BaseTransformEffect from \"../BaseTransform\";\n\ninterface BeforeData {\n  sin: number;\n  cos: number;\n  icentreX: number;\n  icentreY: number;\n}\n\nexport interface RotateParameters {\n  angle: number;\n}\n\nclass RotateEffect extends BaseTransformEffect {\n  static getName(): string {\n    return \"rotate\";\n  }\n\n  data: BeforeData = {\n    sin: 0,\n    cos: 0,\n    icentreX: 0,\n    icentreY: 0,\n  };\n\n  getDefaultParameters(): RotateParameters {\n    return {\n      angle: Math.PI,\n    };\n  }\n\n  before(\n    parameters: RotateParameters,\n    width: number,\n    height: number,\n    imageData: ImageData\n  ): BeforeData {\n    return {\n      cos: Math.cos(parameters.angle),\n      sin: Math.sin(parameters.angle),\n      icentreX: width / 2,\n      icentreY: height / 2,\n    };\n  }\n\n  callback(\n    x: number,\n    y: number,\n    parameters: RotateParameters,\n    width: number,\n    height: number\n  ): Array<number> {\n    return [\n      this.data.cos * (x - this.data.icentreX) -\n        this.data.sin * (y - this.data.icentreY) +\n        this.data.icentreY,\n      this.data.sin * (x - this.data.icentreX) -\n        this.data.cos * (y - this.data.icentreY) +\n        this.data.icentreY,\n    ];\n  }\n}\n\nexport default RotateEffect;\n","import BaseTransformEffect from \"../BaseTransform\";\n\nexport interface ShearParameters {\n  xAngle: number;\n  yAngle: number;\n  xOffset: number;\n  yOffset: number;\n}\n\ninterface BeforeData {\n  shx: number;\n  shy: number;\n}\n\nclass ShearEffect extends BaseTransformEffect {\n  static getName(): string {\n    return \"shear\";\n  }\n\n  data: BeforeData = {\n    shx: 0,\n    shy: 0,\n  };\n\n  getDefaultParameters(): ShearParameters {\n    return {\n      xAngle: 0,\n      yAngle: 0,\n      xOffset: 0,\n      yOffset: 0,\n    };\n  }\n\n  before(\n    parameters: ShearParameters,\n    width: number,\n    height: number\n  ): BeforeData {\n    return {\n      shx: Math.sin(parameters.xAngle),\n      shy: Math.sin(parameters.yAngle),\n    };\n  }\n\n  callback(\n    x: number,\n    y: number,\n    parameters: ShearParameters,\n    width: number,\n    height: number\n  ): Array<number> {\n    return [\n      x + parameters.xOffset + y * this.data.shx,\n      y + parameters.yOffset + x * this.data.shy,\n    ];\n  }\n}\n\nexport default ShearEffect;\n","import BaseTransformEffect from \"../BaseTransform\";\n\ninterface BeforeData {\n  icentreX: number;\n  icentreY: number;\n  a2: number;\n  b2: number;\n  a: number;\n  b: number;\n}\n\nexport interface SphereParameters {\n  a: number;\n  b: number;\n  centreX: number;\n  centreY: number;\n  refractionIndex: number;\n}\n\nclass SphereEffect extends BaseTransformEffect {\n  static getName(): string {\n    return \"sphere\";\n  }\n\n  data: BeforeData = {\n    icentreX: 0,\n    icentreY: 0,\n    a2: 0,\n    b2: 0,\n    a: 0,\n    b: 0,\n  };\n\n  getDefaultParameters(): SphereParameters {\n    return {\n      a: 0,\n      b: 0,\n      centreX: 0.5,\n      centreY: 0.5,\n      refractionIndex: 1.5,\n    };\n  }\n\n  before(\n    parameters: SphereParameters,\n    width: number,\n    height: number\n  ): BeforeData {\n    let icentreX = width * parameters.centreX,\n      icentreY = height * parameters.centreY,\n      a = parameters.a,\n      b = parameters.b,\n      a2,\n      b2;\n    if (a === 0) {\n      a = width / 2;\n    }\n    if (b === 0) {\n      b = height / 2;\n    }\n    a2 = a * a;\n    b2 = b * b;\n\n    return {\n      icentreX: icentreX,\n      icentreY: icentreY,\n      a: a,\n      b: b,\n      a2: a2,\n      b2: b2,\n    };\n  }\n\n  callback(\n    x: number,\n    y: number,\n    parameters: SphereParameters,\n    width: number,\n    height: number\n  ): Array<number> {\n    let dx = x - this.data.icentreX,\n      dy = y - this.data.icentreY,\n      x2 = dx * dx,\n      y2 = dy * dy,\n      rRefraction = 1 / parameters.refractionIndex,\n      z = Math.sqrt(\n        (1 - x2 / this.data.a2 - y2 / this.data.b2) *\n          (this.data.a * this.data.b)\n      ),\n      z2 = z * z,\n      xAngle = Math.acos(dx / Math.sqrt(x2 + z2)),\n      angle1 = Math.PI / 2 - xAngle,\n      angle2 = Math.asin(Math.sin(angle1) * rRefraction),\n      yAngle = Math.acos(dy / Math.sqrt(y2 + z2)),\n      ret = new Array(2);\n\n    if (y2 >= this.data.b2 - this.data.b2 / x2 / this.data.a2) {\n      return [x, y];\n    }\n\n    angle2 = Math.PI / 2 - xAngle - angle2;\n    ret[0] = x - Math.tan(angle2) * z;\n\n    angle1 = Math.PI / 2 - yAngle;\n    angle2 = Math.asin(Math.sin(angle1) * rRefraction);\n    angle2 = Math.PI / 2 - yAngle - angle2;\n    ret[1] = y - Math.tan(angle2) * z;\n    return ret;\n  }\n}\n\nexport default SphereEffect;\n","import BaseTransformEffect from \"../BaseTransform\";\nimport noise from \"../../../helpers/noise\";\n\ninterface BeforeData {\n  m00: number;\n  m01: number;\n  m10: number;\n  m11: number;\n}\n\nexport interface SwimParameters {\n  scale: number;\n  turbulence: number;\n  amount: number;\n  time: number;\n  angle: number;\n  stretch: number;\n}\n\nclass SwimEffect extends BaseTransformEffect {\n  static getName(): string {\n    return \"swim\";\n  }\n\n  data: BeforeData = {\n    m00: 0,\n    m01: 0,\n    m10: 0,\n    m11: 0,\n  };\n\n  getDefaultParameters(): SwimParameters {\n    return {\n      scale: 32,\n      turbulence: 0,\n      amount: 1,\n      time: 0,\n      angle: 0,\n      stretch: 1,\n    };\n  }\n\n  before(\n    parameters: SwimParameters,\n    width: number,\n    height: number\n  ): BeforeData {\n    let cos = Math.cos(parameters.angle),\n      sin = Math.sin(parameters.angle);\n\n    return {\n      m00: cos,\n      m01: sin,\n      m10: -sin,\n      m11: cos,\n    };\n  }\n\n  callback(\n    x: number,\n    y: number,\n    parameters: SwimParameters,\n    width: number,\n    height: number\n  ): Array<number> {\n    let nx = this.data.m00 * x + this.data.m01 * y,\n      ny = this.data.m10 * x + this.data.m11 * y;\n\n    nx /= parameters.scale;\n    ny /= parameters.scale * parameters.stretch;\n\n    if (parameters.turbulence === 1) {\n      return [\n        x + parameters.amount * noise.noise3(nx + 0.5, ny, parameters.time),\n        y + parameters.amount * noise.noise3(nx, ny + 0.5, parameters.time),\n      ];\n    }\n    return [\n      x +\n        parameters.amount *\n          noise.turbulence3(\n            nx + 0.5,\n            ny,\n            parameters.turbulence,\n            parameters.time\n          ),\n      y +\n        parameters.amount *\n          noise.turbulence3(\n            nx,\n            ny + 0.5,\n            parameters.turbulence,\n            parameters.time\n          ),\n    ];\n  }\n}\n\nexport default SwimEffect;\n","import BaseTransformEffect from \"../BaseTransform\";\n\ninterface BeforeData {\n  iCentreX: number;\n  iCentreY: number;\n  radius: number;\n  radius2: number;\n}\n\nexport interface TwirlParameters {\n  angle: number;\n  centreX: number;\n  centreY: number;\n  radius: number;\n  radius2: number;\n}\n\nclass TwirlEffect extends BaseTransformEffect {\n  static getName(): string {\n    return \"twirl\";\n  }\n\n  data: BeforeData = {\n    iCentreX: 0,\n    iCentreY: 0,\n    radius: 0,\n    radius2: 0,\n  };\n\n  getDefaultParameters(): TwirlParameters {\n    return {\n      angle: 0,\n      centreX: 0.5,\n      centreY: 0.5,\n      radius: 100,\n      radius2: 100,\n    };\n  }\n\n  before(\n    parameters: TwirlParameters,\n    width: number,\n    height: number\n  ): BeforeData {\n    let iCentreX = width * parameters.centreX,\n      iCentreY = height * parameters.centreY,\n      radius = parameters.radius,\n      radius2;\n\n    if (radius === 0) {\n      radius = Math.min(iCentreX, iCentreY);\n    }\n    radius2 = radius * radius;\n\n    return {\n      iCentreX: iCentreX,\n      iCentreY: iCentreY,\n      radius: radius,\n      radius2: radius2,\n    };\n  }\n\n  callback(\n    x: number,\n    y: number,\n    parameters: TwirlParameters,\n    width: number,\n    height: number\n  ): Array<number> {\n    let dx = x - this.data.iCentreX,\n      dy = y - this.data.iCentreY,\n      distance = dx * dx + dy * dy,\n      a;\n\n    if (distance > parameters.radius2) {\n      return [x, y];\n    }\n\n    distance = Math.sqrt(distance);\n    a =\n      Math.atan2(dy, dx) +\n      (parameters.angle * (parameters.radius - distance)) / parameters.radius;\n\n    return [\n      this.data.iCentreX + distance * Math.cos(a),\n      this.data.iCentreY + distance * Math.sin(a),\n    ];\n  }\n}\n\nexport default TwirlEffect;\n","import BaseTransformEffect from \"../BaseTransform\";\n\ninterface BeforeData {\n  iCentreX: number;\n  iCentreY: number;\n  radius2: number;\n  radius: number;\n}\n\nexport interface WaterParameters {\n  waveLength: number;\n  amplitude: number;\n  phase: number;\n  centreX: number;\n  centreY: number;\n  radius: number;\n}\n\nclass WaterEffect extends BaseTransformEffect {\n  static getName(): string {\n    return \"water\";\n  }\n\n  data: BeforeData = {\n    iCentreX: 0,\n    iCentreY: 0,\n    radius2: 0,\n    radius: 0,\n  };\n\n  getDefaultParameters(): WaterParameters {\n    return {\n      waveLength: 16,\n      amplitude: 10,\n      phase: 0,\n      centreX: 0.5,\n      centreY: 0.5,\n      radius: 50,\n    };\n  }\n\n  before(\n    parameters: WaterParameters,\n    width: number,\n    height: number\n  ): BeforeData {\n    let iCentreX = width * parameters.centreX,\n      iCentreY = height * parameters.centreY,\n      radius = parameters.radius,\n      radius2;\n\n    if (radius === 0) {\n      radius = Math.min(iCentreX, iCentreY);\n    }\n    radius2 = radius * radius;\n\n    return {\n      iCentreX,\n      iCentreY,\n      radius,\n      radius2,\n    };\n  }\n\n  callback(\n    x: number,\n    y: number,\n    parameters: WaterParameters,\n    width: number,\n    height: number\n  ): Array<number> {\n    let dx = x - this.data.iCentreX,\n      dy = y - this.data.iCentreY,\n      distance2 = dx * dx + dy * dy,\n      distance,\n      amount;\n\n    if (distance2 > this.data.radius2) {\n      return [x, y];\n    }\n    distance = Math.sqrt(distance2);\n    amount =\n      parameters.amplitude *\n      Math.sin(\n        (distance / parameters.waveLength) * Math.PI * 2 - parameters.phase\n      );\n    amount *= (parameters.radius - distance) / parameters.radius;\n    if (distance !== 0) {\n      amount *= parameters.waveLength / distance;\n    }\n    return [x + dx * amount, y + dy * amount];\n  }\n}\n\nexport default WaterEffect;\n","/**\n * RGB to HSB color convert.\n * @param r\n * @param g\n * @param b\n * @returns {{h: number, s: number, b: number}}\n */\nexport function RGBtoHSB(\n  r: number,\n  g: number,\n  b: number\n): {\n  h: number;\n  s: number;\n  b: number;\n} {\n  let hue,\n    saturation,\n    brightness,\n    cmax = Math.max(r, g, b),\n    cmin = Math.min(r, g, b);\n\n  brightness = cmax / 255;\n  if (cmax !== 0) {\n    saturation = (cmax - cmin) / cmax;\n  } else {\n    saturation = 0;\n  }\n\n  if (saturation === 0) {\n    hue = 0;\n  } else {\n    let redc = (cmax - r) / (cmax - cmin),\n      greenc = (cmax - g) / (cmax - cmin),\n      bluec = (cmax - b) / (cmax - cmin);\n\n    if (r === cmax) {\n      hue = bluec - greenc;\n    } else {\n      if (g === cmax) {\n        hue = 2 + redc - bluec;\n      } else {\n        hue = 4 + greenc - redc;\n      }\n    }\n\n    hue /= 6;\n    if (hue < 0) {\n      hue += 1;\n    }\n  }\n\n  return {\n    h: hue,\n    s: saturation,\n    b: brightness,\n  };\n}\n\n/**\n * HSB to RGB color convert.\n * @param hue\n * @param saturation\n * @param brightness\n * @returns {{r: Number, g: Number, b: Number}}\n */\nexport function HSBtoRGB(\n  hue: number,\n  saturation: number,\n  brightness: number\n): {\n  r: number;\n  g: number;\n  b: number;\n} {\n  let red, green, blue;\n  if (saturation === 0) {\n    red = brightness * 255 + 0.5;\n    green = brightness * 255 + 0.5;\n    blue = brightness * 255 + 0.5;\n  } else {\n    let h = (hue - Math.floor(hue)) * 6,\n      f = h - Math.floor(h),\n      p = brightness * (1 - saturation),\n      q = brightness * (1 - saturation * f),\n      t = brightness * (1 - saturation * (1 - f));\n\n    switch (h | 0) {\n      case 0:\n        red = brightness * 255 + 0.5;\n        green = t * 255 + 0.5;\n        blue = p * 255 + 0.5;\n        break;\n\n      case 1:\n        red = q * 255 + 0.5;\n        green = brightness * 255 + 0.5;\n        blue = p * 255 + 0.5;\n        break;\n\n      case 2:\n        red = p * 255 + 0.5;\n        green = brightness * 255 + 0.5;\n        blue = t * 255 + 0.5;\n        break;\n\n      case 3:\n        red = p * 255 + 0.5;\n        green = q * 255 + 0.5;\n        blue = brightness * 255 + 0.5;\n        break;\n\n      case 4:\n        red = t * 255 + 0.5;\n        green = p * 255 + 0.5;\n        blue = brightness * 255 + 0.5;\n        break;\n\n      case 5:\n        red = brightness * 255 + 0.5;\n        green = p * 255 + 0.5;\n        blue = q * 255 + 0.5;\n        break;\n\n      default:\n        red = 0;\n        green = 0;\n        blue = 0;\n        break;\n    }\n  }\n  return {\n    r: parseInt(red),\n    g: parseInt(green),\n    b: parseInt(blue),\n  };\n}\n\nexport function mixColors(\n  t: number,\n  rgb1: {\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n  },\n  rgb2: {\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n  }\n): {\n  r: number;\n  g: number;\n  b: number;\n  a: number;\n} {\n  return {\n    r: rgb1.r + t * (rgb2.r - rgb1.r),\n    g: rgb1.g + t * (rgb2.g - rgb1.g),\n    b: rgb1.b + t * (rgb2.b - rgb1.b),\n    a: rgb1.a + t * (rgb2.a - rgb1.a),\n  };\n}\n\nexport function hexToRGB(hex: string): {\n  r: number;\n  g: number;\n  b: number;\n} {\n  const _hex = parseInt(hex.replace(\"#\", \"\"), 16);\n  let r = _hex >> 16;\n  let g = (_hex >> 8) & 0xff;\n  let b = _hex & 0xff;\n  return {\n    r: r,\n    g: g,\n    b: b,\n  };\n}\n\nexport function RGBtoHex(pixel: { r: number; g: number; b: number }) {\n  let bin = (pixel.r << 16) | (pixel.g << 8) | pixel.b;\n  return (function (h) {\n    return new Array(7 - h.length).join(\"0\") + h;\n  })(bin.toString(16).toUpperCase());\n}\n\nexport function RGBtoXYZ(\n  r: number,\n  g: number,\n  b: number\n): {\n  x: number;\n  y: number;\n  z: number;\n} {\n  let let_R = r / 255;\n  let let_G = g / 255;\n  let let_B = b / 255;\n\n  if (let_R > 0.04045) {\n    let_R = Math.pow((let_R + 0.055) / 1.055, 2.4);\n  } else {\n    let_R = let_R / 12.92;\n  }\n\n  if (let_G > 0.04045) {\n    let_G = Math.pow((let_G + 0.055) / 1.055, 2.4);\n  } else {\n    let_G = let_G / 12.92;\n  }\n\n  if (let_B > 0.04045) {\n    let_B = Math.pow((let_B + 0.055) / 1.055, 2.4);\n  } else {\n    let_B = let_B / 12.92;\n  }\n\n  let_R = let_R * 100;\n  let_G = let_G * 100;\n  let_B = let_B * 100;\n\n  return {\n    x: let_R * 0.4124 + let_G * 0.3576 + let_B * 0.1805,\n    y: let_R * 0.2126 + let_G * 0.7152 + let_B * 0.0722,\n    z: let_R * 0.0193 + let_G * 0.1192 + let_B * 0.9505,\n  };\n}\n\nexport function RGBtoCIELab(\n  r: number,\n  g: number,\n  b: number\n): {\n  l: number;\n  a: number;\n  b: number;\n} {\n  let xyz = RGBtoXYZ(r, g, b);\n\n  let let_X = xyz.x / 95.047; // ref\n  let let_Y = xyz.y / 100; // ref\n  let let_Z = xyz.z / 108.883; // ref\n\n  if (let_X > 0.008856) {\n    let_X = Math.pow(let_X, 1 / 3);\n  } else {\n    let_X = 7.787 * let_X + 16 / 116;\n  }\n\n  if (let_Y > 0.008856) {\n    let_Y = Math.pow(let_Y, 1 / 3);\n  } else {\n    let_Y = 7.787 * let_Y + 16 / 116;\n  }\n\n  if (let_Z > 0.008856) {\n    let_Z = Math.pow(let_Z, 1 / 3);\n  } else {\n    let_Z = 7.787 * let_Z + 16 / 116;\n  }\n\n  return {\n    l: 116 * let_Y - 16,\n    a: 500 * (let_X - let_Y),\n    b: 200 * (let_Y - let_Z),\n  };\n}\n\nexport function CIELabToXYZ(\n  l: number,\n  a: number,\n  b: number\n): {\n  x: number;\n  y: number;\n  z: number;\n} {\n  let let_Y = (l + 16) / 116;\n  let let_X = a / 500 + let_Y;\n  let let_Z = let_Y - b / 200;\n\n  if (Math.pow(let_Y, 3) > 0.008856) {\n    let_Y = Math.pow(let_Y, 3);\n  } else {\n    let_Y = (let_Y - 16 / 116) / 7.787;\n  }\n\n  if (Math.pow(let_X, 3) > 0.008856) {\n    let_X = Math.pow(let_X, 3);\n  } else {\n    let_X = (let_X - 16 / 116) / 7.787;\n  }\n\n  if (Math.pow(let_Z, 3) > 0.008856) {\n    let_Z = Math.pow(let_Z, 3);\n  } else {\n    let_Z = (let_Z - 16 / 116) / 7.787;\n  }\n\n  return {\n    x: 95.047 * let_X, // ref\n    y: 100 * let_Y, // ref\n    z: 108.883 * let_Z, // ref\n  };\n}\n\nexport function CIELabToRGB(\n  l: number,\n  a: number,\n  b: number\n): {\n  r: number;\n  g: number;\n  b: number;\n} {\n  let xyz = CIELabToXYZ(l, a, b);\n\n  let let_X = xyz.x / 100;\n  let let_Y = xyz.y / 100;\n  let let_Z = xyz.z / 100;\n\n  let let_R = let_X * 3.2406 + let_Y * -1.5372 + let_Z * -0.4986;\n  let let_G = let_X * -0.9689 + let_Y * 1.8758 + let_Z * 0.0415;\n  let let_B = let_X * 0.0557 + let_Y * -0.204 + let_Z * 1.057;\n\n  if (let_R > 0.0031308) {\n    let_R = 1.055 * Math.pow(let_R, 1 / 2.4) - 0.055;\n  } else {\n    let_R = 12.92 * let_R;\n  }\n\n  if (let_G > 0.0031308) {\n    let_G = 1.055 * Math.pow(let_G, 1 / 2.4) - 0.055;\n  } else {\n    let_G = 12.92 * let_G;\n  }\n\n  if (let_B > 0.0031308) {\n    let_B = 1.055 * Math.pow(let_B, 1 / 2.4) - 0.055;\n  } else {\n    let_B = 12.92 * let_B;\n  }\n\n  return {\n    r: let_R * 255,\n    g: let_G * 255,\n    b: let_B * 255,\n  };\n}\n","const blendingModes = {\n  lighten: function (bottomPixel: number, topPixel: number): number {\n    return topPixel > bottomPixel ? topPixel : bottomPixel;\n  },\n  darken: function (bottomPixel: number, topPixel: number): number {\n    return topPixel > bottomPixel ? bottomPixel : topPixel;\n  },\n  multiply: function (bottomPixel: number, topPixel: number): number {\n    return (bottomPixel * topPixel) / 255;\n  },\n  average: function (bottomPixel: number, topPixel: number): number {\n    return bottomPixel + topPixel / 2;\n  },\n  add: function (bottomPixel: number, topPixel: number): number {\n    return Math.min(255, bottomPixel + topPixel);\n  },\n  subtract: function (bottomPixel: number, topPixel: number): number {\n    return bottomPixel + topPixel < 255 ? 0 : bottomPixel + topPixel - 255;\n  },\n  difference: function (bottomPixel: number, topPixel: number): number {\n    return Math.abs(bottomPixel - topPixel);\n  },\n  negation: function (bottomPixel: number, topPixel: number): number {\n    return 255 - Math.abs(255 - bottomPixel - topPixel);\n  },\n  screen: function (bottomPixel: number, topPixel: number): number {\n    return 255 - (((255 - bottomPixel) * (255 - topPixel)) >> 8);\n  },\n  exclusion: function (bottomPixel: number, topPixel: number): number {\n    return bottomPixel + topPixel - (2 * bottomPixel * topPixel) / 255;\n  },\n  overlay: function (bottomPixel: number, topPixel: number): number {\n    return topPixel < 128\n      ? (2 * bottomPixel * topPixel) / 255\n      : 255 - (2 * (255 - bottomPixel) * (255 - topPixel)) / 255;\n  },\n  softLight: function (bottomPixel: number, topPixel: number): number {\n    return topPixel < 128\n      ? 2 * ((bottomPixel >> 1) + 64) * (topPixel / 255)\n      : 255 - (2 * (255 - ((bottomPixel >> 1) + 64)) * (255 - topPixel)) / 255;\n  },\n  hardLight: function (bottomPixel: number, topPixel: number): number {\n    return blendingModes.softLight(topPixel, bottomPixel);\n  },\n  colorDodge: function (bottomPixel: number, topPixel: number): number {\n    return topPixel === 255\n      ? topPixel\n      : Math.min(255, (bottomPixel << 8) / (255 - topPixel));\n  },\n  colorBurn: function (bottomPixel: number, topPixel: number): number {\n    return topPixel === 0\n      ? topPixel\n      : Math.max(0, 255 - ((255 - bottomPixel) << 8) / topPixel);\n  },\n  linearDodge: function (bottomPixel: number, topPixel: number): number {\n    return blendingModes.add(bottomPixel, topPixel);\n  },\n  linearBurn: function (bottomPixel: number, topPixel: number): number {\n    return blendingModes.subtract(bottomPixel, topPixel);\n  },\n  linearLight: function (bottomPixel: number, topPixel: number): number {\n    return topPixel < 128\n      ? blendingModes.linearBurn(bottomPixel, 2 * topPixel)\n      : blendingModes.linearDodge(bottomPixel, 2 * (topPixel - 128));\n  },\n  vividLight: function (bottomPixel: number, topPixel: number): number {\n    return topPixel < 128\n      ? blendingModes.colorBurn(bottomPixel, 2 * topPixel)\n      : blendingModes.colorDodge(bottomPixel, 2 * (topPixel - 128));\n  },\n  pinLight: function (bottomPixel: number, topPixel: number): number {\n    return topPixel < 128\n      ? blendingModes.darken(bottomPixel, 2 * topPixel)\n      : blendingModes.lighten(bottomPixel, 2 * (topPixel - 128));\n  },\n  hardMix: function (bottomPixel: number, topPixel: number): number {\n    return blendingModes.vividLight(bottomPixel, topPixel) < 128 ? 0 : 255;\n  },\n  reflect: function (bottomPixel: number, topPixel: number): number {\n    return topPixel === 255\n      ? topPixel\n      : Math.min(255, (bottomPixel * bottomPixel) / (255 - topPixel));\n  },\n  glow: function (bottomPixel: number, topPixel: number): number {\n    return blendingModes.reflect(topPixel, bottomPixel);\n  },\n  phoenix: function (bottomPixel: number, topPixel: number): number {\n    return (\n      Math.min(bottomPixel, topPixel) - Math.max(bottomPixel, topPixel) + 255\n    );\n  },\n};\n\nexport function mergeImageData(bottom, top, pixelCallback) {\n  let x, y, xx, yy, firstOldPixelIndex, firstNewPixelIndex, pixelResult;\n\n  for (\n    y = top.y, yy = 0;\n    y < bottom.height && yy < top.height;\n    y += 1, yy += 1\n  ) {\n    for (\n      x = top.x, xx = 0;\n      x < bottom.width && xx < top.width;\n      x += 1, xx += 1\n    ) {\n      if (xx < top.width && yy < top.height) {\n        // overwrite only rect-size of current layer\n        firstOldPixelIndex = y * bottom.width * 4 + x * 4;\n        firstNewPixelIndex = yy * top.width * 4 + xx * 4;\n\n        pixelResult = pixelCallback(\n          {\n            r: bottom.imageData.data[firstOldPixelIndex + 0],\n            g: bottom.imageData.data[firstOldPixelIndex + 1],\n            b: bottom.imageData.data[firstOldPixelIndex + 2],\n            a: bottom.imageData.data[firstOldPixelIndex + 3],\n          },\n          {\n            r: top.imageData.data[firstNewPixelIndex + 0],\n            g: top.imageData.data[firstNewPixelIndex + 1],\n            b: top.imageData.data[firstNewPixelIndex + 2],\n            a: top.imageData.data[firstNewPixelIndex + 3],\n          },\n          x,\n          y,\n          {\n            blendingMode: top.blendingMode,\n          }\n        );\n\n        if (pixelResult !== false) {\n          // if skip change\n          bottom.imageData.data[firstOldPixelIndex + 0] = pixelResult.r;\n          bottom.imageData.data[firstOldPixelIndex + 1] = pixelResult.g;\n          bottom.imageData.data[firstOldPixelIndex + 2] = pixelResult.b;\n          bottom.imageData.data[firstOldPixelIndex + 3] = pixelResult.a;\n        }\n      }\n    }\n  }\n  return bottom.imageData;\n}\n\nexport function mergePixelCallback(\n  bottomPixel: { r: number; g: number; b: number; a: number },\n  topPixel: { r: number; g: number; b: number; a: number },\n  x: number,\n  y: number,\n  parameters: { blendingMode: string }\n): { r: number; g: number; b: number; a: number } | boolean {\n  if (topPixel.a === 0) {\n    return false; // skip change - opacity is full\n  }\n\n  // alpha compositing\n  let mergedR,\n    mergedG,\n    mergedB,\n    mergedA = topPixel.a / 255,\n    rootA = (bottomPixel.a / 255) * (1 - mergedA),\n    outA = mergedA + (bottomPixel.a * (1 - mergedA)) / 255;\n\n  switch (parameters.blendingMode) {\n    case \"lighten\":\n    case \"darken\":\n    case \"multiply\":\n    case \"average\":\n    case \"add\":\n    case \"subtract\":\n    case \"difference\":\n    case \"negation\":\n    case \"screen\":\n    case \"exclusion\":\n    case \"overlay\":\n    case \"softLight\":\n    case \"hardLight\":\n    case \"colorDodge\":\n    case \"colorBurn\":\n    case \"linearDodge\":\n    case \"linearBurn\":\n    case \"linearLight\":\n    case \"vividLight\":\n    case \"pinLight\":\n    case \"hardMix\":\n    case \"reflect\":\n    case \"glow\":\n    case \"phoenix\":\n      topPixel.r = blendingModes[parameters.blendingMode](\n        bottomPixel.r,\n        topPixel.r\n      );\n      topPixel.g = blendingModes[parameters.blendingMode](\n        bottomPixel.g,\n        topPixel.g\n      );\n      topPixel.b = blendingModes[parameters.blendingMode](\n        bottomPixel.b,\n        topPixel.b\n      );\n      break;\n\n    default:\n      break;\n  }\n\n  let rootR = bottomPixel.r;\n  let rootG = bottomPixel.g;\n  let rootB = bottomPixel.b;\n\n  mergedR = topPixel.r * mergedA + rootR * rootA;\n  mergedG = topPixel.g * mergedA + rootG * rootA;\n  mergedB = topPixel.b * mergedA + rootB * rootA;\n\n  mergedR = outA === 0 ? 0 : mergedR / outA;\n  mergedG = outA === 0 ? 0 : mergedG / outA;\n  mergedB = outA === 0 ? 0 : mergedB / outA;\n\n  return {\n    r: Math.min(Math.max(0, mergedR), 255) | 0,\n    g: Math.min(Math.max(0, mergedG), 255) | 0,\n    b: Math.min(Math.max(0, mergedB), 255) | 0,\n    a: (255 * outA) | 0,\n  };\n}\n\nexport function cropImageData(\n  oldImageData: ImageData,\n  newImageData: ImageData,\n  startX: number,\n  startY: number,\n  width: number,\n  height: number\n): ImageData {\n  let oldWidth = oldImageData.width,\n    newWidth = newImageData.width,\n    x,\n    y,\n    xx,\n    yy,\n    firstOldPixelIndex,\n    firstNewPixelIndex;\n\n  for (\n    y = startY, yy = 0;\n    y < startY + height && yy < height;\n    y += 1, yy += 1\n  ) {\n    for (\n      x = startX, xx = 0;\n      x < startX + width && xx < width;\n      x += 1, xx += 1\n    ) {\n      firstOldPixelIndex = y * oldWidth * 4 + x * 4;\n      firstNewPixelIndex = yy * newWidth * 4 + xx * 4;\n\n      newImageData.data[firstNewPixelIndex] =\n        oldImageData.data[firstOldPixelIndex];\n      newImageData.data[firstNewPixelIndex + 1] =\n        oldImageData.data[firstOldPixelIndex + 1];\n      newImageData.data[firstNewPixelIndex + 2] =\n        oldImageData.data[firstOldPixelIndex + 2];\n      newImageData.data[firstNewPixelIndex + 3] =\n        oldImageData.data[firstOldPixelIndex + 3];\n    }\n  }\n\n  return newImageData;\n}\n\nexport function mod(a: number, b: number): number {\n  let n = Math.floor(a / b);\n  a -= n * b;\n  if (a < 0) {\n    return a + b;\n  }\n  return a;\n}\n\nexport function triangle(x: number) {\n  let r = mod(x, 1);\n  return 2 * (r < 0.5 ? r : 1 - r);\n}\n\nexport function smoothStep(a: number, b: number, x: number): number {\n  if (x < a) {\n    return 0;\n  }\n  if (x >= b) {\n    return 1;\n  }\n  x = (x - a) / (b - a);\n  return x * x * (3 - 2 * x);\n}\n\nexport function brightness(pixel: { r: number; g: number; b: number }) {\n  return (pixel.r + pixel.g + pixel.b) / 3;\n}\n\nexport function isBrowser(): boolean {\n  return typeof window !== \"undefined\";\n}\n","const parameters: {\n  B?: number;\n  BM?: number;\n  N?: number;\n  P?: any[];\n  G1?: any[];\n  G2?: any[];\n  G3?: any[];\n} = {};\nlet isInit = false;\n\nlet noise = {\n  init: function (): boolean {\n    if (isInit) {\n      return false;\n    }\n    isInit = true;\n\n    parameters.B = 0x100;\n    parameters.BM = 0xff;\n    parameters.N = 0x1000;\n\n    parameters.P = new Array(parameters.B + parameters.B + 2);\n    parameters.G1 = new Array(parameters.B + parameters.B + 2);\n    parameters.G2 = new Array(parameters.B + parameters.B + 2);\n    for (let i = 0; i < parameters.G2.length; i += 1) {\n      parameters.G2[i] = new Array(2);\n    }\n    parameters.G3 = new Array(parameters.B + parameters.B + 2);\n    for (let i = 0; i < parameters.G3.length; i += 1) {\n      parameters.G3[i] = new Array(3);\n    }\n    let i, j, k;\n\n    for (i = 0; i < parameters.B; i += 1) {\n      parameters.P[i] = i;\n      parameters.G1[i] =\n        ((this.random() % (parameters.B + parameters.B)) - parameters.B) /\n        parameters.B;\n      parameters.G2[i] = [];\n      for (j = 0; j < 2; j += 1) {\n        parameters.G2[i][j] =\n          ((this.random() % (parameters.B + parameters.B)) - parameters.B) /\n          parameters.B;\n      }\n      parameters.G2[i] = this.normalize2(parameters.G2[i]);\n\n      parameters.G3[i] = [];\n      for (j = 0; j < 3; j += 1) {\n        parameters.G3[i][j] =\n          ((this.random() % (parameters.B + parameters.B)) - parameters.B) /\n          parameters.B;\n      }\n      parameters.G3[i] = this.normalize3(parameters.G3[i]);\n    }\n\n    for (i = parameters.B - 1; i >= 0; i -= 1) {\n      k = parameters.P[i];\n      parameters.P[i] = parameters.P[(j = this.random() % parameters.B)];\n      parameters.P[j] = k;\n    }\n\n    for (i = 0; i < parameters.B + 2; i += 1) {\n      parameters.P[parameters.B + i] = parameters.P[i];\n      parameters.G1[parameters.B + i] = parameters.G1[i];\n      for (j = 0; j < 2; j += 1) {\n        parameters.G2[parameters.B + i][j] = parameters.G2[i][j];\n      }\n      for (j = 0; j < 3; j++) {\n        parameters.G3[parameters.B + i][j] = parameters.G3[i][j];\n      }\n    }\n  },\n  random: function (): number {\n    return ((Math.random() * 256 * 256) | 0) & 0x7fffffff;\n  },\n  normalize2: function (arr: any[]): any[] {\n    let s = Math.sqrt(arr[0] * arr[0] + arr[1] * arr[1] + arr[2] * arr[2]);\n    arr[0] = arr[0] / s;\n    arr[1] = arr[1] / s;\n    arr[2] = arr[2] / s;\n    return arr;\n  },\n  normalize3: function (arr: any[]): any[] {\n    let s = Math.sqrt(arr[0] * arr[0] + arr[1] * arr[1]);\n    arr[0] = arr[0] / s;\n    arr[1] = arr[1] / s;\n    return arr;\n  },\n  sCurve: function (t: number): number {\n    return t * t * (3.0 - 2.0 * t);\n  },\n  lerp: function (t: number, a: number, b: number): number {\n    return a + t * (b - a);\n  },\n  /**\n   * Compute 1-dimensional Perlin noise.\n   * @param x\n   */\n  noise1: function (x: number): number {\n    let bx0, bx1, rx0, rx1, sx, t, u, v;\n\n    this.init();\n\n    t = x + parameters.N;\n    bx0 = parseInt(t) & parameters.BM;\n    bx1 = (bx0 + 1) & parameters.BM;\n    rx0 = t - parseInt(t);\n    rx1 = rx0 - 1;\n\n    sx = this.sCurve(rx0);\n\n    u = rx0 * parameters.G1[parameters.P[bx0]];\n    v = rx1 * parameters.G1[parameters.P[bx1]];\n\n    return 2.3 * this.lerp(sx, u, v);\n  },\n  /**\n   * Compute 2-dimensional Perlin noise\n   * @param x\n   * @param y\n   * @returns {number}\n   */\n  noise2: function (x: number, y: number): number {\n    let bx0,\n      bx1,\n      by0,\n      by1,\n      b00,\n      b10,\n      b01,\n      b11,\n      rx0,\n      rx1,\n      ry0,\n      ry1,\n      q = [],\n      sx,\n      sy,\n      a,\n      b,\n      t,\n      u,\n      v,\n      i,\n      j;\n\n    this.init();\n\n    t = x + parameters.N;\n    bx0 = parseInt(t) & parameters.BM;\n    bx1 = (bx0 + 1) & parameters.BM;\n    rx0 = t - parseInt(t);\n    rx1 = rx0 - 1;\n\n    t = y + parameters.N;\n    by0 = parseInt(t) & parameters.BM;\n    by1 = (by0 + 1) & parameters.BM;\n    ry0 = t - parseInt(t);\n    ry1 = ry0 - 1;\n\n    i = parameters.P[bx0];\n    j = parameters.P[bx1];\n\n    b00 = parameters.P[i + by0];\n    b10 = parameters.P[j + by0];\n    b01 = parameters.P[i + by1];\n    b11 = parameters.P[j + by1];\n\n    sx = this.sCurve(rx0);\n    sy = this.sCurve(ry0);\n\n    q = parameters.G2[b00];\n    u = rx0 * q[0] + ry0 * q[1];\n    q = parameters.G2[b10];\n    v = rx1 * q[0] + ry0 * q[1];\n    a = this.lerp(sx, u, v);\n\n    q = parameters.G2[b01];\n    u = rx0 * q[0] + ry1 * q[1];\n    q = parameters.G2[b11];\n    v = rx1 * q[0] + ry1 * q[1];\n    b = this.lerp(sx, u, v);\n\n    return 1.5 * this.lerp(sy, a, b);\n  },\n  /**\n   * Compute 3-dimensional Perlin noise.\n   * @param x\n   * @param y\n   * @param z\n   */\n  noise3: function (x: number, y: number, z: number): number {\n    let bx0,\n      bx1,\n      by0,\n      by1,\n      bz0,\n      bz1,\n      b00,\n      b10,\n      b01,\n      b11,\n      rx0,\n      rx1,\n      ry0,\n      ry1,\n      rz0,\n      rz1,\n      q,\n      sy,\n      sz,\n      a,\n      b,\n      c,\n      d,\n      t,\n      u,\n      v,\n      i,\n      j;\n\n    this.init();\n\n    t = x + parameters.N;\n    bx0 = parseInt(t) & parameters.BM;\n    bx1 = (bx0 + 1) & parameters.BM;\n    rx0 = t - parseInt(t);\n    rx1 = rx0 - 1;\n\n    t = y + parameters.N;\n    by0 = parseInt(t) & parameters.BM;\n    by1 = (by0 + 1) & parameters.BM;\n    ry0 = t - parseInt(t);\n    ry1 = ry0 - 1;\n\n    t = z + parameters.N;\n    bz0 = parseInt(t) & parameters.BM;\n    bz1 = (bz0 + 1) & parameters.BM;\n    rz0 = t - parseInt(t);\n    rz1 = rz0 - 1;\n\n    i = parameters.P[bx0];\n    j = parameters.P[bx1];\n\n    b00 = parameters.P[i + by0];\n    b10 = parameters.P[j + by0];\n    b01 = parameters.P[i + by1];\n    b11 = parameters.P[j + by1];\n\n    t = this.sCurve(rx0);\n    sy = this.sCurve(ry0);\n    sz = this.sCurve(rz0);\n\n    q = parameters.G3[b00 + bz0];\n    u = rx0 * q[0] + ry0 * q[1] + rz0 * q[2];\n    q = parameters.G3[b10 + bz0];\n    v = rx1 * q[0] + ry0 * q[1] + rz0 * q[2];\n    a = this.lerp(t, u, v);\n\n    q = parameters.G3[b01 + bz0];\n    u = rx0 * q[0] + ry1 * q[1] + rz0 * q[2];\n    q = parameters.G3[b11 + bz0];\n    v = rx1 * q[0] + ry1 * q[1] + rz0 * q[2];\n    b = this.lerp(t, u, v);\n\n    c = this.lerp(sy, a, b);\n\n    q = parameters.G3[b00 + bz1];\n    u = rx0 * q[0] + ry0 * q[1] + rz1 * q[2];\n    q = parameters.G3[b10 + bz1];\n    v = rx1 * q[0] + ry0 * q[1] + rz1 * q[2];\n    a = this.lerp(t, u, v);\n\n    q = parameters.G3[b01 + bz1];\n    u = rx0 * q[0] + ry1 * q[1] + rz1 * q[2];\n    q = parameters.G3[b11 + bz1];\n    v = rx1 * q[0] + ry1 * q[1] + rz1 * q[2];\n    b = this.lerp(t, u, v);\n\n    d = this.lerp(sy, a, b);\n\n    return 1.5 * this.lerp(sz, c, d);\n  },\n  /**\n   * Compute turbulence using Perlin noise.\n   * @param x\n   * @param y\n   * @param z\n   * @param octaves\n   * @returns {*}\n   */\n  turbulence3: function (x: number, y: number, z: number, octaves): number {\n    let t = 0,\n      i;\n    for (i = 1; i <= octaves; i *= 2) {\n      t += Math.abs(this.noise3(i * x, i * y, i * z)) / i;\n    }\n    return t;\n  },\n};\n\nexport default noise;\n","export function resizeNearestNeighbour(\n  oldImageData: ImageData,\n  newImageData: ImageData,\n  newWidth: number,\n  newHeight: number\n): ImageData {\n  let oldWidth = oldImageData.width,\n    oldHeight = oldImageData.height,\n    ratioX = oldWidth / newWidth,\n    ratioY = oldHeight / newHeight,\n    oldPixelIndex,\n    newPixelIndex,\n    x,\n    y;\n\n  for (y = 0; y < newHeight; y += 1) {\n    for (x = 0; x < newWidth; x += 1) {\n      oldPixelIndex =\n        Math.floor(y * ratioY) * oldWidth * 4 + Math.floor(x * ratioX) * 4;\n      newPixelIndex = y * newWidth * 4 + x * 4;\n\n      newImageData.data[newPixelIndex + 0] =\n        oldImageData.data[oldPixelIndex + 0];\n      newImageData.data[newPixelIndex + 1] =\n        oldImageData.data[oldPixelIndex + 1];\n      newImageData.data[newPixelIndex + 2] =\n        oldImageData.data[oldPixelIndex + 2];\n      newImageData.data[newPixelIndex + 3] =\n        oldImageData.data[oldPixelIndex + 3];\n    }\n  }\n\n  return newImageData;\n}\n\nexport function resizeBilinearInterpolation(\n  oldImageData: ImageData,\n  newImageData: ImageData,\n  newWidth: number,\n  newHeight: number\n): ImageData {\n  let oldWidth = oldImageData.width,\n    oldHeight = oldImageData.height,\n    ratioX = oldWidth / newWidth,\n    ratioY = oldHeight / newHeight,\n    newPixelIndex,\n    x,\n    y,\n    x0,\n    y0,\n    dx,\n    dy,\n    x1,\n    y1,\n    oldPixelIndex00,\n    oldPixelIndex01,\n    oldPixelIndex10,\n    oldPixelIndex11,\n    i,\n    j;\n\n  for (i = 0; i < newHeight; i += 1) {\n    for (j = 0; j < newWidth; j += 1) {\n      x = j * ratioX;\n      y = i * ratioY;\n      x0 = Math.floor(x);\n      y0 = Math.floor(y);\n      dx = x - x0;\n      dy = y - y0;\n      x1 = x0 + 1;\n      y1 = y0 + 1;\n\n      if (x1 >= oldWidth) {\n        x1 = x0;\n      }\n      if (y1 >= oldHeight) {\n        y1 = y0;\n      }\n\n      oldPixelIndex00 = (y0 * oldWidth + x0) * 4;\n      oldPixelIndex01 = (y0 * oldWidth + x1) * 4;\n      oldPixelIndex10 = (y1 * oldWidth + x0) * 4;\n      oldPixelIndex11 = (y1 * oldWidth + x1) * 4;\n      newPixelIndex = (i * newWidth + j) * 4;\n\n      newImageData.data[newPixelIndex] =\n        (1.0 - dy) *\n          ((1.0 - dx) * oldImageData.data[oldPixelIndex00] +\n            dx * oldImageData.data[oldPixelIndex01]) +\n        dy *\n          ((1.0 - dx) * oldImageData.data[oldPixelIndex10] +\n            dx * oldImageData.data[oldPixelIndex11]);\n      newImageData.data[newPixelIndex + 1] =\n        (1.0 - dy) *\n          ((1.0 - dx) * oldImageData.data[oldPixelIndex00 + 1] +\n            dx * oldImageData.data[oldPixelIndex01 + 1]) +\n        dy *\n          ((1.0 - dx) * oldImageData.data[oldPixelIndex10 + 1] +\n            dx * oldImageData.data[oldPixelIndex11 + 1]);\n      newImageData.data[newPixelIndex + 2] =\n        (1.0 - dy) *\n          ((1.0 - dx) * oldImageData.data[oldPixelIndex00 + 2] +\n            dx * oldImageData.data[oldPixelIndex01 + 2]) +\n        dy *\n          ((1.0 - dx) * oldImageData.data[oldPixelIndex10 + 2] +\n            dx * oldImageData.data[oldPixelIndex11 + 2]);\n      newImageData.data[newPixelIndex + 3] =\n        (1.0 - dy) *\n          ((1.0 - dx) * oldImageData.data[oldPixelIndex00 + 3] +\n            dx * oldImageData.data[oldPixelIndex01 + 3]) +\n        dy *\n          ((1.0 - dx) * oldImageData.data[oldPixelIndex10 + 3] +\n            dx * oldImageData.data[oldPixelIndex11 + 3]);\n    }\n  }\n\n  return newImageData;\n}\n\nexport function resizeBiquadraticInterpolation(\n  oldImageData: ImageData,\n  newImageData: ImageData,\n  newWidth: number,\n  newHeight: number\n): ImageData {\n  let interpolate = function interpolate(f1, f2, f3, d) {\n      return f2 + (f3 - f1) * d + (f1 - 2 * f2 + f3) * d * d;\n    },\n    interpolateNormalize = function interpolateNormalize(f1, f2, f3, d) {\n      let result = interpolate(f1, f2, f3, d);\n      if (result > 255) {\n        return 255;\n      }\n      if (result < 0) {\n        return 0;\n      }\n      return Math.floor(result);\n    },\n    oldWidth = oldImageData.width,\n    oldHeight = oldImageData.height,\n    ratioX = oldWidth / newWidth,\n    ratioY = oldHeight / newHeight,\n    x,\n    y,\n    x0,\n    y0,\n    x1,\n    y1,\n    x2,\n    y2,\n    dx,\n    dy,\n    oldPixelIndex00,\n    oldPixelIndex01,\n    oldPixelIndex02,\n    oldPixelIndex10,\n    oldPixelIndex11,\n    oldPixelIndex12,\n    oldPixelIndex20,\n    oldPixelIndex21,\n    oldPixelIndex22,\n    newPixelIndex,\n    i,\n    j;\n\n  for (i = 0; i < newHeight; i += 1) {\n    for (j = 0; j < newWidth; j += 1) {\n      x = j * ratioX;\n      y = i * ratioY;\n\n      x1 = Math.floor(x);\n      y1 = Math.floor(y);\n      dx = (x - x1) * 0.5;\n      dy = (y - y1) * 0.5;\n\n      if (x1 - 1 >= 0) {\n        x0 = x1 - 1;\n      } else {\n        x0 = x1;\n      }\n\n      if (y1 - 1 >= 0) {\n        y0 = y1 - 1;\n      } else {\n        y0 = y1;\n      }\n\n      if (x1 + 1 >= oldWidth) {\n        x2 = x1;\n      } else {\n        x2 = x1 + 1;\n      }\n\n      if (y1 + 1 >= oldWidth) {\n        y2 = y1;\n      } else {\n        y2 = y1 + 1;\n      }\n\n      oldPixelIndex00 = (y0 * oldWidth + x0) * 4;\n      oldPixelIndex01 = (y0 * oldWidth + x1) * 4;\n      oldPixelIndex02 = (y0 * oldWidth + x2) * 4;\n      oldPixelIndex10 = (y1 * oldWidth + x0) * 4;\n      oldPixelIndex11 = (y1 * oldWidth + x1) * 4;\n      oldPixelIndex12 = (y1 * oldWidth + x2) * 4;\n      oldPixelIndex20 = (y2 * oldWidth + x0) * 4;\n      oldPixelIndex21 = (y2 * oldWidth + x1) * 4;\n      oldPixelIndex22 = (y2 * oldWidth + x2) * 4;\n\n      newPixelIndex = (i * newWidth + j) * 4;\n\n      newImageData.data[newPixelIndex] = interpolateNormalize(\n        interpolate(\n          oldImageData.data[oldPixelIndex00],\n          oldImageData.data[oldPixelIndex01],\n          oldImageData.data[oldPixelIndex02],\n          dx\n        ),\n        interpolate(\n          oldImageData.data[oldPixelIndex10],\n          oldImageData.data[oldPixelIndex11],\n          oldImageData.data[oldPixelIndex12],\n          dx\n        ),\n        interpolate(\n          oldImageData.data[oldPixelIndex20],\n          oldImageData.data[oldPixelIndex21],\n          oldImageData.data[oldPixelIndex22],\n          dx\n        ),\n        dy\n      );\n\n      newImageData.data[newPixelIndex + 1] = interpolateNormalize(\n        interpolate(\n          oldImageData.data[oldPixelIndex00 + 1],\n          oldImageData.data[oldPixelIndex01 + 1],\n          oldImageData.data[oldPixelIndex02 + 1],\n          dx\n        ),\n        interpolate(\n          oldImageData.data[oldPixelIndex10 + 1],\n          oldImageData.data[oldPixelIndex11 + 1],\n          oldImageData.data[oldPixelIndex12 + 1],\n          dx\n        ),\n        interpolate(\n          oldImageData.data[oldPixelIndex20 + 1],\n          oldImageData.data[oldPixelIndex21 + 1],\n          oldImageData.data[oldPixelIndex22 + 1],\n          dx\n        ),\n        dy\n      );\n\n      newImageData.data[newPixelIndex + 2] = interpolateNormalize(\n        interpolate(\n          oldImageData.data[oldPixelIndex00 + 2],\n          oldImageData.data[oldPixelIndex01 + 2],\n          oldImageData.data[oldPixelIndex02 + 2],\n          dx\n        ),\n        interpolate(\n          oldImageData.data[oldPixelIndex10 + 2],\n          oldImageData.data[oldPixelIndex11 + 2],\n          oldImageData.data[oldPixelIndex12 + 2],\n          dx\n        ),\n        interpolate(\n          oldImageData.data[oldPixelIndex20 + 2],\n          oldImageData.data[oldPixelIndex21 + 2],\n          oldImageData.data[oldPixelIndex22 + 2],\n          dx\n        ),\n        dy\n      );\n\n      newImageData.data[newPixelIndex + 3] = interpolateNormalize(\n        interpolate(\n          oldImageData.data[oldPixelIndex00 + 3],\n          oldImageData.data[oldPixelIndex01 + 3],\n          oldImageData.data[oldPixelIndex02 + 3],\n          dx\n        ),\n        interpolate(\n          oldImageData.data[oldPixelIndex10 + 3],\n          oldImageData.data[oldPixelIndex11 + 3],\n          oldImageData.data[oldPixelIndex12 + 3],\n          dx\n        ),\n        interpolate(\n          oldImageData.data[oldPixelIndex20 + 3],\n          oldImageData.data[oldPixelIndex21 + 3],\n          oldImageData.data[oldPixelIndex22 + 3],\n          dx\n        ),\n        dy\n      );\n    }\n  }\n\n  return newImageData;\n}\n","module.exports = require(\"canvas\");","module.exports = require(\"fs\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import Project from \"./classes/Project\";\nimport Image from \"./classes/Image\";\n\nexport { Project, Image };\n"],"names":["CanvasWrapper","resizeNearestNeighbour","resizeBilinearInterpolation","resizeBiquadraticInterpolation","BaseOnLayerObject","width","height","value","imageData","canvas","getContext","getImageData","getWidth","getHeight","newWidth","newHeight","mode","oldImageData","newImageData","createImageData","destroy","setWidth","setHeight","setImageData","isBrowser","initialize","require","createCanvas","document","createElement","style","position","left","top","body","appendChild","setAttribute","context","type","toDataURL","removeChild","GrayScale","Sepia","Contrast","Brightness","Diffusion","Dither","Exposure","Gain","Gamma","HSBAdjust","InvertAlpha","Invert","Levels","Rescale","Solarize","Threshold","Tritone","Dissolve","Edge","ChannelMix","AutoContrast","Diffuse","Kaleidoscope","Marble","Pinch","Ripple","Shear","Sphere","Swim","Twirl","Water","Circle","Rotate","Offset","Polar","Perspective","AutoWhiteBalance","FillColor","Flip","Block","Border","Emboss","ComponentStretching","availableEffects","add","_class","getName","EffectsRepository","name","Image","image","window","url","callback","load","clientWidth","clientHeight","drawImage","call","onload","src","fs","readFileSync","LayerObject","mergeImageData","mergePixelCallback","Layer","parameters","backgroundColor","blendingMode","applyEffect","color","obj","x","y","put","objects","push","i","length","layerObject","getX","getY","exportObject","effects","effect","run","get","resize","startX","startY","crop","moveX","moveY","cropImageData","layer","opts","setX","setY","isLayerResize","oldWidth","oldHeight","ratioX","ratioY","moveXY","getObject","object","result","setXY","Project","Date","layers","end","getTime","startTime","path","imageType","Error","exportLayer","getParameter","putImageData","img","data","replace","buff","Buffer","from","writeFileSync","exportedImage","BaseEffect","BaseCustomEffect","getDefaultParameters","imageDataCopy","Uint8ClampedArray","getIndex","normalizePixelValue","Math","min","max","sandbox","getPixel","index","r","g","b","a","getOriginalPixelByIndex","getOriginalPixel","setPixel","rgba","setPixelByIndex","before","set","BasePointEffect","pixel","firstPixelIndex","BaseTransformEffect","newXY","newX","newY","oldPixelIndex","newPixelIndex","RGBtoCIELab","CIELabToRGB","AutoWhiteBalanceEffect","intensity","sumA","sumB","lab","avgSumA","avgSumB","aDelta","bDelta","l","BlockEffect","blockSize","w","h","t","by","bx","BorderEffect","leftBorder","rightBorder","topBorder","bottomBorder","borderColor","ComponentStretchingEffect","minR","Infinity","minG","minB","maxR","maxG","maxB","remap","brightness","EmbossEffect","azimuth","PI","elevation","width45","emboss","bumpMapWidth","bumpPixels","Nx","Ny","Nz","Lx","Ly","Lz","Nz2","NzLz","NdotL","s1","s2","s3","shade","background","pixelScale","bumpIndex","cos","sin","sqrt","hexToRGB","FillColorEffect","FlipEffect","operation","newW","newH","newRow","newCol","AutoContrastEffect","BrightnessEffect","ChannelMixEffect","blueGreen","redBlue","greenRed","intoR","intoG","intoB","ContrastEffect","factor","contrast","DiffusionEffect","map","div","sum","matrix","levels","colorDither","granulate","red1","green1","blue1","red2","green2","blue2","tmpPixel","tmpRed","tmpGreen","tmpBlue","iy","jx","grayScale","j","smoothStep","DissolveEffect","minDensity","maxDensity","density","softness","d","v","random","f","DitherEffect","cols","rows","mod","matrices","ditherMagic4x4Matrix","ditherOrdered4x4Matrix","ditherLines4x4Matrix","dither90Halftone6x6Matrix","ditherOrdered6x6Matrix","ditherOrdered8x8Matrix","ditherCluster3Matrix","ditherCluster4Matrix","ditherCluster8Matrix","col","row","red","green","blue","EdgeEffect","hEdgeMatrix","vEdgeMatrix","matrixes","robertsV","robertsH","prewittV","prewittH","sobelV","sobelH","freiChenV","freiChenH","_hEdgeMatrix","_vEdgeMatrix","rh","gh","bh","rv","gv","bv","ix","mOffset","pixel2","floor","ExposureEffect","exposure","exp","GainEffect","gain","bias","GammaEffect","table","gammaRed","gammaGreen","gammaBlue","pow","GrayScaleEffect","newRGB","RGBtoHSB","HSBtoRGB","HSBAdjustEffect","s","hsb","InvertEffect","InvertAlphaEffect","LevelsEffect","lut","low","high","lowOutput","highOutput","Histogram","offset","stride","histogram","Array","minValue","maxValue","minFrequency","maxFrequency","mean","numSamples","isGray","RED","GREEN","BLUE","GRAY","getNumSamples","getFrequency","channel","getMinFrequency","getMaxFrequency","getMinValue","getMaxValue","getMeanValue","RescaleEffect","scale","SepiaEffect","sepiaValue","tmp","SolarizeEffect","ThresholdEffect","grayscale","mixColors","TritoneEffect","shadowColor","midColor","highColor","CircleEffect","icentreX","icentreY","radius","angle","spreadAngle","centreX","centreY","dx","dy","theta","atan2","DiffuseEffect","sinTable","cosTable","distance","triangle","KaleidoscopeEffect","angle2","sides","c","radiusC","noiseHelper","MarbleEffect","displacementMap","xScale","yScale","amount","turbulence","noise2","displacement","RotateEffect","xOffset","yOffset","wrap","PerspectiveEffect","A","B","C","D","E","F","G","H","I","x0","y0","x1","y1","x2","y2","x3","y3","unitSquareToQuad","a11","a21","a31","a12","a22","a32","a13","a23","a33","dx1","dy1","dx2","dy2","dx3","dy3","PinchEffect","radius2","e","PolarEffect","sqr","theta2","m","xMax","yMax","nx","ny","xmax","ymax","atan","abs","tan","noise","RippleEffect","xAmplitude","yAmplitude","xWaveLength","yWaveLength","waveType","fx","fy","noise1","ShearEffect","shx","shy","xAngle","yAngle","SphereEffect","a2","b2","refractionIndex","rRefraction","z","z2","acos","angle1","asin","ret","SwimEffect","m00","m01","m10","m11","time","stretch","noise3","turbulence3","TwirlEffect","iCentreX","iCentreY","WaterEffect","waveLength","amplitude","phase","distance2","hue","saturation","cmax","cmin","redc","greenc","bluec","p","q","parseInt","rgb1","rgb2","hex","_hex","RGBtoHex","bin","join","toString","toUpperCase","RGBtoXYZ","let_R","let_G","let_B","xyz","let_X","let_Y","let_Z","CIELabToXYZ","blendingModes","lighten","bottomPixel","topPixel","darken","multiply","average","subtract","difference","negation","screen","exclusion","overlay","softLight","hardLight","colorDodge","colorBurn","linearDodge","linearBurn","linearLight","vividLight","pinLight","hardMix","reflect","glow","phoenix","bottom","pixelCallback","xx","yy","firstOldPixelIndex","firstNewPixelIndex","pixelResult","mergedR","mergedG","mergedB","mergedA","rootA","outA","rootR","rootG","rootB","n","isInit","init","BM","N","P","G1","G2","G3","k","normalize2","normalize3","arr","sCurve","lerp","bx0","bx1","rx0","rx1","sx","u","by0","by1","b00","b10","b01","b11","ry0","ry1","sy","bz0","bz1","rz0","rz1","sz","octaves","oldPixelIndex00","oldPixelIndex01","oldPixelIndex10","oldPixelIndex11","interpolate","f1","f2","f3","interpolateNormalize","oldPixelIndex02","oldPixelIndex12","oldPixelIndex20","oldPixelIndex21","oldPixelIndex22"],"sourceRoot":""}